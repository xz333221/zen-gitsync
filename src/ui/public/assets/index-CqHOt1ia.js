import{d as Vs,r,o as Ct,a as xs,E as o,l as pa,c as de,b as mt,w as Ye,e as $,f,n as dt,g as U,h as e,t as B,i as t,u as l,j as ma,k as a,m as Y,p as Mt,F as be,q as Be,s as ge,v as St,x as rs,y as Ht,z as va,A as $s,B as Ge,C as w,D as Jt,G as Xe,H as Ls,I as is,J as zs,K as Bs,L as Fs,M as ft,N as nt,O as ga,P as cs,Q as jt,R as js,S as kt,T as bs,U as ha,V as At,W as Me,X as qe,Y as $t,Z as us,_ as Lt,$ as ya,a0 as Cs,a1 as ds,a2 as _a,a3 as pt,a4 as as,a5 as ls,a6 as It,a7 as Nt,a8 as fs,a9 as Ds,aa as wa,ab as ka,ac as Rs,ad as $a,ae as Gs,af as Os,ag as ba,ah as Ca,ai as Sa,aj as Ps,ak as Bt,al as ut,am as Ta,an as Va,ao as xa,ap as La,aq as za,ar as Ba,as as Fa,at as ja,au as Da,av as Ra,aw as Ga,ax as Oa,ay as Pa,az as Ua,aA as Ss,aB as Ts,aC as Aa,aD as Ue,aE as Ea,aF as Ma}from"./vendor-BUqv7tgS.js";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))m(y);new MutationObserver(y=>{for(const G of y)if(G.type==="childList")for(const D of G.addedNodes)D.tagName==="LINK"&&D.rel==="modulepreload"&&m(D)}).observe(document,{childList:!0,subtree:!0});function p(y){const G={};return y.integrity&&(G.integrity=y.integrity),y.referrerPolicy&&(G.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?G.credentials="include":y.crossOrigin==="anonymous"?G.credentials="omit":G.credentials="same-origin",G}function m(y){if(y.ep)return;y.ep=!0;const G=p(y);fetch(y.href,G)}})();const os=800;function Ia(){const Z=window.location.port||"80";if(Z==="5173"||Z==="4173"||Z==="5544"){const p="3002";return console.log(`开发环境：从环境变量读取后端端口 ${p}`),parseInt(p,10)}const i=parseInt(Z,10);return console.log(`生产环境：使用当前页面端口 ${i}`),i}const Na=Ia(),bt=Vs("git",()=>{const Z=r(""),i=r([]),p=r(""),m=r(""),y=r(!1),G=r(!1),D=r(!1),A=r(0),E=r(""),M=r(!1),P=r(!1),I=r(!1),ie=r(!1),O=r(!1),ne=r(0),ue=r(0),ce=r(!1),S=r(""),j=r(0),F=r(0),X=r(!0),R=r(null),Q=r(""),he=r(""),fe=r([]),x=r({staged:[],unstaged:[],untracked:[]}),T=r([]),se=r(!1),K=r(!1),ee=r(!1),le=r(!1),ye=r(!1),Te=r([]),h=r(!1),g=r(!1),ae=r(!1),W=r(!1);function oe(){Z.value="",i.value=[],p.value="",m.value="",y.value=!1,G.value=!1,D.value=!1,A.value=0,ne.value=0,ue.value=0,ce.value=!1,S.value="",j.value=0,F.value=0,P.value=!1,I.value=!1,ie.value=!1,O.value=!1,E.value="",M.value=!1,fe.value=[],x.value={staged:[],unstaged:[],untracked:[]},T.value=[],se.value=!1,K.value=!1,ee.value=!1,le.value=!1,ye.value=!1}async function te(u=!1,d=!1){if(!D.value)return;const z=Date.now();if(!u&&!d&&z-j.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let C="/api/branch-status";const ve=[];u&&ve.push("force=true"),d&&ve.push("countOnly=true"),ve.length>0&&(C+="?"+ve.join("&"));const Je=await(await fetch(C)).json();Je&&(ne.value=Je.ahead||0,ue.value=Je.behind||0,ce.value=Je.hasUpstream||!1,S.value=Je.upstreamBranch||"",j.value=z,console.log(`分支状态更新：领先 ${ne.value} 个提交，落后 ${ue.value} 个提交，上游分支：${ce.value?S.value:"无"}`))}catch(C){console.error("获取分支状态失败:",C),ne.value=0,ue.value=0,ce.value=!1,S.value=""}}async function Ce(){const u=Date.now();if(u-A.value<1e3)return console.log("使用缓存的Git仓库状态:",D.value?"是":"不是"),D.value;try{const z=await(await fetch("/api/current_directory")).json();return D.value=z.isGitRepo===!0,A.value=u,console.log(`当前目录${D.value?"是":"不是"}Git仓库`),D.value}catch(d){return console.error("检查Git仓库状态失败:",d),D.value=!1,A.value=u,!1}}async function Fe(u=!1){try{const C=await(await fetch(u?"/api/branch?force=true":"/api/branch")).json();C.branch&&(Z.value=C.branch,console.log(`当前分支更新为: ${C.branch}${u?" (强制刷新)":""}`))}catch(d){console.error("获取分支信息失败:",d)}}async function je(){if(D.value)try{console.log("获取所有分支...");const d=await(await fetch("/api/branches")).json();d.branches&&Array.isArray(d.branches)&&(i.value=d.branches,F.value=Date.now(),console.log(`获取到${d.branches.length}个分支`))}catch(u){console.error("获取所有分支信息失败:",u)}}async function _(u){console.log("切换到分支:",u);try{y.value=!0;const z=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return z.success?(o({message:`已切换到分支: ${u}`,type:"success"}),await Fe(!0),await te(!0),!0):(o({message:`切换分支失败: ${z.error}`,type:"error"}),!1)}catch(d){return o({message:`切换分支失败: ${d.message}`,type:"error"}),!1}finally{y.value=!1}}async function pe(){try{const d=await(await fetch("/api/user-info")).json();d.name&&d.email&&(p.value=d.name,m.value=d.email)}catch(u){console.error("获取用户信息失败:",u)}}async function Se(u,d){if(!u.trim())return o({message:"分支名称不能为空",type:"warning"}),!1;try{G.value=!0;const C=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:u,baseBranch:d||Z.value})})).json();return C.success?(o({message:`已创建并切换到分支: ${u}`,type:"success"}),await Fe(!0),await te(!0),await je(),!0):(o({message:`创建分支失败: ${C.error}`,type:"error"}),!1)}catch(z){return o({message:`创建分支失败: ${z.message}`,type:"error"}),!1}finally{G.value=!1}}async function Le(){try{const d=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return d.success?(p.value="",m.value="",o({message:"已清除Git用户配置",type:"success"}),!0):(o({message:`清除配置失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`清除配置失败: ${u.message}`,type:"error"}),!1}}async function ze(u,d){try{const C=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:u,email:d})})).json();return C.success?(p.value=u,m.value=d,o({message:"已恢复Git用户配置",type:"success"}),!0):(o({message:`恢复配置失败: ${C.error}`,type:"error"}),!1)}catch(z){return o({message:`恢复配置失败: ${z.message}`,type:"error"}),!1}}async function Ke(){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{I.value=!0;const d=await(await fetch("/api/pull",{method:"POST"})).json();return d.success?(o({message:"拉取成功",type:"success"}),await te(),!0):(d.needsMerge?o({message:`需要合并更改: ${d.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):o({message:`拉取失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`拉取失败: ${u.message}`,type:"error"}),!1}finally{I.value=!1}}async function Ze(){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{ie.value=!0;const d=await(await fetch("/api/fetch-all",{method:"POST"})).json();return d.success?(o({message:"获取所有远程分支信息成功",type:"success"}),await te(),!0):(o({message:`获取远程分支信息失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`获取远程分支信息失败: ${u.message}`,type:"error"}),!1}finally{ie.value=!1}}async function Ae(){R.value&&R.value.disconnect();try{const u=`http://localhost:${Na}`;if(console.log("尝试连接Socket.IO服务器:",u),R.value=pa(u,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!R.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO客户端已创建，开始注册事件监听器..."),R.value.on("connect",()=>{var d;console.log("✅ Socket.IO连接成功，事件监听器已生效，Socket ID:",(d=R.value)==null?void 0:d.id),X.value&&R.value&&R.value.emit("start_monitoring")}),R.value.on("project_info",d=>{Q.value=d.projectPath,he.value=d.projectRoomId,console.log(`当前项目: ${d.projectPath}`),console.log(`房间ID: ${d.projectRoomId}`)}),R.value.on("project_changed",d=>{console.log(`项目已切换: ${d.oldProjectPath} -> ${d.newProjectPath}`),Q.value=d.newProjectPath,he.value=d.newProjectRoomId,R.value&&R.value.emit("join_room",d.newProjectRoomId),console.log(`已加入新项目房间: ${d.newProjectRoomId}`)}),R.value.on("disconnect",d=>{console.log("与Socket.IO服务器断开连接:",d)}),R.value.on("git_status_update",d=>{if(X.value){if(console.log("✅ 成功监听到 git_status_update 事件:",new Date().toLocaleTimeString()),console.log("git_status_update data ==>",d),console.log("currentProjectPath.value ==>",Q.value),console.log("data.projectPath ==>",d.projectPath),d.projectPath&&Q.value&&d.projectPath!==Q.value){console.log(`忽略不同项目的状态更新: ${d.projectPath}`);return}console.log("正在更新 Git 文件状态..."),d.porcelain!==void 0&&L(d.porcelain)}}),R.value.on("monitoring_status",d=>{console.log("文件监控状态:",d.active?"已启动":"已停止")}),R.value.on("connect_error",d=>{console.error("Socket连接错误:",d.message)}),R.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),R.value.on("reconnect",d=>{var z;console.log(`Socket重连成功，尝试次数: ${d}`),X.value&&(console.log("重连后重新发送start_monitoring请求"),(z=R.value)==null||z.emit("start_monitoring"))}),R.value.on("reconnect_attempt",d=>{console.log(`Socket尝试重连，第 ${d} 次尝试`)}),R.value.on("reconnect_error",d=>{console.error("Socket重连错误:",d.message)}),R.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),console.log("Socket.IO事件监听器注册完成：connect, project_info, project_changed, git_status_update, monitoring_status"),R.value&&!R.value.connected&&(console.log("Socket未连接，尝试手动连接..."),R.value.connect())}catch(u){console.error("Socket.IO连接初始化失败:",u)}}function Qe(){if(console.log("toggleAutoUpdate调用，当前值:",X.value),!R.value){console.error("无法切换自动更新状态: socket连接不存在"),o.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),Ae(),localStorage.setItem("zen-gitsync-auto-update",X.value.toString());return}try{X.value?(console.log("发送start_monitoring命令..."),R.value.emit("start_monitoring"),o.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),R.value.emit("stop_monitoring"),o.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",X.value.toString()),console.log("已保存自动更新设置到本地存储:",X.value)}catch(u){console.error("切换自动更新状态时出错:",u),o.error(`切换自动更新失败: ${u.message}`)}}function L(u){if(u===void 0||u===""){T.value=[];return}const d=u.split(`
`),z=[];for(const C of d){const ve=C.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(ve){let Ee="";const Je=ve[1],tt=Je.charAt(0),Dt=Je.charAt(1);tt==="A"||tt==="M"||tt==="D"||tt==="R"?Ee="added":tt===" "&&Dt==="M"?Ee="modified":tt===" "&&Dt==="D"?Ee="deleted":Je==="??"?Ee="untracked":Ee="other",z.push({path:ve[2],type:Ee})}}T.value=z}async function c(u=!0){if(!D.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{se.value=!0,console.log("开始加载提交历史...");const d=new Date().getTime(),C=await(await fetch(`/api/log?page=1&_t=${d}`)).json();C&&C.data&&Array.isArray(C.data)?(fe.value=[...C.data],console.log(`提交历史加载完成，共 ${fe.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",C),fe.value=[])}catch(d){console.error("获取提交历史失败:",d),u&&o({message:`获取提交历史失败: ${d.message}`,type:"error"})}finally{se.value=!1}}async function N(){if(!D.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{K.value=!0,await H()}catch(u){console.error("获取Git状态失败:",u),o({message:`获取Git状态失败: ${u.message}`,type:"error"})}finally{K.value=!1}}async function H(){if(console.log("开始获取Git状态(porcelain格式)..."),!D.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const d=await(await fetch("/api/status_porcelain")).json();d.status!==void 0?L(d.status):T.value=[]}catch(u){console.error("获取Git状态(porcelain)失败:",u),o({message:`获取Git状态(porcelain)失败: ${u.message}`,type:"error"}),T.value=[]}}async function $e(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ee.value=!0;const d=await(await fetch("/api/add",{method:"POST"})).json();return d.success?(o({message:"文件已添加到暂存区",type:"success"}),!0):(o({message:`添加文件失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`添加文件失败: ${u.message}`,type:"error"}),!1}finally{ee.value=!1}}async function De(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ee.value=!0;const z=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return z.success?(o({message:"文件已暂存",type:"success"}),N(),!0):(o({message:`暂存文件失败: ${z.error}`,type:"error"}),!1)}catch(d){return o({message:`暂存文件失败: ${d.message}`,type:"error"}),!1}finally{ee.value=!1}}async function ke(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ye.value=!0;const z=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return z.success?(o({message:"已取消暂存文件",type:"success"}),N(),!0):(o({message:`取消暂存失败: ${z.error}`,type:"error"}),!1)}catch(d){return o({message:`取消暂存失败: ${d.message}`,type:"error"}),!1}finally{ye.value=!1}}function _e(u){return new Promise(d=>setTimeout(d,u))}async function Re(u,d=!1){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const C=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,hasNewlines:u.includes(`
`),noVerify:d})})).json();return C.success?(o({message:"提交成功",type:"success"}),!0):(o({message:`commitChanges 提交失败: ${C.error}`,type:"error"}),!1)}catch(z){return o({message:`提交失败: ${z.message}`,type:"error"}),!1}finally{le.value=!1}}async function re(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{P.value=!0;const d=await(await fetch("/api/push",{method:"POST"})).json();return d.success?(o({message:"推送成功",type:"success"}),ne.value=0,ue.value=0,await Promise.all([N(),c()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(o({message:`推送失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`推送失败: ${u.message}`,type:"error"}),!1}finally{P.value=!1}}async function me(u,d={}){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!u)return o({message:"请选择要合并的分支",type:"warning"}),!1;if(u===Z.value)return o({message:"不能合并当前分支到自身",type:"warning"}),!1;try{O.value=!0;const z=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u,...d})}),C=await z.json();return z.status===409?(o({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):C.success?(o({message:`成功合并分支 ${u} 到 ${Z.value}`,type:"success"}),await N(),await te(),!0):(o({message:`合并分支失败: ${C.error}`,type:"error"}),!1)}catch(z){return o({message:`合并分支失败: ${z.message}`,type:"error"}),!1}finally{O.value=!1}}async function Ne(u,d=!1){if(console.log("开始暂存并提交操作..."),!await $e())return!1;console.log("暂存完成，等待Git操作完成..."),await _e(os),console.log("开始提交更改...");const C=await Re(u,d);return console.log("暂存并提交操作完成"),C}async function He(u,d=!1){try{if(console.log("开始暂存文件..."),!await $e()||(console.log("暂存完成，等待Git操作完成..."),await _e(os),console.log("开始提交更改..."),!await Re(u,d)))return!1;console.log("提交完成，等待Git操作完成..."),await _e(os),console.log("开始推送到远程...");const ve=await re();return console.log("一键推送操作完成，状态已统一刷新"),ve}catch(z){console.error("一键推送操作失败:",z);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&o({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch(C){console.error("清理锁定文件失败:",C)}o({message:`操作失败: ${z.message}`,type:"error"});try{await Promise.all([N(),c(),te()])}catch(C){console.error("刷新状态失败:",C)}return!1}}async function q(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ye.value=!0;const d=await(await fetch("/api/reset-head",{method:"POST"})).json();return d.success?(o({message:"已重置暂存区",type:"success"}),N(),!0):(o({message:`重置暂存区失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`重置暂存区失败: ${u.message}`,type:"error"}),!1}finally{ye.value=!1}}async function Oe(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ye.value=!0;const z=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return z.success?(o({message:`已重置分支 ${u} 到远程状态`,type:"success"}),N(),c(),!0):(o({message:`重置分支失败: ${z.error}`,type:"error"}),!1)}catch(d){return o({message:`重置分支失败: ${d.message}`,type:"error"}),!1}finally{ye.value=!1}}async function gt(){if(D.value)try{M.value=!0,console.log("获取远程仓库地址...");const d=await(await fetch("/api/remote-url")).json();d.success?(E.value=d.url||"",console.log(`获取到远程仓库地址: ${E.value}`)):(console.warn("获取远程仓库地址失败:",d.error),E.value="")}catch(u){console.error("获取远程仓库地址失败:",u),E.value=""}finally{M.value=!1}}async function ht(){if(!E.value)return o({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(E.value),o({message:"已复制远程仓库地址",type:"success"}),!0}catch(u){return console.error("复制远程仓库地址失败:",u),o({message:`复制失败: ${u.message}`,type:"error"}),!1}}Ct(()=>{const u=localStorage.getItem("zen-gitsync-auto-update");u!==null&&(X.value=u==="true"),Ae()});function et(){R.value&&(R.value.disconnect(),R.value=null)}xs(()=>{et()});async function Pe(){if(!D.value)return o.warning("当前目录不是Git仓库"),[];try{h.value=!0;const d=await(await fetch("/api/stash-list")).json();return d.success?(Te.value=d.stashes,d.stashes):(o.error(`获取stash列表失败: ${d.error}`),[])}catch(u){return console.error("获取stash列表失败:",u),o.error(`获取stash列表失败: ${u.message}`),[]}finally{h.value=!1}}async function Tt(u,d=!1,z=!0){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{W.value=!0;const ve=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,includeUntracked:d,excludeLocked:z})})).json();return ve.success?(o.success(ve.message),await Pe(),await N(),!0):(o.warning(ve.message),!1)}catch(C){return console.error("保存stash失败:",C),o.error(`保存stash失败: ${C.message}`),!1}finally{W.value=!1}}async function k(u,d=!1){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{g.value=!0;const z=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u,pop:d})}),C=await z.json();return z.status===409?(o.warning("应用stash时发生冲突，请手动解决"),!1):C.success?(o.success(C.message),await Pe(),await N(),!0):(o.error(`应用stash失败: ${C.error}`),!1)}catch(z){return console.error("应用stash失败:",z),o.error(`应用stash失败: ${z.message}`),!1}finally{g.value=!1}}async function v(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const z=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u})})).json();return z.success?(o.success(z.message),await Pe(),!0):(o.error(`删除stash失败: ${z.error}`),!1)}catch(d){return console.error("删除stash失败:",d),o.error(`删除stash失败: ${d.message}`),!1}finally{ae.value=!1}}async function J(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const d=await(await fetch("/api/stash-clear",{method:"POST"})).json();return d.success?(o.success(d.message),Te.value=[],!0):(o.error(`清空stash失败: ${d.error}`),!1)}catch(u){return console.error("清空stash失败:",u),o.error(`清空stash失败: ${u.message}`),!1}finally{ae.value=!1}}return{currentBranch:Z,allBranches:i,userName:p,userEmail:m,isChangingBranch:y,isCreatingBranch:G,isGitRepo:D,lastCheckedTime:A,branchAhead:ne,branchBehind:ue,hasUpstream:ce,upstreamBranch:S,lastBranchStatusTime:j,lastBranchesTime:F,remoteUrl:E,isLoadingRemoteUrl:M,stashes:Te,isLoadingStashes:h,isApplyingStash:g,isDroppingStash:ae,isSavingStash:W,log:fe,status:x,fileList:T,isLoadingLog:se,isLoadingStatus:K,isAddingFiles:ee,isCommiting:le,isResetting:ye,autoUpdateEnabled:X,isPushing:P,isGitPulling:I,isGitFetching:ie,isGitMerging:O,$reset:oe,checkGitRepo:Ce,getCurrentBranch:Fe,getAllBranches:je,changeBranch:_,getUserInfo:pe,createBranch:Se,clearUserConfig:Le,restoreUserConfig:ze,getBranchStatus:te,gitPull:Ke,gitFetchAll:Ze,initSocketConnection:Ae,toggleAutoUpdate:Qe,parseStatusPorcelain:L,fetchLog:c,fetchStatus:N,fetchStatusPorcelain:H,addToStage:$e,addFileToStage:De,unstageFile:ke,commitChanges:Re,pushToRemote:re,addAndCommit:Ne,addCommitAndPush:He,resetHead:q,resetToRemote:Oe,getRemoteUrl:gt,copyRemoteUrl:ht,mergeBranch:me,getStashList:Pe,saveStash:Tt,applyStash:k,dropStash:v,clearAllStashes:J,socket:R,disconnectSocket:et}}),ps=Vs("config",()=>{const Z=r(""),i=r([]),p=r([]),m=r([]),y=r([]),G=r(!1),D=r(!1),A=de(()=>({defaultCommitMessage:Z.value,descriptionTemplates:i.value,scopeTemplates:p.value,messageTemplates:m.value,lockedFiles:y.value}));async function E(S=!1){if(!S&&D.value&&!G.value)return console.log("使用缓存的配置信息"),A.value;try{G.value=!0,console.log("加载配置信息...");const F=await(await fetch("/api/config/getConfig")).json();return Z.value=F.defaultCommitMessage||"",i.value=F.descriptionTemplates||[],p.value=F.scopeTemplates||[],m.value=F.messageTemplates||[],y.value=F.lockedFiles||[],D.value=!0,console.log("配置信息加载完成"),A.value}catch(j){return console.error("加载配置失败:",j),o.error(`加载配置失败: ${j.message}`),null}finally{G.value=!1}}async function M(S){try{const F=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:S})})).json();return F.success?(Z.value=S,o.success("默认提交信息已保存"),!0):(o.error(`保存失败: ${F.error}`),!1)}catch(j){return o.error(`保存失败: ${j.message}`),!1}}async function P(S,j){try{const X=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:S,type:j})})).json();return X.success?(j==="description"?i.value.includes(S)||i.value.push(S):j==="scope"?p.value.includes(S)||p.value.push(S):j==="message"&&(m.value.includes(S)||m.value.push(S)),o.success("模板已保存"),!0):(o.error(`保存模板失败: ${X.error}`),!1)}catch(F){return o.error(`保存模板失败: ${F.message}`),!1}}async function I(S,j){try{const X=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:S,type:j})})).json();return X.success?(j==="description"?i.value=i.value.filter(R=>R!==S):j==="scope"?p.value=p.value.filter(R=>R!==S):j==="message"&&(m.value=m.value.filter(R=>R!==S)),o.success("模板已删除"),!0):(o.error(`删除模板失败: ${X.error}`),!1)}catch(F){return o.error(`删除模板失败: ${F.message}`),!1}}async function ie(S,j,F){try{const R=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:S,newTemplate:j,type:F})})).json();if(R.success){if(F==="description"){const Q=i.value.indexOf(S);Q!==-1&&(i.value[Q]=j)}else if(F==="scope"){const Q=p.value.indexOf(S);Q!==-1&&(p.value[Q]=j)}else if(F==="message"){const Q=m.value.indexOf(S);Q!==-1&&(m.value[Q]=j)}return o.success("模板已更新"),!0}else return o.error(`更新模板失败: ${R.error}`),!1}catch(X){return o.error(`更新模板失败: ${X.message}`),!1}}async function O(){try{const j=await(await fetch("/api/locked-files")).json();return j.success?(y.value=j.lockedFiles||[],j.lockedFiles):(o.error(`加载锁定文件列表失败: ${j.error}`),[])}catch(S){return console.error("加载锁定文件列表失败:",S),o.error(`加载锁定文件列表失败: ${S.message}`),[]}}async function ne(S){try{const F=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return F.success?(await O(),o.success(`文件已锁定: ${S}`),!0):(o.error(`锁定文件失败: ${F.error}`),!1)}catch(j){return console.error("锁定文件失败:",j),o.error(`锁定文件失败: ${j.message}`),!1}}async function ue(S){try{const F=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return F.success?(await O(),o.success(`文件已解锁: ${S}`),!0):(o.error(`解锁文件失败: ${F.error}`),!1)}catch(j){return console.error("解锁文件失败:",j),o.error(`解锁文件失败: ${j.message}`),!1}}async function ce(S){try{const F=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return F.success?F.isLocked:(console.error("检查文件锁定状态失败:",F.error),!1)}catch(j){return console.error("检查文件锁定状态失败:",j),!1}}return{defaultCommitMessage:Z,descriptionTemplates:i,scopeTemplates:p,messageTemplates:m,lockedFiles:y,isLoading:G,isLoaded:D,config:A,loadConfig:E,saveDefaultMessage:M,saveTemplate:P,deleteTemplate:I,updateTemplate:ie,loadLockedFiles:O,lockFile:ne,unlockFile:ue,isFileLocked:ce}});function Ha(Z){return Z.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function Ja(Z){return Z?Z.split(`
`).map(p=>{const m=Ha(p);return p.startsWith("diff --git")||p.startsWith("diff --cc")||p.startsWith("diff --combined")?`<div class="diff-header">${m}</div>`:p.startsWith("---")?`<div class="diff-old-file">${m}</div>`:p.startsWith("+++")?`<div class="diff-new-file">${m}</div>`:p.startsWith("@@")?`<div class="diff-hunk-header">${m}</div>`:p.startsWith("+")?`<div class="diff-added">${m}</div>`:p.startsWith("-")?`<div class="diff-removed">${m}</div>`:`<div class="diff-context">${m}</div>`}).join(""):""}function Wa(Z){return Z?Z.trim():"(无提交信息)"}function qa(Z){if(!Z)return"";const i=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,p=Z.match(i);return p?p[3].trim():Z.trim()}const Ya={key:0,class:"files-panel"},Xa={class:"panel-header"},Ka={key:0,class:"file-count"},Za={class:"files-list"},Qa=["onClick"],el={class:"file-name"},tl={class:"panel-header"},sl={key:0,class:"selected-file"},al={class:"diff-content"},ll=["innerHTML"],ol=mt({__name:"FileDiffViewer",props:{files:{},emptyText:{default:"没有找到变更文件"},diffContent:{default:""},selectedFile:{default:""},height:{default:"100%"},showFileList:{type:Boolean,default:!0}},emits:["file-select"],setup(Z,{emit:i}){const p=Z,m=i,y=r(""),G=de(()=>p.selectedFile||y.value),D=de(()=>p.files.map(M=>({...M,displayName:M.name||M.path.split("/").pop()||M.path}))),A=de(()=>p.diffContent&&p.diffContent.trim()!=="");function E(M){y.value=M,m("file-select",M)}return Ye(()=>p.selectedFile,M=>{M!==void 0&&(y.value=M)}),Ye(()=>p.files,M=>{if(M.length>0&&!G.value){const P=M[0];E(P.path)}},{immediate:!0}),(M,P)=>(f(),$("div",{class:"file-diff-viewer",style:dt({height:M.height})},[M.showFileList?(f(),$("div",Ya,[e("div",Xa,[P[0]||(P[0]=e("h4",null,"变更文件",-1)),M.files.length>0?(f(),$("span",Ka,"("+B(M.files.length)+")",1)):U("",!0)]),e("div",Za,[t(l(ma),{height:"100%"},{default:a(()=>[M.files.length===0?(f(),Y(l(Mt),{key:0,description:M.emptyText,"image-size":60},null,8,["description"])):U("",!0),(f(!0),$(be,null,Be(D.value,I=>(f(),$("div",{key:I.path,class:ge(["file-item",{active:I.path===G.value,[`file-type-${I.type}`]:I.type}]),onClick:ie=>E(I.path)},[t(l(St),{class:"file-icon"},{default:a(()=>[t(l(rs))]),_:1}),t(l(Ht),{content:I.path,placement:"top",disabled:I.displayName.length<=35,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",el,B(I.displayName),1)]),_:2},1032,["content","disabled"])],10,Qa))),128))]),_:1})])])):U("",!0),e("div",{class:ge(["diff-panel",{"full-width":!M.showFileList}])},[e("div",tl,[P[1]||(P[1]=e("h4",null,"文件差异",-1)),G.value?(f(),$("span",sl,B(G.value.split("/").pop()),1)):U("",!0)]),e("div",al,[A.value?(f(),$("div",{key:1,class:"diff-text",innerHTML:l(Ja)(M.diffContent)},null,8,ll)):(f(),Y(l(Mt),{key:0,description:G.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])],2)],4))}}),vt=(Z,i)=>{const p=Z.__vccOpts||Z;for(const[m,y]of i)p[m]=y;return p},ms=vt(ol,[["__scopeId","data-v-a936d0d7"]]),nl={class:"common-dialog__footer"},il=mt({__name:"CommonDialog",props:{modelValue:{type:Boolean},title:{},size:{default:"medium"},type:{default:"default"},width:{},height:{},top:{default:"8vh"},closeOnClickModal:{type:Boolean,default:!1},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},customClass:{},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},showFooter:{type:Boolean,default:!1},confirmText:{default:"确定"},cancelText:{default:"取消"},showCancel:{type:Boolean,default:!0},confirmLoading:{type:Boolean,default:!1}},emits:["update:modelValue","confirm","cancel","close","opened","closed"],setup(Z,{emit:i}){const p=Z,m=i,y=de(()=>{if(p.width)return p.width;switch(p.size){case"small":return"30%";case"medium":return"50%";case"large":return"80%";case"extra-large":return"90%";default:return"50%"}}),G=de(()=>{if(p.height)return p.height;switch(p.type){case"full-height":return"calc(100vh - 100px)";case"flex":return"calc(100vh - 160px)";default:return"auto"}}),D=de(()=>{const O={};return(p.type==="full-height"||p.type==="flex")&&(O["--dialog-height"]=G.value),O}),A=de(()=>{const O=[];return p.customClass&&O.push(p.customClass),p.type==="flex"&&O.push("common-dialog--flex"),p.type==="full-height"&&O.push("common-dialog--full-height"),O.join(" ")});function E(){m("update:modelValue",!1),m("close")}function M(){m("confirm")}function P(){m("cancel"),E()}function I(){m("opened")}function ie(){m("closed")}return(O,ne)=>{const ue=Ge;return f(),Y(l(Jt),{"model-value":O.modelValue,title:O.title,width:y.value,top:O.top,style:dt(D.value),"close-on-click-modal":O.closeOnClickModal,"close-on-press-escape":O.closeOnPressEscape,"destroy-on-close":O.destroyOnClose,draggable:O.draggable,class:ge(A.value),"append-to-body":O.appendToBody,"lock-scroll":O.lockScroll,onClose:E,onOpened:I,onClosed:ie},va({default:a(()=>[$s(O.$slots,"default",{},void 0,!0)]),_:2},[O.showFooter||O.$slots.footer?{name:"footer",fn:a(()=>[$s(O.$slots,"footer",{},()=>[e("div",nl,[O.showCancel?(f(),Y(ue,{key:0,onClick:P},{default:a(()=>[w(B(O.cancelText),1)]),_:1})):U("",!0),t(ue,{type:"primary",loading:O.confirmLoading,onClick:M},{default:a(()=>[w(B(O.confirmText),1)]),_:1},8,["loading"])])],!0)]),key:"0"}:void 0]),1032,["model-value","title","width","top","style","close-on-click-modal","close-on-press-escape","destroy-on-close","draggable","class","append-to-body","lock-scroll"])}}}),Ft=vt(il,[["__scopeId","data-v-c1505473"]]),rl={class:"card"},cl={class:"status-header"},ul={class:"header-actions"},dl=["element-loading-text"],fl={key:0,class:"status-box"},pl={key:1,class:"status-box-wrap"},ml={key:0,class:"branch-status-info"},vl={class:"branch-sync-status"},gl={class:"sync-status-content"},hl={class:"status-badges"},yl={class:"badge-content"},_l={class:"badge-content"},wl={key:1,class:"file-list-container"},kl={key:0,class:"file-group"},$l={class:"file-list"},bl=["onClick"],Cl={class:"file-info"},Sl={class:"file-name-section"},Tl=["title"],Vl={class:"file-directory"},xl={class:"file-actions"},Ll={key:1,class:"file-group"},zl={class:"file-list"},Bl=["onClick"],Fl={class:"file-info"},jl={class:"file-name-section"},Dl=["title"],Rl={class:"file-directory"},Gl={class:"file-actions"},Ol={key:2,class:"file-group"},Pl={class:"file-list"},Ul=["onClick"],Al={class:"file-info"},El={class:"file-name-section"},Ml=["title"],Il={class:"file-directory"},Nl={class:"file-actions"},Hl={key:2,class:"empty-status"},Jl={class:"empty-icon"},Wl={class:"lock-feature-description"},ql={class:"description-header"},Yl={key:0,class:"empty-locked-files"},Xl={class:"empty-icon"},Kl={key:1,class:"locked-files-list"},Zl={class:"locked-files-header"},Ql={class:"locked-file-items"},eo={class:"file-info"},to={class:"file-path-container"},so={class:"file-name"},ao={class:"file-directory"},lo={class:"file-actions"},oo={class:"dialog-footer"},no=mt({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(Z,{expose:i}){const p=Z,m=bt(),y=ps(),G=de(()=>m.isLoadingStatus),D=r(""),A=r(""),E=r(!1),M=r(!1),P=r(-1),I=de(()=>m.fileList.map(h=>({path:h.path,name:h.path.split("/").pop()||h.path,type:h.type})));async function ie(h){await F(h)}const O=r(!1),ne=r({staged:!1,unstaged:!1,untracked:!1}),ue=r(p.initialDirectory||"");async function ce(){try{if(!ue.value){const g=await(await fetch("/api/current_directory")).json();ue.value=g.directory||"未知目录"}if(!m.isGitRepo)return;await m.fetchStatus(),await m.getBranchStatus(),o({message:"Git 状态已刷新",type:"success"})}catch(h){o({message:"刷新失败: "+h.message,type:"error"})}}async function S(h){try{await Me.confirm(`确认解锁该文件？
${h}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await y.unlockFile(h)}catch{}}async function j(){if(y.lockedFiles.length)try{await Me.confirm(`确认解锁所有已锁定文件？共 ${y.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const h=[...y.lockedFiles];await Promise.all(h.map(g=>y.unlockFile(g))),await y.loadLockedFiles(),o.success("已清空所有文件锁定")}catch{}}async function F(h){try{M.value=!0,D.value=h,P.value=m.fileList.findIndex(ae=>ae.path===h);const g=m.fileList[P.value];if(g&&g.type==="untracked")try{const W=await(await fetch(`/api/file-content?file=${encodeURIComponent(h)}`)).json();W.success&&W.content?A.value=`diff --git a/${h} b/${h}
新文件: ${h}
--- /dev/null
+++ b/${h}
@@ -0,0 +1,${W.content.split(`
`).length} @@
`+W.content.split(`
`).map(oe=>`+${oe}`).join(`
`):A.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(ae){console.error("获取未跟踪文件内容失败:",ae),A.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}else if(g&&g.type==="added"){const W=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(h)}`)).json();A.value=W.diff||"没有变更"}else{const W=await(await fetch(`/api/diff?file=${encodeURIComponent(h)}`)).json();A.value=W.diff||"没有变更"}}catch(g){o({message:"获取文件差异失败: "+g.message,type:"error"}),A.value="获取差异失败: "+g.message}finally{M.value=!1}}function X(h){if(E.value=!0,m.fileList.length>0){const g=m.fileList.find(ae=>ae.path===h.path)||m.fileList[0];F(g.path)}}async function R(h){await m.addFileToStage(h)}async function Q(h){await m.unstageFile(h)}async function he(){await fe()}async function fe(){try{if(!m.isGitRepo)return;await m.fetchStatus(),o({message:"Git 文件状态已刷新",type:"success"})}catch(h){o({message:"刷新失败: "+h.message,type:"error"})}}async function x(){try{await m.gitPull(),await ce()}catch(h){console.error("拉取操作发生错误:",h)}}async function T(){try{await m.gitFetchAll(),await ce()}catch(h){console.error("获取远程分支信息操作发生错误:",h)}}async function se(h){try{await Me.confirm(`确定要撤回文件 "${h}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const ae=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:h})})).json();ae.success?(o.success("已撤回文件修改"),await ce()):o.error(ae.error?`撤回失败: ${ae.error}`:"撤回文件修改失败，请重试")}catch(g){if(g==="cancel"||g.message==="cancel")return;const ae=g.message||"未知错误";ae!=="undefined"?o.error(`撤回文件修改失败: ${ae}`):o.error("撤回文件修改失败，请重试")}}function K(h){const g=h.split("/");return g[g.length-1]}function ee(h){const g=h.split("/");return g.length<=1?"":g.slice(0,-1).join("/")}function le(h){const g=h.replace(/\\/g,"/"),ae=y.lockedFiles.some(W=>{const oe=W.replace(/\\/g,"/");return g===oe});return(h==="test/2.txt"||h==="2.txt")&&console.log("检查文件锁定状态:",{filePath:h,normalizedPath:g,lockedFiles:y.lockedFiles,normalizedLockedFiles:y.lockedFiles.map(W=>W.replace(/\\/g,"/")),isLocked:ae}),ae}function ye(h){le(h)?y.unlockFile(h):y.lockFile(h)}function Te(h){ne.value[h]=!ne.value[h]}return Ct(()=>{ce(),y.loadConfig(),y.loadLockedFiles()}),Ye(()=>m.autoUpdateEnabled,(h,g)=>{console.log(`自动更新状态变更: ${g} -> ${h}`),m.toggleAutoUpdate()},{immediate:!1}),i({refreshStatus:he}),(h,g)=>{const ae=Ls,W=Ht,oe=Ge,te=St,Ce=jt,Fe=ha,je=cs;return f(),$(be,null,[e("div",rl,[e("div",cl,[g[8]||(g[8]=e("h2",null,"Git 状态",-1)),e("div",ul,[t(W,{content:l(m).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(ae,{modelValue:l(m).autoUpdateEnabled,"onUpdate:modelValue":g[0]||(g[0]=_=>l(m).autoUpdateEnabled=_),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":l(zs),"inactive-icon":l(is),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(W,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"primary",icon:l(Bs),circle:"",size:"small",onClick:x,loading:l(m).isGitPulling,disabled:!l(m).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(W,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[Xe(t(oe,{type:"primary",icon:l(Fs),circle:"",size:"small",onClick:T,loading:l(m).isGitFetching},null,8,["icon","loading"]),[[ft,!1]])]),_:1}),l(y).lockedFiles.length>0?(f(),Y(W,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"warning",circle:"",size:"small",onClick:g[1]||(g[1]=_=>O.value=!0)},{default:a(()=>[t(te,null,{default:a(()=>[t(l(nt))]),_:1})]),_:1})]),_:1})):U("",!0),t(W,{content:"刷新状态",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"primary",icon:l(ga),circle:"",size:"small",onClick:he,loading:G.value},null,8,["icon","loading"])]),_:1})])]),Xe((f(),$("div",{class:"card-content","element-loading-text":l(m).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[l(m).isGitRepo?(f(),$("div",pl,[l(m).hasUpstream&&(l(m).branchAhead>0||l(m).branchBehind>0)?(f(),$("div",ml,[e("div",vl,[e("div",gl,[t(W,{content:"本地分支与远程分支的状态对比",placement:"top","show-after":200},{default:a(()=>[e("div",hl,[l(m).branchAhead>0?(f(),Y(Ce,{key:0,size:"small",type:"warning",class:"status-badge"},{default:a(()=>[e("span",yl,[t(te,null,{default:a(()=>[t(l(js))]),_:1}),w(" 你的分支领先 'origin/"+B(l(m).currentBranch)+"' "+B(l(m).branchAhead)+" 个提交 ",1)])]),_:1})):U("",!0),l(m).branchBehind>0?(f(),Y(Ce,{key:1,size:"small",type:"info",class:"status-badge"},{default:a(()=>[e("span",_l,[t(te,null,{default:a(()=>[t(l(kt))]),_:1}),w(" 你的分支落后 'origin/"+B(l(m).currentBranch)+"' "+B(l(m).branchBehind)+" 个提交 ",1)])]),_:1})):U("",!0)])]),_:1})])])])):U("",!0),l(m).fileList.length?(f(),$("div",wl,[l(m).fileList.some(_=>_.type==="added")?(f(),$("div",kl,[e("div",{class:"file-group-header",onClick:g[2]||(g[2]=_=>Te("staged"))},[t(te,{class:ge(["collapse-icon",{collapsed:ne.value.staged}])},{default:a(()=>[t(l(kt))]),_:1},8,["class"]),g[10]||(g[10]=e("span",null,"已暂存的更改",-1))]),Xe(e("div",$l,[(f(!0),$(be,null,Be(l(m).fileList.filter(_=>_.type==="added"),_=>(f(),$("div",{key:_.path,class:"file-item",onClick:pe=>X(_)},[e("div",Cl,[e("div",{class:ge(["file-status-indicator",["added",{locked:le(_.path)}]])},null,2),e("div",Sl,[t(W,{content:K(_.path),placement:"top",disabled:K(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:ge(["file-name",{"locked-file-name":le(_.path)}])},[w(B(K(_.path))+" ",1),le(_.path)?(f(),Y(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(l(nt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ee(_.path)},[t(W,{content:ee(_.path),placement:"top",disabled:ee(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Vl,B(ee(_.path)),1)]),_:2},1032,["content","disabled"])],8,Tl)]),e("div",xl,[t(W,{content:le(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:le(_.path)?"danger":"info",size:"small",circle:"",onClick:qe(pe=>ye(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),Y($t(le(_.path)?l(nt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(W,{content:"取消暂存",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"warning",size:"small",circle:"",onClick:qe(pe=>Q(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[11]||(g[11]=[w("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,bl))),128))],512),[[ft,!ne.value.staged]])])):U("",!0),l(m).fileList.some(_=>_.type==="modified"||_.type==="deleted")?(f(),$("div",Ll,[e("div",{class:"file-group-header",onClick:g[3]||(g[3]=_=>Te("unstaged"))},[t(te,{class:ge(["collapse-icon",{collapsed:ne.value.unstaged}])},{default:a(()=>[t(l(kt))]),_:1},8,["class"]),g[12]||(g[12]=e("span",null,"未暂存的更改",-1))]),Xe(e("div",zl,[(f(!0),$(be,null,Be(l(m).fileList.filter(_=>_.type==="modified"||_.type==="deleted"),_=>(f(),$("div",{key:_.path,class:"file-item",onClick:pe=>X(_)},[e("div",Fl,[e("div",{class:ge(["file-status-indicator",[_.type,{locked:le(_.path)}]])},null,2),e("div",jl,[t(W,{content:K(_.path),placement:"top",disabled:K(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:ge(["file-name",{"locked-file-name":le(_.path)}])},[w(B(K(_.path))+" ",1),le(_.path)?(f(),Y(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(l(nt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ee(_.path)},[t(W,{content:ee(_.path),placement:"top",disabled:ee(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Rl,B(ee(_.path)),1)]),_:2},1032,["content","disabled"])],8,Dl)]),e("div",Gl,[t(W,{content:le(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:le(_.path)?"danger":"info",size:"small",circle:"",onClick:qe(pe=>ye(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),Y($t(le(_.path)?l(nt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(W,{content:"添加到暂存区",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"success",size:"small",circle:"",onClick:qe(pe=>R(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[13]||(g[13]=[w("+")])),_:2},1032,["onClick"])]),_:2},1024),t(W,{content:"撤回修改",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"danger",size:"small",icon:l(us),circle:"",onClick:qe(pe=>se(_.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,Bl))),128))],512),[[ft,!ne.value.unstaged]])])):U("",!0),l(m).fileList.some(_=>_.type==="untracked")?(f(),$("div",Ol,[e("div",{class:"file-group-header",onClick:g[4]||(g[4]=_=>Te("untracked"))},[t(te,{class:ge(["collapse-icon",{collapsed:ne.value.untracked}])},{default:a(()=>[t(l(kt))]),_:1},8,["class"]),g[14]||(g[14]=e("span",null,"未跟踪的文件",-1))]),Xe(e("div",Pl,[(f(!0),$(be,null,Be(l(m).fileList.filter(_=>_.type==="untracked"),_=>(f(),$("div",{key:_.path,class:"file-item",onClick:pe=>X(_)},[e("div",Al,[e("div",{class:ge(["file-status-indicator",["untracked",{locked:le(_.path)}]])},null,2),e("div",El,[t(W,{content:K(_.path),placement:"top",disabled:K(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:ge(["file-name",{"locked-file-name":le(_.path)}])},[w(B(K(_.path))+" ",1),le(_.path)?(f(),Y(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(l(nt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ee(_.path)},[t(W,{content:ee(_.path),placement:"top",disabled:ee(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Il,B(ee(_.path)),1)]),_:2},1032,["content","disabled"])],8,Ml)]),e("div",Nl,[t(W,{content:le(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:le(_.path)?"danger":"info",size:"small",circle:"",onClick:qe(pe=>ye(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),Y($t(le(_.path)?l(nt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(W,{content:"添加到暂存区",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"success",size:"small",circle:"",onClick:qe(pe=>R(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[15]||(g[15]=[w("+")])),_:2},1032,["onClick"])]),_:2},1024),t(W,{content:"删除文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[t(oe,{type:"danger",size:"small",icon:l(is),circle:"",onClick:qe(pe=>se(_.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,Ul))),128))],512),[[ft,!ne.value.untracked]])])):U("",!0)])):l(m).isGitRepo?(f(),$("div",Hl,[e("div",Jl,[t(te,null,{default:a(()=>[t(l(rs))]),_:1})]),g[16]||(g[16]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),g[17]||(g[17]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):U("",!0)])):(f(),$("div",fl,g[9]||(g[9]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,dl)),[[je,l(m).isGitPulling||l(m).isGitFetching]])]),t(Ft,{modelValue:E.value,"onUpdate:modelValue":g[5]||(g[5]=_=>E.value=_),title:"文件差异","custom-class":"file-diff-dialog",size:"extra-large",type:"flex","destroy-on-close":""},{default:a(()=>[t(ms,{files:I.value,diffContent:A.value,selectedFile:D.value,emptyText:"选择文件查看差异",onFileSelect:ie},null,8,["files","diffContent","selectedFile"])]),_:1},8,["modelValue"]),t(Ft,{modelValue:O.value,"onUpdate:modelValue":g[7]||(g[7]=_=>O.value=_),title:"锁定文件管理",size:"large","destroy-on-close":""},{footer:a(()=>[e("span",oo,[t(oe,{onClick:g[6]||(g[6]=_=>O.value=!1)},{default:a(()=>g[25]||(g[25]=[w("关闭")])),_:1})])]),default:a(()=>[e("div",Wl,[e("div",ql,[t(te,{class:"description-icon"},{default:a(()=>[t(l(bs))]),_:1}),g[18]||(g[18]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),g[19]||(g[19]=e("div",{class:"description-content"},[e("p",null,[e("strong",null,"🔒 锁定文件的作用：")]),e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区"),e("li",null,"适用于临时文件、配置文件、或不想提交的开发中文件"),e("li",null,"锁定状态会持久保存，直到手动解锁")]),e("p",null,[e("strong",null,"💡 使用场景：")]),e("ul",null,[e("li",null,"开发过程中的临时测试文件"),e("li",null,"本地配置文件（如数据库连接、API密钥等）"),e("li",null,"正在开发但还不想提交的功能文件")])],-1))]),t(Fe),l(y).lockedFiles.length===0?(f(),$("div",Yl,[e("div",Xl,[t(te,null,{default:a(()=>[t(l(nt))]),_:1})]),g[20]||(g[20]=e("p",null,"当前没有锁定的文件",-1)),g[21]||(g[21]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(f(),$("div",Kl,[e("div",Zl,[e("span",null,"🔒 已锁定 "+B(l(y).lockedFiles.length)+" 个文件",1),t(W,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:a(()=>[t(te,{class:"info-icon"},{default:a(()=>[t(l(bs))]),_:1})]),_:1}),g[23]||(g[23]=e("div",{style:{flex:"1"}},null,-1)),t(oe,{type:"danger",size:"small",plain:"",disabled:!l(y).lockedFiles.length,onClick:j},{default:a(()=>g[22]||(g[22]=[w(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",Ql,[(f(!0),$(be,null,Be(l(y).lockedFiles,_=>(f(),$("div",{key:_,class:"locked-file-item"},[e("div",eo,[g[24]||(g[24]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",to,[e("span",so,B(K(_)),1),e("span",ao,B(ee(_)),1)])]),e("div",lo,[t(W,{content:"解锁文件",placement:"top","hide-after":1e3},{default:a(()=>[t(oe,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:l(At),"aria-label":"解锁",onClick:pe=>S(_)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),io=vt(no,[["__scopeId","data-v-403b96e4"]]),ro={class:"card-header"},co={class:"header-actions"},uo={key:0,class:"pushing-indicator"},fo={class:"pushing-text"},po={key:0,class:"push-success-indicator"},mo={class:"card-content"},vo={class:"layout-container"},go={key:0,class:"git-config-warning"},ho={key:1,class:"commit-section"},yo={class:"commit-options"},_o={class:"options-row"},wo={class:"commit-mode-toggle"},ko={class:"no-verify-toggle"},$o={key:0,class:"commit-form"},bo={class:"description-container"},Co={class:"preview-section"},So={class:"preview-header"},To={class:"preview-content code-command"},Vo={class:"form-bottom-actions"},xo={class:"actions-flex-container"},Lo={class:"left-actions"},zo={class:"button-grid"},Bo={key:0},Fo={key:0},jo={key:0},Do={class:"right-actions"},Ro={class:"one-push-content"},Go={key:1,class:"standard-commit-form"},Oo={class:"standard-commit-header"},Po={class:"type-scope-container"},Uo={class:"scope-wrapper"},Ao={class:"description-container"},Eo={class:"advanced-fields"},Mo={class:"preview-section"},Io={class:"preview-header"},No={class:"preview-content code-command"},Ho={class:"form-bottom-actions"},Jo={class:"actions-flex-container"},Wo={class:"left-actions"},qo={class:"button-grid"},Yo={key:0},Xo={key:0},Ko={key:0},Zo={class:"right-actions"},Qo={class:"one-push-content"},en={class:"actions-section"},tn={class:"action-groups"},sn={class:"operations-wrapper"},an={class:"action-group"},ln={class:"group-buttons"},on={key:0},nn={key:0},rn={key:0},cn={key:0},un={class:"action-group"},dn={class:"group-buttons"},fn={class:"action-group reset-group"},pn={class:"group-buttons"},mn={key:0},vn={class:"action-group branch-group"},gn={class:"group-buttons"},hn={class:"action-group"},yn={class:"group-buttons"},_n={class:"dialog-footer"},wn={class:"template-container"},kn={class:"template-form"},$n={class:"template-form-buttons"},bn={class:"template-list"},Cn={class:"template-content"},Sn={class:"template-actions"},Tn={class:"template-container"},Vn={class:"template-form"},xn={class:"template-form-buttons"},Ln={class:"template-list"},zn={class:"template-content"},Bn={class:"template-actions"},Fn={class:"template-container message-template-container"},jn={class:"template-form"},Dn={class:"template-form-buttons"},Rn={class:"templates-container"},Gn={class:"message-templates-list"},On={class:"templates-scroll-area"},Pn={class:"template-content"},Un={class:"template-actions"},An={class:"current-default-message"},En={class:"default-message-content"},Mn={class:"message-help-text"},In={class:"stash-dialog-content"},Nn={class:"merge-dialog-content"},Hn={class:"merge-intro"},Jn={class:"merge-options"},Wn={class:"dialog-footer"},qn={class:"stash-list-content"},Yn={class:"stash-action-buttons"},Xn={key:0,class:"stash-list-actions"},Kn={class:"stash-content"},Zn={key:0,class:"stash-info-row"},Qn={class:"stash-id"},ei={class:"stash-id-value"},ti={class:"stash-description"},si={class:"stash-description-value"},ai={class:"stash-main-content"},li=mt({__name:"CommitForm",setup(Z){const i=bt(),p=ps(),m=r(""),y=r(!1),G=r(!1),D=r("输入提交信息..."),A=r(""),E=r(!1),M=r("feat"),P=r(""),I=r(""),ie=r(""),O=r(""),ne=r(!1),ue=r(""),ce=r(!1),S=r([]),j=r(!1),F=r(""),X=r(!1),R=r(""),Q=r(-1),he=r(!1),fe=r(""),x=r({noFf:!1,squash:!1,noCommit:!1,message:""}),T=r([]),se=r(!1),K=r(""),ee=r(!1),le=r(""),ye=r(-1),Te=r(!1),h=r(""),g=r(!1),ae=r(!1),W=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],oe=r(!1),te=r(!1),Ce=r(""),Fe=r(!1),je=r(!0),_=r(!1),pe=r(null),Se=r([]),Le=r(""),ze=r(!1),Ke=r("");function Ze(){Ce.value="",Fe.value=!1,je.value=!0,oe.value=!0}function Ae(){try{const n=p.config;ue.value=JSON.stringify(n,null,2),ne.value=!0}catch{o.error("加载配置失败")}}async function Qe(){try{ce.value=!0;let n;try{n=JSON.parse(ue.value)}catch(we){o.error(`JSON 解析失败: ${we.message||we}`);return}const V=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:n})})).json();if(!V.success)throw new Error(V.error||"保存失败");await p.loadConfig(!0);try{await p.loadLockedFiles()}catch{}try{Array.isArray(p.descriptionTemplates)&&(S.value=[...p.descriptionTemplates])}catch{}try{Array.isArray(p.scopeTemplates)&&(T.value=[...p.scopeTemplates])}catch{}try{Array.isArray(p.messageTemplates)&&(re.value=[...p.messageTemplates])}catch{}o.success("配置已保存"),ne.value=!1}catch(n){o.error(`保存配置失败: ${n.message||n}`)}finally{ce.value=!1}}async function L(){try{const n=await fetch("/api/config/open-file",{method:"POST"}),s=await n.json();if(!n.ok||!(s!=null&&s.success))throw new Error((s==null?void 0:s.error)||"打开失败");o.success("已用系统程序打开配置文件")}catch(n){o.error(`打开配置文件失败: ${(n==null?void 0:n.message)||n}`)}}function c(){i.getStashList(),te.value=!0}async function N(){try{await i.saveStash(Ce.value,Fe.value,je.value),oe.value=!1}catch(n){console.error("储藏失败:",n)}}async function H(n,s=!1){try{await i.applyStash(n,s),s&&await i.getStashList()}catch(V){console.error("应用储藏失败:",V)}}async function $e(n){Me.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await i.dropStash(n),await i.getStashList()}).catch(()=>{})}async function De(){Me.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await i.clearAllStashes(),await i.getStashList()}).catch(()=>{})}async function ke(n){if(n){pe.value=n,_.value=!0,ze.value=!0,Se.value=[],Le.value="",Ke.value="";try{if(!n.id||n.id.length<7){Le.value="无效的stash ID",ze.value=!1;return}const V=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(n.id)}`)).json();V.success&&Array.isArray(V.files)?(Se.value=V.files,Se.value.length>0?await _e(n.id,Se.value[0]):Le.value="该stash没有变更文件"):Le.value=`获取文件列表失败: ${V.error||"未知错误"}`}catch(s){Le.value=`获取stash详情失败: ${s.message}`}finally{ze.value=!1}}}async function _e(n,s){ze.value=!0,Ke.value=s;try{const we=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(n)}&file=${encodeURIComponent(s)}`)).json();we.success?Le.value=we.diff||"没有变更内容":Le.value=`获取差异失败: ${we.error||"未知错误"}`}catch(V){Le.value=`获取差异失败: ${V.message}`}finally{ze.value=!1}}function Re(n){pe.value&&_e(pe.value.id,n)}const re=r([]),me=r(!1),Ne=r(""),He=r(-1);Ye(E,n=>{localStorage.setItem("zen-gitsync-standard-commit",n.toString())}),Ye(g,n=>{localStorage.setItem("zen-gitsync-skip-hooks",n.toString())});const q=de(()=>{if(!E.value)return m.value||A.value;let n=`${M.value||""}`;return P.value&&(n+=`(${P.value})`),n+=`: ${I.value}`,ie.value&&(n+=`

${ie.value}`),O.value&&(n+=`

${O.value}`),n}),Oe=de(()=>E.value?M.value.trim()!==""&&I.value.trim()!=="":m.value.trim()!==""),gt=de(()=>Se.value.map(n=>({path:n,name:n.split("/").pop()||n}))),ht=de(()=>{let n=`git commit -m "${q.value}"`;return g.value&&(n+=" --no-verify"),n});function et(){const n=p.config;n&&(D.value=`输入提交信息 (默认: ${n.defaultCommitMessage})`,A.value=n.defaultCommitMessage||"",n.descriptionTemplates&&Array.isArray(n.descriptionTemplates)&&(S.value=n.descriptionTemplates),n.scopeTemplates&&Array.isArray(n.scopeTemplates)&&(T.value=n.scopeTemplates),n.messageTemplates&&Array.isArray(n.messageTemplates)&&(re.value=n.messageTemplates))}async function Pe(){if(!F.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(X.value)await Tt();else{if(S.value.includes(F.value)){o({message:"该模板已存在",type:"warning"});return}await p.saveTemplate(F.value,"description")&&(S.value.includes(F.value)||S.value.push(F.value),S.value=[...S.value],F.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function Tt(){if(!F.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await p.updateTemplate(R.value,F.value,"description")){const s=S.value.indexOf(R.value);s!==-1&&(S.value[s]=F.value),S.value=[...S.value],X.value=!1,R.value="",Q.value=-1,F.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function k(n,s){X.value=!0,R.value=n,Q.value=s,F.value=n}function v(){X.value=!1,R.value="",Q.value=-1,F.value=""}async function J(){if(!K.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(ee.value)await u();else{if(T.value.includes(K.value)){o({message:"该模板已存在",type:"warning"});return}await p.saveTemplate(K.value,"scope")&&(T.value.includes(K.value)||T.value.push(K.value),T.value=[...T.value],K.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function u(){if(!K.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await p.updateTemplate(le.value,K.value,"scope")){const s=T.value.indexOf(le.value);s!==-1&&(T.value[s]=K.value),T.value=[...T.value],ee.value=!1,le.value="",ye.value=-1,K.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function d(n,s){ee.value=!0,le.value=n,ye.value=s,K.value=n}function z(){ee.value=!1,le.value="",ye.value=-1,K.value=""}async function C(n){try{if(await Me.confirm(`确定要删除描述模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await p.deleteTemplate(n,"description")){const V=S.value.indexOf(n);V!==-1&&S.value.splice(V,1),S.value=[...S.value]}}catch(s){if(s==="cancel")return;o({message:`删除模板失败: ${s.message}`,type:"error"})}}async function ve(n){try{if(await Me.confirm(`确定要删除作用域模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await p.deleteTemplate(n,"scope")){const V=T.value.indexOf(n);V!==-1&&T.value.splice(V,1),T.value=[...T.value]}}catch(s){if(s==="cancel")return;o({message:`删除模板失败: ${s.message}`,type:"error"})}}function Ee(n){I.value=n,j.value=!1}function Je(n){P.value=n,se.value=!1}function tt(){j.value=!0}function Dt(){se.value=!0}async function Wt(){try{await i.addToStage()&&i.fetchStatus()}catch(n){o({message:`添加文件失败: ${n.message}`,type:"error"})}}async function qt(){if(!q.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await i.commitChanges(q.value,g.value)&&(Kt(),i.fetchStatus(),i.fetchLog(),i.getBranchStatus(!0))}catch(n){o({message:`提交失败: ${n.message}`,type:"error"})}}function Rt(){y.value=!0,setTimeout(()=>{y.value=!1},2e3)}async function Yt(){try{await i.pushToRemote(),G.value=!0;try{await new Promise(n=>setTimeout(n,200)),Rt()}catch(n){console.error("推送后处理失败:",n),Rt()}finally{G.value=!1}}catch(n){G.value=!1,o({message:`推送失败: ${n.message}`,type:"error"})}}async function As(){try{await i.gitPull(),await i.fetchStatus(),await i.fetchLog(!1)}catch(n){console.error("拉取操作发生错误:",n)}}async function Es(){try{await i.gitFetchAll(),await i.fetchStatus(),await i.fetchLog(!1)}catch(n){console.error("获取远程分支信息操作发生错误:",n)}}async function Ms(){if(!q.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await i.addAndCommit(q.value,g.value),Kt(),i.fetchStatus(),i.fetchLog()}catch(n){o({message:`暂存并提交失败: ${n.message}`,type:"error"})}}async function Xt(){if(!q.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{if(await i.addCommitAndPush(q.value,g.value)){Kt(),G.value=!0;try{await new Promise(s=>setTimeout(s,1e3)),console.log("一键推送完成，状态已在pushToRemote中刷新"),Rt()}catch(s){console.error("一键推送后处理失败:",s),Rt()}finally{G.value=!1}}}catch(n){o({message:`暂存、提交并推送失败: ${n.message}`,type:"error"})}}async function Is(){try{await Me.confirm(`确定要重置当前分支 "${i.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await i.resetToRemote(i.currentBranch)&&(i.fetchStatus(),i.fetchLog())}catch(n){n!=="cancel"&&o({message:`重置到远程分支失败: ${n.message}`,type:"error"})}}function Kt(){m.value="",I.value="",ie.value="",O.value=""}function Ns(){h.value=A.value,Te.value=!0}async function Hs(){if(!h.value.trim()){o({message:"请输入默认提交信息",type:"warning"});return}try{await p.saveDefaultMessage(h.value)&&(A.value=h.value,D.value=`输入提交信息 (默认: ${h.value})`,Te.value=!1)}catch(n){o({message:`保存默认提交信息失败: ${n.message}`,type:"error"})}}function Gt(n){const s=n.replace(/\\/g,"/");return p.lockedFiles.some(V=>{const we=V.replace(/\\/g,"/");return s===we})}const Vt=de(()=>i.fileList.some(n=>["modified","deleted","untracked"].includes(n.type)&&!Gt(n.path))),it=de(()=>i.fileList.filter(n=>["modified","deleted","untracked"].includes(n.type)&&!Gt(n.path)).length),We=de(()=>i.fileList.filter(n=>n.type==="added"&&!Gt(n.path)).length),yt=de(()=>We.value>0),rt=de(()=>i.fileList.some(n=>!Gt(n.path))),st=de(()=>i.branchAhead>0),Zt=de(()=>i.branchBehind>0),at=de(()=>i.hasUpstream&&st.value&&!yt.value),vs=de(()=>yt.value),Js=de(()=>i.hasUpstream&&(st.value||Zt.value||rt.value));async function Ws(){if(!h.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(me.value)await qs();else{if(re.value.includes(h.value)){o({message:"该模板已存在",type:"warning"});return}re.value.push(h.value);const s=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:h.value,type:"message"})})).json();s.success?(o({message:"提交信息模板保存成功!",type:"success"}),h.value=""):o({message:"模板保存失败: "+s.error,type:"error"})}}catch(n){o({message:"模板保存失败: "+n.message,type:"error"})}}async function qs(){try{if(He.value>=0){const n=Ne.value,s=h.value;re.value[He.value]=s;const we=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:n,newTemplate:s,type:"message"})})).json();we.success?(o({message:"提交信息模板更新成功!",type:"success"}),me.value=!1,Ne.value="",He.value=-1,h.value=""):o({message:"模板更新失败: "+we.error,type:"error"})}}catch(n){o({message:"模板更新失败: "+n.message,type:"error"})}}function Ys(n,s){me.value=!0,Ne.value=n,He.value=s,h.value=n}function Xs(){me.value=!1,Ne.value="",He.value=-1,h.value=""}async function Ks(n){try{const s=re.value.indexOf(n);s!==-1&&re.value.splice(s,1);const we=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:n,type:"message"})})).json();we.success?o({message:"提交信息模板删除成功!",type:"success"}):o({message:"模板删除失败: "+we.error,type:"error"})}catch(s){o({message:"模板删除失败: "+s.message,type:"error"})}}function Zs(n){m.value=n,h.value=n}Ct(async()=>{const n=localStorage.getItem("zen-gitsync-standard-commit");n!==null&&(E.value=n==="true");const s=localStorage.getItem("zen-gitsync-skip-hooks");s!==null&&(g.value=s==="true"),Ye(()=>p.config,et,{immediate:!0}),p.config||await p.loadConfig()});function Qs(){fe.value="",x.value={noFf:!1,squash:!1,noCommit:!1,message:""},_t.value="all",he.value=!0,i.allBranches.length===0&&i.getAllBranches()}const _t=r("all"),ea=de(()=>{const n=i.allBranches.filter(s=>s!==i.currentBranch);if(console.log("筛选分支列表:",{allBranches:i.allBranches,currentBranch:i.currentBranch,branchTypeFilter:_t.value,filteredBranches:n}),_t.value==="local"){const s=n.filter(V=>!V.includes("origin/"));return console.log("本地分支:",s),s}else if(_t.value==="remote"){const s=n.filter(V=>V.includes("origin/"));return console.log("远程分支:",s),s}else return console.log("所有分支:",n),n});async function ta(){if(!fe.value){o({message:"请选择要合并的分支",type:"warning"});return}try{await i.mergeBranch(fe.value,x.value)&&(he.value=!1,await i.fetchStatus(),await i.fetchLog(!1))}catch(n){console.error("合并分支操作发生错误:",n)}}const Ot=r(!1);function sa(){Ot.value=!Ot.value}function aa(n,s){const we=[...n?S.value.filter(Ve=>Ve.toLowerCase().includes(n.toLowerCase())).map(Ve=>({value:Ve})):S.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];s(we)}function la(n,s){const we=[...n?T.value.filter(Ve=>Ve.toLowerCase().includes(n.toLowerCase())).map(Ve=>({value:Ve})):T.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];s(we)}function oa(n){n.isSettings?(tt(),I.value=""):I.value=n.value}function na(n){n.isSettings?(Dt(),P.value=""):P.value=n.value}function ia(n,s){const we=[...n?re.value.filter(Ve=>Ve.toLowerCase().includes(n.toLowerCase())).map(Ve=>({value:Ve})):re.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];s(we)}function ra(n){n.isSettings?(Ns(),m.value=""):m.value=n.value}async function gs(){try{await navigator.clipboard.writeText(ht.value),o.success("Git命令已复制到剪贴板")}catch(n){o.error(`复制失败: ${n.message}`)}}return(n,s)=>{const V=Ge,we=St,Ve=ds,hs=Ls,Qt=_a,xe=Ht,ys=It,_s=Nt,lt=fs,ca=ka,wt=Jt,Pt=Mt,es=$a,Ut=Rs,ws=jt,ct=Os,xt=ba,ks=Gs,ts=Sa,ua=Ca,ss=Bt,da=Ps,fa=cs;return f(),$(be,null,[e("div",{class:ge(["card",{"is-pushing":l(i).isPushing}])},[e("div",ro,[s[34]||(s[34]=e("h2",null,"提交更改",-1)),e("div",co,[t(V,{size:"small",type:"primary",icon:l(Lt),onClick:Ae},{default:a(()=>s[33]||(s[33]=[w("配置")])),_:1},8,["icon"]),t(V,{type:"primary",icon:l(ya),size:"small",circle:"",onClick:sa,class:"git-tools-button"},null,8,["icon"])])]),t(Cs,{name:"el-fade-in-linear"},{default:a(()=>[l(i).isPushing||G.value?(f(),$("div",uo,[s[35]||(s[35]=e("div",{class:"pushing-spinner"},[e("svg",{viewBox:"0 0 50 50",class:"circular"},[e("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1)),e("div",fo,B(l(i).isPushing?"正在推送...":"更新状态中..."),1)])):U("",!0)]),_:1}),t(Cs,{name:"el-fade-in-linear"},{default:a(()=>[y.value?(f(),$("div",po,[t(we,{class:"push-success-icon"},{default:a(()=>[t(l(zs))]),_:1}),s[36]||(s[36]=e("div",{class:"push-success-text"},"已完成!",-1))])):U("",!0)]),_:1}),e("div",mo,[e("div",vo,[l(i).userName===""||l(i).userEmail===""?(f(),$("div",go,[t(Ve,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:a(()=>s[37]||(s[37]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(f(),$("div",ho,[e("div",yo,[e("div",_o,[e("div",wo,[t(hs,{modelValue:E.value,"onUpdate:modelValue":s[0]||(s[0]=b=>E.value=b),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),e("div",ko,[t(hs,{modelValue:g.value,"onUpdate:modelValue":s[1]||(s[1]=b=>g.value=b),"active-text":"跳过 Git 钩子检查 (--no-verify)"},null,8,["modelValue"])])])]),E.value?(f(),$("div",Go,[e("div",Oo,[e("div",Po,[t(_s,{modelValue:M.value,"onUpdate:modelValue":s[3]||(s[3]=b=>M.value=b),placeholder:"提交类型",class:"type-select",clearable:""},{default:a(()=>[(f(),$(be,null,Be(W,b=>t(ys,{key:b.value,label:b.label,value:b.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",Uo,[t(Qt,{modelValue:P.value,"onUpdate:modelValue":s[4]||(s[4]=b=>P.value=b),"fetch-suggestions":la,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:na},null,8,["modelValue"])])]),e("div",Ao,[t(Qt,{modelValue:I.value,"onUpdate:modelValue":s[5]||(s[5]=b=>I.value=b),"fetch-suggestions":aa,placeholder:"简短描述（必填）",class:"description-input",clearable:"",onSelect:oa},null,8,["modelValue"])])]),e("div",{class:"advanced-options-toggle",onClick:s[6]||(s[6]=b=>ae.value=!ae.value)},[e("span",null,B(ae.value?"收起":"正文及页脚"),1),t(we,{class:ge(["toggle-icon",{"is-active":ae.value}])},{default:a(()=>[t(l(kt))]),_:1},8,["class"])]),Xe(e("div",Eo,[t(lt,{modelValue:ie.value,"onUpdate:modelValue":s[7]||(s[7]=b=>ie.value=b),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(lt,{modelValue:O.value,"onUpdate:modelValue":s[8]||(s[8]=b=>O.value=b),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[ft,ae.value]]),e("div",Mo,[e("div",Io,[s[43]||(s[43]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),t(V,{type:"primary",icon:l(pt),size:"small",onClick:gs,title:"复制命令",class:"copy-command-btn"},null,8,["icon"])]),e("pre",No,B(ht.value),1)]),e("div",Ho,[e("div",Jo,[e("div",Wo,[e("div",qo,[t(V,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"stage-button"},{default:a(()=>[s[44]||(s[44]=w(" 暂存更改 ")),it.value>0?(f(),$("span",Yo,"("+B(it.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),t(V,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!yt.value||!Oe.value},{default:a(()=>[s[45]||(s[45]=w(" 提交 ")),We.value>0?(f(),$("span",Xo,"("+B(We.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),t(xe,{content:at.value?"推送已提交的更改到远程仓库":l(i).hasUpstream?st.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top","show-after":200},{default:a(()=>[t(V,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!at.value,style:dt(at.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[46]||(s[46]=w(" 推送 ")),st.value?(f(),$("span",Ko,"("+B(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",Zo,[t(xe,{content:rt.value?Oe.value?l(i).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top","show-after":200},{default:a(()=>[t(V,{type:"success",onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!rt.value||!Oe.value||!l(i).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",Qo,[t(we,{class:"one-push-icon"},{default:a(()=>[t(l(ls))]),_:1}),s[47]||(s[47]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])])):(f(),$("div",$o,[e("div",bo,[t(Qt,{modelValue:m.value,"onUpdate:modelValue":s[2]||(s[2]=b=>m.value=b),"fetch-suggestions":ia,placeholder:D.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input",onSelect:ra},null,8,["modelValue","placeholder"])]),e("div",Co,[e("div",So,[s[38]||(s[38]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),t(V,{type:"primary",icon:l(pt),size:"small",onClick:gs,title:"复制命令",class:"copy-command-btn"},null,8,["icon"])]),e("pre",To,'git commit -m "'+B(q.value||"<提交信息>")+'"'+B(g.value?" --no-verify":""),1)]),e("div",Vo,[e("div",xo,[e("div",Lo,[e("div",zo,[t(V,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"stage-button"},{default:a(()=>[s[39]||(s[39]=w(" 暂存更改 ")),it.value>0?(f(),$("span",Bo,"("+B(it.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),t(V,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!yt.value||!Oe.value},{default:a(()=>[s[40]||(s[40]=w(" 提交 ")),We.value>0?(f(),$("span",Fo,"("+B(We.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),t(xe,{content:at.value?"推送已提交的更改到远程仓库":l(i).hasUpstream?st.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top","show-after":200},{default:a(()=>[t(V,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!at.value,style:dt(at.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[41]||(s[41]=w(" 推送 ")),st.value?(f(),$("span",jo,"("+B(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",Do,[t(xe,{content:rt.value?Oe.value?l(i).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top","show-after":200},{default:a(()=>[t(V,{type:"success",onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!rt.value||!Oe.value||!l(i).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",Ro,[t(we,{class:"one-push-icon"},{default:a(()=>[t(l(ls))]),_:1}),s[42]||(s[42]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])]))]))])])],2),t(ca,{modelValue:Ot.value,"onUpdate:modelValue":s[9]||(s[9]=b=>Ot.value=b),title:"Git 操作",direction:"rtl",size:"340px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:a(()=>[e("div",en,[e("div",tn,[e("div",sn,[e("div",an,[s[53]||(s[53]=e("div",{class:"group-title"},"基础操作",-1)),e("div",ln,[t(xe,{content:Vt.value?`暂存${it.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"action-button"},{default:a(()=>[s[48]||(s[48]=w(" 暂存更改 ")),it.value>0?(f(),$("span",on,"("+B(it.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(xe,{content:yt.value?`提交${We.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!yt.value||!Oe.value,class:"action-button"},{default:a(()=>[s[49]||(s[49]=w(" 提交 ")),We.value>0?(f(),$("span",nn,"("+B(We.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(xe,{content:st.value?`推送${l(i).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!at.value,class:ge(["action-button","push-button",{"is-loading":l(i).isPushing}]),style:dt(at.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[50]||(s[50]=w(" 推送 ")),st.value?(f(),$("span",rn,"("+B(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),t(xe,{content:Zt.value?`拉取${l(i).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",icon:l(Bs),onClick:As,loading:l(i).isGitPulling,disabled:!l(i).hasUpstream,class:"action-button",style:dt(l(i).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:a(()=>[s[51]||(s[51]=w(" 拉取 ")),Zt.value?(f(),$("span",cn,"("+B(l(i).branchBehind)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(xe,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"info",icon:l(Fs),onClick:Es,loading:l(i).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:a(()=>s[52]||(s[52]=[w(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",un,[s[56]||(s[56]=e("div",{class:"group-title"},"组合操作",-1)),e("div",dn,[t(xe,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",icon:l(Lt),onClick:Ms,loading:l(i).isAddingFiles||l(i).isCommiting,disabled:!Vt.value||!Oe.value,class:"action-button"},{default:a(()=>s[54]||(s[54]=[w(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(xe,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"success",icon:l(ls),onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!rt.value||!Oe.value||!l(i).hasUpstream,class:ge(["action-button","one-click-push",{"is-loading":l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing}])},{default:a(()=>s[55]||(s[55]=[w(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),e("div",fn,[s[59]||(s[59]=e("div",{class:"group-title"},"重置操作",-1)),e("div",pn,[t(xe,{content:vs.value?`撤销${We.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"warning",icon:l(us),onClick:l(i).resetHead,loading:l(i).isResetting,disabled:!vs.value,class:"action-button reset-button"},{default:a(()=>[s[57]||(s[57]=w(" 重置暂存区 ")),We.value>0?(f(),$("span",mn,"("+B(We.value)+")",1)):U("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(xe,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"danger",icon:l(Ds),onClick:Is,loading:l(i).isResetting,disabled:!Js.value,class:"action-button danger-button"},{default:a(()=>s[58]||(s[58]=[w(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",vn,[s[61]||(s[61]=e("div",{class:"group-title"},"分支操作",-1)),e("div",gn,[t(xe,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"primary",icon:l(wa),onClick:Qs,loading:l(i).isGitMerging,class:"action-button merge-button"},{default:a(()=>s[60]||(s[60]=[w(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",hn,[s[64]||(s[64]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",yn,[t(xe,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"warning",onClick:Ze,loading:l(i).isSavingStash,disabled:!rt.value,class:"action-button"},{default:a(()=>s[62]||(s[62]=[w(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(xe,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[t(V,{type:"info",onClick:c,class:"action-button"},{default:a(()=>s[63]||(s[63]=[w(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(wt,{class:"config-editor-dialog",title:"编辑配置 JSON",modelValue:ne.value,"onUpdate:modelValue":s[12]||(s[12]=b=>ne.value=b),width:"60%"},{footer:a(()=>[e("span",_n,[t(V,{onClick:L},{default:a(()=>s[65]||(s[65]=[w("打开系统配置文件")])),_:1}),t(V,{onClick:s[11]||(s[11]=b=>ne.value=!1)},{default:a(()=>s[66]||(s[66]=[w("取消")])),_:1}),t(V,{type:"primary",loading:ce.value,onClick:Qe},{default:a(()=>s[67]||(s[67]=[w("保存")])),_:1},8,["loading"])])]),default:a(()=>[t(lt,{modelValue:ue.value,"onUpdate:modelValue":s[10]||(s[10]=b=>ue.value=b),type:"textarea",rows:18,spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON"},null,8,["modelValue"])]),_:1},8,["modelValue"]),t(wt,{title:"简短描述模板设置",modelValue:j.value,"onUpdate:modelValue":s[14]||(s[14]=b=>j.value=b),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",wn,[e("div",kn,[t(lt,{modelValue:F.value,"onUpdate:modelValue":s[13]||(s[13]=b=>F.value=b),placeholder:X.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",$n,[X.value?(f(),Y(V,{key:0,onClick:v},{default:a(()=>s[68]||(s[68]=[w("取消")])),_:1})):U("",!0),t(V,{type:"primary",onClick:Pe,disabled:!F.value.trim()},{default:a(()=>[w(B(X.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",bn,[s[72]||(s[72]=e("h3",null,"已保存模板",-1)),S.value.length===0?(f(),Y(Pt,{key:0,description:"暂无保存的模板"})):U("",!0),(f(!0),$(be,null,Be(S.value,(b,Ie)=>(f(),Y(Ut,{key:Ie,class:"template-item"},{default:a(()=>[t(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Cn,B(b),1),e("div",Sn,[t(V,{type:"primary",size:"small",onClick:ot=>Ee(b)},{default:a(()=>s[69]||(s[69]=[w("使用")])),_:2},1032,["onClick"]),t(V,{type:"warning",size:"small",icon:l(Lt),onClick:ot=>k(b,Ie)},{default:a(()=>s[70]||(s[70]=[w("编辑")])),_:2},1032,["icon","onClick"]),t(V,{type:"danger",size:"small",onClick:ot=>C(b)},{default:a(()=>s[71]||(s[71]=[w("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(wt,{title:"作用域模板设置",modelValue:se.value,"onUpdate:modelValue":s[16]||(s[16]=b=>se.value=b),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",Tn,[e("div",Vn,[t(lt,{modelValue:K.value,"onUpdate:modelValue":s[15]||(s[15]=b=>K.value=b),placeholder:ee.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",xn,[ee.value?(f(),Y(V,{key:0,onClick:z},{default:a(()=>s[73]||(s[73]=[w("取消")])),_:1})):U("",!0),t(V,{type:"primary",onClick:J,disabled:!K.value.trim()},{default:a(()=>[w(B(ee.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",Ln,[s[77]||(s[77]=e("h3",null,"已保存作用域",-1)),T.value.length===0?(f(),Y(Pt,{key:0,description:"暂无保存的作用域"})):U("",!0),(f(!0),$(be,null,Be(T.value,(b,Ie)=>(f(),Y(Ut,{key:Ie,class:"template-item"},{default:a(()=>[t(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",zn,B(b),1),e("div",Bn,[t(V,{type:"primary",size:"small",onClick:ot=>Je(b)},{default:a(()=>s[74]||(s[74]=[w("使用")])),_:2},1032,["onClick"]),t(V,{type:"warning",size:"small",icon:l(Lt),onClick:ot=>d(b,Ie)},{default:a(()=>s[75]||(s[75]=[w("编辑")])),_:2},1032,["icon","onClick"]),t(V,{type:"danger",size:"small",onClick:ot=>ve(b)},{default:a(()=>s[76]||(s[76]=[w("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(wt,{title:"默认提交信息设置",modelValue:Te.value,"onUpdate:modelValue":s[18]||(s[18]=b=>Te.value=b),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:a(()=>[e("div",Fn,[e("div",jn,[t(lt,{modelValue:h.value,"onUpdate:modelValue":s[17]||(s[17]=b=>h.value=b),placeholder:me.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",Dn,[me.value?(f(),Y(V,{key:0,onClick:Xs},{default:a(()=>s[78]||(s[78]=[w("取消")])),_:1})):U("",!0),t(V,{type:"primary",onClick:Ws,disabled:!h.value.trim()},{default:a(()=>[w(B(me.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),t(V,{type:"success",onClick:Hs,disabled:!h.value.trim()},{default:a(()=>s[79]||(s[79]=[w(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),e("div",Rn,[e("div",Gn,[s[83]||(s[83]=e("h3",null,"已保存模板",-1)),e("div",On,[re.value.length===0?(f(),Y(Pt,{key:0,description:"暂无保存的模板"})):U("",!0),(f(!0),$(be,null,Be(re.value,(b,Ie)=>(f(),Y(Ut,{key:Ie,class:"template-item"},{default:a(()=>[t(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Pn,B(b),1),e("div",Un,[t(V,{type:"primary",size:"small",onClick:ot=>Zs(b)},{default:a(()=>s[80]||(s[80]=[w("使用")])),_:2},1032,["onClick"]),t(V,{type:"warning",size:"small",icon:l(Lt),onClick:ot=>Ys(b,Ie)},{default:a(()=>s[81]||(s[81]=[w("编辑")])),_:2},1032,["icon","onClick"]),t(V,{type:"danger",size:"small",onClick:ot=>Ks(b)},{default:a(()=>s[82]||(s[82]=[w("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),e("div",An,[s[91]||(s[91]=e("h3",null,"当前默认提交信息",-1)),A.value?(f(),Y(Ut,{key:0,class:"default-message-card"},{default:a(()=>[e("div",En,B(A.value),1)]),_:1})):(f(),Y(Pt,{key:1,description:"尚未设置默认提交信息","image-size":100})),e("div",Mn,[s[89]||(s[89]=e("h4",null,"关于默认提交信息",-1)),s[90]||(s[90]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[s[86]||(s[86]=w("你可以通过点击左侧模板的")),t(ws,{size:"small",type:"primary"},{default:a(()=>s[84]||(s[84]=[w("使用")])),_:1}),s[87]||(s[87]=w("按钮先选择喜欢的模板，然后点击上方")),t(ws,{size:"small",type:"success"},{default:a(()=>s[85]||(s[85]=[w("设为默认提交信息")])),_:1}),s[88]||(s[88]=w("按钮保存。"))])])])])])]),_:1},8,["modelValue"]),t(Ft,{modelValue:oe.value,"onUpdate:modelValue":s[22]||(s[22]=b=>oe.value=b),title:"储藏更改 (Git Stash)",size:"medium","close-on-click-modal":!1,"show-footer":"","confirm-text":"储藏","confirm-loading":l(i).isSavingStash,onConfirm:N},{default:a(()=>[e("div",In,[s[94]||(s[94]=e("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),t(ks,{"label-position":"top"},{default:a(()=>[t(ct,{label:"储藏说明 (可选)"},{default:a(()=>[t(lt,{modelValue:Ce.value,"onUpdate:modelValue":s[19]||(s[19]=b=>Ce.value=b),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),t(ct,null,{default:a(()=>[t(xt,{modelValue:Fe.value,"onUpdate:modelValue":s[20]||(s[20]=b=>Fe.value=b)},{default:a(()=>s[92]||(s[92]=[w(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1}),t(ct,null,{default:a(()=>[t(xt,{modelValue:je.value,"onUpdate:modelValue":s[21]||(s[21]=b=>je.value=b)},{default:a(()=>s[93]||(s[93]=[w(" 排除锁定文件 ")])),_:1},8,["modelValue"])]),_:1})]),_:1})])]),_:1},8,["modelValue","confirm-loading"]),t(wt,{title:"合并分支",modelValue:he.value,"onUpdate:modelValue":s[30]||(s[30]=b=>he.value=b),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:a(()=>[e("div",Wn,[t(V,{onClick:s[29]||(s[29]=b=>he.value=!1)},{default:a(()=>s[101]||(s[101]=[w("取消")])),_:1}),t(V,{type:"primary",onClick:ta,loading:l(i).isGitMerging,disabled:!fe.value,class:"merge-confirm-btn"},{default:a(()=>s[102]||(s[102]=[w(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:a(()=>[e("div",Nn,[e("p",Hn,"选择要合并到当前分支 ("+B(l(i).currentBranch)+") 的分支:",1),t(ks,{"label-position":"top"},{default:a(()=>[t(ct,{label:"分支类型"},{default:a(()=>[t(ua,{modelValue:_t.value,"onUpdate:modelValue":s[23]||(s[23]=b=>_t.value=b),size:"small"},{default:a(()=>[t(ts,{label:"all"},{default:a(()=>s[95]||(s[95]=[w("所有分支")])),_:1}),t(ts,{label:"local"},{default:a(()=>s[96]||(s[96]=[w("本地分支")])),_:1}),t(ts,{label:"remote"},{default:a(()=>s[97]||(s[97]=[w("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t(ct,{label:"选择分支"},{default:a(()=>[t(_s,{modelValue:fe.value,"onUpdate:modelValue":s[24]||(s[24]=b=>fe.value=b),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:a(()=>[(f(!0),$(be,null,Be(ea.value,b=>(f(),Y(ys,{key:b,label:b,value:b},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t(ct,{label:"合并选项"},{default:a(()=>[e("div",Jn,[t(xt,{modelValue:x.value.noFf,"onUpdate:modelValue":s[25]||(s[25]=b=>x.value.noFf=b)},{default:a(()=>[t(xe,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:a(()=>s[98]||(s[98]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t(xt,{modelValue:x.value.squash,"onUpdate:modelValue":s[26]||(s[26]=b=>x.value.squash=b)},{default:a(()=>[t(xe,{content:"将多个提交压缩为一个提交",placement:"top"},{default:a(()=>s[99]||(s[99]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t(xt,{modelValue:x.value.noCommit,"onUpdate:modelValue":s[27]||(s[27]=b=>x.value.noCommit=b)},{default:a(()=>[t(xe,{content:"执行合并但不自动创建提交",placement:"top"},{default:a(()=>s[100]||(s[100]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),x.value.noFf&&!x.value.noCommit?(f(),Y(ct,{key:0,label:"合并提交信息 (可选)"},{default:a(()=>[t(lt,{modelValue:x.value.message,"onUpdate:modelValue":s[28]||(s[28]=b=>x.value.message=b),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):U("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(wt,{title:"储藏列表 (Git Stash)",modelValue:te.value,"onUpdate:modelValue":s[31]||(s[31]=b=>te.value=b),width:"600px","close-on-click-modal":!1},{default:a(()=>[e("div",qn,[Xe((f(),Y(da,{data:l(i).stashes,stripe:"",style:{width:"100%"},"empty-text":"暂无储藏记录"},{default:a(()=>[t(ss,{prop:"id",label:"ID",width:"100"}),t(ss,{prop:"description",label:"描述"}),t(ss,{label:"操作",width:"280"},{default:a(b=>[e("div",Yn,[t(V,{size:"small",type:"info",onClick:Ie=>ke(b.row),loading:ze.value},{default:a(()=>s[103]||(s[103]=[w(" 查看 ")])),_:2},1032,["onClick","loading"]),t(V,{size:"small",onClick:Ie=>H(b.row.id,!1),loading:l(i).isApplyingStash},{default:a(()=>s[104]||(s[104]=[w(" 应用 ")])),_:2},1032,["onClick","loading"]),t(V,{size:"small",type:"primary",onClick:Ie=>H(b.row.id,!0),loading:l(i).isApplyingStash},{default:a(()=>s[105]||(s[105]=[w(" 应用并删除 ")])),_:2},1032,["onClick","loading"]),t(V,{size:"small",type:"danger",onClick:Ie=>$e(b.row.id),loading:l(i).isDroppingStash},{default:a(()=>s[106]||(s[106]=[w(" 删除 ")])),_:2},1032,["onClick","loading"])])]),_:1})]),_:1},8,["data"])),[[fa,l(i).isLoadingStashes]]),l(i).stashes.length>0?(f(),$("div",Xn,[t(V,{type:"danger",onClick:De,loading:l(i).isDroppingStash},{default:a(()=>s[107]||(s[107]=[w(" 清空所有储藏 ")])),_:1},8,["loading"])])):U("",!0)])]),_:1},8,["modelValue"]),t(Ft,{modelValue:_.value,"onUpdate:modelValue":s[32]||(s[32]=b=>_.value=b),title:"储藏详情","custom-class":"stash-detail-dialog",size:"extra-large",type:"flex","close-on-click-modal":!1},{default:a(()=>[e("div",Kn,[pe.value?(f(),$("div",Zn,[e("div",Qn,[s[108]||(s[108]=e("span",{class:"info-label"},"Stash ID:",-1)),e("code",ei,B(pe.value.id),1)]),e("div",ti,[s[109]||(s[109]=e("span",{class:"info-label"},"描述:",-1)),e("span",si,B(pe.value.description),1)])])):U("",!0),e("div",ai,[t(ms,{files:gt.value,diffContent:Le.value,selectedFile:Ke.value,emptyText:"该stash没有变更文件",onFileSelect:Re},null,8,["files","diffContent","selectedFile"])])])]),_:1},8,["modelValue"])],64)}}}),oi=vt(li,[["__scopeId","data-v-e4e82f02"]]),ni={class:"log-header"},ii={class:"log-actions"},ri={key:0,class:"filter-panel-header"},ci={class:"filter-form"},ui={class:"filter-item"},di={class:"filter-item"},fi={class:"filter-item"},pi={class:"filter-item"},mi={class:"filter-actions"},vi={key:0},gi={key:1,class:"content-area-content"},hi={key:0,class:"graph-view"},yi={key:0,class:"commit-count"},_i={class:"graph-controls"},wi={class:"zoom-controls"},ki={class:"scale-info"},$i={key:1,class:"table-view-container"},bi=["onClick"],Ci={class:"commit-message-cell"},Si={class:"message-content"},Ti={key:0,class:"branch-container"},Vi={class:"message-text"},xi={class:"author-name"};const Li={class:"commit-detail-container"},zi={key:0,class:"commit-info"},Bi={class:"commit-info-header"},Fi={class:"info-item"},ji={class:"item-value"},Di={class:"info-item"},Ri={class:"item-value"},Gi={class:"info-item"},Oi={class:"item-value"},Pi={class:"commit-message-container"},Ui=["innerHTML"],zt=.5,Et=1.5,ns=.1,Ai=mt({__name:"LogList",setup(Z,{expose:i}){const p=bt();let m=[];const y=r(m),G=r(""),D=r(!1),A=de(()=>p.isLoadingLog||D.value),E=r(!1),M=r(0),P=r(!1),I=r(null),ie=r(1),O=r(!0),ne=r(!1),ue=r(null),ce=r(!1),S=r(null),j=r([]),F=r(""),X=r(!1),R=r(""),Q=r(1),he=r(!1),fe=r(!1),x=r([]),T=r(""),se=r(null),K=r([]),ee=r([]),le=r([]),ye=r(!1),Te=r(0),h=r(0),g=r(null),ae=de(()=>y.value),W=de(()=>j.value.map(k=>({path:k,name:k.split("/").pop()||k})));async function oe(k=!1,v=1){if(!bt().isGitRepo){G.value="当前目录不是Git仓库";return}try{v>1?ne.value=!0:D.value=!0;const u=new URLSearchParams;u.append("page",v.toString()),u.append("all",k.toString()),u.append("with_parents","true"),x.value.length>0&&u.append("author",x.value.join(",")),ee.value.length>0&&u.append("branch",ee.value.join(",")),T.value&&u.append("message",T.value),se.value&&Array.isArray(se.value)&&se.value.length===2&&(u.append("dateFrom",se.value[0]),u.append("dateTo",se.value[1])),u.append("_t",Date.now().toString());const z=await(await fetch(`/api/log?${u.toString()}`)).json();if(!z||!z.data||!Array.isArray(z.data)){G.value="加载提交历史失败: 服务器返回数据格式不正确";return}const C=v>1;C?z.data.forEach(ve=>m.push(ve)):(m.length=0,z.data.forEach(ve=>m.push(ve))),y.value=[...m],ie.value=v,M.value=z.total||m.length,O.value=z.hasMore===!0,C||(he.value=!0,setTimeout(()=>{he.value=!1},2e3)),!C&&P.value?setTimeout(te,0):!C&&!P.value&&!k&&ut(()=>{ze(),setTimeout(et,200)}),G.value=""}catch(u){G.value="加载提交历史失败: "+(u instanceof Error?u.message:String(u)),v>1&&(O.value=!1)}finally{v>1?ne.value=!1:D.value=!1}}async function te(){if(I.value&&m.length!==0)try{I.value.innerHTML="";const k=Oa(I.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),v={},J=k.branch(p.currentBranch||"main");v[p.currentBranch||"main"]=J,m.forEach(u=>{let d=J;if(u.branch){const z=je(u.branch.split(",")[0]);v[z]||(v[z]=k.branch(z)),d=v[z]}d.commit({hash:u.hash,subject:u.message,author:`${u.author} <${u.email}>`})}),setTimeout(()=>{N()},100)}catch(k){G.value="渲染图表失败: "+(k instanceof Error?k.message:String(k))}}function Ce(){P.value=!P.value,P.value&&m.length>0&&setTimeout(te,0)}function Fe(){E.value=!E.value,E.value||(O.value=!0),ie.value=1,oe(E.value),ut(()=>{setTimeout(()=>{!P.value&&!E.value&&(ze(),et())},300)})}function je(k){return k.includes("HEAD -> ")?k.replace("HEAD -> ",""):k.includes("origin/")?k:k.trim()}function _(k){return k.includes("HEAD")?"success":k.includes("origin/")?"warning":"info"}const pe=r(null),Se=r(null);function Le(k){if(P.value||!O.value||ne.value||A.value)return;const v=k.target,{scrollTop:J,scrollHeight:u,clientHeight:d}=v;u-J-d<=20&&_e()}function ze(){if(!pe.value)return;const k=pe.value.$el.querySelector(".el-table__body-wrapper");k&&(Se.value=k,Se.value&&(Se.value.removeEventListener("scroll",Le,!0),Se.value.addEventListener("scroll",Le,!0)))}function Ke(){Se.value&&(Se.value.removeEventListener("scroll",Le,!0),Se.value=null)}function Ze(k){k.key==="Escape"&&Pe.value&&(Pe.value=!1)}Ct(()=>{p.isGitRepo?(p.log.length>0?(m.length=0,p.log.forEach(k=>m.push(k)),M.value=p.log.length,P.value&&setTimeout(()=>{te()},100)):oe(),me()):G.value="当前目录不是Git仓库",ut(()=>{setTimeout(()=>{ze()},500)}),Ye(()=>pe.value,k=>{k&&!P.value&&!E.value&&ut(()=>{ze()})}),window.addEventListener("keydown",Ze)}),Ye(()=>p.allBranches,k=>{k&&k.length>0?le.value=[...k].sort():le.value=[]},{immediate:!0}),Ta(()=>{Ke(),ue.value!==null&&(window.clearInterval(ue.value),ue.value=null),window.removeEventListener("keydown",Ze)});async function Ae(){await p.fetchLog(!0),m.length=0,p.log.forEach(k=>m.push(k)),y.value=[...m],M.value=p.log.length,ie.value=1,O.value=!1,he.value=!0,setTimeout(()=>{he.value=!1},2e3),P.value&&(await ut(),te())}Ye(()=>p.log,k=>{try{m.length=0,Array.isArray(k)&&k.forEach(v=>v&&m.push(v)),M.value=m.length,ie.value=1,y.value=[...m],he.value=!0,setTimeout(()=>{he.value=!1},2e3),P.value&&m.length>0&&setTimeout(te,0)}catch{}},{immediate:!0}),i({refreshLog:Ae});function Qe(){Q.value<Et&&(Q.value=Math.min(Et,Q.value+ns),c())}function L(){Q.value>zt&&(Q.value=Math.max(zt,Q.value-ns),c())}function c(){if(!I.value)return;const k=I.value.querySelector("svg");k&&(k.style.transform=`scale(${Q.value})`,k.style.transformOrigin="top left")}function N(){if(!I.value)return;const k=I.value.querySelector("svg");if(!k)return;const v=k.getBoundingClientRect().width/Q.value,J=I.value.clientWidth;v>J?Q.value=Math.max(zt,J/v):Q.value=1,c()}async function H(k){if(k){S.value=k,ce.value=!0,X.value=!0,j.value=[],F.value="",R.value="";try{if(!k.hash||k.hash.length<7){F.value="无效的提交哈希值",X.value=!1;return}const J=await(await fetch(`/api/commit-files?hash=${k.hash}`)).json();J.success&&Array.isArray(J.files)?(j.value=J.files,j.value.length>0?await $e(k.hash,j.value[0]):F.value="该提交没有变更文件"):F.value=`获取文件列表失败: ${J.error||"未知错误"}`}catch(v){F.value=`获取提交详情失败: ${v.message}`}finally{X.value=!1}}}async function $e(k,v){X.value=!0,R.value=v;try{const u=await(await fetch(`/api/commit-file-diff?hash=${k}&file=${encodeURIComponent(v)}`)).json();u.success?F.value=u.diff||"没有变更内容":F.value=`获取差异失败: ${u.error||"未知错误"}`}catch(J){F.value=`获取差异失败: ${J.message}`}finally{X.value=!1}}function De(k){S.value&&$e(S.value.hash,k)}async function ke(k){try{const v=qa(k);await navigator.clipboard.writeText(v),o.success("提交信息已复制到剪贴板")}catch{o.error("复制失败")}}function _e(){!O.value||ne.value||A.value||oe(E.value,ie.value+1)}function Re(){x.value=[],ee.value=[],T.value="",se.value=null,ie.value=1,oe(E.value,1)}function re(){ie.value=1,oe(E.value,1)}async function me(){try{const v=await(await fetch("/api/authors")).json();v.success&&Array.isArray(v.authors)?K.value=v.authors.sort():Ne()}catch{Ne()}}function Ne(){const k=new Set;y.value.forEach(v=>{v.author&&k.add(v.author)}),K.value=Array.from(k).sort()}Ye(()=>y.value,()=>{},{deep:!0});function He(k,v,J){J.preventDefault(),Te.value=J.clientY,h.value=J.clientX,g.value=k,ye.value=!0;const u=()=>{ye.value=!1,document.removeEventListener("click",u)};setTimeout(()=>{document.addEventListener("click",u)},0)}async function q(k){if(k)try{await Me.confirm(`确定要撤销提交 ${k.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const J=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();J.success?(o.success(J.message||"已成功撤销提交"),Ae(),p.fetchStatus(),p.getBranchStatus()):o.error(J.error||"撤销提交失败")}catch(v){v!=="cancel"&&o.error("撤销提交失败: "+(v.message||v))}}async function Oe(k){if(k)try{await Me.confirm(`确定要将提交 ${k.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const J=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();J.success?(o.success(J.message||"已成功Cherry-Pick提交"),Ae(),p.fetchStatus(),p.getBranchStatus()):o.error(J.error||"Cherry-Pick提交失败")}catch(v){v!=="cancel"&&o.error("Cherry-Pick提交失败: "+(v.message||v))}}async function gt(k){if(k)try{await navigator.clipboard.writeText(k.hash),o.success(`已复制提交哈希: ${k.hash.substring(0,7)}`)}catch(v){o.error(`复制提交哈希失败: ${v.message}`)}}async function ht(k){if(k)try{await Me.confirm(`确定要将当前分支重置(hard)到提交 ${k.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const J=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();J.success?(o.success(J.message||"已成功重置到指定提交"),Ae(),p.fetchStatus(),p.getBranchStatus()):o.error(J.error||"重置到指定提交失败")}catch(v){v!=="cancel"&&o.error("重置到指定提交失败: "+(v.message||v))}}function et(){if(P.value||!O.value||ne.value||A.value||E.value)return;if(!Se.value){ze();return}const{scrollTop:k,scrollHeight:v,clientHeight:J}=Se.value;v-k-J<=50&&_e()}Ye(()=>P.value,k=>{!k&&!E.value&&ut(()=>{ze(),setTimeout(et,200)})});const Pe=r(!1);function Tt(){Pe.value=!Pe.value,ut(()=>{P.value&&I.value&&te()})}return(k,v)=>{var z;const J=St,u=Ht,d=cs;return f(),$(be,null,[e("div",{class:ge(["card",{"fullscreen-mode":Pe.value}])},[e("div",ni,[v[13]||(v[13]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",ii,[P.value?U("",!0):(f(),Y(l(Ge),{key:0,type:fe.value?"primary":"default",size:"small",onClick:v[0]||(v[0]=C=>fe.value=!fe.value),class:ge(["action-button filter-button icon-only-button",{"active-filter":fe.value}])},{icon:a(()=>[t(J,null,{default:a(()=>[t(l(Va))]),_:1})]),_:1},8,["type","class"])),t(l(Ge),{type:"primary",size:"small",onClick:Ce,class:ge(["action-button view-mode-button icon-only-button",{"active-view":P.value}])},{icon:a(()=>[t(J,null,{default:a(()=>[(f(),Y($t(P.value?l(rs):l(xa))))]),_:1})]),_:1},8,["class"]),Xe(t(l(Ge),{type:"success",size:"small",onClick:Fe,loading:A.value,class:ge(["action-button commit-display-button",{"active-commits":E.value}])},{icon:a(()=>[t(J,null,{default:a(()=>[(f(),Y($t(E.value?l(La):l(za))))]),_:1})]),default:a(()=>[w(" "+B(E.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[ft,!1]]),t(l(Ge),{type:"info",size:"small",onClick:Tt,class:ge(["action-button fullscreen-button icon-only-button",{"active-fullscreen":Pe.value}])},{icon:a(()=>[t(J,null,{default:a(()=>[(f(),Y($t(Pe.value?l(is):l(Ba))))]),_:1})]),_:1},8,["class"]),t(l(Ge),{circle:"",size:"small",onClick:v[1]||(v[1]=C=>Ae()),class:ge([{"refresh-button-animated":he.value},"action-button refresh-button"])},{default:a(()=>[A.value?(f(),Y(J,{key:1},{default:a(()=>[t(l(Fa))]),_:1})):(f(),Y(J,{key:0},{default:a(()=>[t(l(us))]),_:1}))]),_:1},8,["class"])])]),fe.value&&!P.value?(f(),$("div",ri,[e("div",ci,[e("div",ui,[t(l(Nt),{modelValue:x.value,"onUpdate:modelValue":v[2]||(v[2]=C=>x.value=C),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[14]||(v[14]=[e("span",{class:"compact-label"},"作者",-1)])),default:a(()=>[(f(!0),$(be,null,Be(K.value,C=>(f(),Y(l(It),{key:C,label:C,value:C},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",di,[t(l(Nt),{modelValue:ee.value,"onUpdate:modelValue":v[3]||(v[3]=C=>ee.value=C),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[15]||(v[15]=[e("span",{class:"compact-label"},"分支",-1)])),default:a(()=>[(f(!0),$(be,null,Be(le.value,C=>(f(),Y(l(It),{key:C,label:C,value:C},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",fi,[t(l(fs),{modelValue:T.value,"onUpdate:modelValue":v[4]||(v[4]=C=>T.value=C),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[16]||(v[16]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",pi,[t(l(ja),{modelValue:se.value,"onUpdate:modelValue":v[5]||(v[5]=C=>se.value=C),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:a(()=>v[17]||(v[17]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",mi,[t(l(Ge),{type:"primary",size:"small",onClick:re,class:"filter-action-button"},{default:a(()=>v[18]||(v[18]=[w("应用")])),_:1}),t(l(Ge),{type:"info",size:"small",onClick:Re,class:"filter-action-button"},{default:a(()=>v[19]||(v[19]=[w("重置")])),_:1})])])])):U("",!0),e("div",{class:ge(["content-area",{"with-filter":fe.value&&!P.value}])},[G.value?(f(),$("div",vi,B(G.value),1)):(f(),$("div",gi,[P.value?(f(),$("div",hi,[l(m).length>0?(f(),$("div",yi," 显示 "+B(l(m).length)+" 条提交记录 "+B(E.value?"(全部)":"(分页加载，每页20条)"),1)):U("",!0),e("div",_i,[e("div",wi,[t(l(Ge),{type:"primary",circle:"",size:"small",onClick:L,disabled:Q.value<=zt},{default:a(()=>[t(J,null,{default:a(()=>[t(l(Da))]),_:1})]),_:1},8,["disabled"]),t(l(Ra),{modelValue:Q.value,"onUpdate:modelValue":v[6]||(v[6]=C=>Q.value=C),min:zt,max:Et,step:ns,onChange:c,class:"zoom-slider"},null,8,["modelValue"]),t(l(Ge),{type:"primary",circle:"",size:"small",onClick:Qe,disabled:Q.value>=Et},{default:a(()=>[t(J,null,{default:a(()=>[t(l(Ga))]),_:1})]),_:1},8,["disabled"]),t(l(Ge),{type:"primary",size:"small",onClick:N},{default:a(()=>v[20]||(v[20]=[w(" 自适应大小 ")])),_:1})]),e("div",ki," 缩放: "+B(Math.round(Q.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:I,class:"graph-container"},null,512)])):(f(),$("div",$i,[Xe((f(),Y(l(Ps),{ref_key:"tableRef",ref:pe,data:ae.value,stripe:"",border:"",class:"log-table","empty-text":A.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:He},{default:a(()=>[t(l(Bt),{label:"哈希",width:"80",resizable:""},{default:a(C=>[e("span",{class:"commit-hash",onClick:ve=>H(C.row)},B(C.row.hash.substring(0,6)),9,bi)]),_:1}),t(l(Bt),{label:"提交信息","min-width":"300"},{default:a(C=>[e("div",Ci,[e("div",Si,[C.row.branch?(f(),$("div",Ti,[(f(!0),$(be,null,Be(C.row.branch.split(","),(ve,Ee)=>(f(),Y(l(jt),{key:Ee,size:"small",type:_(ve),class:"branch-tag"},{default:a(()=>[w(B(je(ve)),1)]),_:2},1032,["type"]))),128))])):U("",!0),e("span",Vi,B(C.row.message),1),t(l(Ge),{type:"text",icon:l(pt),size:"small",onClick:qe(ve=>ke(C.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(l(Bt),{prop:"date",label:"日期",width:"150",resizable:""}),t(l(Bt),{label:"作者",width:"100",resizable:""},{default:a(C=>[t(u,{content:C.row.email,placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[e("span",xi,B(C.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[d,A.value]]),(E.value,U("",!0))]))]))],2),t(Ft,{modelValue:ce.value,"onUpdate:modelValue":v[7]||(v[7]=C=>ce.value=C),title:`提交详情: ${(z=S.value)!=null&&z.hash?S.value.hash.substring(0,7):"未知"}`,size:"extra-large",type:"flex","destroy-on-close":"","custom-class":"commit-detail-dialog"},{default:a(()=>[Xe((f(),$("div",Li,[S.value?(f(),$("div",zi,[e("div",Bi,[e("div",Fi,[v[24]||(v[24]=e("span",{class:"item-label"},"哈希:",-1)),e("span",ji,B(S.value.hash),1)]),e("div",Di,[v[25]||(v[25]=e("span",{class:"item-label"},"作者:",-1)),e("span",Ri,B(S.value.author)+" <"+B(S.value.email)+">",1)]),e("div",Gi,[v[26]||(v[26]=e("span",{class:"item-label"},"日期:",-1)),e("span",Oi,B(S.value.date),1)])]),e("div",Pi,[v[27]||(v[27]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:l(Wa)(S.value.message).replace(/\n/g,"<br>")},null,8,Ui)])])):U("",!0),t(ms,{files:W.value,loading:X.value,diffContent:F.value,selectedFile:R.value,emptyText:"没有找到变更文件",onFileSelect:De},null,8,["files","loading","diffContent","selectedFile"])])),[[d,X.value]])]),_:1},8,["modelValue","title"])],2),Xe(e("div",{class:ge(["context-menu",{"fullscreen-context-menu":Pe.value}]),style:dt({top:Te.value+"px",left:h.value+"px"})},[e("div",{class:"context-menu-item",onClick:v[8]||(v[8]=C=>H(g.value))},v[28]||(v[28]=[e("i",{class:"el-icon-view"},null,-1),w(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:v[9]||(v[9]=C=>gt(g.value))},v[29]||(v[29]=[e("i",{class:"el-icon-document-copy"},null,-1),w(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:v[10]||(v[10]=C=>ht(g.value))},v[30]||(v[30]=[e("i",{class:"el-icon-refresh-right"},null,-1),w(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:v[11]||(v[11]=C=>q(g.value))},v[31]||(v[31]=[e("i",{class:"el-icon-delete"},null,-1),w(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:v[12]||(v[12]=C=>Oe(g.value))},v[32]||(v[32]=[e("i",{class:"el-icon-edit"},null,-1),w(" Cherry-Pick 到当前分支 ")]))],6),[[ft,ye.value]])],64)}}}),Ei=vt(Ai,[["__scopeId","data-v-23fcbd9b"]]),Mi={class:"dialog-content"},Ii={class:"dialog-toolbar"},Ni={class:"history-scroll"},Hi={key:0,class:"loading-state"},Ji={key:2,class:"history-list"},Wi=["onClick"],qi={class:"command-info"},Yi={class:"command-text"},Xi={class:"command-meta"},Ki={class:"timestamp"},Zi={class:"duration"},Qi={class:"item-actions"},er={key:0,class:"item-details"},tr={key:0,class:"output-section"},sr={class:"output-header"},ar={class:"output-content"},lr={key:0,class:"truncation-notice"},or={class:"output-header"},nr={class:"output-content"},ir={key:0,class:"truncation-notice"},rr={key:2,class:"output-section error"},cr={class:"output-content"},ur=mt({__name:"CommandHistory",setup(Z){const i=bt(),p=r([]),m=r(!1),y=r(!1),G=r(!1),D=r(!1),A=r(new Set),E=r(!1),M=r(!1);function P(){M.value=!0,p.value.length===0&&I()}async function I(){try{if(m.value=!0,i.socket&&i.socket.connected)i.socket.emit("request_full_history");else{const T=await(await fetch("/api/command-history")).json();T.success?p.value=T.history:o.error(`加载命令历史失败: ${T.error}`)}}catch(x){o.error(`加载命令历史失败: ${x.message}`)}finally{m.value=!1}}async function ie(){if(p.value.length===0){o.warning("没有可复制的命令历史");return}try{G.value=!0;const x=p.value.map(T=>{let se=`# ${ue(T.timestamp)} (耗时: ${ce(T.executionTime)}) - ${T.success?"成功":"失败"}
`;if(se+=`${T.command}
`,T.stdout&&(se+=`
# 输出:
${T.stdout}
`),T.stderr){const K=R(T.command)?"输出信息":"错误输出";se+=`
# ${K}:
${T.stderr}
`}return T.error&&(se+=`
# 错误信息:
${T.error}
`),se}).join(`
---

`);await navigator.clipboard.writeText(x),o.success("命令历史已复制到剪贴板")}catch(x){o.error(`复制失败: ${x.message}`)}finally{G.value=!1}}async function O(){if(p.value.length===0){o.warning("没有可复制的命令");return}try{E.value=!0;const x=p.value.map(T=>T.command).join(`
`);await navigator.clipboard.writeText(x),o.success("命令列表已复制到剪贴板")}catch(x){o.error(`复制失败: ${x.message}`)}finally{E.value=!1}}async function ne(){try{if(await Me.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),y.value=!0,i.socket&&i.socket.connected)i.socket.emit("clear_command_history");else{const T=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();T.success?(p.value=[],o.success("命令历史已清空")):o.error(`清空命令历史失败: ${T.error}`)}}catch(x){x!=="cancel"&&x.toString()!=="Error: cancel"&&o.error(`清空命令历史失败: ${x.message}`)}finally{y.value=!1}}function ue(x){return new Date(x).toLocaleString()}function ce(x){return x<1e3?`${x}ms`:`${(x/1e3).toFixed(2)}s`}function S(x){A.value.has(x)?A.value.delete(x):A.value.add(x)}function j(x){return A.value.has(x)}async function F(x){try{await navigator.clipboard.writeText(x),o.success("命令已复制到剪贴板")}catch(T){o.error(`复制失败: ${T.message}`)}}function X(x){return x.includes("git push")||x.includes("git-push")}function R(x){return!!X(x)}async function Q(x){try{let T="";if(x.stdout&&(T+=`标准输出:
${x.stdout}

`),x.stderr){const se=R(x.command)?"输出信息":"错误输出";T+=`${se}:
${x.stderr}

`}x.error&&(T+=`错误信息:
${x.error}`),await navigator.clipboard.writeText(T.trim()),o.success("输出已复制到剪贴板")}catch(T){o.error(`复制失败: ${T.message}`)}}function he(){if(!i.socket){console.error("Socket实例不可用");return}i.socket.on("initial_command_history",x=>{p.value=x.history,D.value=!0}),i.socket.on("command_history_update",x=>{p.value.unshift(x.newCommand),p.value.length>100&&p.value.pop(),D.value=!0}),i.socket.on("full_command_history",x=>{p.value=x.history,m.value=!1,D.value=!0}),i.socket.on("command_history_cleared",x=>{x.success&&(p.value=[],o.success("命令历史已清空")),y.value=!1}),i.socket.on("connect",()=>{D.value=!0,o.success("已连接到实时命令历史")}),i.socket.on("disconnect",()=>{D.value=!1,o.warning("实时命令历史连接已断开")})}function fe(){i.socket&&(i.socket.off("initial_command_history"),i.socket.off("command_history_update"),i.socket.off("full_command_history"),i.socket.off("command_history_cleared"))}return Ct(()=>{he(),i.socket||(console.log("尝试初始化Socket连接"),i.initSocketConnection())}),xs(()=>{fe()}),(x,T)=>{const se=Ge,K=jt,ee=St,le=Mt,ye=ds,Te=Jt;return f(),$(be,null,[t(se,{type:"primary",icon:l(Pa),onClick:P,class:"command-history-button",title:"查看Git命令历史"},null,8,["icon"]),(f(),Y(Ua,{to:"body"},[t(Te,{modelValue:M.value,"onUpdate:modelValue":T[0]||(T[0]=h=>M.value=h),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"",class:"command-history-dialog","z-index":99999,"append-to-body":"",modal:""},{default:a(()=>[e("div",Mi,[e("div",Ii,[t(K,{type:D.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:a(()=>[w(B(D.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(se,{type:"success",icon:l(pt),circle:"",size:"small",onClick:O,loading:E.value,class:"copy-commands-button",title:"只复制命令列表（不含输出）",disabled:p.value.length===0},null,8,["icon","loading","disabled"]),t(se,{type:"primary",icon:l(pt),circle:"",size:"small",onClick:ie,loading:G.value,class:"copy-all-button",title:"复制完整命令历史（含输出）",disabled:p.value.length===0},null,8,["icon","loading","disabled"]),t(se,{type:"danger",icon:l(Ds),circle:"",size:"small",onClick:ne,loading:y.value,class:"clear-button",title:"清空命令历史",disabled:p.value.length===0},null,8,["icon","loading","disabled"])]),e("div",Ni,[m.value&&p.value.length===0?(f(),$("div",Hi,[t(ee,{class:"loading-icon is-loading"},{default:a(()=>T[1]||(T[1]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),T[2]||(T[2]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):p.value.length===0?(f(),Y(le,{key:1,description:"暂无命令历史"})):(f(),$("div",Ji,[(f(!0),$(be,null,Be(p.value,(h,g)=>(f(),$("div",{key:g,class:ge(["history-item",{"is-error":!h.success}])},[e("div",{class:"item-header",onClick:ae=>S(g)},[e("div",qi,[e("div",Yi,[t(K,{size:"small",type:h.success?"success":"danger",effect:"dark",class:"status-tag"},{default:a(()=>[w(B(h.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,B(h.command),1)]),e("div",Xi,[e("span",Ki,B(ue(h.timestamp)),1),e("span",Zi,"耗时: "+B(ce(h.executionTime)),1)])]),e("div",Qi,[t(se,{type:"primary",icon:l(pt),circle:"",size:"small",onClick:qe(ae=>F(h.command),["stop"]),title:"复制命令"},null,8,["icon","onClick"]),t(se,{type:j(g)?"primary":"default",icon:j(g)?l(js):l(kt),circle:"",size:"small",onClick:qe(ae=>S(g),["stop"]),title:"展开/收起"},null,8,["type","icon","onClick"])])],8,Wi),j(g)?(f(),$("div",er,[h.stdout?(f(),$("div",tr,[e("div",sr,[T[3]||(T[3]=e("h4",null,"标准输出",-1)),t(se,{type:"primary",icon:l(pt),circle:"",size:"small",onClick:ae=>Q(h),title:"复制输出"},null,8,["icon","onClick"])]),e("pre",ar,B(h.stdout),1),h.isStdoutTruncated?(f(),$("div",lr,[t(ye,{type:"info",closable:!1,"show-icon":""},{default:a(()=>T[4]||(T[4]=[w(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):U("",!0)])):U("",!0),h.stderr?(f(),$("div",{key:1,class:ge(["output-section",R(h.command)?"":"error"])},[e("div",or,[e("h4",null,B(R(h.command)?"输出信息":"错误输出"),1)]),e("pre",nr,B(h.stderr),1),h.isStderrTruncated?(f(),$("div",ir,[t(ye,{type:"info",closable:!1,"show-icon":""},{default:a(()=>[w(B(R(h.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):U("",!0)],2)):U("",!0),h.error?(f(),$("div",rr,[T[5]||(T[5]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",cr,B(h.error),1)])):U("",!0)])):U("",!0)],2))),128))]))])])]),_:1},8,["modelValue"])]))],64)}}}),dr=vt(ur,[["__scopeId","data-v-9824264c"]]),fr="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",pr={class:"main-header"},mr={class:"header-left"},vr=["src"],gr={class:"header-info"},hr={key:0,id:"user-info"},yr={class:"user-name"},_r={class:"user-email"},wr={key:1,id:"user-info"},kr={class:"directory-selector"},$r={class:"directory-display"},br={class:"directory-icon"},Cr=["title"],Sr={class:"directory-actions"},Tr={key:2,class:"command-history-section"},Vr={class:"main-container"},xr={key:0,class:"loading-container"},Lr={class:"loading-spinner"},zr={key:1,class:"grid-layout"},Br={class:"git-status-panel"},Fr={key:0,class:"commit-form-panel"},jr={key:0,class:"card"},Dr={class:"tips"},Rr={key:1,class:"commit-form-panel"},Gr={key:2,class:"log-list-panel"},Or={class:"dialog-footer"},Pr={class:"main-footer"},Ur={key:0,class:"branch-info"},Ar={class:"branch-wrapper"},Er={key:1,class:"footer-right"},Mr={class:"repo-url"},Ir={class:"dialog-footer"},Nr={class:"directory-input-group"},Hr={class:"recent-directories"},Jr={class:"dialog-footer"},Wr=mt({__name:"App",setup(Z){const i=r(""),p=r(null),m=r(null),y=bt(),G=ps(),D=r(!1),A=r("");function E(){G.config&&(i.value=`默认提交信息: ${G.config.defaultCommitMessage}`)}async function M(){try{const c=await(await fetch("/api/current_directory")).json();return A.value=c.directory||"未知目录",c}catch(L){return console.error("获取当前目录失败:",L),{directory:"未知目录",isGitRepo:!1}}}Ct(async()=>{console.log("---------- 页面初始化开始 ----------");try{const L=await M();G.isLoaded||await G.loadConfig(),E(),y.isGitRepo=L.isGitRepo===!0,y.lastCheckedTime=Date.now(),y.isGitRepo?await Promise.all([y.getCurrentBranch(!0),y.getAllBranches(),y.getUserInfo(),y.getRemoteUrl(),y.getBranchStatus(!0)]):o.warning("当前目录不是Git仓库，部分功能将不可用")}catch(L){console.error("初始化失败:",L)}finally{D.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{ye()},100)}});const P=r(!1),I=r(""),ie=r("");async function O(){await y.createBranch(I.value,ie.value)&&(P.value=!1,I.value="",m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog())}function ne(){ie.value=y.currentBranch,P.value=!0}async function ue(L){await y.changeBranch(L)&&(m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog())}const ce=r(!1),S=r(""),j=r("");function F(){S.value=y.userName,j.value=y.userEmail,ce.value=!0}async function X(){if(!S.value||!j.value){o.warning("用户名和邮箱不能为空");return}await y.restoreUserConfig(S.value,j.value)&&(ce.value=!1)}async function R(){await y.clearUserConfig()&&(S.value="",j.value="")}let Q=!1,he=!1,fe=!1,x=0,T=0,se="",K="",ee=null;function le(){const L=document.querySelector(".grid-layout");if(!L)return;const c=getComputedStyle(L).gridTemplateColumns.split(" "),N=getComputedStyle(L).gridTemplateRows.split(" ");if(c.length>=3&&N.length>=3){const H=parseFloat(c[0]),$e=parseFloat(c[2]),De=H+$e,ke=H/De,_e=parseFloat(N[0]),Re=parseFloat(N[2]),re=_e+Re,me=_e/re;localStorage.setItem("zen-gitsync-layout-left-ratio",ke.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",me.toString()),console.log(`布局比例已保存 - 左侧: ${(ke*100).toFixed(0)}%, 上方: ${(me*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",ke.toString()),console.log(`底部布局比例已保存 - 左侧: ${(ke*100).toFixed(0)}%`)}}function ye(){const L=document.querySelector(".grid-layout");if(!L)return;const c=localStorage.getItem("zen-gitsync-layout-left-ratio"),N=localStorage.getItem("zen-gitsync-layout-top-ratio");if(c){const H=parseFloat(c),$e=1-H;L.style.gridTemplateColumns=`${H}fr 8px ${$e}fr`,console.log(`已恢复左侧比例: ${(H*100).toFixed(0)}%`)}else L.style.gridTemplateColumns="1fr 8px 3fr";if(N){const H=parseFloat(N),$e=1-H;L.style.gridTemplateRows=`${H}fr 8px ${$e}fr`,console.log(`已恢复上方比例: ${(H*100).toFixed(0)}%`)}}function Te(L){var H;const c=L.currentTarget;if(!c||!c.id)return;ee=c.id,ee==="v-resizer"?Q=!0:ee==="v-resizer-bottom"&&(he=!0),x=L.clientX;const N=document.querySelector(".grid-layout");se=getComputedStyle(N).gridTemplateColumns,(H=document.getElementById(ee))==null||H.classList.add("active"),document.addEventListener("mousemove",h),document.addEventListener("mouseup",g),L.preventDefault()}function h(L){if(!Q&&!he)return;const c=document.querySelector(".grid-layout"),N=L.clientX-x,H=se.split(" ");if(H.length>=3){const $e=parseFloat(H[0]),De=parseFloat(H[2]),ke=$e+De,_e=($e+N/c.clientWidth*ke)/ke,Re=1-_e,re=.1,me=.5;_e<re?c.style.gridTemplateColumns=`${re}fr 8px ${1-re}fr`:_e>me?c.style.gridTemplateColumns=`${me}fr 8px ${1-me}fr`:c.style.gridTemplateColumns=`${_e}fr 8px ${Re}fr`}}function g(){var L,c;Q=!1,he=!1,(L=document.getElementById("v-resizer"))==null||L.classList.remove("active"),(c=document.getElementById("v-resizer-bottom"))==null||c.classList.remove("active"),document.removeEventListener("mousemove",h),document.removeEventListener("mouseup",g),le()}function ae(L){var N;fe=!0,T=L.clientY;const c=document.querySelector(".grid-layout");K=getComputedStyle(c).gridTemplateRows,(N=document.getElementById("h-resizer"))==null||N.classList.add("active"),document.addEventListener("mousemove",W),document.addEventListener("mouseup",oe),L.preventDefault()}function W(L){if(!fe)return;const c=document.querySelector(".grid-layout"),N=L.clientY-T,H=K.split(" ");if(H.length>=3){const $e=parseFloat(H[0]),De=parseFloat(H[2]),ke=$e+De,_e=($e+N/c.clientHeight*ke)/ke,Re=1-_e,re=.2,me=.8;_e<re?c.style.gridTemplateRows=`${re}fr 8px ${1-re}fr`:_e>me?c.style.gridTemplateRows=`${me}fr 8px ${1-me}fr`:c.style.gridTemplateRows=`${_e}fr 8px ${Re}fr`}}function oe(){var L;fe=!1,(L=document.getElementById("h-resizer"))==null||L.classList.remove("active"),document.removeEventListener("mousemove",W),document.removeEventListener("mouseup",oe),le()}const te=r(!1),Ce=r(""),Fe=r(!1),je=r([]);async function _(){if(!A.value){o.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(A.value),o.success("已复制目录路径")}catch(L){console.error("复制目录路径失败:",L),o.error(`复制失败: ${L.message}`)}}function pe(){Ce.value=A.value,te.value=!0,Se()}async function Se(){try{const c=await(await fetch("/api/recent_directories")).json();c.success&&Array.isArray(c.directories)&&(je.value=c.directories)}catch(L){console.error("获取最近目录失败:",L)}}async function Le(){if(!Ce.value){o.warning("目录路径不能为空");return}try{Fe.value=!0;const c=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:Ce.value})})).json();c.success?(o.success("已切换工作目录"),A.value=c.directory,te.value=!1,await ze(c.directory),await Se(),y.isGitRepo=c.isGitRepo,await G.loadConfig(!0),c.isGitRepo?(await Promise.all([y.getCurrentBranch(),y.getAllBranches(),y.getUserInfo(),y.getRemoteUrl()]),m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog()):(o.warning("当前目录不是Git仓库，部分功能将不可用"),y.$reset())):o.error(c.error||"切换目录失败")}catch(L){o.error(`切换目录失败: ${L.message}`)}finally{Fe.value=!1}}async function ze(L){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:L})})}catch(c){console.error("保存最近目录失败:",c)}}async function Ke(){try{if(!A.value){o.warning("当前目录路径为空");return}const c=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:A.value})})).json();c.success?o.success("已在文件管理器中打开目录"):c.error&&o.error(c.error)}catch(L){console.error("打开目录失败:",L),o.error(`打开目录失败: ${L.message}`)}}async function Ze(){try{const c=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:Ce.value||A.value})})).json();c.success?Ae(c):c.error&&o.error(c.error)}catch(L){console.error("浏览目录失败:",L),o.error(`浏览目录失败: ${L.message}`)}}function Ae(L){!L||!L.items||Me.alert(Ue("div",{class:"directory-browser"},[Ue("div",{class:"current-path"},[Ue("span",{class:"path-label"},"当前路径: "),Ue("span",{class:"path-value"},L.path)]),Ue("div",{class:"directory-list"},[L.parentPath?Ue("div",{class:"directory-item parent-dir",onClick:()=>{Qe(L.parentPath)}},[Ue("span",{class:"dir-icon"},Ue("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Ue("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ue("span",{class:"dir-name"},"返回上级目录")]):null,...L.items.map(c=>Ue("div",{class:"directory-item",onClick:()=>{Qe(c.path)}},[Ue("span",{class:"dir-icon"},Ue("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Ue("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ue("span",{class:"dir-name"},c.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:c=>{c==="confirm"&&(Ce.value=L.path)}})}async function Qe(L){try{Me.close(),setTimeout(async()=>{try{const N=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:L})})).json();N.success?Ae(N):N.error&&o.error(N.error)}catch(c){console.error("浏览目录失败:",c),o.error(`浏览目录失败: ${c.message}`)}},100)}catch(c){console.error("处理目录选择时出错:",c),o.error(`处理目录选择时出错: ${c.message}`)}}return(L,c)=>{const N=St,H=Ge,$e=Rs,De=fs,ke=Os,_e=It,Re=Nt,re=Gs,me=Jt,Ne=ds,He=jt;return f(),$(be,null,[e("header",pr,[e("div",mr,[e("img",{src:l(fr),alt:"Zen GitSync Logo",class:"logo"},null,8,vr),c[14]||(c[14]=e("h1",null,"Zen GitSync UI",-1))]),e("div",gr,[l(y).userName&&l(y).userEmail?(f(),$("div",hr,[e("span",yr,B(l(y).userName),1),e("span",_r,"<"+B(l(y).userEmail)+">",1),t(H,{type:"primary",size:"small",onClick:F,class:"user-settings-btn",circle:""},{default:a(()=>[t(N,null,{default:a(()=>[t(l(Ss))]),_:1})]),_:1})])):(f(),$("div",wr,[c[15]||(c[15]=e("span",{class:"user-label"},"用户: ",-1)),c[16]||(c[16]=e("span",{class:"user-warning"},"未配置",-1)),t(H,{type:"primary",size:"small",onClick:F,class:"user-settings-btn",circle:""},{default:a(()=>[t(N,null,{default:a(()=>[t(l(Ss))]),_:1})]),_:1})])),e("div",kr,[e("div",$r,[e("div",br,[t(N,null,{default:a(()=>[t(l(Ts))]),_:1})]),e("div",{class:"directory-path",title:A.value},B(A.value),9,Cr)]),e("div",Sr,[t(H,{type:"primary",size:"small",onClick:pe,class:"dir-button",circle:"",title:"切换目录"},{default:a(()=>[t(N,null,{default:a(()=>c[17]||(c[17]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),t(H,{type:"success",size:"small",onClick:Ke,class:"dir-button",circle:"",title:"在资源管理器中打开"},{default:a(()=>[t(N,null,{default:a(()=>c[18]||(c[18]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})]),_:1}),t(H,{type:"info",size:"small",onClick:_,class:"dir-button",circle:"",title:"复制路径"},{default:a(()=>[t(N,null,{default:a(()=>c[19]||(c[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])]),l(y).isGitRepo?(f(),$("div",Tr,[t(dr)])):U("",!0)])]),e("main",Vr,[D.value?(f(),$("div",zr,[e("div",Br,[t(io,{ref_key:"gitStatusRef",ref:m,"initial-directory":A.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:Te},null,32),l(y).isGitRepo?(f(),$("div",Fr,[!l(y).userName||!l(y).userEmail?(f(),$("div",jr,[c[25]||(c[25]=e("h2",null,"Git用户未配置",-1)),c[26]||(c[26]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Dr,[c[23]||(c[23]=e("h3",null,"您可以通过以下方式配置：",-1)),c[24]||(c[24]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[w(' git config --global user.name "您的用户名"'),e("br"),w(' git config --global user.email "您的邮箱" ')])],-1)),t(H,{type:"primary",onClick:F},{default:a(()=>c[22]||(c[22]=[w(" 立即配置 ")])),_:1})])])):(f(),Y(oi,{key:1}))])):(f(),$("div",Rr,c[27]||(c[27]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:ae},null,32),l(y).isGitRepo?(f(),$("div",Gr,[t(Ei,{ref_key:"logListRef",ref:p},null,512)])):U("",!0),t(me,{modelValue:P.value,"onUpdate:modelValue":c[3]||(c[3]=q=>P.value=q),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Or,[t(H,{onClick:c[2]||(c[2]=q=>P.value=!1)},{default:a(()=>c[28]||(c[28]=[w("取消")])),_:1}),t(H,{type:"primary",onClick:O,loading:l(y).isCreatingBranch},{default:a(()=>c[29]||(c[29]=[w(" 创建 ")])),_:1},8,["loading"])])]),default:a(()=>[t(re,{model:{newBranchName:I.value,selectedBaseBranch:ie.value}},{default:a(()=>[t(ke,{label:"新分支名称"},{default:a(()=>[t(De,{modelValue:I.value,"onUpdate:modelValue":c[0]||(c[0]=q=>I.value=q),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),t(ke,{label:"基于分支"},{default:a(()=>[t(Re,{modelValue:ie.value,"onUpdate:modelValue":c[1]||(c[1]=q=>ie.value=q),placeholder:"选择基础分支",style:{width:"100%"}},{default:a(()=>[(f(!0),$(be,null,Be(l(y).allBranches,q=>(f(),Y(_e,{key:q,label:q,value:q},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(f(),$("div",xr,[t($e,{class:"loading-card"},{default:a(()=>[e("div",Lr,[t(N,{class:"is-loading"},{default:a(()=>c[20]||(c[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),c[21]||(c[21]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Pr,[l(y).currentBranch?(f(),$("div",Ur,[e("div",Ar,[c[31]||(c[31]=e("span",{class:"branch-label"},"当前分支:",-1)),t(Re,{modelValue:l(y).currentBranch,"onUpdate:modelValue":c[4]||(c[4]=q=>l(y).currentBranch=q),size:"small",onChange:ue,loading:l(y).isChangingBranch,class:"branch-select"},{default:a(()=>[(f(!0),$(be,null,Be(l(y).allBranches,q=>(f(),Y(_e,{key:q,label:q,value:q},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),t(H,{type:"primary",size:"small",onClick:ne,class:"create-branch-btn"},{default:a(()=>[t(N,null,{default:a(()=>[t(l(Aa))]),_:1}),c[30]||(c[30]=w(" 新建分支 "))]),_:1})])])):U("",!0),l(y).remoteUrl?(f(),$("div",Er,[c[33]||(c[33]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Mr,B(l(y).remoteUrl),1),t(H,{type:"primary",circle:"",size:"small",onClick:c[5]||(c[5]=q=>l(y).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:a(()=>[t(N,null,{default:a(()=>c[32]||(c[32]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):U("",!0)]),t(me,{modelValue:ce.value,"onUpdate:modelValue":c[9]||(c[9]=q=>ce.value=q),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Ir,[t(H,{type:"danger",onClick:R},{default:a(()=>c[35]||(c[35]=[w(" 清除配置 ")])),_:1}),t(H,{onClick:c[8]||(c[8]=q=>ce.value=!1)},{default:a(()=>c[36]||(c[36]=[w("取消")])),_:1}),t(H,{type:"primary",onClick:X},{default:a(()=>c[37]||(c[37]=[w(" 保存 ")])),_:1})])]),default:a(()=>[t(re,null,{default:a(()=>[t(ke,{label:"用户名"},{default:a(()=>[t(De,{modelValue:S.value,"onUpdate:modelValue":c[6]||(c[6]=q=>S.value=q),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),t(ke,{label:"邮箱"},{default:a(()=>[t(De,{modelValue:j.value,"onUpdate:modelValue":c[7]||(c[7]=q=>j.value=q),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),t(ke,null,{default:a(()=>[t(Ne,{type:"info",closable:!1,"show-icon":""},{default:a(()=>c[34]||(c[34]=[w(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),t(me,{modelValue:te.value,"onUpdate:modelValue":c[13]||(c[13]=q=>te.value=q),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:a(()=>[e("span",Jr,[t(H,{onClick:c[11]||(c[11]=q=>te.value=!1)},{default:a(()=>c[39]||(c[39]=[w("取消")])),_:1}),t(H,{type:"primary",onClick:c[12]||(c[12]=q=>Le()),loading:Fe.value},{default:a(()=>c[40]||(c[40]=[w(" 切换 ")])),_:1},8,["loading"])])]),default:a(()=>[t(re,null,{default:a(()=>[t(ke,{label:"目录路径"},{default:a(()=>[e("div",Nr,[t(De,{modelValue:Ce.value,"onUpdate:modelValue":c[10]||(c[10]=q=>Ce.value=q),placeholder:"请输入目录路径"},null,8,["modelValue"]),t(H,{type:"primary",onClick:Ze},{default:a(()=>[t(N,null,{default:a(()=>[t(l(Ts))]),_:1}),c[38]||(c[38]=w(" 浏览 "))]),_:1})])]),_:1}),je.value.length>0?(f(),Y(ke,{key:0,label:"常用目录"},{default:a(()=>[e("div",Hr,[(f(!0),$(be,null,Be(je.value,(q,Oe)=>(f(),Y(He,{key:Oe,class:"recent-dir-tag",onClick:gt=>Ce.value=q,effect:"plain"},{default:a(()=>[w(B(q),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):U("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),qr=vt(Wr,[["__scopeId","data-v-e0bdaa89"]]),Us=Ea(qr);Us.use(Ma());Us.mount("#app");

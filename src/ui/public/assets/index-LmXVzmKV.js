import{d as cs,r as u,o as Vt,a as Vs,E as o,l as Ls,b as jt,c as De,w as nt,e as $,f as m,F as Ae,g as t,h as s,i as ct,j as es,u as l,k as a,m as ds,n as Zt,p as fs,q as He,s as ps,t as vs,v as Bs,x as ts,y as Y,z as le,A as Ut,B as h,C as Pt,D as As,G as D,H as ms,I as Ue,J as gs,K as Ot,L as Ms,M as is,N as Ct,O as Fe,P as ss,Q as st,T as rs,R as hs,S as as,U as Tt,V as St,W as Xt,X as Jt,Y as zt,Z as Gt,_ as Qt,$ as Et,a0 as Rs,a1 as Es,a2 as ys,a3 as ws,a4 as Ds,a5 as _s,a6 as bs,a7 as zs,a8 as Gs,a9 as js,aa as $s,ab as ht,ac as tt,ad as Us,ae as Ps,af as Wt,ag as Os,ah as Fs,ai as Ns,aj as Is,ak as Hs,al as Xs,am as Js,an as Ws,ao as qs,ap as Ys,aq as us,ar as Ks,as as je,at as Zs,au as Qs}from"./vendor-LDRpPx4a.js";(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const g of document.querySelectorAll('link[rel="modulepreload"]'))v(g);new MutationObserver(g=>{for(const N of g)if(N.type==="childList")for(const V of N.addedNodes)V.tagName==="LINK"&&V.rel==="modulepreload"&&v(V)}).observe(document,{childList:!0,subtree:!0});function x(g){const N={};return g.integrity&&(N.integrity=g.integrity),g.referrerPolicy&&(N.referrerPolicy=g.referrerPolicy),g.crossOrigin==="use-credentials"?N.credentials="include":g.crossOrigin==="anonymous"?N.credentials="omit":N.credentials="same-origin",N}function v(g){if(g.ep)return;g.ep=!0;const N=x(g);fetch(g.href,N)}})();const qt={},Yt=300;function ea(){try{const pe=qt.resolve(process.cwd(),"../../../.port");if(qt.existsSync(pe)){const c=qt.readFileSync(pe,"utf8").trim();return console.log(`检测到后端服务器端口: ${c}`),parseInt(c,10)}}catch(pe){console.error("读取后端端口失败:",pe)}return console.log("使用默认后端端口: 3000"),3e3}const ta=ea(),xt=cs("git",()=>{const pe=u(""),c=u([]),x=u(""),v=u(""),g=u(!1),N=u(!1),V=u(!1),O=u(0),X=u(""),ne=u(!1),U=u(!1),Q=u(!1),A=u(!1),S=u(!1),q=u(0),J=u(0),K=u(!1),I=u(""),_e=u(0),re=u(0);let G=null;const ae=u(!0),P=u([]),me=u({staged:[],unstaged:[],untracked:[]}),te=u(""),T=u([]),y=u(!1),W=u(!1),z=u(!1),M=u(!1),ie=u(!1),Ve=u([]),Ne=u(!1),Re=u(!1),L=u(!1),ce=u(!1);function fe(){pe.value="",c.value=[],x.value="",v.value="",g.value=!1,N.value=!1,V.value=!1,O.value=0,q.value=0,J.value=0,K.value=!1,I.value="",_e.value=0,re.value=0,U.value=!1,Q.value=!1,A.value=!1,S.value=!1,X.value="",ne.value=!1,P.value=[],me.value={staged:[],unstaged:[],untracked:[]},te.value="",T.value=[],y.value=!1,W.value=!1,z.value=!1,M.value=!1,ie.value=!1}async function ge(){if(V.value)try{console.log("获取分支状态...");const f=await(await fetch("/api/branch-status")).json();f&&(q.value=f.ahead||0,J.value=f.behind||0,K.value=f.hasUpstream||!1,I.value=f.upstreamBranch||"",_e.value=Date.now(),console.log(`分支状态更新：领先 ${q.value} 个提交，落后 ${J.value} 个提交，上游分支：${K.value?I.value:"无"}`))}catch(p){console.error("获取分支状态失败:",p),q.value=0,J.value=0,K.value=!1,I.value=""}}async function qe(){const p=Date.now();if(p-O.value<1e3)return console.log("使用缓存的Git仓库状态:",V.value?"是":"不是"),V.value;try{const R=await(await fetch("/api/current_directory")).json();return V.value=R.isGitRepo===!0,O.value=p,console.log(`当前目录${V.value?"是":"不是"}Git仓库`),V.value}catch(f){return console.error("检查Git仓库状态失败:",f),V.value=!1,O.value=p,!1}}async function Ye(){try{const f=await(await fetch("/api/branch")).json();f.branch&&(pe.value=f.branch)}catch(p){console.error("获取分支信息失败:",p)}}async function Ie(){if(V.value)try{console.log("获取所有分支...");const f=await(await fetch("/api/branches")).json();f.branches&&Array.isArray(f.branches)&&(c.value=f.branches,re.value=Date.now(),console.log(`获取到${f.branches.length}个分支`))}catch(p){console.error("获取所有分支信息失败:",p)}}async function Xe(p){console.log("切换到分支:",p);try{g.value=!0;const R=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:p})})).json();return R.success?(o({message:`已切换到分支: ${p}`,type:"success"}),await Ye(),await ge(),!0):(o({message:`切换分支失败: ${R.error}`,type:"error"}),!1)}catch(f){return o({message:`切换分支失败: ${f.message}`,type:"error"}),!1}finally{g.value=!1}}async function dt(){try{const f=await(await fetch("/api/user-info")).json();f.name&&f.email&&(x.value=f.name,v.value=f.email)}catch(p){console.error("获取用户信息失败:",p)}}async function Pe(p,f){if(!p.trim())return o({message:"分支名称不能为空",type:"warning"}),!1;try{N.value=!0;const ee=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:p,baseBranch:f||pe.value})})).json();return ee.success?(o({message:`已创建并切换到分支: ${p}`,type:"success"}),await Ye(),await ge(),await Ie(),!0):(o({message:`创建分支失败: ${ee.error}`,type:"error"}),!1)}catch(R){return o({message:`创建分支失败: ${R.message}`,type:"error"}),!1}finally{N.value=!1}}async function Oe(){try{const f=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return f.success?(x.value="",v.value="",o({message:"已清除Git用户配置",type:"success"}),!0):(o({message:`清除配置失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`清除配置失败: ${p.message}`,type:"error"}),!1}}async function at(p,f){try{const ee=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:p,email:f})})).json();return ee.success?(x.value=p,v.value=f,o({message:"已恢复Git用户配置",type:"success"}),!0):(o({message:`恢复配置失败: ${ee.error}`,type:"error"}),!1)}catch(R){return o({message:`恢复配置失败: ${R.message}`,type:"error"}),!1}}async function ze(){if(!V.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{Q.value=!0;const f=await(await fetch("/api/pull",{method:"POST"})).json();return f.success?(o({message:"拉取成功",type:"success"}),await ge(),!0):(f.needsMerge?o({message:`需要合并更改: ${f.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):o({message:`拉取失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`拉取失败: ${p.message}`,type:"error"}),!1}finally{Q.value=!1}}async function oe(){if(!V.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{A.value=!0;const f=await(await fetch("/api/fetch-all",{method:"POST"})).json();return f.success?(o({message:"获取所有远程分支信息成功",type:"success"}),await ge(),!0):(o({message:`获取远程分支信息失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`获取远程分支信息失败: ${p.message}`,type:"error"}),!1}finally{A.value=!1}}function Je(){G&&G.disconnect();try{const p=`http://localhost:${ta}`;if(console.log("尝试连接Socket.IO服务器:",p),G=Ls(p,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!G){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO初始化成功，socket ID:",G.id||"未连接"),G.on("connect",()=>{console.log("成功连接到Socket.IO服务器"),ae.value&&G&&G.emit("start_monitoring")}),G.on("disconnect",f=>{console.log("与Socket.IO服务器断开连接:",f)}),G.on("git_status_update",f=>{ae.value&&(console.log("收到Git状态更新通知:",new Date().toLocaleTimeString()),f.status&&(te.value=f.status),f.porcelain!==void 0&&i(f.porcelain))}),G.on("monitoring_status",f=>{console.log("文件监控状态:",f.active?"已启动":"已停止")}),G.on("connect_error",f=>{console.error("Socket连接错误:",f.message)}),G.on("connect_timeout",()=>{console.error("Socket连接超时")}),G.on("reconnect",f=>{console.log(`Socket重连成功，尝试次数: ${f}`),ae.value&&(console.log("重连后重新发送start_monitoring请求"),G==null||G.emit("start_monitoring"))}),G.on("reconnect_attempt",f=>{console.log(`Socket尝试重连，第 ${f} 次尝试`)}),G.on("reconnect_error",f=>{console.error("Socket重连错误:",f.message)}),G.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),G&&!G.connected&&(console.log("Socket未连接，尝试手动连接..."),G.connect())}catch(p){console.error("Socket.IO连接初始化失败:",p)}}function _(){if(console.log("toggleAutoUpdate调用，当前值:",ae.value),!G){console.error("无法切换自动更新状态: socket连接不存在"),o.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),Je(),localStorage.setItem("zen-gitsync-auto-update",ae.value.toString());return}try{ae.value?(console.log("发送start_monitoring命令..."),G.emit("start_monitoring"),o.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),G.emit("stop_monitoring"),o.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",ae.value.toString()),console.log("已保存自动更新设置到本地存储:",ae.value)}catch(p){console.error("切换自动更新状态时出错:",p),o.error(`切换自动更新失败: ${p.message}`)}}function i(p){if(p===void 0||p===""){T.value=[];return}const f=p.split(`
`),R=[];for(const ee of f){const lt=ee.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(lt){let Ee="";const he=lt[1],Ge=he.charAt(0),d=he.charAt(1);Ge==="A"||Ge==="M"||Ge==="D"||Ge==="R"?Ee="added":Ge===" "&&d==="M"?Ee="modified":Ge===" "&&d==="D"?Ee="deleted":he==="??"?Ee="untracked":Ee="other",R.push({path:lt[2],type:Ee})}}T.value=R}async function F(p=!0){if(!V.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{y.value=!0,console.log("开始加载提交历史...");const f=new Date().getTime(),ee=await(await fetch(`/api/log?page=1&_t=${f}`)).json();ee&&ee.data&&Array.isArray(ee.data)?(P.value=[...ee.data],console.log(`提交历史加载完成，共 ${P.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",ee),P.value=[])}catch(f){console.error("获取提交历史失败:",f),p&&o({message:`获取提交历史失败: ${f.message}`,type:"error"})}finally{y.value=!1}}async function E(){if(!V.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{W.value=!0;const f=await(await fetch("/api/status")).json();f.status&&(te.value=f.status,me.value={staged:f.status.staged||[],unstaged:f.status.unstaged||[],untracked:f.status.untracked||[]}),await Se()}catch(p){console.error("获取Git状态失败:",p),o({message:`获取Git状态失败: ${p.message}`,type:"error"})}finally{W.value=!1}}async function Se(){if(console.log("开始获取Git状态(porcelain格式)..."),!V.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const f=await(await fetch("/api/status_porcelain")).json();f.status!==void 0?i(f.status):T.value=[]}catch(p){console.error("获取Git状态(porcelain)失败:",p),o({message:`获取Git状态(porcelain)失败: ${p.message}`,type:"error"}),T.value=[]}}async function be(){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{z.value=!0;const f=await(await fetch("/api/add",{method:"POST"})).json();return f.success?(o({message:"文件已添加到暂存区",type:"success"}),E(),!0):(o({message:`添加文件失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`添加文件失败: ${p.message}`,type:"error"}),!1}finally{z.value=!1}}async function $e(p){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{z.value=!0;const R=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p})})).json();return R.success?(o({message:"文件已暂存",type:"success"}),E(),!0):(o({message:`暂存文件失败: ${R.error}`,type:"error"}),!1)}catch(f){return o({message:`暂存文件失败: ${f.message}`,type:"error"}),!1}finally{z.value=!1}}async function Te(p){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{ie.value=!0;const R=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p})})).json();return R.success?(o({message:"已取消暂存文件",type:"success"}),E(),!0):(o({message:`取消暂存失败: ${R.error}`,type:"error"}),!1)}catch(f){return o({message:`取消暂存失败: ${f.message}`,type:"error"}),!1}finally{ie.value=!1}}function Le(p){return new Promise(f=>setTimeout(f,p))}async function Ce(p,f=!1){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{M.value=!0;const ee=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:p,hasNewlines:p.includes(`
`),noVerify:f})})).json();return ee.success?(o({message:"提交成功",type:"success"}),E(),F(),ge(),!0):(o({message:`提交失败: ${ee.error}`,type:"error"}),!1)}catch(R){return o({message:`提交失败: ${R.message}`,type:"error"}),!1}finally{M.value=!1}}async function ke(){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{U.value=!0;const f=await(await fetch("/api/push",{method:"POST"})).json();return f.success?(o({message:"推送成功",type:"success"}),E(),F(),ge(),!0):(o({message:`推送失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`推送失败: ${p.message}`,type:"error"}),!1}finally{U.value=!1}}async function it(p,f={}){if(!V.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!p)return o({message:"请选择要合并的分支",type:"warning"}),!1;if(p===pe.value)return o({message:"不能合并当前分支到自身",type:"warning"}),!1;try{S.value=!0;const R=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:p,...f})}),ee=await R.json();return R.status===409?(o({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):ee.success?(o({message:`成功合并分支 ${p} 到 ${pe.value}`,type:"success"}),await E(),await ge(),!0):(o({message:`合并分支失败: ${ee.error}`,type:"error"}),!1)}catch(R){return o({message:`合并分支失败: ${R.message}`,type:"error"}),!1}finally{S.value=!1}}async function ft(p,f=!1){return await be()?(await Le(Yt),await Ce(p,f)):!1}async function H(p,f=!1){try{return!await be()||(await Le(Yt),!await Ce(p,f))?!1:(await Le(Yt),await ke())}catch(R){try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&o({message:"已清理锁定文件，请重试操作",type:"warning"})}catch(ee){console.error("清理锁定文件失败:",ee)}return o({message:`操作失败: ${R.message}`,type:"error"}),E(),F(),ge(),!1}}async function rt(){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{ie.value=!0;const f=await(await fetch("/api/reset-head",{method:"POST"})).json();return f.success?(o({message:"已重置暂存区",type:"success"}),E(),!0):(o({message:`重置暂存区失败: ${f.error}`,type:"error"}),!1)}catch(p){return o({message:`重置暂存区失败: ${p.message}`,type:"error"}),!1}finally{ie.value=!1}}async function yt(p){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{ie.value=!0;const R=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:p})})).json();return R.success?(o({message:`已重置分支 ${p} 到远程状态`,type:"success"}),E(),F(),!0):(o({message:`重置分支失败: ${R.error}`,type:"error"}),!1)}catch(f){return o({message:`重置分支失败: ${f.message}`,type:"error"}),!1}finally{ie.value=!1}}async function pt(){if(V.value)try{ne.value=!0,console.log("获取远程仓库地址...");const f=await(await fetch("/api/remote-url")).json();f.success?(X.value=f.url||"",console.log(`获取到远程仓库地址: ${X.value}`)):(console.warn("获取远程仓库地址失败:",f.error),X.value="")}catch(p){console.error("获取远程仓库地址失败:",p),X.value=""}finally{ne.value=!1}}async function wt(){if(!X.value)return o({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(X.value),o({message:"已复制远程仓库地址",type:"success"}),!0}catch(p){return console.error("复制远程仓库地址失败:",p),o({message:`复制失败: ${p.message}`,type:"error"}),!1}}Vt(()=>{const p=localStorage.getItem("zen-gitsync-auto-update");p!==null&&(ae.value=p==="true"),Je()}),Vs(()=>{G&&(G.disconnect(),G=null)});async function Ke(){if(!V.value)return o.warning("当前目录不是Git仓库"),[];try{Ne.value=!0;const f=await(await fetch("/api/stash-list")).json();return f.success?(Ve.value=f.stashes,f.stashes):(o.error(`获取stash列表失败: ${f.error}`),[])}catch(p){return console.error("获取stash列表失败:",p),o.error(`获取stash列表失败: ${p.message}`),[]}finally{Ne.value=!1}}async function vt(p,f=!1){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{ce.value=!0;const ee=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:p,includeUntracked:f})})).json();return ee.success?(o.success(ee.message),await Ke(),await E(),!0):(o.warning(ee.message),!1)}catch(R){return console.error("保存stash失败:",R),o.error(`保存stash失败: ${R.message}`),!1}finally{ce.value=!1}}async function _t(p,f=!1){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{Re.value=!0;const R=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:p,pop:f})}),ee=await R.json();return R.status===409?(o.warning("应用stash时发生冲突，请手动解决"),!1):ee.success?(o.success(ee.message),await Ke(),await E(),!0):(o.error(`应用stash失败: ${ee.error}`),!1)}catch(R){return console.error("应用stash失败:",R),o.error(`应用stash失败: ${R.message}`),!1}finally{Re.value=!1}}async function mt(p){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{L.value=!0;const R=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:p})})).json();return R.success?(o.success(R.message),await Ke(),!0):(o.error(`删除stash失败: ${R.error}`),!1)}catch(f){return console.error("删除stash失败:",f),o.error(`删除stash失败: ${f.message}`),!1}finally{L.value=!1}}async function gt(){if(!V.value)return o.warning("当前目录不是Git仓库"),!1;try{L.value=!0;const f=await(await fetch("/api/stash-clear",{method:"POST"})).json();return f.success?(o.success(f.message),Ve.value=[],!0):(o.error(`清空stash失败: ${f.error}`),!1)}catch(p){return console.error("清空stash失败:",p),o.error(`清空stash失败: ${p.message}`),!1}finally{L.value=!1}}return{currentBranch:pe,allBranches:c,userName:x,userEmail:v,isChangingBranch:g,isCreatingBranch:N,isGitRepo:V,lastCheckedTime:O,branchAhead:q,branchBehind:J,hasUpstream:K,upstreamBranch:I,lastBranchStatusTime:_e,lastBranchesTime:re,remoteUrl:X,isLoadingRemoteUrl:ne,stashes:Ve,isLoadingStashes:Ne,isApplyingStash:Re,isDroppingStash:L,isSavingStash:ce,log:P,status:me,statusText:te,fileList:T,isLoadingLog:y,isLoadingStatus:W,isAddingFiles:z,isCommiting:M,isResetting:ie,autoUpdateEnabled:ae,isPushing:U,isGitPulling:Q,isGitFetching:A,isGitMerging:S,$reset:fe,checkGitRepo:qe,getCurrentBranch:Ye,getAllBranches:Ie,changeBranch:Xe,getUserInfo:dt,createBranch:Pe,clearUserConfig:Oe,restoreUserConfig:at,getBranchStatus:ge,gitPull:ze,gitFetchAll:oe,initSocketConnection:Je,toggleAutoUpdate:_,parseStatusPorcelain:i,fetchLog:F,fetchStatus:E,fetchStatusPorcelain:Se,addToStage:be,addFileToStage:$e,unstageFile:Te,commitChanges:Ce,pushToRemote:ke,addAndCommit:ft,addCommitAndPush:H,resetHead:rt,resetToRemote:yt,getRemoteUrl:pt,copyRemoteUrl:wt,mergeBranch:it,getStashList:Ke,saveStash:vt,applyStash:_t,dropStash:mt,clearAllStashes:gt}}),sa={class:"card"},aa={class:"status-header"},la={class:"header-actions"},oa=["element-loading-text"],na={key:0,class:"status-box"},ia={key:1,class:"status-box-wrap"},ra={key:0,class:"branch-status-info"},ua={class:"branch-sync-status"},ca={class:"sync-status-content"},da={class:"status-badges"},fa={class:"badge-content"},pa={class:"badge-content"},va={key:1,class:"file-list-container"},ma={key:0,class:"file-group"},ga={class:"file-list"},ha=["onClick"],ya={class:"file-info"},wa={class:"file-path-container"},_a={class:"file-name"},ba={class:"file-directory"},$a={class:"file-actions"},Ca={key:1,class:"file-group"},ka={class:"file-list"},Sa=["onClick"],Ta={class:"file-info"},xa={class:"file-path-container"},Va={class:"file-name"},La={class:"file-directory"},Ba={class:"file-actions"},Aa={key:2,class:"file-group"},Ma={class:"file-list"},Ra=["onClick"],Ea={class:"file-info"},Da={class:"file-path-container"},za={class:"file-name"},Ga={class:"file-directory"},ja={class:"file-actions"},Ua={key:2,class:"empty-status"},Pa={class:"empty-icon"},Oa={class:"diff-content"},Fa=["innerHTML"],Na={key:1,class:"no-diff"},Ia={class:"file-navigation"},Ha={class:"file-counter"},Xa=jt({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(pe,{expose:c}){const x=pe,v=xt(),g=De(()=>v.isLoadingStatus),N=u(""),V=u(""),O=u(!1),X=u(!1),ne=u(-1),U=u(x.initialDirectory||"");async function Q(){try{if(!U.value){const y=await(await fetch("/api/current_directory")).json();U.value=y.directory||"未知目录"}if(!v.isGitRepo)return;await v.fetchStatus(),await v.getBranchStatus(),o({message:"Git 状态已刷新",type:"success"})}catch(T){o({message:"刷新失败: "+T.message,type:"error"})}}function A(T){if(!T)return"";const y=T.split(`
`);function W(z){return z.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return y.map(z=>{const M=W(z);return z.startsWith("diff --git")?`<div class="diff-header">${M}</div>`:z.startsWith("---")?`<div class="diff-old-file">${M}</div>`:z.startsWith("+++")?`<div class="diff-new-file">${M}</div>`:z.startsWith("@@")?`<div class="diff-hunk-header">${M}</div>`:z.startsWith("+")?`<div class="diff-added">${M}</div>`:z.startsWith("-")?`<div class="diff-removed">${M}</div>`:`<div class="diff-context">${M}</div>`}).join("")}async function S(T){try{X.value=!0,N.value=T,ne.value=v.fileList.findIndex(W=>W.path===T);const y=v.fileList[ne.value];if(y&&y.type==="untracked"){try{const z=await(await fetch(`/api/file-content?file=${encodeURIComponent(T)}`)).json();z.success&&z.content?V.value=`diff --git a/${T} b/${T}
新文件: ${T}
--- /dev/null
+++ b/${T}
@@ -0,0 +1,${z.content.split(`
`).length} @@
`+z.content.split(`
`).map(M=>`+${M}`).join(`
`):V.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(W){console.error("获取未跟踪文件内容失败:",W),V.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}O.value=!0}else if(y&&y.type==="added"){const z=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(T)}`)).json();V.value=z.diff||"没有变更",O.value=!0}else{const z=await(await fetch(`/api/diff?file=${encodeURIComponent(T)}`)).json();V.value=z.diff||"没有变更",O.value=!0}}catch(y){o({message:"获取文件差异失败: "+y.message,type:"error"}),V.value="获取差异失败: "+y.message}finally{X.value=!1}}async function q(){if(v.fileList.length===0||ne.value<=0)return;const T=ne.value-1,y=v.fileList[T];await S(y.path)}async function J(){if(v.fileList.length===0||ne.value>=v.fileList.length-1)return;const T=ne.value+1,y=v.fileList[T];await S(y.path)}function K(T){S(T.path)}async function I(T){await v.addFileToStage(T)}async function _e(T){await v.unstageFile(T)}async function re(){await Q()}async function G(){try{await v.gitPull(),await Q()}catch(T){console.error("拉取操作发生错误:",T)}}async function ae(){try{await v.gitFetchAll(),await Q()}catch(T){console.error("获取远程分支信息操作发生错误:",T)}}async function P(T){try{await st.confirm(`确定要撤回文件 "${T}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const W=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:T})})).json();W.success?(o.success("已撤回文件修改"),await Q()):o.error(W.error?`撤回失败: ${W.error}`:"撤回文件修改失败，请重试")}catch(y){if(y==="cancel"||y.message==="cancel")return;const W=y.message||"未知错误";W!=="undefined"?o.error(`撤回文件修改失败: ${W}`):o.error("撤回文件修改失败，请重试")}}function me(T){const y=T.split("/");return y[y.length-1]}function te(T){const y=T.split("/");return y.length<=1?"":y.slice(0,-1).join("/")}return Vt(()=>{Q()}),nt(()=>v.autoUpdateEnabled,(T,y)=>{console.log(`自动更新状态变更: ${y} -> ${T}`),v.toggleAutoUpdate()},{immediate:!1}),c({refreshStatus:re}),(T,y)=>{const W=ds,z=es,M=He,ie=Pt,Ve=Ut,Ne=Ot,Re=ts;return m(),$(Ae,null,[t("div",sa,[t("div",aa,[y[2]||(y[2]=t("h2",null,"Git 状态",-1)),t("div",la,[s(z,{content:l(v).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3},{default:a(()=>[s(W,{modelValue:l(v).autoUpdateEnabled,"onUpdate:modelValue":y[0]||(y[0]=L=>l(v).autoUpdateEnabled=L),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":l(fs),"inactive-icon":l(Zt),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),s(z,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"primary",icon:l(ps),circle:"",size:"small",onClick:G,loading:l(v).isGitPulling,disabled:!l(v).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),s(z,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"info",icon:l(vs),circle:"",size:"small",onClick:ae,loading:l(v).isGitFetching},null,8,["icon","loading"])]),_:1}),s(z,{content:"刷新状态",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"primary",icon:l(Bs),circle:"",size:"small",onClick:re,loading:g.value},null,8,["icon","loading"])]),_:1})])]),ct((m(),$("div",{class:"card-content","element-loading-text":l(v).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[l(v).isGitRepo?(m(),$("div",ia,[l(v).hasUpstream&&(l(v).branchAhead>0||l(v).branchBehind>0)?(m(),$("div",ra,[t("div",ua,[t("div",ca,[s(z,{content:"本地分支与远程分支的状态对比",placement:"top"},{default:a(()=>[t("div",da,[l(v).branchAhead>0?(m(),le(Ve,{key:0,size:"small",type:"warning",class:"status-badge"},{default:a(()=>[t("span",fa,[s(ie,null,{default:a(()=>[s(l(As))]),_:1}),h(" 你的分支领先 'origin/"+D(l(v).currentBranch)+"' "+D(l(v).branchAhead)+" 个提交 ",1)])]),_:1})):Y("",!0),l(v).branchBehind>0?(m(),le(Ve,{key:1,size:"small",type:"info",class:"status-badge"},{default:a(()=>[t("span",pa,[s(ie,null,{default:a(()=>[s(l(ms))]),_:1}),h(" 你的分支落后 'origin/"+D(l(v).currentBranch)+"' "+D(l(v).branchBehind)+" 个提交 ",1)])]),_:1})):Y("",!0)])]),_:1})])])])):Y("",!0),l(v).fileList.length?(m(),$("div",va,[l(v).fileList.some(L=>L.type==="added")?(m(),$("div",ma,[y[5]||(y[5]=t("div",{class:"file-group-header"},"已暂存的更改",-1)),t("div",ga,[(m(!0),$(Ae,null,Ue(l(v).fileList.filter(L=>L.type==="added"),L=>(m(),$("div",{key:L.path,class:"file-item",onClick:ce=>K(L)},[t("div",ya,[t("div",wa,[t("span",_a,D(me(L.path)),1),t("span",ba,D(te(L.path)),1)])]),t("div",$a,[s(z,{content:"取消暂存",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"warning",size:"small",circle:"",onClick:Ct(ce=>_e(L.path),["stop"])},{default:a(()=>y[4]||(y[4]=[h("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,ha))),128))])])):Y("",!0),l(v).fileList.some(L=>L.type==="modified"||L.type==="deleted")?(m(),$("div",Ca,[y[7]||(y[7]=t("div",{class:"file-group-header"},"未暂存的更改",-1)),t("div",ka,[(m(!0),$(Ae,null,Ue(l(v).fileList.filter(L=>L.type==="modified"||L.type==="deleted"),L=>(m(),$("div",{key:L.path,class:"file-item",onClick:ce=>K(L)},[t("div",Ta,[t("div",{class:Fe(["file-status-indicator",L.type])},null,2),t("div",xa,[t("span",Va,D(me(L.path)),1),t("span",La,D(te(L.path)),1)])]),t("div",Ba,[s(z,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"success",size:"small",circle:"",onClick:Ct(ce=>I(L.path),["stop"])},{default:a(()=>y[6]||(y[6]=[h("+")])),_:2},1032,["onClick"])]),_:2},1024),s(z,{content:"撤回修改",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"danger",size:"small",icon:l(ss),circle:"",onClick:Ct(ce=>P(L.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,Sa))),128))])])):Y("",!0),l(v).fileList.some(L=>L.type==="untracked")?(m(),$("div",Aa,[y[10]||(y[10]=t("div",{class:"file-group-header"},"未跟踪的文件",-1)),t("div",Ma,[(m(!0),$(Ae,null,Ue(l(v).fileList.filter(L=>L.type==="untracked"),L=>(m(),$("div",{key:L.path,class:"file-item",onClick:ce=>K(L)},[t("div",Ea,[y[8]||(y[8]=t("div",{class:"file-status-indicator untracked"},null,-1)),t("div",Da,[t("span",za,D(me(L.path)),1),t("span",Ga,D(te(L.path)),1)])]),t("div",ja,[s(z,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"success",size:"small",circle:"",onClick:Ct(ce=>I(L.path),["stop"])},{default:a(()=>y[9]||(y[9]=[h("+")])),_:2},1032,["onClick"])]),_:2},1024),s(z,{content:"删除文件",placement:"top","hide-after":1e3},{default:a(()=>[s(M,{type:"danger",size:"small",icon:l(Zt),circle:"",onClick:Ct(ce=>P(L.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,Ra))),128))])])):Y("",!0)])):l(v).isGitRepo?(m(),$("div",Ua,[t("div",Pa,[s(ie,null,{default:a(()=>[s(l(gs))]),_:1})]),y[11]||(y[11]=t("div",{class:"empty-text"},"没有检测到任何更改",-1)),y[12]||(y[12]=t("div",{class:"empty-subtext"},"工作区是干净的",-1))])):Y("",!0)])):(m(),$("div",na,y[3]||(y[3]=[t("div",{class:"empty-status"},[t("p",null,"当前目录不是Git仓库")],-1)])))],8,oa)),[[Re,l(v).isGitPulling||l(v).isGitFetching]])]),s(Ne,{modelValue:O.value,"onUpdate:modelValue":y[1]||(y[1]=L=>O.value=L),title:`文件差异: ${N.value}`,width:"80%","destroy-on-close":"",class:"diff-dialog"},{footer:a(()=>[t("div",Ia,[s(M,{type:"primary",icon:l(Ms),onClick:q,disabled:ne.value<=0||l(v).fileList.length===0,plain:"",class:"nav-button"},{default:a(()=>y[13]||(y[13]=[h(" 上一个文件 ")])),_:1},8,["icon","disabled"]),t("div",Ha,[s(Ve,{type:"info",effect:"plain",class:"counter-tag"},{default:a(()=>[h(D(ne.value+1)+" / "+D(l(v).fileList.length),1)]),_:1})]),s(M,{type:"primary",icon:l(is),onClick:J,disabled:ne.value>=l(v).fileList.length-1||l(v).fileList.length===0,plain:"",class:"nav-button"},{icon:a(()=>[s(ie,{class:"el-icon--right"},{default:a(()=>[s(l(is))]),_:1})]),default:a(()=>[y[14]||(y[14]=h(" 下一个文件 "))]),_:1},8,["icon","disabled"])])]),default:a(()=>[ct((m(),$("div",Oa,[V.value?(m(),$("div",{key:0,innerHTML:A(V.value),class:"diff-formatted"},null,8,Fa)):(m(),$("div",Na,"该文件没有差异或是新文件"))])),[[Re,X.value]])]),_:1},8,["modelValue","title"])],64)}}}),Ft=(pe,c)=>{const x=pe.__vccOpts||pe;for(const[v,g]of c)x[v]=g;return x},Ja=Ft(Xa,[["__scopeId","data-v-c005b533"]]),Cs=cs("config",()=>{const pe=u(""),c=u([]),x=u([]),v=u([]),g=u(!1),N=u(!1),V=De(()=>({defaultCommitMessage:pe.value,descriptionTemplates:c.value,scopeTemplates:x.value,messageTemplates:v.value}));async function O(){if(N.value&&!g.value)return console.log("使用缓存的配置信息"),V.value;try{g.value=!0,console.log("加载配置信息...");const S=await(await fetch("/api/config/getConfig")).json();return pe.value=S.defaultCommitMessage||"",c.value=S.descriptionTemplates||[],x.value=S.scopeTemplates||[],v.value=S.messageTemplates||[],N.value=!0,console.log("配置信息加载完成"),V.value}catch(A){return console.error("加载配置失败:",A),o.error(`加载配置失败: ${A.message}`),null}finally{g.value=!1}}async function X(A){try{const q=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:A})})).json();return q.success?(pe.value=A,o.success("默认提交信息已保存"),!0):(o.error(`保存失败: ${q.error}`),!1)}catch(S){return o.error(`保存失败: ${S.message}`),!1}}async function ne(A,S){try{const J=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:A,type:S})})).json();return J.success?(S==="description"?c.value.includes(A)||c.value.push(A):S==="scope"?x.value.includes(A)||x.value.push(A):S==="message"&&(v.value.includes(A)||v.value.push(A)),o.success("模板已保存"),!0):(o.error(`保存模板失败: ${J.error}`),!1)}catch(q){return o.error(`保存模板失败: ${q.message}`),!1}}async function U(A,S){try{const J=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:A,type:S})})).json();return J.success?(S==="description"?c.value=c.value.filter(K=>K!==A):S==="scope"?x.value=x.value.filter(K=>K!==A):S==="message"&&(v.value=v.value.filter(K=>K!==A)),o.success("模板已删除"),!0):(o.error(`删除模板失败: ${J.error}`),!1)}catch(q){return o.error(`删除模板失败: ${q.message}`),!1}}async function Q(A,S,q){try{const K=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:A,newTemplate:S,type:q})})).json();if(K.success){if(q==="description"){const I=c.value.indexOf(A);I!==-1&&(c.value[I]=S)}else if(q==="scope"){const I=x.value.indexOf(A);I!==-1&&(x.value[I]=S)}else if(q==="message"){const I=v.value.indexOf(A);I!==-1&&(v.value[I]=S)}return o.success("模板已更新"),!0}else return o.error(`更新模板失败: ${K.error}`),!1}catch(J){return o.error(`更新模板失败: ${J.message}`),!1}}return{defaultCommitMessage:pe,descriptionTemplates:c,scopeTemplates:x,messageTemplates:v,isLoading:g,isLoaded:N,config:V,loadConfig:O,saveDefaultMessage:X,saveTemplate:ne,deleteTemplate:U,updateTemplate:Q}}),Wa={key:0,class:"pushing-indicator"},qa={key:0,class:"push-success-indicator"},Ya={class:"card-content"},Ka={class:"layout-container"},Za={key:0,class:"git-config-warning"},Qa={class:"commit-section"},el={class:"commit-options"},tl={class:"options-row"},sl={class:"commit-mode-toggle"},al={class:"no-verify-toggle"},ll={key:0,class:"commit-form"},ol={class:"description-container"},nl={class:"input-actions"},il={class:"preview-section"},rl={class:"preview-content code-command"},ul={class:"form-bottom-actions"},cl={class:"button-row"},dl={key:0},fl={key:0},pl={key:1,class:"standard-commit-form"},vl={class:"standard-commit-header"},ml={class:"type-scope-container"},gl={class:"scope-wrapper"},hl={class:"description-container"},yl={class:"advanced-fields"},wl={class:"preview-section"},_l={class:"preview-content code-command"},bl={class:"form-bottom-actions"},$l={class:"button-row"},Cl={key:0},kl={key:0},Sl={class:"actions-section"},Tl={class:"action-groups"},xl={class:"operations-wrapper"},Vl={class:"action-group"},Ll={class:"group-buttons"},Bl={key:0},Al={key:0},Ml={key:0},Rl={key:0},El={class:"action-group"},Dl={class:"group-buttons"},zl={class:"action-group reset-group"},Gl={class:"group-buttons"},jl={key:0},Ul={class:"action-group branch-group"},Pl={class:"group-buttons"},Ol={class:"action-group"},Fl={class:"group-buttons"},Nl={class:"template-container"},Il={class:"template-form"},Hl={class:"template-form-buttons"},Xl={class:"template-list"},Jl={class:"template-content"},Wl={class:"template-actions"},ql={class:"template-container"},Yl={class:"template-form"},Kl={class:"template-form-buttons"},Zl={class:"template-list"},Ql={class:"template-content"},eo={class:"template-actions"},to={class:"template-container message-template-container"},so={class:"template-form"},ao={class:"template-form-buttons"},lo={class:"templates-container"},oo={class:"message-templates-list"},no={class:"templates-scroll-area"},io={class:"template-content"},ro={class:"template-actions"},uo={class:"current-default-message"},co={class:"default-message-content"},fo={class:"message-help-text"},po={class:"merge-dialog-content"},vo={class:"merge-intro"},mo={class:"merge-options"},go={class:"dialog-footer"},ho={class:"stash-list-content"},yo={key:0,class:"stash-list-actions"},wo={class:"stash-dialog-content"},_o={class:"dialog-footer"},bo=jt({__name:"CommitForm",setup(pe){const c=xt(),x=Cs(),v=u(""),g=u(!1),N=u("输入提交信息..."),V=u(""),O=u(!1),X=u("feat"),ne=u(""),U=u(""),Q=u(""),A=u(""),S=u([]),q=u(!1),J=u(""),K=u(!1),I=u(""),_e=u(-1),re=u(!1),G=u(""),ae=u({noFf:!1,squash:!1,noCommit:!1,message:""}),P=u([]),me=u(!1),te=u(""),T=u(!1),y=u(""),W=u(-1),z=u(!1),M=u(""),ie=u(!1),Ve=u(!1),Ne=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],Re=u(!1),L=u(!1),ce=u(""),fe=u(!1);function ge(){ce.value="",fe.value=!1,Re.value=!0}function qe(){c.getStashList(),L.value=!0}async function Ye(){try{await c.saveStash(ce.value,fe.value),Re.value=!1}catch(n){console.error("储藏失败:",n)}}async function Ie(n,e=!1){try{await c.applyStash(n,e),e&&await c.getStashList()}catch(Be){console.error("应用储藏失败:",Be)}}async function Xe(n){st.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await c.dropStash(n),await c.getStashList()}).catch(()=>{})}async function dt(){st.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await c.clearAllStashes(),await c.getStashList()}).catch(()=>{})}const Pe=u([]),Oe=u(!1),at=u(""),ze=u(-1);nt(O,n=>{localStorage.setItem("zen-gitsync-standard-commit",n.toString())}),nt(ie,n=>{localStorage.setItem("zen-gitsync-skip-hooks",n.toString())});const oe=De(()=>{if(!O.value)return v.value||V.value;let n=`${X.value||""}`;return ne.value&&(n+=`(${ne.value})`),n+=`: ${U.value}`,Q.value&&(n+=`

${Q.value}`),A.value&&(n+=`

${A.value}`),n}),Je=De(()=>{let n=`git commit -m "${oe.value}"`;return ie.value&&(n+=" --no-verify"),n});function _(){const n=x.config;n&&(N.value=`输入提交信息 (默认: ${n.defaultCommitMessage})`,V.value=n.defaultCommitMessage||"",n.descriptionTemplates&&Array.isArray(n.descriptionTemplates)&&(S.value=n.descriptionTemplates),n.scopeTemplates&&Array.isArray(n.scopeTemplates)&&(P.value=n.scopeTemplates),n.messageTemplates&&Array.isArray(n.messageTemplates)&&(Pe.value=n.messageTemplates))}async function i(){if(!J.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(K.value)await F();else{if(S.value.includes(J.value)){o({message:"该模板已存在",type:"warning"});return}await x.saveTemplate(J.value,"description")&&(S.value.includes(J.value)||S.value.push(J.value),S.value=[...S.value],J.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function F(){if(!J.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await x.updateTemplate(I.value,J.value,"description")){const e=S.value.indexOf(I.value);e!==-1&&(S.value[e]=J.value),S.value=[...S.value],K.value=!1,I.value="",_e.value=-1,J.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function E(n,e){K.value=!0,I.value=n,_e.value=e,J.value=n}function Se(){K.value=!1,I.value="",_e.value=-1,J.value=""}async function be(){if(!te.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(T.value)await $e();else{if(P.value.includes(te.value)){o({message:"该模板已存在",type:"warning"});return}await x.saveTemplate(te.value,"scope")&&(P.value.includes(te.value)||P.value.push(te.value),P.value=[...P.value],te.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function $e(){if(!te.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await x.updateTemplate(y.value,te.value,"scope")){const e=P.value.indexOf(y.value);e!==-1&&(P.value[e]=te.value),P.value=[...P.value],T.value=!1,y.value="",W.value=-1,te.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function Te(n,e){T.value=!0,y.value=n,W.value=e,te.value=n}function Le(){T.value=!1,y.value="",W.value=-1,te.value=""}async function Ce(n){try{if(await st.confirm(`确定要删除描述模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await x.deleteTemplate(n,"description")){const Be=S.value.indexOf(n);Be!==-1&&S.value.splice(Be,1),S.value=[...S.value]}}catch(e){if(e==="cancel")return;o({message:`删除模板失败: ${e.message}`,type:"error"})}}async function ke(n){try{if(await st.confirm(`确定要删除作用域模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await x.deleteTemplate(n,"scope")){const Be=P.value.indexOf(n);Be!==-1&&P.value.splice(Be,1),P.value=[...P.value]}}catch(e){if(e==="cancel")return;o({message:`删除模板失败: ${e.message}`,type:"error"})}}function it(n){U.value=n,q.value=!1}function ft(n){ne.value=n,me.value=!1}function H(){q.value=!0}function rt(){me.value=!0}async function yt(){try{await c.addToStage()&&c.fetchStatus()}catch(n){o({message:`添加文件失败: ${n.message}`,type:"error"})}}async function pt(){if(!oe.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await c.commitChanges(oe.value,ie.value)&&(f(),c.fetchStatus(),c.fetchLog(),c.getBranchStatus())}catch(n){o({message:`提交失败: ${n.message}`,type:"error"})}}function wt(){g.value=!0,setTimeout(()=>{g.value=!1},2e3)}async function Ke(){try{await c.pushToRemote(),wt(),c.getBranchStatus()}catch(n){o({message:`推送失败: ${n.message}`,type:"error"})}finally{}}async function vt(){try{await c.gitPull(),await c.fetchStatus(),await c.fetchLog(!1)}catch(n){console.error("拉取操作发生错误:",n)}}async function _t(){try{await c.gitFetchAll(),await c.fetchStatus(),await c.fetchLog(!1)}catch(n){console.error("获取远程分支信息操作发生错误:",n)}}async function mt(){if(!oe.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await c.addAndCommit(oe.value,ie.value),f(),c.fetchStatus(),c.fetchLog()}catch(n){o({message:`暂存并提交失败: ${n.message}`,type:"error"})}}async function gt(){if(!oe.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await c.addCommitAndPush(oe.value,ie.value),f(),wt()}catch(n){o({message:`暂存、提交并推送失败: ${n.message}`,type:"error"})}}async function p(){try{await st.confirm(`确定要重置当前分支 "${c.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await c.resetToRemote(c.currentBranch)&&(c.fetchStatus(),c.fetchLog())}catch(n){n!=="cancel"&&o({message:`重置到远程分支失败: ${n.message}`,type:"error"})}}function f(){v.value="",U.value="",Q.value="",A.value=""}function R(){M.value=V.value,z.value=!0}async function ee(){if(!M.value.trim()){o({message:"请输入默认提交信息",type:"warning"});return}try{await x.saveDefaultMessage(M.value)&&(V.value=M.value,N.value=`输入提交信息 (默认: ${M.value})`,z.value=!1)}catch(n){o({message:`保存默认提交信息失败: ${n.message}`,type:"error"})}}const lt=De(()=>c.fileList.some(n=>["modified","deleted","untracked"].includes(n.type))),Ee=De(()=>c.fileList.filter(n=>["modified","deleted","untracked"].includes(n.type)).length),he=De(()=>c.fileList.filter(n=>n.type==="added").length),Ge=De(()=>he.value>0),d=De(()=>c.fileList.length>0),r=De(()=>c.branchAhead>0),b=De(()=>c.branchBehind>0),C=De(()=>c.hasUpstream&&(r.value||Ge.value&&oe.value.trim())),ve=De(()=>Ge.value),ue=De(()=>c.hasUpstream&&(r.value||b.value||d.value));async function se(){if(!M.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(Oe.value)await B();else{if(Pe.value.includes(M.value)){o({message:"该模板已存在",type:"warning"});return}Pe.value.push(M.value);const e=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:M.value,type:"message"})})).json();e.success?(o({message:"提交信息模板保存成功!",type:"success"}),M.value=""):o({message:"模板保存失败: "+e.error,type:"error"})}}catch(n){o({message:"模板保存失败: "+n.message,type:"error"})}}async function B(){try{if(ze.value>=0){const n=at.value,e=M.value;Pe.value[ze.value]=e;const Qe=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:n,newTemplate:e,type:"message"})})).json();Qe.success?(o({message:"提交信息模板更新成功!",type:"success"}),Oe.value=!1,at.value="",ze.value=-1,M.value=""):o({message:"模板更新失败: "+Qe.error,type:"error"})}}catch(n){o({message:"模板更新失败: "+n.message,type:"error"})}}function xe(n,e){Oe.value=!0,at.value=n,ze.value=e,M.value=n}function Ze(){Oe.value=!1,at.value="",ze.value=-1,M.value=""}async function Z(n){try{const e=Pe.value.indexOf(n);e!==-1&&Pe.value.splice(e,1);const Qe=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:n,type:"message"})})).json();Qe.success?o({message:"提交信息模板删除成功!",type:"success"}):o({message:"模板删除失败: "+Qe.error,type:"error"})}catch(e){o({message:"模板删除失败: "+e.message,type:"error"})}}function ye(n){v.value=n,M.value=n}Vt(async()=>{const n=localStorage.getItem("zen-gitsync-standard-commit");n!==null&&(O.value=n==="true");const e=localStorage.getItem("zen-gitsync-skip-hooks");e!==null&&(ie.value=e==="true"),nt(()=>x.config,_,{immediate:!0}),x.config||await x.loadConfig()});function we(){G.value="",ae.value={noFf:!1,squash:!1,noCommit:!1,message:""},de.value="all",re.value=!0,c.allBranches.length===0&&c.getAllBranches()}const de=u("all"),ot=De(()=>{const n=c.allBranches.filter(e=>e!==c.currentBranch);if(console.log("筛选分支列表:",{allBranches:c.allBranches,currentBranch:c.currentBranch,branchTypeFilter:de.value,filteredBranches:n}),de.value==="local"){const e=n.filter(Be=>!Be.includes("origin/"));return console.log("本地分支:",e),e}else if(de.value==="remote"){const e=n.filter(Be=>Be.includes("origin/"));return console.log("远程分支:",e),e}else return console.log("所有分支:",n),n});async function k(){if(!G.value){o({message:"请选择要合并的分支",type:"warning"});return}try{await c.mergeBranch(G.value,ae.value)&&(re.value=!1,await c.fetchStatus(),await c.fetchLog(!1))}catch(n){console.error("合并分支操作发生错误:",n)}}return(n,e)=>{const Be=Pt,Qe=hs,Lt=ds,Me=es,We=as,j=He,Bt=zt,ls=Gt,At=ys,Nt=Ds,Mt=ws,bt=Ot,os=Ut,It=Gs,Ss=zs,$t=bs,Rt=js,ns=_s,Ht=ht,Ts=$s,xs=ts;return m(),$("div",{class:Fe(["card",{"is-pushing":l(c).isPushing}])},[e[97]||(e[97]=t("div",{class:"card-header"},[t("h2",null,"提交更改")],-1)),s(rs,{name:"el-fade-in-linear"},{default:a(()=>[l(c).isPushing?(m(),$("div",Wa,e[28]||(e[28]=[t("div",{class:"pushing-spinner"},[t("svg",{viewBox:"0 0 50 50",class:"circular"},[t("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1),t("div",{class:"pushing-text"},"正在推送...",-1)]))):Y("",!0)]),_:1}),s(rs,{name:"el-fade-in-linear"},{default:a(()=>[g.value?(m(),$("div",qa,[s(Be,{class:"push-success-icon"},{default:a(()=>[s(l(fs))]),_:1}),e[29]||(e[29]=t("div",{class:"push-success-text"},"推送成功!",-1))])):Y("",!0)]),_:1}),t("div",Ya,[t("div",Ka,[l(c).userName===""||l(c).userEmail===""?(m(),$("div",Za,[s(Qe,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:a(()=>e[30]||(e[30]=[t("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),t("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(m(),$(Ae,{key:1},[t("div",Qa,[t("div",el,[t("div",tl,[t("div",sl,[s(Lt,{modelValue:O.value,"onUpdate:modelValue":e[0]||(e[0]=w=>O.value=w),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),t("div",al,[s(Me,{content:"跳过 Git 钩子检查 (--no-verify)",placement:"top"},{default:a(()=>[s(Lt,{modelValue:ie.value,"onUpdate:modelValue":e[1]||(e[1]=w=>ie.value=w),"active-text":"跳过钩子 (--no-verify)"},null,8,["modelValue"])]),_:1})])])]),O.value?(m(),$("div",pl,[t("div",vl,[t("div",ml,[s(ls,{modelValue:X.value,"onUpdate:modelValue":e[3]||(e[3]=w=>X.value=w),placeholder:"提交类型",class:"type-select",clearable:""},{default:a(()=>[(m(),$(Ae,null,Ue(Ne,w=>s(Bt,{key:w.value,label:w.label,value:w.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),t("div",gl,[s(We,{modelValue:ne.value,"onUpdate:modelValue":e[4]||(e[4]=w=>ne.value=w),placeholder:"作用域（可选）",class:"scope-input",clearable:""},null,8,["modelValue"]),s(j,{type:"primary",icon:l(Tt),circle:"",size:"small",class:"settings-button",onClick:rt},null,8,["icon"])])]),t("div",hl,[s(We,{modelValue:U.value,"onUpdate:modelValue":e[5]||(e[5]=w=>U.value=w),placeholder:"简短描述（必填）",class:"description-input",clearable:""},null,8,["modelValue"]),s(j,{type:"primary",icon:l(Tt),circle:"",size:"small",class:"settings-button",onClick:H},null,8,["icon"])])]),t("div",{class:"advanced-options-toggle",onClick:e[6]||(e[6]=w=>Ve.value=!Ve.value)},[t("span",null,D(Ve.value?"收起":"正文及页脚"),1),s(Be,{class:Fe(["toggle-icon",{"is-active":Ve.value}])},{default:a(()=>[s(l(ms))]),_:1},8,["class"])]),ct(t("div",yl,[s(We,{modelValue:Q.value,"onUpdate:modelValue":e[7]||(e[7]=w=>Q.value=w),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),s(We,{modelValue:A.value,"onUpdate:modelValue":e[8]||(e[8]=w=>A.value=w),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[Qt,Ve.value]]),t("div",wl,[e[35]||(e[35]=t("div",{class:"preview-title",style:{"margin-top":"10px"}},"Git提交命令预览：",-1)),t("pre",_l,D(Je.value),1)]),t("div",bl,[t("div",$l,[s(j,{type:"primary",onClick:pt,loading:l(c).isLoadingStatus,disabled:!Ge.value||!oe.value.trim()},{default:a(()=>[e[36]||(e[36]=h(" 提交 ")),he.value>0?(m(),$("span",Cl,"("+D(he.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled"]),s(j,{type:"primary",icon:l(Xt),onClick:Ke,loading:l(c).isPushing,disabled:!C.value,style:St(r.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[e[37]||(e[37]=h(" 推送 ")),r.value?(m(),$("span",kl,"("+D(l(c).branchAhead)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","style"])]),s(j,{type:"success",icon:l(Jt),onClick:gt,loading:l(c).isAddingFiles||l(c).isCommiting||l(c).isPushing,disabled:!d.value||!oe.value.trim()||!l(c).hasUpstream,class:"full-width-button"},{default:a(()=>e[38]||(e[38]=[h(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled"])])])):(m(),$("div",ll,[t("div",ol,[s(We,{modelValue:v.value,"onUpdate:modelValue":e[2]||(e[2]=w=>v.value=w),placeholder:N.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input"},null,8,["modelValue","placeholder"]),t("div",nl,[s(j,{type:"primary",icon:l(Tt),circle:"",size:"small",class:"settings-button",onClick:R},null,8,["icon"])])]),t("div",il,[e[31]||(e[31]=t("div",{class:"preview-title"},"Git提交命令预览：",-1)),t("pre",rl,'git commit -m "'+D(oe.value||"<提交信息>")+'"'+D(ie.value?" --no-verify":""),1)]),t("div",ul,[t("div",cl,[s(j,{type:"primary",onClick:pt,loading:l(c).isLoadingStatus,disabled:!Ge.value||!oe.value.trim()},{default:a(()=>[e[32]||(e[32]=h(" 提交 ")),he.value>0?(m(),$("span",dl,"("+D(he.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled"]),s(j,{type:"primary",icon:l(Xt),onClick:Ke,loading:l(c).isPushing,disabled:!C.value,style:St(r.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[e[33]||(e[33]=h(" 推送 ")),r.value?(m(),$("span",fl,"("+D(l(c).branchAhead)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","style"])]),s(j,{type:"success",icon:l(Jt),onClick:gt,loading:l(c).isAddingFiles||l(c).isCommiting||l(c).isPushing,disabled:!d.value||!oe.value.trim()||!l(c).hasUpstream,class:"full-width-button"},{default:a(()=>e[34]||(e[34]=[h(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled"])])]))]),t("div",Sl,[e[56]||(e[56]=t("h3",null,"Git 操作",-1)),t("div",Tl,[t("div",xl,[t("div",Vl,[e[44]||(e[44]=t("div",{class:"group-title"},"基础操作",-1)),t("div",Ll,[s(Me,{content:lt.value?`暂存${Ee.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",onClick:yt,loading:l(c).isAddingFiles,disabled:!lt.value,class:"action-button"},{default:a(()=>[e[39]||(e[39]=h(" 暂存更改 ")),Ee.value>0?(m(),$("span",Bl,"("+D(Ee.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),s(Me,{content:Ge.value?`提交${he.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",onClick:pt,loading:l(c).isLoadingStatus,disabled:!Ge.value||!oe.value.trim(),class:"action-button"},{default:a(()=>[e[40]||(e[40]=h(" 提交 ")),he.value>0?(m(),$("span",Al,"("+D(he.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),s(Me,{content:r.value?`推送${l(c).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",icon:l(Xt),onClick:Ke,loading:l(c).isPushing,disabled:!C.value,class:Fe(["action-button","push-button",{"is-loading":l(c).isPushing}]),style:St(r.value?{backgroundColor:"#67c23a !important",borderColor:"#67c23a !important"}:{})},{default:a(()=>[e[41]||(e[41]=h(" 推送 ")),r.value?(m(),$("span",Ml,"("+D(l(c).branchAhead)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),s(Me,{content:b.value?`拉取${l(c).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",icon:l(ps),onClick:vt,loading:l(c).isGitPulling,disabled:!l(c).hasUpstream,class:"action-button",style:St(b.value?{color:"white",backgroundColor:"#E6A23C",borderColor:"#E6A23C"}:{})},{default:a(()=>[e[42]||(e[42]=h(" 拉取 ")),b.value?(m(),$("span",Rl,"("+D(l(c).branchBehind)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),s(Me,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"info",icon:l(vs),onClick:_t,loading:l(c).isGitFetching,class:"action-button"},{default:a(()=>e[43]||(e[43]=[h(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),t("div",El,[e[47]||(e[47]=t("div",{class:"group-title"},"组合操作",-1)),t("div",Dl,[s(Me,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",icon:l(Et),onClick:mt,loading:l(c).isAddingFiles||l(c).isCommiting,disabled:!lt.value||!oe.value.trim(),class:"action-button"},{default:a(()=>e[45]||(e[45]=[h(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),s(Me,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"success",icon:l(Jt),onClick:gt,loading:l(c).isAddingFiles||l(c).isCommiting||l(c).isPushing,disabled:!d.value||!oe.value.trim()||!l(c).hasUpstream,class:Fe(["action-button","one-click-push",{"is-loading":l(c).isAddingFiles||l(c).isCommiting||l(c).isPushing}])},{default:a(()=>e[46]||(e[46]=[h(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),t("div",zl,[e[50]||(e[50]=t("div",{class:"group-title"},"重置操作",-1)),t("div",Gl,[s(Me,{content:ve.value?`撤销${he.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"warning",icon:l(ss),onClick:l(c).resetHead,loading:l(c).isResetting,disabled:!ve.value,class:"action-button reset-button"},{default:a(()=>[e[48]||(e[48]=h(" 重置暂存区 ")),he.value>0?(m(),$("span",jl,"("+D(he.value)+")",1)):Y("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),s(Me,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"danger",icon:l(Rs),onClick:p,loading:l(c).isResetting,disabled:!ue.value,class:"action-button danger-button"},{default:a(()=>e[49]||(e[49]=[h(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),t("div",Ul,[e[52]||(e[52]=t("div",{class:"group-title"},"分支操作",-1)),t("div",Pl,[s(Me,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"primary",icon:l(Es),onClick:we,loading:l(c).isGitMerging,class:"action-button merge-button"},{default:a(()=>e[51]||(e[51]=[h(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),t("div",Ol,[e[55]||(e[55]=t("div",{class:"group-title"},"储藏操作",-1)),t("div",Fl,[s(Me,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"warning",onClick:ge,loading:l(c).isSavingStash,disabled:!d.value,class:"action-button"},{default:a(()=>e[53]||(e[53]=[h(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),s(Me,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[s(j,{type:"info",onClick:qe,class:"action-button"},{default:a(()=>e[54]||(e[54]=[h(" 储藏列表 ")])),_:1})]),_:1})])])])])],64))]),s(bt,{title:"简短描述模板设置",modelValue:q.value,"onUpdate:modelValue":e[10]||(e[10]=w=>q.value=w),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[t("div",Nl,[t("div",Il,[s(We,{modelValue:J.value,"onUpdate:modelValue":e[9]||(e[9]=w=>J.value=w),placeholder:K.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),t("div",Hl,[K.value?(m(),le(j,{key:0,onClick:Se},{default:a(()=>e[57]||(e[57]=[h("取消")])),_:1})):Y("",!0),s(j,{type:"primary",onClick:i,disabled:!J.value.trim()},{default:a(()=>[h(D(K.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),t("div",Xl,[e[61]||(e[61]=t("h3",null,"已保存模板",-1)),S.value.length===0?(m(),le(At,{key:0,description:"暂无保存的模板"})):Y("",!0),(m(!0),$(Ae,null,Ue(S.value,(w,et)=>(m(),le(Mt,{key:et,class:"template-item"},{default:a(()=>[s(Nt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[t("div",Jl,D(w),1),t("div",Wl,[s(j,{type:"primary",size:"small",onClick:ut=>it(w)},{default:a(()=>e[58]||(e[58]=[h("使用")])),_:2},1032,["onClick"]),s(j,{type:"warning",size:"small",icon:l(Et),onClick:ut=>E(w,et)},{default:a(()=>e[59]||(e[59]=[h("编辑")])),_:2},1032,["icon","onClick"]),s(j,{type:"danger",size:"small",onClick:ut=>Ce(w)},{default:a(()=>e[60]||(e[60]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),s(bt,{title:"作用域模板设置",modelValue:me.value,"onUpdate:modelValue":e[12]||(e[12]=w=>me.value=w),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[t("div",ql,[t("div",Yl,[s(We,{modelValue:te.value,"onUpdate:modelValue":e[11]||(e[11]=w=>te.value=w),placeholder:T.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),t("div",Kl,[T.value?(m(),le(j,{key:0,onClick:Le},{default:a(()=>e[62]||(e[62]=[h("取消")])),_:1})):Y("",!0),s(j,{type:"primary",onClick:be,disabled:!te.value.trim()},{default:a(()=>[h(D(T.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),t("div",Zl,[e[66]||(e[66]=t("h3",null,"已保存作用域",-1)),P.value.length===0?(m(),le(At,{key:0,description:"暂无保存的作用域"})):Y("",!0),(m(!0),$(Ae,null,Ue(P.value,(w,et)=>(m(),le(Mt,{key:et,class:"template-item"},{default:a(()=>[s(Nt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[t("div",Ql,D(w),1),t("div",eo,[s(j,{type:"primary",size:"small",onClick:ut=>ft(w)},{default:a(()=>e[63]||(e[63]=[h("使用")])),_:2},1032,["onClick"]),s(j,{type:"warning",size:"small",icon:l(Et),onClick:ut=>Te(w,et)},{default:a(()=>e[64]||(e[64]=[h("编辑")])),_:2},1032,["icon","onClick"]),s(j,{type:"danger",size:"small",onClick:ut=>ke(w)},{default:a(()=>e[65]||(e[65]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),s(bt,{title:"默认提交信息设置",modelValue:z.value,"onUpdate:modelValue":e[14]||(e[14]=w=>z.value=w),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:a(()=>[t("div",to,[t("div",so,[s(We,{modelValue:M.value,"onUpdate:modelValue":e[13]||(e[13]=w=>M.value=w),placeholder:Oe.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),t("div",ao,[Oe.value?(m(),le(j,{key:0,onClick:Ze},{default:a(()=>e[67]||(e[67]=[h("取消")])),_:1})):Y("",!0),s(j,{type:"primary",onClick:se,disabled:!M.value.trim()},{default:a(()=>[h(D(Oe.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),s(j,{type:"success",onClick:ee,disabled:!M.value.trim()},{default:a(()=>e[68]||(e[68]=[h(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),t("div",lo,[t("div",oo,[e[72]||(e[72]=t("h3",null,"已保存模板",-1)),t("div",no,[Pe.value.length===0?(m(),le(At,{key:0,description:"暂无保存的模板"})):Y("",!0),(m(!0),$(Ae,null,Ue(Pe.value,(w,et)=>(m(),le(Mt,{key:et,class:"template-item"},{default:a(()=>[s(Nt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[t("div",io,D(w),1),t("div",ro,[s(j,{type:"primary",size:"small",onClick:ut=>ye(w)},{default:a(()=>e[69]||(e[69]=[h("使用")])),_:2},1032,["onClick"]),s(j,{type:"warning",size:"small",icon:l(Et),onClick:ut=>xe(w,et)},{default:a(()=>e[70]||(e[70]=[h("编辑")])),_:2},1032,["icon","onClick"]),s(j,{type:"danger",size:"small",onClick:ut=>Z(w)},{default:a(()=>e[71]||(e[71]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),t("div",uo,[e[80]||(e[80]=t("h3",null,"当前默认提交信息",-1)),V.value?(m(),le(Mt,{key:0,class:"default-message-card"},{default:a(()=>[t("div",co,D(V.value),1)]),_:1})):(m(),le(At,{key:1,description:"尚未设置默认提交信息","image-size":100})),t("div",fo,[e[78]||(e[78]=t("h4",null,"关于默认提交信息",-1)),e[79]||(e[79]=t("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),t("p",null,[e[75]||(e[75]=h("你可以通过点击左侧模板的")),s(os,{size:"small",type:"primary"},{default:a(()=>e[73]||(e[73]=[h("使用")])),_:1}),e[76]||(e[76]=h("按钮先选择喜欢的模板，然后点击上方")),s(os,{size:"small",type:"success"},{default:a(()=>e[74]||(e[74]=[h("设为默认提交信息")])),_:1}),e[77]||(e[77]=h("按钮保存。"))])])])])])]),_:1},8,["modelValue"]),s(bt,{title:"合并分支",modelValue:re.value,"onUpdate:modelValue":e[22]||(e[22]=w=>re.value=w),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:a(()=>[t("div",go,[s(j,{onClick:e[21]||(e[21]=w=>re.value=!1)},{default:a(()=>e[87]||(e[87]=[h("取消")])),_:1}),s(j,{type:"primary",onClick:k,loading:l(c).isGitMerging,disabled:!G.value,class:"merge-confirm-btn"},{default:a(()=>e[88]||(e[88]=[h(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:a(()=>[t("div",po,[t("p",vo,"选择要合并到当前分支 ("+D(l(c).currentBranch)+") 的分支:",1),s(ns,{"label-position":"top"},{default:a(()=>[s($t,{label:"分支类型"},{default:a(()=>[s(Ss,{modelValue:de.value,"onUpdate:modelValue":e[15]||(e[15]=w=>de.value=w),size:"small"},{default:a(()=>[s(It,{label:"all"},{default:a(()=>e[81]||(e[81]=[h("所有分支")])),_:1}),s(It,{label:"local"},{default:a(()=>e[82]||(e[82]=[h("本地分支")])),_:1}),s(It,{label:"remote"},{default:a(()=>e[83]||(e[83]=[h("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),s($t,{label:"选择分支"},{default:a(()=>[s(ls,{modelValue:G.value,"onUpdate:modelValue":e[16]||(e[16]=w=>G.value=w),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:a(()=>[(m(!0),$(Ae,null,Ue(ot.value,w=>(m(),le(Bt,{key:w,label:w,value:w},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),s($t,{label:"合并选项"},{default:a(()=>[t("div",mo,[s(Rt,{modelValue:ae.value.noFf,"onUpdate:modelValue":e[17]||(e[17]=w=>ae.value.noFf=w)},{default:a(()=>[s(Me,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:a(()=>e[84]||(e[84]=[t("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),s(Rt,{modelValue:ae.value.squash,"onUpdate:modelValue":e[18]||(e[18]=w=>ae.value.squash=w)},{default:a(()=>[s(Me,{content:"将多个提交压缩为一个提交",placement:"top"},{default:a(()=>e[85]||(e[85]=[t("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),s(Rt,{modelValue:ae.value.noCommit,"onUpdate:modelValue":e[19]||(e[19]=w=>ae.value.noCommit=w)},{default:a(()=>[s(Me,{content:"执行合并但不自动创建提交",placement:"top"},{default:a(()=>e[86]||(e[86]=[t("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),ae.value.noFf&&!ae.value.noCommit?(m(),le($t,{key:0,label:"合并提交信息 (可选)"},{default:a(()=>[s(We,{modelValue:ae.value.message,"onUpdate:modelValue":e[20]||(e[20]=w=>ae.value.message=w),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):Y("",!0)]),_:1})])]),_:1},8,["modelValue"]),s(bt,{title:"储藏列表 (Git Stash)",modelValue:L.value,"onUpdate:modelValue":e[23]||(e[23]=w=>L.value=w),width:"600px","close-on-click-modal":!1},{default:a(()=>[t("div",ho,[ct((m(),le(Ts,{data:l(c).stashes,stripe:"",style:{width:"100%"},"empty-text":"暂无储藏记录"},{default:a(()=>[s(Ht,{prop:"id",label:"ID",width:"100"}),s(Ht,{prop:"description",label:"描述"}),s(Ht,{label:"操作",width:"220"},{default:a(w=>[s(j,{size:"small",onClick:et=>Ie(w.row.id,!1),loading:l(c).isApplyingStash},{default:a(()=>e[89]||(e[89]=[h(" 应用 ")])),_:2},1032,["onClick","loading"]),s(j,{size:"small",type:"primary",onClick:et=>Ie(w.row.id,!0),loading:l(c).isApplyingStash},{default:a(()=>e[90]||(e[90]=[h(" 应用并删除 ")])),_:2},1032,["onClick","loading"]),s(j,{size:"small",type:"danger",onClick:et=>Xe(w.row.id),loading:l(c).isDroppingStash},{default:a(()=>e[91]||(e[91]=[h(" 删除 ")])),_:2},1032,["onClick","loading"])]),_:1})]),_:1},8,["data"])),[[xs,l(c).isLoadingStashes]]),l(c).stashes.length>0?(m(),$("div",yo,[s(j,{type:"danger",onClick:dt,loading:l(c).isDroppingStash},{default:a(()=>e[92]||(e[92]=[h(" 清空所有储藏 ")])),_:1},8,["loading"])])):Y("",!0)])]),_:1},8,["modelValue"]),s(bt,{title:"储藏更改 (Git Stash)",modelValue:Re.value,"onUpdate:modelValue":e[27]||(e[27]=w=>Re.value=w),width:"500px","close-on-click-modal":!1},{footer:a(()=>[t("div",_o,[s(j,{onClick:e[26]||(e[26]=w=>Re.value=!1)},{default:a(()=>e[95]||(e[95]=[h("取消")])),_:1}),s(j,{type:"primary",onClick:Ye,loading:l(c).isSavingStash},{default:a(()=>e[96]||(e[96]=[h(" 储藏 ")])),_:1},8,["loading"])])]),default:a(()=>[t("div",wo,[e[94]||(e[94]=t("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),s(ns,{"label-position":"top"},{default:a(()=>[s($t,{label:"储藏说明 (可选)"},{default:a(()=>[s(We,{modelValue:ce.value,"onUpdate:modelValue":e[24]||(e[24]=w=>ce.value=w),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),s($t,null,{default:a(()=>[s(Rt,{modelValue:fe.value,"onUpdate:modelValue":e[25]||(e[25]=w=>fe.value=w)},{default:a(()=>e[93]||(e[93]=[h(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1})]),_:1})])]),_:1},8,["modelValue"])])],2)}}}),$o=Ft(bo,[["__scopeId","data-v-5f34e2c0"]]),Co={class:"log-header"},ko={class:"log-actions"},So={key:0,class:"filter-panel-header"},To={class:"filter-form"},xo={class:"filter-item"},Vo={class:"filter-item"},Lo={class:"filter-item"},Bo={class:"filter-item"},Ao={class:"filter-actions"},Mo={key:0},Ro={key:1,class:"content-area-content"},Eo={key:0,class:"graph-view"},Do={key:0,class:"commit-count"},zo={class:"graph-controls"},Go={class:"zoom-controls"},jo={class:"scale-info"},Uo={key:1,class:"table-view-container"},Po=["id"],Oo=["onClick"],Fo={class:"author-name"},No={key:0,class:"branch-container"};const Io={class:"commit-detail-container"},Ho={key:0,class:"commit-info"},Xo={class:"commit-info-header"},Jo={class:"info-item"},Wo={class:"item-value"},qo={class:"info-item"},Yo={class:"item-value"},Ko={class:"info-item"},Zo={class:"item-value"},Qo={class:"commit-message-container"},en=["innerHTML"],tn={class:"commit-files-diff"},sn={class:"files-list"},an={key:1},ln=["onClick"],on={class:"file-diff"},nn={key:0},rn={key:1},un=["innerHTML"],kt=.5,Dt=1.5,Kt=.1,cn=jt({__name:"LogList",setup(pe,{expose:c}){const x=xt();let v=[];const g=u(v),N=u(""),V=u(!1),O=De(()=>x.isLoadingLog||V.value),X=u(!1),ne=u(0),U=u(!1),Q=u(null),A=u(1),S=u(!0),q=u(!1),J=u(null),K=u(!1),I=u(null),_e=u([]),re=u(""),G=u(!1),ae=u(""),P=u(1),me=u(!1),te=u(!1),T=u([]),y=u(""),W=u(null),z=u([]),M=u([]),ie=u([]),Ve=u(!1),Ne=u(0),Re=u(0),L=u(null),ce=u(new Map),fe=u([]),ge=u(1),qe=u(new Map),Ye=De(()=>g.value);async function Ie(d=!1,r=1){if(!xt().isGitRepo){N.value="当前目录不是Git仓库";return}try{r>1?q.value=!0:V.value=!0,console.log(`加载提交历史: page=${r}, all=${d}`);const C=new URLSearchParams;C.append("page",r.toString()),C.append("all",d.toString()),C.append("with_parents","true"),T.value.length>0&&C.append("author",T.value.join(",")),M.value.length>0&&C.append("branch",M.value.join(",")),y.value&&C.append("message",y.value),W.value&&Array.isArray(W.value)&&W.value.length===2&&(C.append("dateFrom",W.value[0]),C.append("dateTo",W.value[1])),C.append("_t",Date.now().toString());const ue=await(await fetch(`/api/log?${C.toString()}`)).json();if(!ue||!ue.data||!Array.isArray(ue.data)){console.error("API返回的数据格式不正确:",ue),N.value="加载提交历史失败: 服务器返回数据格式不正确";return}const se=r>1;se?ue.data.forEach(B=>v.push(B)):(v.length=0,ue.data.forEach(B=>v.push(B))),g.value=[...v],A.value=r,ne.value=ue.total||v.length,S.value=ue.hasMore===!0,console.log(`加载完成: 当前页=${A.value}, 是否有更多=${S.value}, 总条数=${ne.value}`),S.value||console.log("已加载所有提交记录"),se||(me.value=!0,setTimeout(()=>{me.value=!1},2e3)),!se&&U.value?setTimeout(Xe,0):!se&&!U.value&&!d&&tt(()=>{_(),setTimeout(Ee,200)}),N.value=""}catch(C){N.value="加载提交历史失败: "+(C instanceof Error?C.message:String(C)),console.error("加载日志失败:",C),r>1&&(S.value=!1)}finally{r>1?q.value=!1:V.value=!1}}async function Xe(){if(console.log(`开始渲染图表...数据长度: ${v.length}`),!Q.value){console.error("图表容器未找到");return}if(v.length===0){console.error("没有日志数据可渲染");return}try{Q.value.innerHTML="",console.log(`创建gitgraph实例，分支: ${x.currentBranch||"main"}`);const d=Ys(Q.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),r={},b=d.branch(x.currentBranch||"main");r[x.currentBranch||"main"]=b,console.log(`开始创建提交图...共${v.length}条提交`),v.forEach((C,ve)=>{let ue=b;if(C.branch){const se=Oe(C.branch.split(",")[0]);r[se]||(r[se]=d.branch(se)),ue=r[se]}ue.commit({hash:C.hash,subject:C.message,author:`${C.author} <${C.email}>`}),ve%10===0&&console.log(`已渲染 ${ve+1}/${v.length} 个提交`)}),console.log("图表渲染完成"),setTimeout(()=>{Ce()},100)}catch(d){console.error("渲染图表失败:",d),N.value="渲染图表失败: "+(d instanceof Error?d.message:String(d))}}function dt(){U.value=!U.value,U.value&&v.length>0&&setTimeout(Xe,0)}function Pe(){X.value=!X.value,X.value||(S.value=!0),A.value=1,Ie(X.value),tt(()=>{setTimeout(()=>{!U.value&&!X.value&&(_(),Ee())},300)})}function Oe(d){return d.includes("HEAD -> ")?d.replace("HEAD -> ",""):d.includes("origin/")?d:d.trim()}function at(d){return d.includes("HEAD")?"success":d.includes("origin/")?"warning":"info"}const ze=u(null),oe=u(null);function Je(d){if(U.value||!S.value||q.value||O.value)return;const r=d.target,{scrollTop:b,scrollHeight:C,clientHeight:ve}=r,ue=C-b-ve;console.log("表格滚动:",{scrollTop:b,scrollHeight:C,clientHeight:ve,scrollDistance:ue,hasMoreData:S.value,isLoadingMore:q.value,isLoading:O.value}),ue<=20&&(console.log("已滚动到底部，加载更多数据"),rt())}function _(){if(console.log("设置表格滚动监听 - 开始"),!ze.value){console.error("tableRef.value 不存在");return}const d=ze.value.$el.querySelector(".el-table__body-wrapper");if(!d){console.error("未找到表格的body-wrapper元素");return}console.log("找到表格的body-wrapper元素"),oe.value=d,oe.value&&(oe.value.removeEventListener("scroll",Je,!0),oe.value.addEventListener("scroll",Je,!0),console.log("成功添加表格滚动监听"))}function i(){console.log("移除表格滚动监听 - 开始"),oe.value?(oe.value.removeEventListener("scroll",Je,!0),console.log("成功移除表格滚动监听"),oe.value=null):console.log("tableBodyWrapper.value 不存在，无需移除监听")}function F(d){d.key==="Escape"&&he.value&&(he.value=!1)}Vt(()=>{x.isGitRepo?(x.log.length>0?(console.log("使用已加载的日志数据"),v.length=0,x.log.forEach(d=>v.push(d)),ne.value=x.log.length,U.value?setTimeout(()=>{console.log(`准备渲染图表，数据长度: ${v.length}`),Xe()},100):setTimeout(()=>{vt()},100)):(console.log("初始加载日志数据"),Ie()),wt()):N.value="当前目录不是Git仓库",tt(()=>{setTimeout(()=>{_()},500)}),tt(()=>{setTimeout(()=>{U.value||vt()},500)}),nt(()=>ze.value,d=>{d&&!U.value&&!X.value&&(console.log("表格引用已创建，设置滚动监听"),tt(()=>{_()}))}),window.addEventListener("keydown",F)}),nt(()=>x.allBranches,d=>{d&&d.length>0?(ie.value=[...d].sort(),console.log(`分支数据更新，共 ${ie.value.length} 个分支`)):(ie.value=[],console.warn("gitStore 中没有分支数据"))},{immediate:!0}),Us(()=>{i(),J.value!==null&&(window.clearInterval(J.value),J.value=null),window.removeEventListener("keydown",F)});function E(d,r){let b=null;return function(...C){b&&clearTimeout(b),b=window.setTimeout(()=>{d(...C),b=null},r)}}const Se=E(vt,200);async function be(){await x.fetchLog(!0),v.length=0,x.log.forEach(d=>v.push(d)),g.value=[...v],ne.value=x.log.length,A.value=1,S.value=!1,me.value=!0,setTimeout(()=>{me.value=!1},2e3),U.value?(await tt(),Xe()):(ce.value.clear(),fe.value=[],ge.value=1,await tt(),Se())}nt(()=>x.log,d=>{console.log("监听到gitStore.log变化，更新图表数据");try{v.length=0,Array.isArray(d)&&d.forEach(r=>r&&v.push(r)),ne.value=v.length,A.value=1,g.value=[...v],me.value=!0,setTimeout(()=>{me.value=!1},2e3),console.log(`数据更新完成，共${g.value.length}条记录，准备渲染图表`),U.value&&v.length>0&&setTimeout(Xe,0)}catch(r){console.error("更新日志数据失败:",r)}},{immediate:!0}),c({refreshLog:be});function $e(){P.value<Dt&&(P.value=Math.min(Dt,P.value+Kt),Le())}function Te(){P.value>kt&&(P.value=Math.max(kt,P.value-Kt),Le())}function Le(){if(!Q.value)return;const d=Q.value.querySelector("svg");d&&(d.style.transform=`scale(${P.value})`,d.style.transformOrigin="top left")}function Ce(){if(!Q.value)return;const d=Q.value.querySelector("svg");if(!d)return;const r=d.getBoundingClientRect().width/P.value,b=Q.value.clientWidth;r>b?P.value=Math.max(kt,b/r):P.value=1,Le()}async function ke(d){if(d){I.value=d,K.value=!0,G.value=!0,_e.value=[],re.value="",ae.value="",console.log("提交详情对象:",JSON.stringify(d,null,2)),console.log("哈希值类型和长度:",typeof d.hash,d.hash?d.hash.length:0),console.log("提交信息类型和长度:",typeof d.message,d.message?d.message.length:0),console.log("提交分支:",d.branch);try{if(console.log(`获取提交详情: ${d.hash}`),!d.hash||d.hash.length<7){console.error("无效的提交哈希值:",d.hash),re.value="无效的提交哈希值",G.value=!1;return}const r=await fetch(`/api/commit-files?hash=${d.hash}`);console.log("API响应状态: ",r.status);const b=await r.json();console.log("文件列表数据: ",b),b.success&&Array.isArray(b.files)?(_e.value=b.files,_e.value.length>0?await it(d.hash,_e.value[0]):(console.log("没有找到变更文件"),re.value="该提交没有变更文件")):(console.error("获取提交文件列表失败:",b.error||"未知错误"),re.value=`获取文件列表失败: ${b.error||"未知错误"}`)}catch(r){console.error("获取提交详情失败:",r),re.value=`获取提交详情失败: ${r.message}`}finally{G.value=!1}}}async function it(d,r){G.value=!0,ae.value=r;try{console.log(`获取文件差异: hash=${d}, file=${r}`);const b=await fetch(`/api/commit-file-diff?hash=${d}&file=${encodeURIComponent(r)}`);console.log("差异API响应状态: ",b.status);const C=await b.json();console.log("差异数据: ",C.success,typeof C.diff),C.success?re.value=C.diff||"没有变更内容":(console.error("获取差异失败: ",C.error),re.value=`获取差异失败: ${C.error||"未知错误"}`)}catch(b){console.error("获取文件差异失败:",b),re.value=`获取差异失败: ${b.message}`}finally{G.value=!1}}function ft(d){if(!d)return"";const r=d.split(`
`);function b(C){return C.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return r.map(C=>{const ve=b(C);return C.startsWith("diff --git")?`<div class="diff-header">${ve}</div>`:C.startsWith("---")?`<div class="diff-old-file">${ve}</div>`:C.startsWith("+++")?`<div class="diff-new-file">${ve}</div>`:C.startsWith("@@")?`<div class="diff-hunk-header">${ve}</div>`:C.startsWith("+")?`<div class="diff-added">${ve}</div>`:C.startsWith("-")?`<div class="diff-removed">${ve}</div>`:`<div class="diff-context">${ve}</div>`}).join("")}function H(d){return d?(console.log("格式化前的提交信息:",d),console.log("提交信息中的换行符数量:",(d.match(/\n/g)||[]).length),d.trim()):"(无提交信息)"}function rt(){if(!S.value||q.value||O.value){console.log("不满足加载更多条件:",{hasMoreData:S.value,isLoadingMore:q.value,isLoading:O.value});return}console.log(`加载更多日志，当前页码: ${A.value}，下一页: ${A.value+1}`),Ie(X.value,A.value+1)}function yt(){T.value=[],M.value=[],y.value="",W.value=null,A.value=1,Ie(X.value,1)}function pt(){A.value=1,Ie(X.value,1)}async function wt(){try{console.log("获取所有可用作者...");const r=await(await fetch("/api/authors")).json();r.success&&Array.isArray(r.authors)?(z.value=r.authors.sort(),console.log(`获取到${z.value.length}位作者`)):(console.warn("从API获取作者列表失败，将从现有日志中提取作者列表"),Ke())}catch(d){console.error("获取作者列表失败:",d),Ke()}}function Ke(){const d=new Set;g.value.forEach(r=>{r.author&&d.add(r.author)}),z.value=Array.from(d).sort(),console.log(`从现有日志中提取了${z.value.length}位作者`)}function vt(){!ze.value||U.value||(ce.value.clear(),fe.value=[],ge.value=1,_t(),tt(()=>{gt()}))}function _t(){ce.value.clear(),fe.value=[],qe.value.clear();const d=new Map,r=new Map;g.value.forEach(Z=>{Z.hash&&(Z.parents&&Z.parents.length>0?(d.set(Z.hash,[...Z.parents]),Z.parents.forEach(ye=>{var we;r.has(ye)||r.set(ye,[]),(we=r.get(ye))==null||we.push(Z.hash)})):d.set(Z.hash,[]))});const b=0,C="#2196f3",ve=["#e91e63","#4caf50","#ff9800","#9c27b0","#00bcd4","#ff5722","#607d8b"],ue=new Map;g.value.forEach(Z=>{if(!Z.hash||!Z.branch)return;const ye=Z.branch.match(/(HEAD -> |origin\/)?([^\s,]+)/g);if(ye&&ye.length>0){const we=ye.find(de=>de.includes("HEAD -> "));if(we){const de=we.replace("HEAD -> ","").trim();ue.set(Z.hash,de)}else{const de=ye[0].replace("origin/","").trim();ue.set(Z.hash,de)}}});const se=new Map;let B=0;se.set("main",b),se.set("master",b),B++;const xe=new Map;xe.set("main",C),xe.set("master",C);const Ze=new Map;return g.value.forEach((Z,ye)=>{if(!Z.hash)return;const we=Z.hash,de=ue.get(we)||"main";if(!se.has(de)){se.set(de,B++);const k=(se.get(de)||0)%ve.length;xe.set(de,ve[k])}const ot=se.get(de)||0;Ze.set(we,ot),ce.value.set(we,{hash:we,parents:Z.parents||[],column:ot,row:ye,branch:de}),qe.value.has(de)||qe.value.set(de,{name:de,color:xe.get(de)||C,column:ot})}),g.value.forEach((Z,ye)=>{if(!Z.hash||!Z.parents||Z.parents.length===0)return;const we=ce.value.get(Z.hash);if(!we)return;const de=we.column,ot=we.branch||"main",k=xe.get(ot)||C;Z.parents.forEach((n,e)=>{const Be=g.value.findIndex(Bt=>Bt.hash===n);if(Be<0)return;const Qe=ce.value.get(n);if(!Qe)return;const Lt=Qe.column,Me=Qe.branch||"main",We=xe.get(Me)||C;let j=k;Z.parents&&Z.parents.length>1&&e>0&&(j=We),fe.value.push({fromRow:ye,fromColumn:de,toRow:Be,toColumn:Lt,color:j})})}),ge.value=B,{mainBranchColor:C,branchColorMap:xe}}let mt=!1;function gt(){if(mt){console.log("已有渲染进行中，跳过");return}try{mt=!0;const d=new Map;d.set("main","#2196f3"),d.set("master","#2196f3");const r="#2196f3";if(fe.value.length===0){if(console.log("branchLines为空，重新计算"),_t(),fe.value.length===0&&g.value.length>1){console.log("创建默认分支线");for(let b=0;b<g.value.length-1;b++)g.value[b].hash&&g.value[b+1].hash&&fe.value.push({fromRow:b,fromColumn:0,toRow:b+1,toColumn:0,color:r})}}else console.log(`使用现有分支线，数量: ${fe.value.length}`);g.value.forEach((b,C)=>{if(!b.hash)return;const ve=`commit-graph-${b.hash.substring(0,7)}`,ue=document.getElementById(ve);if(!ue||ue.querySelector("svg"))return;const se=document.createElementNS("http://www.w3.org/2000/svg","svg");se.setAttribute("width","100%"),se.setAttribute("height","100%"),se.setAttribute("viewBox","0 0 100 100"),se.style.display="block",se.style.overflow="visible",ue.innerHTML="",ue.appendChild(se);const B=ce.value.get(b.hash);if(!B)return;const xe=20,Ze=10+B.column*xe,Z=50,ye=[];for(const k of fe.value)k.fromRow<C&&k.toRow>C&&ye.push({...k,type:"through",x:10+k.fromColumn*xe});for(const k of fe.value)k.fromRow===C&&ye.push({...k,type:"from",fromX:10+k.fromColumn*xe,toX:10+k.toColumn*xe});for(const k of fe.value)k.toRow===C&&ye.push({...k,type:"to",fromX:10+k.fromColumn*xe,toX:10+k.toColumn*xe});ye.length===0&&C<g.value.length-1&&(fe.value.length>0?ye.push({...fe.value[0],type:"from",fromX:Ze,toX:Ze}):ye.push({type:"from",fromX:Ze,toX:Ze,fromRow:C,fromColumn:0,toRow:C+1,toColumn:0,color:r})),ye.filter(k=>k.type==="through").forEach(k=>{const n=document.createElementNS("http://www.w3.org/2000/svg","line");n.setAttribute("x1",k.x.toString()),n.setAttribute("y1","-20"),n.setAttribute("x2",k.x.toString()),n.setAttribute("y2","120"),n.setAttribute("stroke",k.color),n.setAttribute("stroke-width","2"),se.appendChild(n)}),ye.filter(k=>k.type==="to").forEach(k=>{if(k.fromColumn===k.toColumn){const n=document.createElementNS("http://www.w3.org/2000/svg","line");n.setAttribute("x1",k.toX.toString()),n.setAttribute("y1","-20"),n.setAttribute("x2",k.toX.toString()),n.setAttribute("y2",Z.toString()),n.setAttribute("stroke",k.color),n.setAttribute("stroke-width","2"),se.appendChild(n)}else{const n=document.createElementNS("http://www.w3.org/2000/svg","path");k.fromColumn<k.toColumn?n.setAttribute("d",`M${k.fromX},-20 C${k.fromX},15 ${k.toX},30 ${k.toX},${Z}`):n.setAttribute("d",`M${k.fromX},-20 C${k.fromX},15 ${k.toX},30 ${k.toX},${Z}`),n.setAttribute("stroke",k.color),n.setAttribute("stroke-width","2"),n.setAttribute("fill","none"),se.appendChild(n)}}),ye.filter(k=>k.type==="from").forEach(k=>{if(k.fromColumn===k.toColumn){const n=document.createElementNS("http://www.w3.org/2000/svg","line");n.setAttribute("x1",k.fromX.toString()),n.setAttribute("y1",Z.toString()),n.setAttribute("x2",k.fromX.toString()),n.setAttribute("y2","120"),n.setAttribute("stroke",k.color),n.setAttribute("stroke-width","2"),se.appendChild(n)}else{const n=document.createElementNS("http://www.w3.org/2000/svg","path");k.fromColumn<k.toColumn?n.setAttribute("d",`M${k.fromX},${Z} C${k.fromX},70 ${k.toX},85 ${k.toX},120`):n.setAttribute("d",`M${k.fromX},${Z} C${k.fromX},70 ${k.toX},85 ${k.toX},120`),n.setAttribute("stroke",k.color),n.setAttribute("stroke-width","2"),n.setAttribute("fill","none"),se.appendChild(n)}});const we=document.createElementNS("http://www.w3.org/2000/svg","circle");we.setAttribute("cx",Ze.toString()),we.setAttribute("cy",Z.toString()),we.setAttribute("r","6");const de=B.branch||"",ot=d.get(de)||r;we.setAttribute("fill",ot),we.setAttribute("stroke","#fff"),we.setAttribute("stroke-width","2"),se.appendChild(we)})}catch(d){console.error("渲染分支图失败:",d),N.value="渲染分支图失败: "+(d instanceof Error?d.message:String(d))}finally{mt=!1}}nt(()=>g.value,()=>{tt(()=>{U.value||Se()})},{deep:!0});function p(d,r,b){console.log("handleContextMenu",d,r,b),b.preventDefault(),Ne.value=b.clientY,Re.value=b.clientX,L.value=d,Ve.value=!0;const C=()=>{Ve.value=!1,document.removeEventListener("click",C)};setTimeout(()=>{document.addEventListener("click",C)},0)}async function f(d){if(d)try{await st.confirm(`确定要撤销提交 ${d.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const b=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:d.hash})})).json();b.success?(o.success(b.message||"已成功撤销提交"),be(),x.fetchStatus(),x.getBranchStatus()):o.error(b.error||"撤销提交失败")}catch(r){r!=="cancel"&&(console.error("撤销提交出错:",r),o.error("撤销提交失败: "+(r.message||r)))}}async function R(d){if(d)try{await st.confirm(`确定要将提交 ${d.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const b=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:d.hash})})).json();b.success?(o.success(b.message||"已成功Cherry-Pick提交"),be(),x.fetchStatus(),x.getBranchStatus()):o.error(b.error||"Cherry-Pick提交失败")}catch(r){r!=="cancel"&&(console.error("Cherry-Pick提交出错:",r),o.error("Cherry-Pick提交失败: "+(r.message||r)))}}async function ee(d){if(d)try{await navigator.clipboard.writeText(d.hash),o.success(`已复制提交哈希: ${d.hash.substring(0,7)}`)}catch(r){console.error("复制提交哈希失败:",r),o.error(`复制提交哈希失败: ${r.message}`)}}async function lt(d){if(d)try{await st.confirm(`确定要将当前分支重置(hard)到提交 ${d.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const b=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:d.hash})})).json();b.success?(o.success(b.message||"已成功重置到指定提交"),be(),x.fetchStatus(),x.getBranchStatus()):o.error(b.error||"重置到指定提交失败")}catch(r){r!=="cancel"&&(console.error("重置到指定提交出错:",r),o.error("重置到指定提交失败: "+(r.message||r)))}}function Ee(){if(console.log("检查是否需要加载更多数据"),U.value||!S.value||q.value||O.value||X.value){console.log("不满足加载条件:",{showGraphView:U.value,hasMoreData:S.value,isLoadingMore:q.value,isLoading:O.value,showAllCommits:X.value});return}if(!oe.value){console.log("表格容器不存在，重新设置滚动监听"),_();return}const{scrollTop:d,scrollHeight:r,clientHeight:b}=oe.value,C=r-d-b;console.log("表格滚动位置:",{scrollTop:d,scrollHeight:r,clientHeight:b,scrollDistance:C}),C<=50&&(console.log("表格已滚动到底部，加载更多数据"),rt())}nt(()=>U.value,d=>{!d&&!X.value&&(console.log("切换到表格视图，设置滚动监听和定时检查"),tt(()=>{_(),setTimeout(Ee,200)}))});const he=u(!1);function Ge(){he.value=!he.value,tt(()=>{U.value&&Q.value&&Xe()})}return(d,r)=>{var se;const b=Pt,C=es,ve=ys,ue=ts;return m(),$(Ae,null,[t("div",{class:Fe(["card",{"fullscreen-mode":he.value}])},[t("div",Co,[r[13]||(r[13]=t("div",{class:"header-left"},[t("h2",null,"提交历史")],-1)),t("div",ko,[U.value?Y("",!0):(m(),le(l(He),{key:0,type:te.value?"primary":"default",size:"small",onClick:r[0]||(r[0]=B=>te.value=!te.value),class:Fe(["action-button filter-button icon-only-button",{"active-filter":te.value}])},{icon:a(()=>[s(b,null,{default:a(()=>[s(l(Ps))]),_:1})]),_:1},8,["type","class"])),s(l(He),{type:"primary",size:"small",onClick:dt,class:Fe(["action-button view-mode-button icon-only-button",{"active-view":U.value}])},{icon:a(()=>[s(b,null,{default:a(()=>[(m(),le(Wt(U.value?l(gs):l(Os))))]),_:1})]),_:1},8,["class"]),ct(s(l(He),{type:"success",size:"small",onClick:Pe,loading:O.value,class:Fe(["action-button commit-display-button",{"active-commits":X.value}])},{icon:a(()=>[s(b,null,{default:a(()=>[(m(),le(Wt(X.value?l(Fs):l(Ns))))]),_:1})]),default:a(()=>[h(" "+D(X.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[Qt,!1]]),s(l(He),{type:"info",size:"small",onClick:Ge,class:Fe(["action-button fullscreen-button icon-only-button",{"active-fullscreen":he.value}])},{icon:a(()=>[s(b,null,{default:a(()=>[(m(),le(Wt(he.value?l(Zt):l(Is))))]),_:1})]),_:1},8,["class"]),s(l(He),{circle:"",size:"small",onClick:r[1]||(r[1]=B=>be()),class:Fe([{"refresh-button-animated":me.value},"action-button refresh-button"])},{default:a(()=>[O.value?(m(),le(b,{key:1},{default:a(()=>[s(l(Hs))]),_:1})):(m(),le(b,{key:0},{default:a(()=>[s(l(ss))]),_:1}))]),_:1},8,["class"])])]),te.value&&!U.value?(m(),$("div",So,[t("div",To,[t("div",xo,[s(l(Gt),{modelValue:T.value,"onUpdate:modelValue":r[2]||(r[2]=B=>T.value=B),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>r[14]||(r[14]=[t("span",{class:"compact-label"},"作者",-1)])),default:a(()=>[(m(!0),$(Ae,null,Ue(z.value,B=>(m(),le(l(zt),{key:B,label:B,value:B},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),t("div",Vo,[s(l(Gt),{modelValue:M.value,"onUpdate:modelValue":r[3]||(r[3]=B=>M.value=B),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>r[15]||(r[15]=[t("span",{class:"compact-label"},"分支",-1)])),default:a(()=>[(m(!0),$(Ae,null,Ue(ie.value,B=>(m(),le(l(zt),{key:B,label:B,value:B},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),t("div",Lo,[s(l(as),{modelValue:y.value,"onUpdate:modelValue":r[4]||(r[4]=B=>y.value=B),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:a(()=>r[16]||(r[16]=[t("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),t("div",Bo,[s(l(Xs),{modelValue:W.value,"onUpdate:modelValue":r[5]||(r[5]=B=>W.value=B),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:a(()=>r[17]||(r[17]=[t("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),t("div",Ao,[s(l(He),{type:"primary",size:"small",onClick:pt,class:"filter-action-button"},{default:a(()=>r[18]||(r[18]=[h("应用")])),_:1}),s(l(He),{type:"info",size:"small",onClick:yt,class:"filter-action-button"},{default:a(()=>r[19]||(r[19]=[h("重置")])),_:1})])])])):Y("",!0),t("div",{class:Fe(["content-area",{"with-filter":te.value&&!U.value}])},[N.value?(m(),$("div",Mo,D(N.value),1)):(m(),$("div",Ro,[U.value?(m(),$("div",Eo,[l(v).length>0?(m(),$("div",Do," 显示 "+D(l(v).length)+" 条提交记录 "+D(X.value?"(全部)":"(分页加载，每页100条)"),1)):Y("",!0),t("div",zo,[t("div",Go,[s(l(He),{type:"primary",circle:"",size:"small",onClick:Te,disabled:P.value<=kt},{default:a(()=>[s(b,null,{default:a(()=>[s(l(Js))]),_:1})]),_:1},8,["disabled"]),s(l(Ws),{modelValue:P.value,"onUpdate:modelValue":r[6]||(r[6]=B=>P.value=B),min:kt,max:Dt,step:Kt,onChange:Le,class:"zoom-slider"},null,8,["modelValue"]),s(l(He),{type:"primary",circle:"",size:"small",onClick:$e,disabled:P.value>=Dt},{default:a(()=>[s(b,null,{default:a(()=>[s(l(qs))]),_:1})]),_:1},8,["disabled"]),s(l(He),{type:"primary",size:"small",onClick:Ce},{default:a(()=>r[20]||(r[20]=[h(" 自适应大小 ")])),_:1})]),t("div",jo," 缩放: "+D(Math.round(P.value*100))+"% ",1)]),t("div",{ref_key:"graphContainer",ref:Q,class:"graph-container"},null,512)])):(m(),$("div",Uo,[ct((m(),le(l($s),{ref_key:"tableRef",ref:ze,data:Ye.value,stripe:"",border:"",class:"log-table","empty-text":O.value?"加载中...":"没有匹配的提交记录",height:"500",onRowContextmenu:p},{default:a(()=>[s(l(ht),{width:"60","class-name":"branch-graph-column"},{default:a(B=>[t("div",{class:"branch-graph-cell",id:`commit-graph-${B.row.hash.substring(0,7)}`},null,8,Po)]),_:1}),s(l(ht),{label:"提交哈希",width:"100",resizable:""},{default:a(B=>[t("span",{class:"commit-hash",onClick:xe=>ke(B.row)},D(B.row.hash.substring(0,7)),9,Oo)]),_:1}),s(l(ht),{prop:"date",label:"日期",width:"120",resizable:""}),s(l(ht),{label:"作者",width:"120",resizable:""},{default:a(B=>[s(C,{content:B.row.email,placement:"top","hide-after":1e3},{default:a(()=>[t("span",Fo,D(B.row.author),1)]),_:2},1032,["content"])]),_:1}),s(l(ht),{label:"分支",width:"180",resizable:""},{default:a(B=>[B.row.branch?(m(),$("div",No,[(m(!0),$(Ae,null,Ue(B.row.branch.split(","),(xe,Ze)=>(m(),le(l(Ut),{key:Ze,size:"small",type:at(xe),class:"branch-tag"},{default:a(()=>[h(D(Oe(xe)),1)]),_:2},1032,["type"]))),128))])):Y("",!0)]),_:1}),s(l(ht),{prop:"message",label:"提交信息","min-width":"250"})]),_:1},8,["data","empty-text"])),[[ue,O.value]]),(X.value,Y("",!0))]))]))],2),s(l(Ot),{modelValue:K.value,"onUpdate:modelValue":r[7]||(r[7]=B=>K.value=B),title:`提交详情: ${(se=I.value)!=null&&se.hash?I.value.hash.substring(0,7):"未知"}`,width:"80%","destroy-on-close":"",class:"commit-detail-dialog"},{default:a(()=>[ct((m(),$("div",Io,[I.value?(m(),$("div",Ho,[t("div",Xo,[t("div",Jo,[r[24]||(r[24]=t("span",{class:"item-label"},"哈希:",-1)),t("span",Wo,D(I.value.hash),1)]),t("div",qo,[r[25]||(r[25]=t("span",{class:"item-label"},"作者:",-1)),t("span",Yo,D(I.value.author)+" <"+D(I.value.email)+">",1)]),t("div",Ko,[r[26]||(r[26]=t("span",{class:"item-label"},"日期:",-1)),t("span",Zo,D(I.value.date),1)])]),t("div",Qo,[r[27]||(r[27]=t("div",{class:"message-label"},"提交信息:",-1)),t("div",{class:"message-content",innerHTML:H(I.value.message).replace(/\n/g,"<br>")},null,8,en)])])):Y("",!0),t("div",tn,[t("div",sn,[r[28]||(r[28]=t("h3",null,"变更文件",-1)),_e.value.length===0?(m(),le(ve,{key:0,description:"没有找到变更文件"})):(m(),$("ul",an,[(m(!0),$(Ae,null,Ue(_e.value,B=>(m(),$("li",{key:B,class:Fe({"active-file":B===ae.value}),onClick:xe=>it(I.value.hash,B)},D(B),11,ln))),128))]))]),t("div",on,[ae.value?(m(),$("h3",nn," 文件差异: "+D(ae.value),1)):(m(),$("h3",rn,"文件差异")),!re.value&&!G.value?(m(),le(ve,{key:2,description:"选择文件查看差异"})):re.value?(m(),$("div",{key:3,innerHTML:ft(re.value),class:"diff-content"},null,8,un)):Y("",!0)])])])),[[ue,G.value]])]),_:1},8,["modelValue","title"])],2),ct(t("div",{class:Fe(["context-menu",{"fullscreen-context-menu":he.value}]),style:St({top:Ne.value+"px",left:Re.value+"px"})},[t("div",{class:"context-menu-item",onClick:r[8]||(r[8]=B=>ke(L.value))},r[29]||(r[29]=[t("i",{class:"el-icon-view"},null,-1),h(" 查看详情 ")])),t("div",{class:"context-menu-item",onClick:r[9]||(r[9]=B=>ee(L.value))},r[30]||(r[30]=[t("i",{class:"el-icon-document-copy"},null,-1),h(" 复制提交哈希 ")])),t("div",{class:"context-menu-item",onClick:r[10]||(r[10]=B=>lt(L.value))},r[31]||(r[31]=[t("i",{class:"el-icon-refresh-right"},null,-1),h(" 重置到该提交(hard) ")])),t("div",{class:"context-menu-item",onClick:r[11]||(r[11]=B=>f(L.value))},r[32]||(r[32]=[t("i",{class:"el-icon-delete"},null,-1),h(" 撤销提交 (Revert) ")])),t("div",{class:"context-menu-item",onClick:r[12]||(r[12]=B=>R(L.value))},r[33]||(r[33]=[t("i",{class:"el-icon-edit"},null,-1),h(" Cherry-Pick 到当前分支 ")]))],6),[[Qt,Ve.value]])],64)}}}),dn=Ft(cn,[["__scopeId","data-v-f12ff603"]]),fn="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",pn={class:"main-header"},vn={class:"header-left"},mn=["src"],gn={class:"header-info"},hn={key:0,id:"user-info"},yn={class:"user-name"},wn={class:"user-email"},_n={key:1,id:"user-info"},bn={class:"directory-selector"},$n={class:"directory-display"},Cn={class:"directory-icon"},kn=["title"],Sn={class:"directory-actions"},Tn={class:"main-container"},xn={key:0,class:"loading-container"},Vn={class:"loading-spinner"},Ln={key:1,class:"grid-layout"},Bn={class:"git-status-panel"},An={key:0,class:"commit-form-panel"},Mn={key:0,class:"card"},Rn={class:"tips"},En={key:1,class:"commit-form-panel"},Dn={key:2,class:"log-list-panel"},zn={class:"dialog-footer"},Gn={class:"main-footer"},jn={key:0,class:"branch-info"},Un={class:"branch-wrapper"},Pn={key:1,class:"footer-right"},On={class:"repo-url"},Fn={class:"dialog-footer"},Nn={class:"directory-input-group"},In={class:"recent-directories"},Hn={class:"dialog-footer"},Xn=jt({__name:"App",setup(pe){const c=u(""),x=u(null),v=u(null),g=xt(),N=Cs(),V=u(!1),O=u("");function X(){N.config&&(c.value=`默认提交信息: ${N.config.defaultCommitMessage}`)}async function ne(){try{const i=await(await fetch("/api/current_directory")).json();return O.value=i.directory||"未知目录",i}catch(_){return console.error("获取当前目录失败:",_),{directory:"未知目录",isGitRepo:!1}}}Vt(async()=>{console.log("---------- 页面初始化开始 ----------");try{const _=await ne();N.isLoaded||await N.loadConfig(),X(),g.isGitRepo=_.isGitRepo===!0,g.lastCheckedTime=Date.now(),g.isGitRepo?await Promise.all([g.getCurrentBranch(),g.getAllBranches(),g.getUserInfo(),g.getRemoteUrl()]):o.warning("当前目录不是Git仓库，部分功能将不可用")}catch(_){console.error("初始化失败:",_)}finally{V.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{M()},100)}});const U=u(!1),Q=u(""),A=u("");async function S(){await g.createBranch(Q.value,A.value)&&(U.value=!1,Q.value="",v.value&&v.value.refreshStatus(),x.value&&x.value.refreshLog())}function q(){A.value=g.currentBranch,U.value=!0}async function J(_){await g.changeBranch(_)&&(v.value&&v.value.refreshStatus(),x.value&&x.value.refreshLog())}const K=u(!1),I=u(""),_e=u("");function re(){I.value=g.userName,_e.value=g.userEmail,K.value=!0}async function G(){if(!I.value||!_e.value){o.warning("用户名和邮箱不能为空");return}await g.restoreUserConfig(I.value,_e.value)&&(K.value=!1)}async function ae(){await g.clearUserConfig()&&(I.value="",_e.value="")}let P=!1,me=!1,te=0,T=0,y="",W="";function z(){const _=document.querySelector(".grid-layout");if(!_)return;const i=getComputedStyle(_).gridTemplateColumns.split(" "),F=getComputedStyle(_).gridTemplateRows.split(" ");if(i.length>=3&&F.length>=3){const E=parseFloat(i[0]),Se=parseFloat(i[2]),be=E+Se,$e=E/be,Te=parseFloat(F[0]),Le=parseFloat(F[2]),Ce=Te+Le,ke=Te/Ce;localStorage.setItem("zen-gitsync-layout-left-ratio",$e.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",ke.toString()),console.log(`布局比例已保存 - 左侧: ${($e*100).toFixed(0)}%, 上方: ${(ke*100).toFixed(0)}%`)}}function M(){const _=document.querySelector(".grid-layout");if(!_)return;const i=localStorage.getItem("zen-gitsync-layout-left-ratio"),F=localStorage.getItem("zen-gitsync-layout-top-ratio");if(i){const E=parseFloat(i),Se=1-E;_.style.gridTemplateColumns=`${E}fr 8px ${Se}fr`,console.log(`已恢复左侧比例: ${(E*100).toFixed(0)}%`)}else _.style.gridTemplateColumns="1fr 8px 3fr";if(F){const E=parseFloat(F),Se=1-E;_.style.gridTemplateRows=`${E}fr 8px ${Se}fr`,console.log(`已恢复上方比例: ${(E*100).toFixed(0)}%`)}}function ie(_){var F;P=!0,te=_.clientX;const i=document.querySelector(".grid-layout");y=getComputedStyle(i).gridTemplateColumns,(F=document.getElementById("v-resizer"))==null||F.classList.add("active"),document.addEventListener("mousemove",Ve),document.addEventListener("mouseup",Ne),_.preventDefault()}function Ve(_){if(!P)return;const i=document.querySelector(".grid-layout"),F=_.clientX-te,E=y.split(" ");if(E.length>=3){const Se=parseFloat(E[0]),be=parseFloat(E[2]),$e=Se+be,Te=(Se+F/i.clientWidth*$e)/$e,Le=1-Te,Ce=.1,ke=.5;Te<Ce?i.style.gridTemplateColumns=`${Ce}fr 8px ${1-Ce}fr`:Te>ke?i.style.gridTemplateColumns=`${ke}fr 8px ${1-ke}fr`:i.style.gridTemplateColumns=`${Te}fr 8px ${Le}fr`}}function Ne(){var _;P=!1,(_=document.getElementById("v-resizer"))==null||_.classList.remove("active"),document.removeEventListener("mousemove",Ve),document.removeEventListener("mouseup",Ne),z()}function Re(_){var F;me=!0,T=_.clientY;const i=document.querySelector(".grid-layout");W=getComputedStyle(i).gridTemplateRows,(F=document.getElementById("h-resizer"))==null||F.classList.add("active"),document.addEventListener("mousemove",L),document.addEventListener("mouseup",ce),_.preventDefault()}function L(_){if(!me)return;const i=document.querySelector(".grid-layout"),F=_.clientY-T,E=W.split(" ");if(E.length>=3){const Se=parseFloat(E[0]),be=parseFloat(E[2]),$e=Se+be,Te=(Se+F/i.clientHeight*$e)/$e,Le=1-Te,Ce=.2,ke=.8;Te<Ce?i.style.gridTemplateRows=`${Ce}fr 8px ${1-Ce}fr`:Te>ke?i.style.gridTemplateRows=`${ke}fr 8px ${1-ke}fr`:i.style.gridTemplateRows=`${Te}fr 8px ${Le}fr`}}function ce(){var _;me=!1,(_=document.getElementById("h-resizer"))==null||_.classList.remove("active"),document.removeEventListener("mousemove",L),document.removeEventListener("mouseup",ce),z()}const fe=u(!1),ge=u(""),qe=u(!1),Ye=u([]);async function Ie(){if(!O.value){o.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(O.value),o.success("已复制目录路径")}catch(_){console.error("复制目录路径失败:",_),o.error(`复制失败: ${_.message}`)}}function Xe(){ge.value=O.value,fe.value=!0,dt()}async function dt(){try{const i=await(await fetch("/api/recent_directories")).json();i.success&&Array.isArray(i.directories)&&(Ye.value=i.directories)}catch(_){console.error("获取最近目录失败:",_)}}async function Pe(){if(!ge.value){o.warning("目录路径不能为空");return}try{qe.value=!0;const i=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:ge.value})})).json();i.success?(o.success("已切换工作目录"),O.value=i.directory,fe.value=!1,await Oe(i.directory),g.isGitRepo=i.isGitRepo,i.isGitRepo?(await Promise.all([g.getCurrentBranch(),g.getAllBranches(),g.getUserInfo(),g.getRemoteUrl()]),v.value&&v.value.refreshStatus(),x.value&&x.value.refreshLog()):(o.warning("当前目录不是Git仓库，部分功能将不可用"),g.$reset())):o.error(i.error||"切换目录失败")}catch(_){o.error(`切换目录失败: ${_.message}`)}finally{qe.value=!1}}async function Oe(_){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:_})})}catch(i){console.error("保存最近目录失败:",i)}}async function at(){try{if(!O.value){o.warning("当前目录路径为空");return}const i=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:O.value})})).json();i.success?o.success("已在文件管理器中打开目录"):i.error&&o.error(i.error)}catch(_){console.error("打开目录失败:",_),o.error(`打开目录失败: ${_.message}`)}}async function ze(){try{const i=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:ge.value||O.value})})).json();i.success?oe(i):i.error&&o.error(i.error)}catch(_){console.error("浏览目录失败:",_),o.error(`浏览目录失败: ${_.message}`)}}function oe(_){!_||!_.items||st.alert(je("div",{class:"directory-browser"},[je("div",{class:"current-path"},[je("span",{class:"path-label"},"当前路径: "),je("span",{class:"path-value"},_.path)]),je("div",{class:"directory-list"},[_.parentPath?je("div",{class:"directory-item parent-dir",onClick:()=>{Je(_.parentPath)}},[je("span",{class:"dir-icon"},je("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[je("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),je("span",{class:"dir-name"},"返回上级目录")]):null,..._.items.map(i=>je("div",{class:"directory-item",onClick:()=>{Je(i.path)}},[je("span",{class:"dir-icon"},je("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[je("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),je("span",{class:"dir-name"},i.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:i=>{i==="confirm"&&(ge.value=_.path)}})}async function Je(_){try{st.close(),setTimeout(async()=>{try{const F=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:_})})).json();F.success?oe(F):F.error&&o.error(F.error)}catch(i){console.error("浏览目录失败:",i),o.error(`浏览目录失败: ${i.message}`)}},100)}catch(i){console.error("处理目录选择时出错:",i),o.error(`处理目录选择时出错: ${i.message}`)}}return(_,i)=>{const F=Pt,E=He,Se=ws,be=as,$e=bs,Te=zt,Le=Gt,Ce=_s,ke=Ot,it=hs,ft=Ut;return m(),$(Ae,null,[t("header",pn,[t("div",vn,[t("img",{src:l(fn),alt:"Zen GitSync Logo",class:"logo"},null,8,mn),i[14]||(i[14]=t("h1",null,"Zen GitSync UI",-1))]),t("div",gn,[l(g).userName&&l(g).userEmail?(m(),$("div",hn,[i[15]||(i[15]=t("span",{class:"user-label"},"用户:",-1)),t("span",yn,D(l(g).userName),1),t("span",wn,"<"+D(l(g).userEmail)+">",1),s(E,{type:"primary",size:"small",onClick:re,class:"user-settings-btn",circle:""},{default:a(()=>[s(F,null,{default:a(()=>[s(l(Tt))]),_:1})]),_:1})])):(m(),$("div",_n,[i[16]||(i[16]=t("span",{class:"user-label"},"用户: ",-1)),i[17]||(i[17]=t("span",{class:"user-warning"},"未配置",-1)),s(E,{type:"primary",size:"small",onClick:re,class:"user-settings-btn",circle:""},{default:a(()=>[s(F,null,{default:a(()=>[s(l(Tt))]),_:1})]),_:1})])),t("div",bn,[t("div",$n,[t("div",Cn,[s(F,null,{default:a(()=>[s(l(us))]),_:1})]),t("div",{class:"directory-path",title:O.value},D(O.value),9,kn)]),t("div",Sn,[s(E,{type:"primary",size:"small",onClick:Xe,class:"dir-button",circle:"",title:"切换目录"},{default:a(()=>[s(F,null,{default:a(()=>i[18]||(i[18]=[t("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[t("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),s(E,{type:"success",size:"small",onClick:at,class:"dir-button",circle:"",title:"在资源管理器中打开"},{default:a(()=>[s(F,null,{default:a(()=>i[19]||(i[19]=[t("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[t("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})]),_:1}),s(E,{type:"info",size:"small",onClick:Ie,class:"dir-button",circle:"",title:"复制路径"},{default:a(()=>[s(F,null,{default:a(()=>i[20]||(i[20]=[t("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[t("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),t("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])])])]),t("main",Tn,[V.value?(m(),$("div",Ln,[t("div",Bn,[s(Ja,{ref_key:"gitStatusRef",ref:v,"initial-directory":O.value},null,8,["initial-directory"])]),t("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:ie},null,32),l(g).isGitRepo?(m(),$("div",An,[!l(g).userName||!l(g).userEmail?(m(),$("div",Mn,[i[26]||(i[26]=t("h2",null,"Git用户未配置",-1)),i[27]||(i[27]=t("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),t("div",Rn,[i[24]||(i[24]=t("h3",null,"您可以通过以下方式配置：",-1)),i[25]||(i[25]=t("ol",null,[t("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),t("li",null,"或者使用命令行配置："),t("div",{class:"code-block"},[h(' git config --global user.name "您的用户名"'),t("br"),h(' git config --global user.email "您的邮箱" ')])],-1)),s(E,{type:"primary",onClick:re},{default:a(()=>i[23]||(i[23]=[h(" 立即配置 ")])),_:1})])])):(m(),le($o,{key:1}))])):(m(),$("div",En,i[28]||(i[28]=[t("div",{class:"card",style:{padding:"20px"}},[t("h2",null,"Git仓库初始化"),t("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),t("div",{class:"tips"},[t("h3",null,"可以使用以下命令初始化仓库："),t("div",{class:"code-block"},"git init")])],-1)]))),t("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:Re},null,32),l(g).isGitRepo?(m(),$("div",Dn,[s(dn,{ref_key:"logListRef",ref:x},null,512)])):Y("",!0),s(ke,{modelValue:U.value,"onUpdate:modelValue":i[3]||(i[3]=H=>U.value=H),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:a(()=>[t("span",zn,[s(E,{onClick:i[2]||(i[2]=H=>U.value=!1)},{default:a(()=>i[29]||(i[29]=[h("取消")])),_:1}),s(E,{type:"primary",onClick:S,loading:l(g).isCreatingBranch},{default:a(()=>i[30]||(i[30]=[h(" 创建 ")])),_:1},8,["loading"])])]),default:a(()=>[s(Ce,{model:{newBranchName:Q.value,selectedBaseBranch:A.value}},{default:a(()=>[s($e,{label:"新分支名称"},{default:a(()=>[s(be,{modelValue:Q.value,"onUpdate:modelValue":i[0]||(i[0]=H=>Q.value=H),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),s($e,{label:"基于分支"},{default:a(()=>[s(Le,{modelValue:A.value,"onUpdate:modelValue":i[1]||(i[1]=H=>A.value=H),placeholder:"选择基础分支",style:{width:"100%"}},{default:a(()=>[(m(!0),$(Ae,null,Ue(l(g).allBranches,H=>(m(),le(Te,{key:H,label:H,value:H},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(m(),$("div",xn,[s(Se,{class:"loading-card"},{default:a(()=>[t("div",Vn,[s(F,{class:"is-loading"},{default:a(()=>i[21]||(i[21]=[t("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[t("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),i[22]||(i[22]=t("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),t("footer",Gn,[l(g).currentBranch?(m(),$("div",jn,[t("div",Un,[i[32]||(i[32]=t("span",{class:"branch-label"},"当前分支:",-1)),s(Le,{modelValue:l(g).currentBranch,"onUpdate:modelValue":i[4]||(i[4]=H=>l(g).currentBranch=H),size:"small",onChange:J,loading:l(g).isChangingBranch,class:"branch-select"},{default:a(()=>[(m(!0),$(Ae,null,Ue(l(g).allBranches,H=>(m(),le(Te,{key:H,label:H,value:H},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),s(E,{type:"primary",size:"small",onClick:q,class:"create-branch-btn"},{default:a(()=>[s(F,null,{default:a(()=>[s(l(Ks))]),_:1}),i[31]||(i[31]=h(" 新建分支 "))]),_:1})])])):Y("",!0),l(g).remoteUrl?(m(),$("div",Pn,[i[34]||(i[34]=t("span",{class:"repo-url-label"},"远程仓库:",-1)),t("span",On,D(l(g).remoteUrl),1),s(E,{type:"primary",circle:"",size:"small",onClick:i[5]||(i[5]=H=>l(g).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:a(()=>[s(F,null,{default:a(()=>i[33]||(i[33]=[t("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[t("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),t("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):Y("",!0)]),s(ke,{modelValue:K.value,"onUpdate:modelValue":i[9]||(i[9]=H=>K.value=H),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:a(()=>[t("span",Fn,[s(E,{type:"danger",onClick:ae},{default:a(()=>i[36]||(i[36]=[h(" 清除配置 ")])),_:1}),s(E,{onClick:i[8]||(i[8]=H=>K.value=!1)},{default:a(()=>i[37]||(i[37]=[h("取消")])),_:1}),s(E,{type:"primary",onClick:G},{default:a(()=>i[38]||(i[38]=[h(" 保存 ")])),_:1})])]),default:a(()=>[s(Ce,null,{default:a(()=>[s($e,{label:"用户名"},{default:a(()=>[s(be,{modelValue:I.value,"onUpdate:modelValue":i[6]||(i[6]=H=>I.value=H),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),s($e,{label:"邮箱"},{default:a(()=>[s(be,{modelValue:_e.value,"onUpdate:modelValue":i[7]||(i[7]=H=>_e.value=H),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),s($e,null,{default:a(()=>[s(it,{type:"info",closable:!1,"show-icon":""},{default:a(()=>i[35]||(i[35]=[h(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(ke,{modelValue:fe.value,"onUpdate:modelValue":i[13]||(i[13]=H=>fe.value=H),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:a(()=>[t("span",Hn,[s(E,{onClick:i[11]||(i[11]=H=>fe.value=!1)},{default:a(()=>i[40]||(i[40]=[h("取消")])),_:1}),s(E,{type:"primary",onClick:i[12]||(i[12]=H=>Pe()),loading:qe.value},{default:a(()=>i[41]||(i[41]=[h(" 切换 ")])),_:1},8,["loading"])])]),default:a(()=>[s(Ce,null,{default:a(()=>[s($e,{label:"目录路径"},{default:a(()=>[t("div",Nn,[s(be,{modelValue:ge.value,"onUpdate:modelValue":i[10]||(i[10]=H=>ge.value=H),placeholder:"请输入目录路径"},null,8,["modelValue"]),s(E,{type:"primary",onClick:ze},{default:a(()=>[s(F,null,{default:a(()=>[s(l(us))]),_:1}),i[39]||(i[39]=h(" 浏览 "))]),_:1})])]),_:1}),Ye.value.length>0?(m(),le($e,{key:0,label:"常用目录"},{default:a(()=>[t("div",In,[(m(!0),$(Ae,null,Ue(Ye.value,(H,rt)=>(m(),le(ft,{key:rt,class:"recent-dir-tag",onClick:yt=>ge.value=H,effect:"plain"},{default:a(()=>[h(D(H),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):Y("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),Jn=Ft(Xn,[["__scopeId","data-v-3f7f4444"]]),ks=Zs(Jn);ks.use(Qs());ks.mount("#app");

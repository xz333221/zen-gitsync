import{d as Bt,r as c,o as tt,a as Zt,E as i,l as Kt,b as rt,c as $e,w as qe,e as w,f as v,F as he,g as e,h as t,i as _t,u as l,j as s,k as zt,m as Ct,n as Rt,p as Be,q as Dt,s as At,t as Qt,v as J,x as Z,y as ct,z as h,A as ut,B as es,C as B,D as Gt,G as Te,H as Et,I as dt,J as Ke,K as Mt,L as ts,M as St,N as Ye,O as De,P as wt,Q as Ie,T as Tt,R as jt,S as $t,U as Qe,V as nt,W as it,X as Ut,Y as ht,Z as ss,_ as lt,$ as as,a0 as ls,a1 as Pt,a2 as Ot,a3 as os,a4 as xt,a5 as ns,a6 as is,a7 as rs,a8 as Vt,a9 as cs,aa as us,ab as ds,ac as fs,ad as ps,ae as vs,af as ms,ag as gs,ah as Xe,ai as ys,aj as hs,ak as Lt,al as _s,am as ws,an as $s,ao as ke,ap as bs,aq as ks}from"./vendor-Bm8yNvvz.js";(function(){const g=document.createElement("link").relList;if(g&&g.supports&&g.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))u(y);new MutationObserver(y=>{for(const E of y)if(E.type==="childList")for(const V of E.addedNodes)V.tagName==="LINK"&&V.rel==="modulepreload"&&u(V)}).observe(document,{childList:!0,subtree:!0});function k(y){const E={};return y.integrity&&(E.integrity=y.integrity),y.referrerPolicy&&(E.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?E.credentials="include":y.crossOrigin==="anonymous"?E.credentials="omit":E.credentials="same-origin",E}function u(y){if(y.ep)return;y.ep=!0;const E=k(y);fetch(y.href,E)}})();const gt=300,et=Bt("git",()=>{const me=c(""),g=c([]),k=c(""),u=c(""),y=c(!1),E=c(!1),V=c(!1),F=c(0),X=c(""),K=c(!1),O=c(!1),H=c(!1),L=c(!1),C=c(0),q=c(0),P=c(!1),I=c(""),j=c(0),ne=c(0);let $=null;const te=c(!0),Y=c([]),W=c({staged:[],unstaged:[],untracked:[]}),se=c(""),oe=c([]),S=c(!1),p=c(!1),D=c(!1),z=c(!1),U=c(!1);function ie(){me.value="",g.value=[],k.value="",u.value="",y.value=!1,E.value=!1,V.value=!1,F.value=0,C.value=0,q.value=0,P.value=!1,I.value="",j.value=0,ne.value=0,O.value=!1,H.value=!1,L.value=!1,X.value="",K.value=!1,Y.value=[],W.value={staged:[],unstaged:[],untracked:[]},se.value="",oe.value=[],S.value=!1,p.value=!1,D.value=!1,z.value=!1,U.value=!1}async function Q(){if(V.value)try{console.log("获取分支状态...");const n=await(await fetch("/api/branch-status")).json();n&&(C.value=n.ahead||0,q.value=n.behind||0,P.value=n.hasUpstream||!1,I.value=n.upstreamBranch||"",j.value=Date.now(),console.log(`分支状态更新：领先 ${C.value} 个提交，落后 ${q.value} 个提交，上游分支：${P.value?I.value:"无"}`))}catch(f){console.error("获取分支状态失败:",f),C.value=0,q.value=0,P.value=!1,I.value=""}}async function Ce(){const f=Date.now();if(f-F.value<1e3)return console.log("使用缓存的Git仓库状态:",V.value?"是":"不是"),V.value;try{const N=await(await fetch("/api/current_directory")).json();return V.value=N.isGitRepo===!0,F.value=f,console.log(`当前目录${V.value?"是":"不是"}Git仓库`),V.value}catch(n){return console.error("检查Git仓库状态失败:",n),V.value=!1,F.value=f,!1}}async function _e(){try{const n=await(await fetch("/api/branch")).json();n.branch&&(me.value=n.branch)}catch(f){console.error("获取分支信息失败:",f)}}async function b(){if(V.value)try{console.log("获取所有分支...");const n=await(await fetch("/api/branches")).json();n.branches&&Array.isArray(n.branches)&&(g.value=n.branches,ne.value=Date.now(),console.log(`获取到${n.branches.length}个分支`))}catch(f){console.error("获取所有分支信息失败:",f)}}async function ge(f){console.log("切换到分支:",f);try{y.value=!0;const N=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:f})})).json();return N.success?(i({message:`已切换到分支: ${f}`,type:"success"}),await _e(),await Q(),!0):(i({message:`切换分支失败: ${N.error}`,type:"error"}),!1)}catch(n){return i({message:`切换分支失败: ${n.message}`,type:"error"}),!1}finally{y.value=!1}}async function be(){try{const n=await(await fetch("/api/user-info")).json();n.name&&n.email&&(k.value=n.name,u.value=n.email)}catch(f){console.error("获取用户信息失败:",f)}}async function ye(f,n){if(!f.trim())return i({message:"分支名称不能为空",type:"warning"}),!1;try{E.value=!0;const ae=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:f,baseBranch:n||me.value})})).json();return ae.success?(i({message:`已创建并切换到分支: ${f}`,type:"success"}),await _e(),await Q(),await b(),!0):(i({message:`创建分支失败: ${ae.error}`,type:"error"}),!1)}catch(N){return i({message:`创建分支失败: ${N.message}`,type:"error"}),!1}finally{E.value=!1}}async function Me(){try{const n=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return n.success?(k.value="",u.value="",i({message:"已清除Git用户配置",type:"success"}),!0):(i({message:`清除配置失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`清除配置失败: ${f.message}`,type:"error"}),!1}}async function je(f,n){try{const ae=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:f,email:n})})).json();return ae.success?(k.value=f,u.value=n,i({message:"已恢复Git用户配置",type:"success"}),!0):(i({message:`恢复配置失败: ${ae.error}`,type:"error"}),!1)}catch(N){return i({message:`恢复配置失败: ${N.message}`,type:"error"}),!1}}async function Ue(){if(!V.value)return i({message:"当前目录不是Git仓库",type:"warning"}),!1;try{H.value=!0;const n=await(await fetch("/api/pull",{method:"POST"})).json();return n.success?(i({message:"拉取成功",type:"success"}),await Q(),!0):(n.needsMerge?i({message:`需要合并更改: ${n.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):i({message:`拉取失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`拉取失败: ${f.message}`,type:"error"}),!1}finally{H.value=!1}}async function Ne(){if(!V.value)return i({message:"当前目录不是Git仓库",type:"warning"}),!1;try{L.value=!0;const n=await(await fetch("/api/fetch-all",{method:"POST"})).json();return n.success?(i({message:"获取所有远程分支信息成功",type:"success"}),await Q(),!0):(i({message:`获取远程分支信息失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`获取远程分支信息失败: ${f.message}`,type:"error"}),!1}finally{L.value=!1}}function ze(){$&&$.disconnect();try{const f="http://localhost:3000";if(console.log("尝试连接Socket.IO服务器:",f),$=Kt(f,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!$){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO初始化成功，socket ID:",$.id||"未连接"),$.on("connect",()=>{console.log("成功连接到Socket.IO服务器"),te.value&&$&&$.emit("start_monitoring")}),$.on("disconnect",n=>{console.log("与Socket.IO服务器断开连接:",n)}),$.on("git_status_update",n=>{te.value&&(console.log("收到Git状态更新通知:",new Date().toLocaleTimeString()),n.status&&(se.value=n.status),n.porcelain!==void 0&&Ae(n.porcelain))}),$.on("monitoring_status",n=>{console.log("文件监控状态:",n.active?"已启动":"已停止")}),$.on("connect_error",n=>{console.error("Socket连接错误:",n.message)}),$.on("connect_timeout",()=>{console.error("Socket连接超时")}),$.on("reconnect",n=>{console.log(`Socket重连成功，尝试次数: ${n}`),te.value&&(console.log("重连后重新发送start_monitoring请求"),$==null||$.emit("start_monitoring"))}),$.on("reconnect_attempt",n=>{console.log(`Socket尝试重连，第 ${n} 次尝试`)}),$.on("reconnect_error",n=>{console.error("Socket重连错误:",n.message)}),$.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),$&&!$.connected&&(console.log("Socket未连接，尝试手动连接..."),$.connect())}catch(f){console.error("Socket.IO连接初始化失败:",f)}}function Ve(){if(console.log("toggleAutoUpdate调用，当前值:",te.value),!$){console.error("无法切换自动更新状态: socket连接不存在"),i.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),ze(),localStorage.setItem("zen-gitsync-auto-update",te.value.toString());return}try{te.value?(console.log("发送start_monitoring命令..."),$.emit("start_monitoring"),i.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),$.emit("stop_monitoring"),i.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",te.value.toString()),console.log("已保存自动更新设置到本地存储:",te.value)}catch(f){console.error("切换自动更新状态时出错:",f),i.error(`切换自动更新失败: ${f.message}`)}}function Ae(f){if(f===void 0||f===""){oe.value=[];return}const n=f.split(`
`),N=[];for(const ae of n){const m=ae.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(m){let r="";const x=m[1],T=x.charAt(0),le=x.charAt(1);T==="A"||T==="M"||T==="D"||T==="R"?r="added":T===" "&&le==="M"?r="modified":T===" "&&le==="D"?r="deleted":x==="??"?r="untracked":r="other",N.push({path:m[2],type:r})}}oe.value=N}async function Re(f=!0){if(!V.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{S.value=!0,console.log("开始加载提交历史...");const n=new Date().getTime(),ae=await(await fetch(`/api/log?page=1&_t=${n}`)).json();ae&&ae.data&&Array.isArray(ae.data)?(Y.value=[...ae.data],console.log(`提交历史加载完成，共 ${Y.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",ae),Y.value=[]),f&&i({message:"提交历史已更新",type:"success"})}catch(n){console.error("获取提交历史失败:",n),f&&i({message:`获取提交历史失败: ${n.message}`,type:"error"})}finally{S.value=!1}}async function we(){if(!V.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{p.value=!0;const n=await(await fetch("/api/status")).json();n.status&&(se.value=n.status,W.value={staged:n.status.staged||[],unstaged:n.status.unstaged||[],untracked:n.status.untracked||[]}),await Le()}catch(f){console.error("获取Git状态失败:",f),i({message:`获取Git状态失败: ${f.message}`,type:"error"})}finally{p.value=!1}}async function Le(){if(console.log("开始获取Git状态(porcelain格式)..."),!V.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const n=await(await fetch("/api/status_porcelain")).json();n.status!==void 0?Ae(n.status):oe.value=[]}catch(f){console.error("获取Git状态(porcelain)失败:",f),i({message:`获取Git状态(porcelain)失败: ${f.message}`,type:"error"}),oe.value=[]}}async function _(){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{D.value=!0;const n=await(await fetch("/api/add",{method:"POST"})).json();return n.success?(i({message:"文件已添加到暂存区",type:"success"}),we(),!0):(i({message:`添加文件失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`添加文件失败: ${f.message}`,type:"error"}),!1}finally{D.value=!1}}async function o(f){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{D.value=!0;const N=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:f})})).json();return N.success?(i({message:"文件已暂存",type:"success"}),we(),!0):(i({message:`暂存文件失败: ${N.error}`,type:"error"}),!1)}catch(n){return i({message:`暂存文件失败: ${n.message}`,type:"error"}),!1}finally{D.value=!1}}async function M(f){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{U.value=!0;const N=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:f})})).json();return N.success?(i({message:"已取消暂存文件",type:"success"}),we(),!0):(i({message:`取消暂存失败: ${N.error}`,type:"error"}),!1)}catch(n){return i({message:`取消暂存失败: ${n.message}`,type:"error"}),!1}finally{U.value=!1}}function G(f){return new Promise(n=>setTimeout(n,f))}async function re(f,n=!1){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{z.value=!0;const ae=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:f,hasNewlines:f.includes(`
`),noVerify:n})})).json();return ae.success?(i({message:"提交成功",type:"success"}),we(),Re(),Q(),!0):(i({message:`提交失败: ${ae.error}`,type:"error"}),!1)}catch(N){return i({message:`提交失败: ${N.message}`,type:"error"}),!1}finally{z.value=!1}}async function pe(){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{O.value=!0;const n=await(await fetch("/api/push",{method:"POST"})).json();return n.success?(i({message:"推送成功",type:"success"}),we(),Re(),Q(),!0):(i({message:`推送失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`推送失败: ${f.message}`,type:"error"}),!1}finally{O.value=!1}}async function ce(f,n=!1){return await _()?(await G(gt),await re(f,n)):!1}async function de(f,n=!1){try{return!await _()||(await G(gt),!await re(f,n))?!1:(await G(gt),await pe())}catch(N){try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&i({message:"已清理锁定文件，请重试操作",type:"warning"})}catch(ae){console.error("清理锁定文件失败:",ae)}return i({message:`操作失败: ${N.message}`,type:"error"}),we(),Re(),Q(),!1}}async function Se(){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{U.value=!0;const n=await(await fetch("/api/reset-head",{method:"POST"})).json();return n.success?(i({message:"已重置暂存区",type:"success"}),we(),!0):(i({message:`重置暂存区失败: ${n.error}`,type:"error"}),!1)}catch(f){return i({message:`重置暂存区失败: ${f.message}`,type:"error"}),!1}finally{U.value=!1}}async function ve(f){if(!V.value)return i.warning("当前目录不是Git仓库"),!1;try{U.value=!0;const N=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:f})})).json();return N.success?(i({message:`已重置分支 ${f} 到远程状态`,type:"success"}),we(),Re(),!0):(i({message:`重置分支失败: ${N.error}`,type:"error"}),!1)}catch(n){return i({message:`重置分支失败: ${n.message}`,type:"error"}),!1}finally{U.value=!1}}async function fe(){if(V.value)try{K.value=!0,console.log("获取远程仓库地址...");const n=await(await fetch("/api/remote-url")).json();n.success?(X.value=n.url||"",console.log(`获取到远程仓库地址: ${X.value}`)):(console.warn("获取远程仓库地址失败:",n.error),X.value="")}catch(f){console.error("获取远程仓库地址失败:",f),X.value=""}finally{K.value=!1}}async function He(){if(!X.value)return i({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(X.value),i({message:"已复制远程仓库地址",type:"success"}),!0}catch(f){return console.error("复制远程仓库地址失败:",f),i({message:`复制失败: ${f.message}`,type:"error"}),!1}}return tt(()=>{const f=localStorage.getItem("zen-gitsync-auto-update");f!==null&&(te.value=f==="true"),ze()}),Zt(()=>{$&&($.disconnect(),$=null)}),{currentBranch:me,allBranches:g,userName:k,userEmail:u,isChangingBranch:y,isCreatingBranch:E,isGitRepo:V,lastCheckedTime:F,branchAhead:C,branchBehind:q,hasUpstream:P,upstreamBranch:I,lastBranchStatusTime:j,lastBranchesTime:ne,remoteUrl:X,isLoadingRemoteUrl:K,log:Y,status:W,statusText:se,fileList:oe,isLoadingLog:S,isLoadingStatus:p,isAddingFiles:D,isCommiting:z,isResetting:U,autoUpdateEnabled:te,$reset:ie,checkGitRepo:Ce,getCurrentBranch:_e,getAllBranches:b,changeBranch:ge,getUserInfo:be,createBranch:ye,clearUserConfig:Me,restoreUserConfig:je,getBranchStatus:Q,gitPull:Ue,gitFetchAll:Ne,isPushing:O,isGitPulling:H,isGitFetching:L,initSocketConnection:ze,toggleAutoUpdate:Ve,parseStatusPorcelain:Ae,fetchLog:Re,fetchStatus:we,fetchStatusPorcelain:Le,addToStage:_,addFileToStage:o,unstageFile:M,commitChanges:re,pushToRemote:pe,addAndCommit:ce,addCommitAndPush:de,resetHead:Se,resetToRemote:ve,getRemoteUrl:fe,copyRemoteUrl:He}}),Cs={class:"card"},Ss={class:"status-header"},Ts={class:"header-actions"},xs={class:"card-content"},Vs={key:0,class:"status-box"},Ls={key:1},Bs={key:0,class:"branch-sync-status"},zs={class:"sync-status-content"},Rs={class:"status-badges"},Ds={class:"badge-content"},As={class:"badge-content"},Gs={key:1,class:"git-status-message"},Es={key:2,class:"file-list-container"},Ms={key:0,class:"file-group"},js={class:"file-list"},Us=["onClick"],Ps={class:"file-info"},Os={class:"file-path-container"},Fs={class:"file-name"},Is={class:"file-directory"},Ns={class:"file-actions"},Hs={key:1,class:"file-group"},Ws={class:"file-list"},Js=["onClick"],qs={class:"file-info"},Ys={class:"file-path-container"},Xs={class:"file-name"},Zs={class:"file-directory"},Ks={class:"file-actions"},Qs={key:2,class:"file-group"},ea={class:"file-list"},ta=["onClick"],sa={class:"file-info"},aa={class:"file-path-container"},la={class:"file-name"},oa={class:"file-directory"},na={class:"file-actions"},ia={key:3,class:"empty-status"},ra={class:"empty-icon"},ca={class:"branch-info"},ua={class:"diff-content"},da=["innerHTML"],fa={key:1,class:"no-diff"},pa={class:"file-navigation"},va={class:"file-counter"},ma=rt({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(me,{expose:g}){const k=me,u=et(),y=$e(()=>u.isLoadingStatus),E=c(""),V=c(""),F=c(!1),X=c(!1),K=c(-1),O=c(k.initialDirectory||"");async function H(){try{if(!O.value){const p=await(await fetch("/api/current_directory")).json();O.value=p.directory||"未知目录"}if(!u.isGitRepo)return;await u.fetchStatus(),await u.getBranchStatus(),i({message:"Git 状态已刷新",type:"success"})}catch(S){i({message:"刷新失败: "+S.message,type:"error"})}}function L(S){if(!S)return"";const p=S.split(`
`);function D(z){return z.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return p.map(z=>{const U=D(z);return z.startsWith("diff --git")?`<div class="diff-header">${U}</div>`:z.startsWith("---")?`<div class="diff-old-file">${U}</div>`:z.startsWith("+++")?`<div class="diff-new-file">${U}</div>`:z.startsWith("@@")?`<div class="diff-hunk-header">${U}</div>`:z.startsWith("+")?`<div class="diff-added">${U}</div>`:z.startsWith("-")?`<div class="diff-removed">${U}</div>`:`<div class="diff-context">${U}</div>`}).join("")}async function C(S){try{X.value=!0,E.value=S,K.value=u.fileList.findIndex(D=>D.path===S);const p=u.fileList[K.value];if(p&&p.type==="untracked"){try{const z=await(await fetch(`/api/file-content?file=${encodeURIComponent(S)}`)).json();z.success&&z.content?V.value=`diff --git a/${S} b/${S}
新文件: ${S}
--- /dev/null
+++ b/${S}
@@ -0,0 +1,${z.content.split(`
`).length} @@
`+z.content.split(`
`).map(U=>`+${U}`).join(`
`):V.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(D){console.error("获取未跟踪文件内容失败:",D),V.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}F.value=!0}else{const z=await(await fetch(`/api/diff?file=${encodeURIComponent(S)}`)).json();V.value=z.diff||"没有变更",F.value=!0}}catch(p){i({message:"获取文件差异失败: "+p.message,type:"error"}),V.value="获取差异失败: "+p.message}finally{X.value=!1}}async function q(){if(u.fileList.length===0||K.value<=0)return;const S=K.value-1,p=u.fileList[S];await C(p.path)}async function P(){if(u.fileList.length===0||K.value>=u.fileList.length-1)return;const S=K.value+1,p=u.fileList[S];await C(p.path)}function I(S){C(S.path)}async function j(S){await u.addFileToStage(S)}async function ne(S){await u.unstageFile(S)}async function $(){await H()}async function te(){try{await u.gitPull(),await H()}catch(S){console.error("拉取操作发生错误:",S)}}async function Y(){try{await u.gitFetchAll(),await H()}catch(S){console.error("获取远程分支信息操作发生错误:",S)}}async function W(S){try{await Ie.confirm(`确定要撤回文件 "${S}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const D=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();D.success?(i.success("已撤回文件修改"),await H()):i.error(D.error?`撤回失败: ${D.error}`:"撤回文件修改失败，请重试")}catch(p){if(p==="cancel"||p.message==="cancel")return;const D=p.message||"未知错误";D!=="undefined"?i.error(`撤回文件修改失败: ${D}`):i.error("撤回文件修改失败，请重试")}}function se(S){const p=S.split("/");return p[p.length-1]}function oe(S){const p=S.split("/");return p.length<=1?"":p.slice(0,-1).join("/")}return tt(()=>{H()}),qe(()=>u.autoUpdateEnabled,(S,p)=>{console.log(`自动更新状态变更: ${p} -> ${S}`),u.toggleAutoUpdate()},{immediate:!1}),g({refreshStatus:$}),(S,p)=>{const D=zt,z=_t,U=Be,ie=ut,Q=ct,Ce=dt,_e=Mt;return v(),w(he,null,[e("div",Cs,[e("div",Ss,[p[2]||(p[2]=e("h2",null,"Git 状态",-1)),e("div",Ts,[t(z,{content:l(u).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3},{default:s(()=>[t(D,{modelValue:l(u).autoUpdateEnabled,"onUpdate:modelValue":p[0]||(p[0]=b=>l(u).autoUpdateEnabled=b),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":l(Rt),"inactive-icon":l(Ct),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(z,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"primary",icon:l(Dt),circle:"",size:"small",onClick:te,loading:l(u).isGitPulling,disabled:!l(u).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(z,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"info",icon:l(At),circle:"",size:"small",onClick:Y,loading:l(u).isGitFetching},null,8,["icon","loading"])]),_:1}),t(z,{content:"刷新状态",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"primary",icon:l(Qt),circle:"",size:"small",onClick:$,loading:y.value},null,8,["icon","loading"])]),_:1})])]),e("div",xs,[l(u).isGitRepo?(v(),w("div",Ls,[l(u).hasUpstream&&(l(u).branchAhead>0||l(u).branchBehind>0)?(v(),w("div",Bs,[e("div",zs,[t(z,{content:"本地分支与远程分支的状态对比",placement:"top"},{default:s(()=>[e("div",Rs,[l(u).branchAhead>0?(v(),Z(Q,{key:0,size:"small",type:"warning",class:"status-badge"},{default:s(()=>[e("span",Ds,[t(ie,null,{default:s(()=>[t(l(es))]),_:1}),h(" 你的分支领先 'origin/"+B(l(u).currentBranch)+"' "+B(l(u).branchAhead)+" 个提交 ",1)])]),_:1})):J("",!0),l(u).branchBehind>0?(v(),Z(Q,{key:1,size:"small",type:"info",class:"status-badge"},{default:s(()=>[e("span",As,[t(ie,null,{default:s(()=>[t(l(Gt))]),_:1}),h(" 你的分支落后 'origin/"+B(l(u).currentBranch)+"' "+B(l(u).branchBehind)+" 个提交 ",1)])]),_:1})):J("",!0)])]),_:1})])])):J("",!0),!l(u).hasUpstream||l(u).branchAhead===0&&l(u).branchBehind===0?(v(),w("div",Gs,[e("p",null,[p[4]||(p[4]=h("当前工作在 ")),t(Q,{size:"small",type:"success"},{default:s(()=>[h(B(l(u).currentBranch),1)]),_:1}),p[5]||(p[5]=h(" 分支"))])])):J("",!0),l(u).fileList.length?(v(),w("div",Es,[l(u).fileList.some(b=>b.type==="added")?(v(),w("div",Ms,[p[7]||(p[7]=e("div",{class:"file-group-header"},"已暂存的更改",-1)),e("div",js,[(v(!0),w(he,null,Te(l(u).fileList.filter(b=>b.type==="added"),b=>(v(),w("div",{key:b.path,class:"file-item",onClick:ge=>I(b)},[e("div",Ps,[e("div",Os,[e("span",Fs,B(se(b.path)),1),e("span",Is,B(oe(b.path)),1)])]),e("div",Ns,[t(z,{content:"取消暂存",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"warning",size:"small",circle:"",onClick:Ye(ge=>ne(b.path),["stop"])},{default:s(()=>p[6]||(p[6]=[h("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,Us))),128))])])):J("",!0),l(u).fileList.some(b=>b.type==="modified"||b.type==="deleted")?(v(),w("div",Hs,[p[9]||(p[9]=e("div",{class:"file-group-header"},"未暂存的更改",-1)),e("div",Ws,[(v(!0),w(he,null,Te(l(u).fileList.filter(b=>b.type==="modified"||b.type==="deleted"),b=>(v(),w("div",{key:b.path,class:"file-item",onClick:ge=>I(b)},[e("div",qs,[e("div",{class:De(["file-status-indicator",b.type])},null,2),e("div",Ys,[e("span",Xs,B(se(b.path)),1),e("span",Zs,B(oe(b.path)),1)])]),e("div",Ks,[t(z,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"success",size:"small",circle:"",onClick:Ye(ge=>j(b.path),["stop"])},{default:s(()=>p[8]||(p[8]=[h("+")])),_:2},1032,["onClick"])]),_:2},1024),t(z,{content:"撤回修改",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"danger",size:"small",icon:l(wt),circle:"",onClick:Ye(ge=>W(b.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,Js))),128))])])):J("",!0),l(u).fileList.some(b=>b.type==="untracked")?(v(),w("div",Qs,[p[12]||(p[12]=e("div",{class:"file-group-header"},"未跟踪的文件",-1)),e("div",ea,[(v(!0),w(he,null,Te(l(u).fileList.filter(b=>b.type==="untracked"),b=>(v(),w("div",{key:b.path,class:"file-item",onClick:ge=>I(b)},[e("div",sa,[p[10]||(p[10]=e("div",{class:"file-status-indicator untracked"},null,-1)),e("div",aa,[e("span",la,B(se(b.path)),1),e("span",oa,B(oe(b.path)),1)])]),e("div",na,[t(z,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"success",size:"small",circle:"",onClick:Ye(ge=>j(b.path),["stop"])},{default:s(()=>p[11]||(p[11]=[h("+")])),_:2},1032,["onClick"])]),_:2},1024),t(z,{content:"删除文件",placement:"top","hide-after":1e3},{default:s(()=>[t(U,{type:"danger",size:"small",icon:l(Ct),circle:"",onClick:Ye(ge=>W(b.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,ta))),128))])])):J("",!0)])):l(u).isGitRepo?(v(),w("div",ia,[e("div",ra,[t(ie,null,{default:s(()=>[t(l(Et))]),_:1})]),p[15]||(p[15]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),p[16]||(p[16]=e("div",{class:"empty-subtext"},"工作区是干净的",-1)),e("div",ca,[e("p",null,[p[13]||(p[13]=h("当前工作在 ")),t(Q,{size:"small",type:"success"},{default:s(()=>[h(B(l(u).currentBranch),1)]),_:1}),p[14]||(p[14]=h(" 分支"))])])])):J("",!0)])):(v(),w("div",Vs,p[3]||(p[3]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))])]),t(Ce,{modelValue:F.value,"onUpdate:modelValue":p[1]||(p[1]=b=>F.value=b),title:`文件差异: ${E.value}`,width:"80%","destroy-on-close":"",class:"diff-dialog"},{footer:s(()=>[e("div",pa,[t(U,{type:"primary",icon:l(ts),onClick:q,disabled:K.value<=0||l(u).fileList.length===0,plain:"",class:"nav-button"},{default:s(()=>p[17]||(p[17]=[h(" 上一个文件 ")])),_:1},8,["icon","disabled"]),e("div",va,[t(Q,{type:"info",effect:"plain",class:"counter-tag"},{default:s(()=>[h(B(K.value+1)+" / "+B(l(u).fileList.length),1)]),_:1})]),t(U,{type:"primary",icon:l(St),onClick:P,disabled:K.value>=l(u).fileList.length-1||l(u).fileList.length===0,plain:"",class:"nav-button"},{icon:s(()=>[t(ie,{class:"el-icon--right"},{default:s(()=>[t(l(St))]),_:1})]),default:s(()=>[p[18]||(p[18]=h(" 下一个文件 "))]),_:1},8,["icon","disabled"])])]),default:s(()=>[Ke((v(),w("div",ua,[V.value?(v(),w("div",{key:0,innerHTML:L(V.value),class:"diff-formatted"},null,8,da)):(v(),w("div",fa,"该文件没有差异或是新文件"))])),[[_e,X.value]])]),_:1},8,["modelValue","title"])],64)}}}),ft=(me,g)=>{const k=me.__vccOpts||me;for(const[u,y]of g)k[u]=y;return k},ga=ft(ma,[["__scopeId","data-v-eb40f1c7"]]),Ft=Bt("config",()=>{const me=c(""),g=c([]),k=c([]),u=c([]),y=c(!1),E=c(!1),V=$e(()=>({defaultCommitMessage:me.value,descriptionTemplates:g.value,scopeTemplates:k.value,messageTemplates:u.value}));async function F(){if(E.value&&!y.value)return console.log("使用缓存的配置信息"),V.value;try{y.value=!0,console.log("加载配置信息...");const C=await(await fetch("/api/config/getConfig")).json();return me.value=C.defaultCommitMessage||"",g.value=C.descriptionTemplates||[],k.value=C.scopeTemplates||[],u.value=C.messageTemplates||[],E.value=!0,console.log("配置信息加载完成"),V.value}catch(L){return console.error("加载配置失败:",L),i.error(`加载配置失败: ${L.message}`),null}finally{y.value=!1}}async function X(L){try{const q=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:L})})).json();return q.success?(me.value=L,i.success("默认提交信息已保存"),!0):(i.error(`保存失败: ${q.error}`),!1)}catch(C){return i.error(`保存失败: ${C.message}`),!1}}async function K(L,C){try{const P=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:L,type:C})})).json();return P.success?(C==="description"?g.value.includes(L)||g.value.push(L):C==="scope"?k.value.includes(L)||k.value.push(L):C==="message"&&(u.value.includes(L)||u.value.push(L)),i.success("模板已保存"),!0):(i.error(`保存模板失败: ${P.error}`),!1)}catch(q){return i.error(`保存模板失败: ${q.message}`),!1}}async function O(L,C){try{const P=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:L,type:C})})).json();return P.success?(C==="description"?g.value=g.value.filter(I=>I!==L):C==="scope"?k.value=k.value.filter(I=>I!==L):C==="message"&&(u.value=u.value.filter(I=>I!==L)),i.success("模板已删除"),!0):(i.error(`删除模板失败: ${P.error}`),!1)}catch(q){return i.error(`删除模板失败: ${q.message}`),!1}}async function H(L,C,q){try{const I=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:L,newTemplate:C,type:q})})).json();if(I.success){if(q==="description"){const j=g.value.indexOf(L);j!==-1&&(g.value[j]=C)}else if(q==="scope"){const j=k.value.indexOf(L);j!==-1&&(k.value[j]=C)}else if(q==="message"){const j=u.value.indexOf(L);j!==-1&&(u.value[j]=C)}return i.success("模板已更新"),!0}else return i.error(`更新模板失败: ${I.error}`),!1}catch(P){return i.error(`更新模板失败: ${P.message}`),!1}}return{defaultCommitMessage:me,descriptionTemplates:g,scopeTemplates:k,messageTemplates:u,isLoading:y,isLoaded:E,config:V,loadConfig:F,saveDefaultMessage:X,saveTemplate:K,deleteTemplate:O,updateTemplate:H}}),ya={key:0,class:"pushing-indicator"},ha={key:0,class:"push-success-indicator"},_a={class:"card-content"},wa={class:"layout-container"},$a={key:0,class:"git-config-warning"},ba={class:"commit-section"},ka={class:"commit-options"},Ca={class:"options-row"},Sa={class:"commit-mode-toggle"},Ta={class:"no-verify-toggle"},xa={key:0,class:"commit-form"},Va={class:"description-container"},La={class:"input-actions"},Ba={class:"preview-section"},za={class:"preview-content code-command"},Ra={key:1,class:"standard-commit-form"},Da={class:"standard-commit-header"},Aa={class:"type-scope-container"},Ga={class:"scope-wrapper"},Ea={class:"description-container"},Ma={class:"advanced-fields"},ja={class:"preview-section"},Ua={class:"preview-content"},Pa={class:"preview-content code-command"},Oa={class:"actions-section"},Fa={class:"action-groups"},Ia={class:"operations-wrapper"},Na={class:"action-group"},Ha={class:"group-buttons"},Wa={key:0},Ja={key:0},qa={key:0},Ya={key:0},Xa={class:"action-group"},Za={class:"group-buttons"},Ka={class:"action-group reset-group"},Qa={class:"group-buttons"},el={key:0},tl={class:"template-container"},sl={class:"template-form"},al={class:"template-form-buttons"},ll={class:"template-list"},ol={class:"template-content"},nl={class:"template-actions"},il={class:"template-container"},rl={class:"template-form"},cl={class:"template-form-buttons"},ul={class:"template-list"},dl={class:"template-content"},fl={class:"template-actions"},pl={class:"template-container message-template-container"},vl={class:"template-form"},ml={class:"template-form-buttons"},gl={class:"templates-container"},yl={class:"message-templates-list"},hl={class:"templates-scroll-area"},_l={class:"template-content"},wl={class:"template-actions"},$l={class:"current-default-message"},bl={class:"default-message-content"},kl={class:"message-help-text"},Cl=rt({__name:"CommitForm",setup(me){const g=et(),k=Ft(),u=c(""),y=c(!1),E=c("输入提交信息..."),V=c(""),F=c(!1),X=c("feat"),K=c(""),O=c(""),H=c(""),L=c(""),C=c([]),q=c(!1),P=c(""),I=c(!1),j=c(""),ne=c(-1),$=c([]),te=c(!1),Y=c(""),W=c(!1),se=c(""),oe=c(-1),S=c(!1),p=c(""),D=c(!1),z=c(!1),U=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],ie=c([]),Q=c(!1),Ce=c(""),_e=c(-1);qe(F,d=>{localStorage.setItem("zen-gitsync-standard-commit",d.toString())}),qe(D,d=>{localStorage.setItem("zen-gitsync-skip-hooks",d.toString())});const b=$e(()=>{if(!F.value)return u.value||V.value;let d=`${X.value||""}`;return K.value&&(d+=`(${K.value})`),d+=`: ${O.value}`,H.value&&(d+=`

${H.value}`),L.value&&(d+=`

${L.value}`),d}),ge=$e(()=>{let d=`git commit -m "${b.value}"`;return D.value&&(d+=" --no-verify"),d});function be(){const d=k.config;d&&(E.value=`输入提交信息 (默认: ${d.defaultCommitMessage})`,V.value=d.defaultCommitMessage||"",d.descriptionTemplates&&Array.isArray(d.descriptionTemplates)&&(C.value=d.descriptionTemplates),d.scopeTemplates&&Array.isArray(d.scopeTemplates)&&($.value=d.scopeTemplates),d.messageTemplates&&Array.isArray(d.messageTemplates)&&(ie.value=d.messageTemplates))}async function ye(){if(!P.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(I.value)await Me();else{if(C.value.includes(P.value)){i({message:"该模板已存在",type:"warning"});return}await k.saveTemplate(P.value,"description")&&(C.value.includes(P.value)||C.value.push(P.value),C.value=[...C.value],P.value="")}}catch(d){i({message:`保存模板失败: ${d.message}`,type:"error"})}}async function Me(){if(!P.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(await k.updateTemplate(j.value,P.value,"description")){const a=C.value.indexOf(j.value);a!==-1&&(C.value[a]=P.value),C.value=[...C.value],I.value=!1,j.value="",ne.value=-1,P.value=""}}catch(d){i({message:`更新模板失败: ${d.message}`,type:"error"})}}function je(d,a){I.value=!0,j.value=d,ne.value=a,P.value=d}function Ue(){I.value=!1,j.value="",ne.value=-1,P.value=""}async function Ne(){if(!Y.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(W.value)await ze();else{if($.value.includes(Y.value)){i({message:"该模板已存在",type:"warning"});return}await k.saveTemplate(Y.value,"scope")&&($.value.includes(Y.value)||$.value.push(Y.value),$.value=[...$.value],Y.value="")}}catch(d){i({message:`保存模板失败: ${d.message}`,type:"error"})}}async function ze(){if(!Y.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(await k.updateTemplate(se.value,Y.value,"scope")){const a=$.value.indexOf(se.value);a!==-1&&($.value[a]=Y.value),$.value=[...$.value],W.value=!1,se.value="",oe.value=-1,Y.value=""}}catch(d){i({message:`更新模板失败: ${d.message}`,type:"error"})}}function Ve(d,a){W.value=!0,se.value=d,oe.value=a,Y.value=d}function Ae(){W.value=!1,se.value="",oe.value=-1,Y.value=""}async function Re(d){try{if(await Ie.confirm(`确定要删除描述模板 "${d}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await k.deleteTemplate(d,"description")){const Ge=C.value.indexOf(d);Ge!==-1&&C.value.splice(Ge,1),C.value=[...C.value]}}catch(a){if(a==="cancel")return;i({message:`删除模板失败: ${a.message}`,type:"error"})}}async function we(d){try{if(await Ie.confirm(`确定要删除作用域模板 "${d}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await k.deleteTemplate(d,"scope")){const Ge=$.value.indexOf(d);Ge!==-1&&$.value.splice(Ge,1),$.value=[...$.value]}}catch(a){if(a==="cancel")return;i({message:`删除模板失败: ${a.message}`,type:"error"})}}function Le(d){O.value=d,q.value=!1}function _(d){K.value=d,te.value=!1}function o(){q.value=!0}function M(){te.value=!0}async function G(){try{await g.addToStage()&&g.fetchStatus()}catch(d){i({message:`添加文件失败: ${d.message}`,type:"error"})}}async function re(){if(!b.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{await g.commitChanges(b.value,D.value)&&(f(),g.fetchStatus(),g.fetchLog(),g.getBranchStatus())}catch(d){i({message:`提交失败: ${d.message}`,type:"error"})}}function pe(){y.value=!0,setTimeout(()=>{y.value=!1},2e3)}async function ce(){try{await g.pushToRemote(),pe(),g.getBranchStatus()}catch(d){i({message:`推送失败: ${d.message}`,type:"error"})}finally{}}async function de(){try{await g.gitPull(),await g.fetchStatus()}catch(d){i({message:`拉取失败: ${d.message}`,type:"error"})}finally{}}async function Se(){try{await g.gitFetchAll(),await g.fetchStatus()}catch(d){i({message:`获取远程分支信息失败: ${d.message}`,type:"error"})}finally{}}async function ve(){if(!b.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{await g.addAndCommit(b.value,D.value),f(),g.fetchStatus(),g.fetchLog()}catch(d){i({message:`暂存并提交失败: ${d.message}`,type:"error"})}}async function fe(){if(!b.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{await g.addCommitAndPush(b.value,D.value),f(),pe()}catch(d){i({message:`暂存、提交并推送失败: ${d.message}`,type:"error"})}}async function He(){try{await Ie.confirm(`确定要重置当前分支 "${g.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await g.resetToRemote(g.currentBranch)&&(g.fetchStatus(),g.fetchLog())}catch(d){d!=="cancel"&&i({message:`重置到远程分支失败: ${d.message}`,type:"error"})}}function f(){u.value="",O.value="",H.value="",L.value=""}function n(){p.value=V.value,S.value=!0}async function N(){if(!p.value.trim()){i({message:"请输入默认提交信息",type:"warning"});return}try{await k.saveDefaultMessage(p.value)&&(V.value=p.value,E.value=`输入提交信息 (默认: ${p.value})`,S.value=!1)}catch(d){i({message:`保存默认提交信息失败: ${d.message}`,type:"error"})}}const ae=$e(()=>g.fileList.some(d=>["modified","deleted","untracked"].includes(d.type))),m=$e(()=>g.fileList.filter(d=>["modified","deleted","untracked"].includes(d.type)).length),r=$e(()=>g.fileList.filter(d=>d.type==="added").length),x=$e(()=>r.value>0),T=$e(()=>g.fileList.length>0),le=$e(()=>g.branchAhead>0),ue=$e(()=>g.branchBehind>0),xe=$e(()=>g.hasUpstream&&(le.value||x.value&&b.value.trim())),A=$e(()=>x.value),Je=$e(()=>g.hasUpstream&&(le.value||ue.value||T.value));async function pt(){if(!p.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(Q.value)await Nt();else{if(ie.value.includes(p.value)){i({message:"该模板已存在",type:"warning"});return}ie.value.push(p.value);const a=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:p.value,type:"message"})})).json();a.success?(i({message:"提交信息模板保存成功!",type:"success"}),p.value=""):i({message:"模板保存失败: "+a.error,type:"error"})}}catch(d){i({message:"模板保存失败: "+d.message,type:"error"})}}async function Nt(){try{if(_e.value>=0){const d=Ce.value,a=p.value;ie.value[_e.value]=a;const We=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:d,newTemplate:a,type:"message"})})).json();We.success?(i({message:"提交信息模板更新成功!",type:"success"}),Q.value=!1,Ce.value="",_e.value=-1,p.value=""):i({message:"模板更新失败: "+We.error,type:"error"})}}catch(d){i({message:"模板更新失败: "+d.message,type:"error"})}}function Ht(d,a){Q.value=!0,Ce.value=d,_e.value=a,p.value=d}function Wt(){Q.value=!1,Ce.value="",_e.value=-1,p.value=""}async function Jt(d){try{const a=ie.value.indexOf(d);a!==-1&&ie.value.splice(a,1);const We=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:d,type:"message"})})).json();We.success?i({message:"提交信息模板删除成功!",type:"success"}):i({message:"模板删除失败: "+We.error,type:"error"})}catch(a){i({message:"模板删除失败: "+a.message,type:"error"})}}function qt(d){u.value=d,p.value=d}return tt(async()=>{const d=localStorage.getItem("zen-gitsync-standard-commit");d!==null&&(F.value=d==="true");const a=localStorage.getItem("zen-gitsync-skip-hooks");a!==null&&(D.value=a==="true"),qe(()=>k.config,be,{immediate:!0}),k.config||await k.loadConfig()}),(d,a)=>{const Ge=ut,We=jt,bt=zt,Ee=_t,Pe=$t,ee=Be,Yt=nt,Xt=it,st=Pt,vt=os,at=Ot,mt=dt,kt=ct;return v(),w("div",{class:De(["card",{"is-pushing":l(g).isPushing}])},[a[58]||(a[58]=e("div",{class:"card-header"},[e("h2",null,"提交更改")],-1)),t(Tt,{name:"el-fade-in-linear"},{default:s(()=>[l(g).isPushing?(v(),w("div",ya,a[15]||(a[15]=[e("div",{class:"pushing-spinner"},[e("svg",{viewBox:"0 0 50 50",class:"circular"},[e("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1),e("div",{class:"pushing-text"},"正在推送...",-1)]))):J("",!0)]),_:1}),t(Tt,{name:"el-fade-in-linear"},{default:s(()=>[y.value?(v(),w("div",ha,[t(Ge,{class:"push-success-icon"},{default:s(()=>[t(l(Rt))]),_:1}),a[16]||(a[16]=e("div",{class:"push-success-text"},"推送成功!",-1))])):J("",!0)]),_:1}),e("div",_a,[e("div",wa,[l(g).userName===""||l(g).userEmail===""?(v(),w("div",$a,[t(We,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:s(()=>a[17]||(a[17]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(v(),w(he,{key:1},[e("div",ba,[e("div",ka,[e("div",Ca,[e("div",Sa,[t(bt,{modelValue:F.value,"onUpdate:modelValue":a[0]||(a[0]=R=>F.value=R),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),e("div",Ta,[t(Ee,{content:"跳过 Git 钩子检查 (--no-verify)",placement:"top"},{default:s(()=>[t(bt,{modelValue:D.value,"onUpdate:modelValue":a[1]||(a[1]=R=>D.value=R),"active-text":"跳过钩子 (--no-verify)"},null,8,["modelValue"])]),_:1})])])]),F.value?(v(),w("div",Ra,[e("div",Da,[e("div",Aa,[t(Xt,{modelValue:X.value,"onUpdate:modelValue":a[3]||(a[3]=R=>X.value=R),placeholder:"提交类型",class:"type-select",clearable:""},{default:s(()=>[(v(),w(he,null,Te(U,R=>t(Yt,{key:R.value,label:R.label,value:R.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",Ga,[t(Pe,{modelValue:K.value,"onUpdate:modelValue":a[4]||(a[4]=R=>K.value=R),placeholder:"作用域（可选）",class:"scope-input",clearable:""},null,8,["modelValue"]),t(ee,{type:"primary",icon:l(Qe),circle:"",size:"small",class:"settings-button",onClick:M},null,8,["icon"])])]),e("div",Ea,[t(Pe,{modelValue:O.value,"onUpdate:modelValue":a[5]||(a[5]=R=>O.value=R),placeholder:"简短描述（必填）",class:"description-input",clearable:""},null,8,["modelValue"]),t(ee,{type:"primary",icon:l(Qe),circle:"",size:"small",class:"settings-button",onClick:o},null,8,["icon"])])]),e("div",{class:"advanced-options-toggle",onClick:a[6]||(a[6]=R=>z.value=!z.value)},[e("span",null,B(z.value?"收起":"正文及页脚"),1),t(Ge,{class:De(["toggle-icon",{"is-active":z.value}])},{default:s(()=>[t(l(Gt))]),_:1},8,["class"])]),Ke(e("div",Ma,[t(Pe,{modelValue:H.value,"onUpdate:modelValue":a[7]||(a[7]=R=>H.value=R),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(Pe,{modelValue:L.value,"onUpdate:modelValue":a[8]||(a[8]=R=>L.value=R),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[Ut,z.value]]),e("div",ja,[a[19]||(a[19]=e("div",{class:"preview-title"},"提交信息预览：",-1)),e("pre",Ua,B(b.value),1),a[20]||(a[20]=e("div",{class:"preview-title",style:{"margin-top":"10px"}},"Git提交命令预览：",-1)),e("pre",Pa,B(ge.value),1)])])):(v(),w("div",xa,[e("div",Va,[t(Pe,{modelValue:u.value,"onUpdate:modelValue":a[2]||(a[2]=R=>u.value=R),placeholder:E.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input"},null,8,["modelValue","placeholder"]),e("div",La,[t(ee,{type:"primary",icon:l(Qe),circle:"",size:"small",class:"settings-button",onClick:n},null,8,["icon"])])]),e("div",Ba,[a[18]||(a[18]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),e("pre",za,'git commit -m "'+B(b.value||"<提交信息>")+'"'+B(D.value?" --no-verify":""),1)])]))]),e("div",Oa,[a[33]||(a[33]=e("h3",null,"Git 操作",-1)),e("div",Fa,[e("div",Ia,[e("div",Na,[a[26]||(a[26]=e("div",{class:"group-title"},"基础操作",-1)),e("div",Ha,[t(Ee,{content:ae.value?`暂存${m.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"primary",onClick:G,loading:l(g).isAddingFiles,disabled:!ae.value,class:"action-button"},{default:s(()=>[a[21]||(a[21]=h(" 暂存更改 ")),m.value>0?(v(),w("span",Wa,"("+B(m.value)+")",1)):J("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Ee,{content:x.value?`提交${r.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"primary",onClick:re,loading:l(g).isLoadingStatus,disabled:!x.value||!b.value.trim(),class:"action-button"},{default:s(()=>[a[22]||(a[22]=h(" 提交 ")),r.value>0?(v(),w("span",Ja,"("+B(r.value)+")",1)):J("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Ee,{content:le.value?`推送${l(g).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"primary",icon:l(ss),onClick:ce,loading:l(g).isPushing,disabled:!xe.value,class:De(["action-button","push-button",{"is-loading":l(g).isPushing}]),style:ht(le.value?{backgroundColor:"#67c23a !important",borderColor:"#67c23a !important"}:{})},{default:s(()=>[a[23]||(a[23]=h(" 推送 ")),le.value?(v(),w("span",qa,"("+B(l(g).branchAhead)+")",1)):J("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),t(Ee,{content:ue.value?`拉取${l(g).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"primary",icon:l(Dt),onClick:de,loading:l(g).isGitPulling,disabled:!l(g).hasUpstream,class:"action-button",style:ht(ue.value?{color:"white",backgroundColor:"#E6A23C",borderColor:"#E6A23C"}:{})},{default:s(()=>[a[24]||(a[24]=h(" 拉取 ")),ue.value?(v(),w("span",Ya,"("+B(l(g).branchBehind)+")",1)):J("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Ee,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"info",icon:l(At),onClick:Se,loading:l(g).isGitFetching,class:"action-button"},{default:s(()=>a[25]||(a[25]=[h(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Xa,[a[29]||(a[29]=e("div",{class:"group-title"},"组合操作",-1)),e("div",Za,[t(Ee,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"primary",icon:l(lt),onClick:ve,loading:l(g).isAddingFiles||l(g).isCommiting,disabled:!ae.value||!b.value.trim(),class:"action-button"},{default:s(()=>a[27]||(a[27]=[h(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(Ee,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"success",icon:l(as),onClick:fe,loading:l(g).isAddingFiles||l(g).isCommiting||l(g).isPushing,disabled:!T.value||!b.value.trim()||!l(g).hasUpstream,class:De(["action-button","one-click-push",{"is-loading":l(g).isAddingFiles||l(g).isCommiting||l(g).isPushing}])},{default:s(()=>a[28]||(a[28]=[h(" 一键推送 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),e("div",Ka,[a[32]||(a[32]=e("div",{class:"group-title"},"重置操作",-1)),e("div",Qa,[t(Ee,{content:A.value?`撤销${r.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"warning",icon:l(wt),onClick:l(g).resetHead,loading:l(g).isResetting,disabled:!A.value,class:"action-button reset-button"},{default:s(()=>[a[30]||(a[30]=h(" 重置暂存区 ")),r.value>0?(v(),w("span",el,"("+B(r.value)+")",1)):J("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Ee,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:s(()=>[t(ee,{type:"danger",icon:l(ls),onClick:He,loading:l(g).isResetting,disabled:!Je.value,class:"action-button danger-button"},{default:s(()=>a[31]||(a[31]=[h(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])])])])],64))]),t(mt,{title:"简短描述模板设置",modelValue:q.value,"onUpdate:modelValue":a[10]||(a[10]=R=>q.value=R),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:s(()=>[e("div",tl,[e("div",sl,[t(Pe,{modelValue:P.value,"onUpdate:modelValue":a[9]||(a[9]=R=>P.value=R),placeholder:I.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",al,[I.value?(v(),Z(ee,{key:0,onClick:Ue},{default:s(()=>a[34]||(a[34]=[h("取消")])),_:1})):J("",!0),t(ee,{type:"primary",onClick:ye,disabled:!P.value.trim()},{default:s(()=>[h(B(I.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",ll,[a[38]||(a[38]=e("h3",null,"已保存模板",-1)),C.value.length===0?(v(),Z(st,{key:0,description:"暂无保存的模板"})):J("",!0),(v(!0),w(he,null,Te(C.value,(R,Oe)=>(v(),Z(at,{key:Oe,class:"template-item"},{default:s(()=>[t(vt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",ol,B(R),1),e("div",nl,[t(ee,{type:"primary",size:"small",onClick:Fe=>Le(R)},{default:s(()=>a[35]||(a[35]=[h("使用")])),_:2},1032,["onClick"]),t(ee,{type:"warning",size:"small",icon:l(lt),onClick:Fe=>je(R,Oe)},{default:s(()=>a[36]||(a[36]=[h("编辑")])),_:2},1032,["icon","onClick"]),t(ee,{type:"danger",size:"small",onClick:Fe=>Re(R)},{default:s(()=>a[37]||(a[37]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(mt,{title:"作用域模板设置",modelValue:te.value,"onUpdate:modelValue":a[12]||(a[12]=R=>te.value=R),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:s(()=>[e("div",il,[e("div",rl,[t(Pe,{modelValue:Y.value,"onUpdate:modelValue":a[11]||(a[11]=R=>Y.value=R),placeholder:W.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",cl,[W.value?(v(),Z(ee,{key:0,onClick:Ae},{default:s(()=>a[39]||(a[39]=[h("取消")])),_:1})):J("",!0),t(ee,{type:"primary",onClick:Ne,disabled:!Y.value.trim()},{default:s(()=>[h(B(W.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",ul,[a[43]||(a[43]=e("h3",null,"已保存作用域",-1)),$.value.length===0?(v(),Z(st,{key:0,description:"暂无保存的作用域"})):J("",!0),(v(!0),w(he,null,Te($.value,(R,Oe)=>(v(),Z(at,{key:Oe,class:"template-item"},{default:s(()=>[t(vt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",dl,B(R),1),e("div",fl,[t(ee,{type:"primary",size:"small",onClick:Fe=>_(R)},{default:s(()=>a[40]||(a[40]=[h("使用")])),_:2},1032,["onClick"]),t(ee,{type:"warning",size:"small",icon:l(lt),onClick:Fe=>Ve(R,Oe)},{default:s(()=>a[41]||(a[41]=[h("编辑")])),_:2},1032,["icon","onClick"]),t(ee,{type:"danger",size:"small",onClick:Fe=>we(R)},{default:s(()=>a[42]||(a[42]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(mt,{title:"默认提交信息设置",modelValue:S.value,"onUpdate:modelValue":a[14]||(a[14]=R=>S.value=R),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:s(()=>[e("div",pl,[e("div",vl,[t(Pe,{modelValue:p.value,"onUpdate:modelValue":a[13]||(a[13]=R=>p.value=R),placeholder:Q.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",ml,[Q.value?(v(),Z(ee,{key:0,onClick:Wt},{default:s(()=>a[44]||(a[44]=[h("取消")])),_:1})):J("",!0),t(ee,{type:"primary",onClick:pt,disabled:!p.value.trim()},{default:s(()=>[h(B(Q.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),t(ee,{type:"success",onClick:N,disabled:!p.value.trim()},{default:s(()=>a[45]||(a[45]=[h(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),e("div",gl,[e("div",yl,[a[49]||(a[49]=e("h3",null,"已保存模板",-1)),e("div",hl,[ie.value.length===0?(v(),Z(st,{key:0,description:"暂无保存的模板"})):J("",!0),(v(!0),w(he,null,Te(ie.value,(R,Oe)=>(v(),Z(at,{key:Oe,class:"template-item"},{default:s(()=>[t(vt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",_l,B(R),1),e("div",wl,[t(ee,{type:"primary",size:"small",onClick:Fe=>qt(R)},{default:s(()=>a[46]||(a[46]=[h("使用")])),_:2},1032,["onClick"]),t(ee,{type:"warning",size:"small",icon:l(lt),onClick:Fe=>Ht(R,Oe)},{default:s(()=>a[47]||(a[47]=[h("编辑")])),_:2},1032,["icon","onClick"]),t(ee,{type:"danger",size:"small",onClick:Fe=>Jt(R)},{default:s(()=>a[48]||(a[48]=[h("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),e("div",$l,[a[57]||(a[57]=e("h3",null,"当前默认提交信息",-1)),V.value?(v(),Z(at,{key:0,class:"default-message-card"},{default:s(()=>[e("div",bl,B(V.value),1)]),_:1})):(v(),Z(st,{key:1,description:"尚未设置默认提交信息","image-size":100})),e("div",kl,[a[55]||(a[55]=e("h4",null,"关于默认提交信息",-1)),a[56]||(a[56]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[a[52]||(a[52]=h("你可以通过点击左侧模板的")),t(kt,{size:"small",type:"primary"},{default:s(()=>a[50]||(a[50]=[h("使用")])),_:1}),a[53]||(a[53]=h("按钮先选择喜欢的模板，然后点击上方")),t(kt,{size:"small",type:"success"},{default:s(()=>a[51]||(a[51]=[h("设为默认提交信息")])),_:1}),a[54]||(a[54]=h("按钮保存。"))])])])])])]),_:1},8,["modelValue"])])],2)}}}),Sl=ft(Cl,[["__scopeId","data-v-80b3434c"]]),Tl={class:"card"},xl={key:0,class:"refresh-notification"},Vl={class:"log-header"},Ll={class:"log-actions"},Bl={key:1,class:"filter-panel-header"},zl={class:"filter-form"},Rl={class:"filter-item"},Dl={class:"filter-item"},Al={class:"filter-item"},Gl={class:"filter-item"},El={class:"filter-actions"},Ml={key:0},jl={key:1,class:"content-area-content"},Ul={key:0,class:"graph-view"},Pl={key:0,class:"commit-count"},Ol={class:"graph-controls"},Fl={class:"zoom-controls"},Il={class:"scale-info"},Nl={key:1,class:"table-view-container"},Hl=["onClick"],Wl={class:"author-name"},Jl={key:0,class:"branch-container"};const ql={class:"commit-detail-container"},Yl={key:0,class:"commit-info"},Xl={class:"commit-info-header"},Zl={class:"info-item"},Kl={class:"item-value"},Ql={class:"info-item"},eo={class:"item-value"},to={class:"info-item"},so={class:"item-value"},ao={class:"commit-message-container"},lo=["innerHTML"],oo={class:"commit-files-diff"},no={class:"files-list"},io={key:1},ro=["onClick"],co={class:"file-diff"},uo={key:0},fo={key:1},po=["innerHTML"],Ze=.5,ot=1.5,yt=.1,vo=rt({__name:"LogList",setup(me,{expose:g}){const k=et();let u=[];const y=c(u),E=c(""),V=c(!1),F=$e(()=>k.isLoadingLog||V.value),X=c(!1),K=c(0),O=c(!1),H=c(null),L=c(1),C=c(!0),q=c(!1),P=c(null),I=c(!1),j=c(null),ne=c([]),$=c(""),te=c(!1),Y=c(""),W=c(1),se=c(!1),oe=c(!1),S=c([]),p=c(""),D=c(null),z=c([]),U=c([]),ie=c([]),Q=c(!1),Ce=c(0),_e=c(0),b=c(null),ge=$e(()=>y.value);async function be(m=!1,r=1){if(!et().isGitRepo){E.value="当前目录不是Git仓库";return}try{r>1?q.value=!0:V.value=!0,console.log(`加载提交历史: page=${r}, all=${m}`);const T=new URLSearchParams;T.append("page",r.toString()),T.append("all",m.toString()),S.value.length>0&&T.append("author",S.value.join(",")),U.value.length>0&&T.append("branch",U.value.join(",")),p.value&&T.append("message",p.value),D.value&&Array.isArray(D.value)&&D.value.length===2&&(T.append("dateFrom",D.value[0]),T.append("dateTo",D.value[1])),T.append("_t",Date.now().toString());const ue=await(await fetch(`/api/log?${T.toString()}`)).json();if(!ue||!ue.data||!Array.isArray(ue.data)){console.error("API返回的数据格式不正确:",ue),E.value="加载提交历史失败: 服务器返回数据格式不正确";return}const xe=r>1;xe?ue.data.forEach(A=>u.push(A)):(u.length=0,ue.data.forEach(A=>u.push(A))),y.value=[...u],L.value=r,K.value=ue.total||u.length,C.value=ue.hasMore===!0,C.value||console.log("已加载所有提交记录"),xe||(se.value=!0,setTimeout(()=>{se.value=!1},2e3)),!xe&&O.value&&setTimeout(ye,0),E.value=""}catch(T){E.value="加载提交历史失败: "+(T instanceof Error?T.message:String(T)),console.error("加载日志失败:",T),r>1&&(C.value=!1)}finally{r>1?q.value=!1:V.value=!1}}async function ye(){if(console.log(`开始渲染图表...数据长度: ${u.length}`),!H.value){console.error("图表容器未找到");return}if(u.length===0){console.error("没有日志数据可渲染");return}try{H.value.innerHTML="",console.log(`创建gitgraph实例，分支: ${k.currentBranch||"main"}`);const m=hs(H.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),r={},x=m.branch(k.currentBranch||"main");r[k.currentBranch||"main"]=x,console.log(`开始创建提交图...共${u.length}条提交`),u.forEach((T,le)=>{let ue=x;if(T.branch){const xe=Ue(T.branch.split(",")[0]);r[xe]||(r[xe]=m.branch(xe)),ue=r[xe]}ue.commit({hash:T.hash,subject:T.message,author:`${T.author} <${T.email}>`}),le%10===0&&console.log(`已渲染 ${le+1}/${u.length} 个提交`)}),console.log("图表渲染完成"),setTimeout(()=>{G()},100)}catch(m){console.error("渲染图表失败:",m),E.value="渲染图表失败: "+(m instanceof Error?m.message:String(m))}}function Me(){O.value=!O.value,O.value&&u.length>0&&setTimeout(ye,0)}function je(){be(!X.value)}function Ue(m){return m.includes("HEAD -> ")?m.replace("HEAD -> ",""):m.includes("origin/")?m:m.trim()}function Ne(m){return m.includes("HEAD")?"success":m.includes("origin/")?"warning":"info"}const ze=c(null),Ve=c(null);function Ae(m){if(O.value||!C.value||q.value||F.value)return;const r=m.target,{scrollTop:x,scrollHeight:T,clientHeight:le}=r,ue=T-x-le;console.log("表格滚动:",{scrollTop:x,scrollHeight:T,clientHeight:le,scrollDistance:ue}),ue<=20&&(console.log("已滚动到底部，加载更多数据"),Se())}function Re(){ze.value&&(Ve.value=ze.value.$el.querySelector(".el-table__body-wrapper"),Ve.value?(console.log("添加表格滚动监听"),Ve.value.addEventListener("scroll",Ae,!0)):console.error("未找到表格的body-wrapper元素"))}function we(){Ve.value&&(console.log("移除表格滚动监听"),Ve.value.removeEventListener("scroll",Ae,!0),Ve.value=null)}tt(()=>{k.isGitRepo?(k.log.length>0?(console.log("使用已加载的日志数据"),u.length=0,k.log.forEach(m=>u.push(m)),K.value=k.log.length,O.value&&setTimeout(()=>{console.log(`准备渲染图表，数据长度: ${u.length}`),ye()},100)):(console.log("初始加载日志数据"),be()),He()):E.value="当前目录不是Git仓库",xt(()=>{setTimeout(()=>{Re()},500)})}),qe(()=>k.allBranches,m=>{m&&m.length>0?(ie.value=[...m].sort(),console.log(`分支数据更新，共 ${ie.value.length} 个分支`)):(ie.value=[],console.warn("gitStore 中没有分支数据"))},{immediate:!0}),ns(()=>{we(),P.value!==null&&(window.clearInterval(P.value),P.value=null)});async function Le(){await k.fetchLog(!0),u.length=0,k.log.forEach(m=>u.push(m)),y.value=[...u],K.value=k.log.length,L.value=1,C.value=!1,se.value=!0,setTimeout(()=>{se.value=!1},2e3),O.value&&(await xt(),ye())}qe(()=>k.log,m=>{console.log("监听到gitStore.log变化，更新图表数据");try{u.length=0,Array.isArray(m)&&m.forEach(r=>r&&u.push(r)),K.value=u.length,L.value=1,y.value=[...u],se.value=!0,setTimeout(()=>{se.value=!1},2e3),console.log(`数据更新完成，共${y.value.length}条记录，准备渲染图表`),O.value&&u.length>0&&setTimeout(ye,0)}catch(r){console.error("更新日志数据失败:",r)}},{immediate:!0}),g({refreshLog:Le});function _(){W.value<ot&&(W.value=Math.min(ot,W.value+yt),M())}function o(){W.value>Ze&&(W.value=Math.max(Ze,W.value-yt),M())}function M(){if(!H.value)return;const m=H.value.querySelector("svg");m&&(m.style.transform=`scale(${W.value})`,m.style.transformOrigin="top left")}function G(){if(!H.value)return;const m=H.value.querySelector("svg");if(!m)return;const r=m.getBoundingClientRect().width/W.value,x=H.value.clientWidth;r>x?W.value=Math.max(Ze,x/r):W.value=1,M()}async function re(m){if(m){j.value=m,I.value=!0,te.value=!0,ne.value=[],$.value="",Y.value="",console.log("提交详情对象:",JSON.stringify(m,null,2)),console.log("哈希值类型和长度:",typeof m.hash,m.hash?m.hash.length:0),console.log("提交信息类型和长度:",typeof m.message,m.message?m.message.length:0),console.log("提交分支:",m.branch);try{if(console.log(`获取提交详情: ${m.hash}`),!m.hash||m.hash.length<7){console.error("无效的提交哈希值:",m.hash),$.value="无效的提交哈希值",te.value=!1;return}const r=await fetch(`/api/commit-files?hash=${m.hash}`);console.log("API响应状态: ",r.status);const x=await r.json();console.log("文件列表数据: ",x),x.success&&Array.isArray(x.files)?(ne.value=x.files,ne.value.length>0?await pe(m.hash,ne.value[0]):(console.log("没有找到变更文件"),$.value="该提交没有变更文件")):(console.error("获取提交文件列表失败:",x.error||"未知错误"),$.value=`获取文件列表失败: ${x.error||"未知错误"}`)}catch(r){console.error("获取提交详情失败:",r),$.value=`获取提交详情失败: ${r.message}`}finally{te.value=!1}}}async function pe(m,r){te.value=!0,Y.value=r;try{console.log(`获取文件差异: hash=${m}, file=${r}`);const x=await fetch(`/api/commit-file-diff?hash=${m}&file=${encodeURIComponent(r)}`);console.log("差异API响应状态: ",x.status);const T=await x.json();console.log("差异数据: ",T.success,typeof T.diff),T.success?$.value=T.diff||"没有变更内容":(console.error("获取差异失败: ",T.error),$.value=`获取差异失败: ${T.error||"未知错误"}`)}catch(x){console.error("获取文件差异失败:",x),$.value=`获取差异失败: ${x.message}`}finally{te.value=!1}}function ce(m){if(!m)return"";const r=m.split(`
`);function x(T){return T.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return r.map(T=>{const le=x(T);return T.startsWith("diff --git")?`<div class="diff-header">${le}</div>`:T.startsWith("---")?`<div class="diff-old-file">${le}</div>`:T.startsWith("+++")?`<div class="diff-new-file">${le}</div>`:T.startsWith("@@")?`<div class="diff-hunk-header">${le}</div>`:T.startsWith("+")?`<div class="diff-added">${le}</div>`:T.startsWith("-")?`<div class="diff-removed">${le}</div>`:`<div class="diff-context">${le}</div>`}).join("")}function de(m){return m?(console.log("格式化前的提交信息:",m),console.log("提交信息中的换行符数量:",(m.match(/\n/g)||[]).length),m.trim()):"(无提交信息)"}function Se(){!C.value||q.value||F.value||(console.log(`加载更多日志，页码: ${L.value+1}`),be(X.value,L.value+1))}function ve(){S.value=[],U.value=[],p.value="",D.value=null,L.value=1,be(X.value,1)}function fe(){L.value=1,be(X.value,1)}async function He(){try{console.log("获取所有可用作者...");const r=await(await fetch("/api/authors")).json();r.success&&Array.isArray(r.authors)?(z.value=r.authors.sort(),console.log(`获取到${z.value.length}位作者`)):(console.warn("从API获取作者列表失败，将从现有日志中提取作者列表"),f())}catch(m){console.error("获取作者列表失败:",m),f()}}function f(){const m=new Set;y.value.forEach(r=>{r.author&&m.add(r.author)}),z.value=Array.from(m).sort(),console.log(`从现有日志中提取了${z.value.length}位作者`)}function n(m,r,x){console.log("handleContextMenu",m,r,x),x.preventDefault(),Ce.value=x.clientY,_e.value=x.clientX,b.value=m,Q.value=!0;const T=()=>{Q.value=!1,document.removeEventListener("click",T)};setTimeout(()=>{document.addEventListener("click",T)},0)}async function N(m){if(m)try{await Ie.confirm(`确定要撤销提交 ${m.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const x=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:m.hash})})).json();x.success?(i.success(x.message||"已成功撤销提交"),Le(),k.fetchStatus(),k.getBranchStatus()):i.error(x.error||"撤销提交失败")}catch(r){r!=="cancel"&&(console.error("撤销提交出错:",r),i.error("撤销提交失败: "+(r.message||r)))}}async function ae(m){if(m)try{await Ie.confirm(`确定要将提交 ${m.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const x=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:m.hash})})).json();x.success?(i.success(x.message||"已成功Cherry-Pick提交"),Le(),k.fetchStatus(),k.getBranchStatus()):i.error(x.error||"Cherry-Pick提交失败")}catch(r){r!=="cancel"&&(console.error("Cherry-Pick提交出错:",r),i.error("Cherry-Pick提交失败: "+(r.message||r)))}}return(m,r)=>{var xe;const x=ut,T=_t,le=Pt,ue=Mt;return v(),w(he,null,[e("div",Tl,[se.value?(v(),w("div",xl," 提交历史已刷新 ")):J("",!0),e("div",Vl,[r[12]||(r[12]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",Ll,[O.value?J("",!0):(v(),Z(l(Be),{key:0,type:oe.value?"primary":"default",size:"small",onClick:r[0]||(r[0]=A=>oe.value=!oe.value),class:De(["action-button filter-button",{"active-filter":oe.value}])},{icon:s(()=>[t(x,null,{default:s(()=>[t(l(rs))]),_:1})]),default:s(()=>[r[11]||(r[11]=h(" 筛选 ")),ge.value.length!==y.value.length?(v(),Z(l(is),{key:0,value:ge.value.length,class:"filter-badge"},null,8,["value"])):J("",!0)]),_:1},8,["type","class"])),t(l(Be),{type:"primary",size:"small",onClick:Me,class:De(["action-button view-mode-button",{"active-view":O.value}])},{icon:s(()=>[t(x,null,{default:s(()=>[(v(),Z(Vt(O.value?l(Et):l(cs))))]),_:1})]),default:s(()=>[h(" "+B(O.value?"表格视图":"图表视图"),1)]),_:1},8,["class"]),t(l(Be),{type:"success",size:"small",onClick:je,loading:F.value,class:De(["action-button commit-display-button",{"active-commits":X.value}])},{icon:s(()=>[t(x,null,{default:s(()=>[(v(),Z(Vt(X.value?l(us):l(ds))))]),_:1})]),default:s(()=>[h(" "+B(X.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),t(l(Be),{circle:"",size:"small",onClick:r[1]||(r[1]=A=>Le()),class:De([{"refresh-button-animated":se.value},"action-button refresh-button"])},{default:s(()=>[F.value?(v(),Z(x,{key:1},{default:s(()=>[t(l(fs))]),_:1})):(v(),Z(x,{key:0},{default:s(()=>[t(l(wt))]),_:1}))]),_:1},8,["class"])])]),oe.value&&!O.value?(v(),w("div",Bl,[e("div",zl,[e("div",Rl,[t(l(it),{modelValue:S.value,"onUpdate:modelValue":r[2]||(r[2]=A=>S.value=A),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>r[13]||(r[13]=[e("span",{class:"compact-label"},"作者",-1)])),default:s(()=>[(v(!0),w(he,null,Te(z.value,A=>(v(),Z(l(nt),{key:A,label:A,value:A},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Dl,[t(l(it),{modelValue:U.value,"onUpdate:modelValue":r[3]||(r[3]=A=>U.value=A),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>r[14]||(r[14]=[e("span",{class:"compact-label"},"分支",-1)])),default:s(()=>[(v(!0),w(he,null,Te(ie.value,A=>(v(),Z(l(nt),{key:A,label:A,value:A},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Al,[t(l($t),{modelValue:p.value,"onUpdate:modelValue":r[4]||(r[4]=A=>p.value=A),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:s(()=>r[15]||(r[15]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",Gl,[t(l(ps),{modelValue:D.value,"onUpdate:modelValue":r[5]||(r[5]=A=>D.value=A),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:s(()=>r[16]||(r[16]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",El,[t(l(Be),{type:"primary",size:"small",onClick:fe,class:"filter-action-button"},{default:s(()=>r[17]||(r[17]=[h("应用")])),_:1}),t(l(Be),{type:"info",size:"small",onClick:ve,class:"filter-action-button"},{default:s(()=>r[18]||(r[18]=[h("重置")])),_:1})])])])):J("",!0),e("div",{class:De(["content-area",{"with-filter":oe.value&&!O.value}])},[E.value?(v(),w("div",Ml,B(E.value),1)):(v(),w("div",jl,[O.value?(v(),w("div",Ul,[l(u).length>0?(v(),w("div",Pl," 显示 "+B(l(u).length)+" 条提交记录 "+B(X.value?"(全部)":"(分页加载，每页100条)"),1)):J("",!0),e("div",Ol,[e("div",Fl,[t(l(Be),{type:"primary",circle:"",size:"small",onClick:o,disabled:W.value<=Ze},{default:s(()=>[t(x,null,{default:s(()=>[t(l(vs))]),_:1})]),_:1},8,["disabled"]),t(l(ms),{modelValue:W.value,"onUpdate:modelValue":r[6]||(r[6]=A=>W.value=A),min:Ze,max:ot,step:yt,onChange:M,class:"zoom-slider"},null,8,["modelValue"]),t(l(Be),{type:"primary",circle:"",size:"small",onClick:_,disabled:W.value>=ot},{default:s(()=>[t(x,null,{default:s(()=>[t(l(gs))]),_:1})]),_:1},8,["disabled"]),t(l(Be),{type:"primary",size:"small",onClick:G},{default:s(()=>r[19]||(r[19]=[h(" 自适应大小 ")])),_:1})]),e("div",Il," 缩放: "+B(Math.round(W.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:H,class:"graph-container"},null,512)])):(v(),w("div",Nl,[Ke((v(),Z(l(ys),{ref_key:"tableRef",ref:ze,data:ge.value,stripe:"",border:"",class:"log-table","empty-text":F.value?"加载中...":"没有匹配的提交记录",height:"500",onRowContextmenu:n},{default:s(()=>[t(l(Xe),{label:"提交哈希",width:"100",resizable:""},{default:s(A=>[e("span",{class:"commit-hash",onClick:Je=>re(A.row)},B(A.row.hash.substring(0,7)),9,Hl)]),_:1}),t(l(Xe),{prop:"date",label:"日期",width:"120",resizable:""}),t(l(Xe),{label:"作者",width:"120",resizable:""},{default:s(A=>[t(T,{content:A.row.email,placement:"top","hide-after":1e3},{default:s(()=>[e("span",Wl,B(A.row.author),1)]),_:2},1032,["content"])]),_:1}),t(l(Xe),{label:"分支",width:"180",resizable:""},{default:s(A=>[A.row.branch?(v(),w("div",Jl,[(v(!0),w(he,null,Te(A.row.branch.split(","),(Je,pt)=>(v(),Z(l(ct),{key:pt,size:"small",type:Ne(Je),class:"branch-tag"},{default:s(()=>[h(B(Ue(Je)),1)]),_:2},1032,["type"]))),128))])):J("",!0)]),_:1}),t(l(Xe),{prop:"message",label:"提交信息","min-width":"250"})]),_:1},8,["data","empty-text"])),[[ue,F.value]]),(X.value,J("",!0))]))]))],2),t(l(dt),{modelValue:I.value,"onUpdate:modelValue":r[7]||(r[7]=A=>I.value=A),title:`提交详情: ${(xe=j.value)!=null&&xe.hash?j.value.hash.substring(0,7):"未知"}`,width:"80%","destroy-on-close":"",class:"commit-detail-dialog"},{default:s(()=>[Ke((v(),w("div",ql,[j.value?(v(),w("div",Yl,[e("div",Xl,[e("div",Zl,[r[23]||(r[23]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Kl,B(j.value.hash),1)]),e("div",Ql,[r[24]||(r[24]=e("span",{class:"item-label"},"作者:",-1)),e("span",eo,B(j.value.author)+" <"+B(j.value.email)+">",1)]),e("div",to,[r[25]||(r[25]=e("span",{class:"item-label"},"日期:",-1)),e("span",so,B(j.value.date),1)])]),e("div",ao,[r[26]||(r[26]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:de(j.value.message).replace(/\n/g,"<br>")},null,8,lo)])])):J("",!0),e("div",oo,[e("div",no,[r[27]||(r[27]=e("h3",null,"变更文件",-1)),ne.value.length===0?(v(),Z(le,{key:0,description:"没有找到变更文件"})):(v(),w("ul",io,[(v(!0),w(he,null,Te(ne.value,A=>(v(),w("li",{key:A,class:De({"active-file":A===Y.value}),onClick:Je=>pe(j.value.hash,A)},B(A),11,ro))),128))]))]),e("div",co,[Y.value?(v(),w("h3",uo,"文件差异: "+B(Y.value),1)):(v(),w("h3",fo,"文件差异")),!$.value&&!te.value?(v(),Z(le,{key:2,description:"选择文件查看差异"})):$.value?(v(),w("div",{key:3,innerHTML:ce($.value),class:"diff-content"},null,8,po)):J("",!0)])])])),[[ue,te.value]])]),_:1},8,["modelValue","title"])]),r[33]||(r[33]=h()),Ke(e("div",{class:"context-menu",style:ht({top:Ce.value+"px",left:_e.value+"px"})},[e("div",{class:"context-menu-item",onClick:r[8]||(r[8]=A=>re(b.value))},r[28]||(r[28]=[e("i",{class:"el-icon-view"},null,-1),h(" 查看详情 ")])),r[31]||(r[31]=h()),e("div",{class:"context-menu-item",onClick:r[9]||(r[9]=A=>N(b.value))},r[29]||(r[29]=[e("i",{class:"el-icon-delete"},null,-1),h(" 撤销提交 (Revert) ")])),r[32]||(r[32]=h()),e("div",{class:"context-menu-item",onClick:r[10]||(r[10]=A=>ae(b.value))},r[30]||(r[30]=[e("i",{class:"el-icon-edit"},null,-1),h(" Cherry-Pick 到当前分支 ")]))],4),[[Ut,Q.value]])],64)}}}),mo=ft(vo,[["__scopeId","data-v-2265a2d5"]]),go="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",yo={class:"main-header"},ho={class:"header-left"},_o=["src"],wo={class:"header-info"},$o={key:0,id:"user-info"},bo={class:"user-name"},ko={class:"user-email"},Co={key:1,id:"user-info"},So={class:"directory-selector"},To={class:"directory-display"},xo={class:"directory-icon"},Vo=["title"],Lo={class:"directory-actions"},Bo={class:"main-container"},zo={key:0,class:"loading-container"},Ro={class:"loading-spinner"},Do={key:1,class:"grid-layout"},Ao={class:"git-status-panel"},Go={key:0,class:"commit-form-panel"},Eo={key:0,class:"card"},Mo={class:"tips"},jo={key:1,class:"commit-form-panel"},Uo={key:2,class:"log-list-panel"},Po={class:"dialog-footer"},Oo={class:"main-footer"},Fo={key:0,class:"branch-info"},Io={class:"branch-wrapper"},No={key:1,class:"footer-right"},Ho={class:"repo-url"},Wo={class:"dialog-footer"},Jo={class:"directory-input-group"},qo={class:"recent-directories"},Yo={class:"dialog-footer"},Xo=rt({__name:"App",setup(me){const g=c(""),k=c(null),u=c(null),y=et(),E=Ft(),V=c(!1),F=c("");function X(){E.config&&(g.value=`默认提交信息: ${E.config.defaultCommitMessage}`)}async function K(){try{const o=await(await fetch("/api/current_directory")).json();return F.value=o.directory||"未知目录",o}catch(_){return console.error("获取当前目录失败:",_),{directory:"未知目录",isGitRepo:!1}}}tt(async()=>{console.log("---------- 页面初始化开始 ----------");try{const _=await K();E.isLoaded||await E.loadConfig(),X(),y.isGitRepo=_.isGitRepo===!0,y.lastCheckedTime=Date.now(),y.isGitRepo?await Promise.all([y.getCurrentBranch(),y.getAllBranches(),y.getUserInfo(),y.getRemoteUrl()]):i.warning("当前目录不是Git仓库，部分功能将不可用")}catch(_){console.error("初始化失败:",_)}finally{V.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{U()},100)}});const O=c(!1),H=c(""),L=c("");async function C(){await y.createBranch(H.value,L.value)&&(O.value=!1,H.value="",u.value&&u.value.refreshStatus(),k.value&&k.value.refreshLog())}function q(){L.value=y.currentBranch,O.value=!0}async function P(_){await y.changeBranch(_)&&(u.value&&u.value.refreshStatus(),k.value&&k.value.refreshLog())}const I=c(!1),j=c(""),ne=c("");function $(){j.value=y.userName,ne.value=y.userEmail,I.value=!0}async function te(){if(!j.value||!ne.value){i.warning("用户名和邮箱不能为空");return}await y.restoreUserConfig(j.value,ne.value)&&(I.value=!1)}async function Y(){await y.clearUserConfig()&&(j.value="",ne.value="")}let W=!1,se=!1,oe=0,S=0,p="",D="";function z(){const _=document.querySelector(".grid-layout");if(!_)return;const o=getComputedStyle(_).gridTemplateColumns.split(" "),M=getComputedStyle(_).gridTemplateRows.split(" ");if(o.length>=3&&M.length>=3){const G=parseFloat(o[0]),re=parseFloat(o[2]),pe=G+re,ce=G/pe,de=parseFloat(M[0]),Se=parseFloat(M[2]),ve=de+Se,fe=de/ve;localStorage.setItem("zen-gitsync-layout-left-ratio",ce.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",fe.toString()),console.log(`布局比例已保存 - 左侧: ${(ce*100).toFixed(0)}%, 上方: ${(fe*100).toFixed(0)}%`)}}function U(){const _=document.querySelector(".grid-layout");if(!_)return;const o=localStorage.getItem("zen-gitsync-layout-left-ratio"),M=localStorage.getItem("zen-gitsync-layout-top-ratio");if(o){const G=parseFloat(o),re=1-G;_.style.gridTemplateColumns=`${G}fr 8px ${re}fr`,console.log(`已恢复左侧比例: ${(G*100).toFixed(0)}%`)}else _.style.gridTemplateColumns="1fr 8px 3fr";if(M){const G=parseFloat(M),re=1-G;_.style.gridTemplateRows=`${G}fr 8px ${re}fr`,console.log(`已恢复上方比例: ${(G*100).toFixed(0)}%`)}}function ie(_){var M;W=!0,oe=_.clientX;const o=document.querySelector(".grid-layout");p=getComputedStyle(o).gridTemplateColumns,(M=document.getElementById("v-resizer"))==null||M.classList.add("active"),document.addEventListener("mousemove",Q),document.addEventListener("mouseup",Ce),_.preventDefault()}function Q(_){if(!W)return;const o=document.querySelector(".grid-layout"),M=_.clientX-oe,G=p.split(" ");if(G.length>=3){const re=parseFloat(G[0]),pe=parseFloat(G[2]),ce=re+pe,de=(re+M/o.clientWidth*ce)/ce,Se=1-de,ve=.1,fe=.5;de<ve?o.style.gridTemplateColumns=`${ve}fr 8px ${1-ve}fr`:de>fe?o.style.gridTemplateColumns=`${fe}fr 8px ${1-fe}fr`:o.style.gridTemplateColumns=`${de}fr 8px ${Se}fr`}}function Ce(){var _;W=!1,(_=document.getElementById("v-resizer"))==null||_.classList.remove("active"),document.removeEventListener("mousemove",Q),document.removeEventListener("mouseup",Ce),z()}function _e(_){var M;se=!0,S=_.clientY;const o=document.querySelector(".grid-layout");D=getComputedStyle(o).gridTemplateRows,(M=document.getElementById("h-resizer"))==null||M.classList.add("active"),document.addEventListener("mousemove",b),document.addEventListener("mouseup",ge),_.preventDefault()}function b(_){if(!se)return;const o=document.querySelector(".grid-layout"),M=_.clientY-S,G=D.split(" ");if(G.length>=3){const re=parseFloat(G[0]),pe=parseFloat(G[2]),ce=re+pe,de=(re+M/o.clientHeight*ce)/ce,Se=1-de,ve=.2,fe=.8;de<ve?o.style.gridTemplateRows=`${ve}fr 8px ${1-ve}fr`:de>fe?o.style.gridTemplateRows=`${fe}fr 8px ${1-fe}fr`:o.style.gridTemplateRows=`${de}fr 8px ${Se}fr`}}function ge(){var _;se=!1,(_=document.getElementById("h-resizer"))==null||_.classList.remove("active"),document.removeEventListener("mousemove",b),document.removeEventListener("mouseup",ge),z()}const be=c(!1),ye=c(""),Me=c(!1),je=c([]);async function Ue(){if(!F.value){i.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(F.value),i.success("已复制目录路径")}catch(_){console.error("复制目录路径失败:",_),i.error(`复制失败: ${_.message}`)}}function Ne(){ye.value=F.value,be.value=!0,ze()}async function ze(){try{const o=await(await fetch("/api/recent_directories")).json();o.success&&Array.isArray(o.directories)&&(je.value=o.directories)}catch(_){console.error("获取最近目录失败:",_)}}async function Ve(){if(!ye.value){i.warning("目录路径不能为空");return}try{Me.value=!0;const o=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:ye.value})})).json();o.success?(i.success("已切换工作目录"),F.value=o.directory,be.value=!1,await Ae(o.directory),y.isGitRepo=o.isGitRepo,o.isGitRepo?(await Promise.all([y.getCurrentBranch(),y.getAllBranches(),y.getUserInfo(),y.getRemoteUrl()]),u.value&&u.value.refreshStatus(),k.value&&k.value.refreshLog()):(i.warning("当前目录不是Git仓库，部分功能将不可用"),y.$reset())):i.error(o.error||"切换目录失败")}catch(_){i.error(`切换目录失败: ${_.message}`)}finally{Me.value=!1}}async function Ae(_){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:_})})}catch(o){console.error("保存最近目录失败:",o)}}async function Re(){try{const o=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:ye.value||F.value})})).json();o.success?we(o):o.error&&i.error(o.error)}catch(_){console.error("浏览目录失败:",_),i.error(`浏览目录失败: ${_.message}`)}}function we(_){!_||!_.items||Ie.alert(ke("div",{class:"directory-browser"},[ke("div",{class:"current-path"},[ke("span",{class:"path-label"},"当前路径: "),ke("span",{class:"path-value"},_.path)]),ke("div",{class:"directory-list"},[_.parentPath?ke("div",{class:"directory-item parent-dir",onClick:()=>{Le(_.parentPath)}},[ke("span",{class:"dir-icon"},ke("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[ke("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),ke("span",{class:"dir-name"},"返回上级目录")]):null,..._.items.map(o=>ke("div",{class:"directory-item",onClick:()=>{Le(o.path)}},[ke("span",{class:"dir-icon"},ke("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[ke("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),ke("span",{class:"dir-name"},o.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:o=>{o==="confirm"&&(ye.value=_.path)}})}async function Le(_){try{Ie.close(),setTimeout(async()=>{try{const M=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:_})})).json();M.success?we(M):M.error&&i.error(M.error)}catch(o){console.error("浏览目录失败:",o),i.error(`浏览目录失败: ${o.message}`)}},100)}catch(o){console.error("处理目录选择时出错:",o),i.error(`处理目录选择时出错: ${o.message}`)}}return(_,o)=>{const M=ut,G=Be,re=Ot,pe=$t,ce=ws,de=nt,Se=it,ve=_s,fe=dt,He=jt,f=ct;return v(),w(he,null,[e("header",yo,[e("div",ho,[e("img",{src:l(go),alt:"Zen GitSync Logo",class:"logo"},null,8,_o),o[14]||(o[14]=e("h1",null,"Zen GitSync UI",-1))]),e("div",wo,[l(y).userName&&l(y).userEmail?(v(),w("div",$o,[o[15]||(o[15]=e("span",{class:"user-label"},"用户:",-1)),e("span",bo,B(l(y).userName),1),e("span",ko,"<"+B(l(y).userEmail)+">",1),t(G,{type:"primary",size:"small",onClick:$,class:"user-settings-btn",circle:""},{default:s(()=>[t(M,null,{default:s(()=>[t(l(Qe))]),_:1})]),_:1})])):(v(),w("div",Co,[o[16]||(o[16]=e("span",{class:"user-label"},"用户: ",-1)),o[17]||(o[17]=e("span",{class:"user-warning"},"未配置",-1)),t(G,{type:"primary",size:"small",onClick:$,class:"user-settings-btn",circle:""},{default:s(()=>[t(M,null,{default:s(()=>[t(l(Qe))]),_:1})]),_:1})])),e("div",So,[e("div",To,[e("div",xo,[t(M,null,{default:s(()=>[t(l(Lt))]),_:1})]),e("div",{class:"directory-path",title:F.value},B(F.value),9,Vo)]),e("div",Lo,[t(G,{type:"primary",size:"small",onClick:Ne,class:"dir-button",circle:""},{default:s(()=>[t(M,null,{default:s(()=>o[18]||(o[18]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),t(G,{type:"info",size:"small",onClick:Ue,class:"dir-button",circle:""},{default:s(()=>[t(M,null,{default:s(()=>o[19]||(o[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])])])]),e("main",Bo,[V.value?(v(),w("div",Do,[e("div",Ao,[t(ga,{ref_key:"gitStatusRef",ref:u,"initial-directory":F.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:ie},null,32),l(y).isGitRepo?(v(),w("div",Go,[!l(y).userName||!l(y).userEmail?(v(),w("div",Eo,[o[25]||(o[25]=e("h2",null,"Git用户未配置",-1)),o[26]||(o[26]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Mo,[o[23]||(o[23]=e("h3",null,"您可以通过以下方式配置：",-1)),o[24]||(o[24]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[h(' git config --global user.name "您的用户名"'),e("br"),h(' git config --global user.email "您的邮箱" ')])],-1)),t(G,{type:"primary",onClick:$},{default:s(()=>o[22]||(o[22]=[h(" 立即配置 ")])),_:1})])])):(v(),Z(Sl,{key:1}))])):(v(),w("div",jo,o[27]||(o[27]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:_e},null,32),l(y).isGitRepo?(v(),w("div",Uo,[t(mo,{ref_key:"logListRef",ref:k},null,512)])):J("",!0),t(fe,{modelValue:O.value,"onUpdate:modelValue":o[3]||(o[3]=n=>O.value=n),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:s(()=>[e("span",Po,[t(G,{onClick:o[2]||(o[2]=n=>O.value=!1)},{default:s(()=>o[28]||(o[28]=[h("取消")])),_:1}),t(G,{type:"primary",onClick:C,loading:l(y).isCreatingBranch},{default:s(()=>o[29]||(o[29]=[h(" 创建 ")])),_:1},8,["loading"])])]),default:s(()=>[t(ve,{model:{newBranchName:H.value,selectedBaseBranch:L.value}},{default:s(()=>[t(ce,{label:"新分支名称"},{default:s(()=>[t(pe,{modelValue:H.value,"onUpdate:modelValue":o[0]||(o[0]=n=>H.value=n),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),t(ce,{label:"基于分支"},{default:s(()=>[t(Se,{modelValue:L.value,"onUpdate:modelValue":o[1]||(o[1]=n=>L.value=n),placeholder:"选择基础分支",style:{width:"100%"}},{default:s(()=>[(v(!0),w(he,null,Te(l(y).allBranches,n=>(v(),Z(de,{key:n,label:n,value:n},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(v(),w("div",zo,[t(re,{class:"loading-card"},{default:s(()=>[e("div",Ro,[t(M,{class:"is-loading"},{default:s(()=>o[20]||(o[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),o[21]||(o[21]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Oo,[l(y).currentBranch?(v(),w("div",Fo,[e("div",Io,[o[31]||(o[31]=e("span",{class:"branch-label"},"当前分支:",-1)),t(Se,{modelValue:l(y).currentBranch,"onUpdate:modelValue":o[4]||(o[4]=n=>l(y).currentBranch=n),size:"small",onChange:P,loading:l(y).isChangingBranch,class:"branch-select"},{default:s(()=>[(v(!0),w(he,null,Te(l(y).allBranches,n=>(v(),Z(de,{key:n,label:n,value:n},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),t(G,{type:"primary",size:"small",onClick:q,class:"create-branch-btn"},{default:s(()=>[t(M,null,{default:s(()=>[t(l($s))]),_:1}),o[30]||(o[30]=h(" 新建分支 "))]),_:1})])])):J("",!0),l(y).remoteUrl?(v(),w("div",No,[o[33]||(o[33]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Ho,B(l(y).remoteUrl),1),t(G,{type:"primary",circle:"",size:"small",onClick:o[5]||(o[5]=n=>l(y).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:s(()=>[t(M,null,{default:s(()=>o[32]||(o[32]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):J("",!0)]),t(fe,{modelValue:I.value,"onUpdate:modelValue":o[9]||(o[9]=n=>I.value=n),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:s(()=>[e("span",Wo,[t(G,{type:"danger",onClick:Y},{default:s(()=>o[35]||(o[35]=[h(" 清除配置 ")])),_:1}),t(G,{onClick:o[8]||(o[8]=n=>I.value=!1)},{default:s(()=>o[36]||(o[36]=[h("取消")])),_:1}),t(G,{type:"primary",onClick:te},{default:s(()=>o[37]||(o[37]=[h(" 保存 ")])),_:1})])]),default:s(()=>[t(ve,null,{default:s(()=>[t(ce,{label:"用户名"},{default:s(()=>[t(pe,{modelValue:j.value,"onUpdate:modelValue":o[6]||(o[6]=n=>j.value=n),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),t(ce,{label:"邮箱"},{default:s(()=>[t(pe,{modelValue:ne.value,"onUpdate:modelValue":o[7]||(o[7]=n=>ne.value=n),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),t(ce,null,{default:s(()=>[t(He,{type:"info",closable:!1,"show-icon":""},{default:s(()=>o[34]||(o[34]=[h(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),t(fe,{modelValue:be.value,"onUpdate:modelValue":o[13]||(o[13]=n=>be.value=n),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:s(()=>[e("span",Yo,[t(G,{onClick:o[11]||(o[11]=n=>be.value=!1)},{default:s(()=>o[39]||(o[39]=[h("取消")])),_:1}),t(G,{type:"primary",onClick:o[12]||(o[12]=n=>Ve()),loading:Me.value},{default:s(()=>o[40]||(o[40]=[h(" 切换 ")])),_:1},8,["loading"])])]),default:s(()=>[t(ve,null,{default:s(()=>[t(ce,{label:"目录路径"},{default:s(()=>[e("div",Jo,[t(pe,{modelValue:ye.value,"onUpdate:modelValue":o[10]||(o[10]=n=>ye.value=n),placeholder:"请输入目录路径"},null,8,["modelValue"]),t(G,{type:"primary",onClick:Re},{default:s(()=>[t(M,null,{default:s(()=>[t(l(Lt))]),_:1}),o[38]||(o[38]=h(" 浏览 "))]),_:1})])]),_:1}),je.value.length>0?(v(),Z(ce,{key:0,label:"常用目录"},{default:s(()=>[e("div",qo,[(v(!0),w(he,null,Te(je.value,(n,N)=>(v(),Z(f,{key:N,class:"recent-dir-tag",onClick:ae=>ye.value=n,effect:"plain"},{default:s(()=>[h(B(n),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):J("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),Zo=ft(Xo,[["__scopeId","data-v-d5439bf5"]]),It=bs(Zo);It.use(ks());It.mount("#app");

import{d as Bs,r as u,c as Z,E as l,o as et,a as Ds,l as vo,b as $e,e as ms,f as vs,g as $,h as r,i as W,j as Y,w as s,k as t,m as Ue,n as Re,p as us,u as a,q as Gt,s as zs,t as be,F as ke,v as je,x as I,y as go,z as ze,A as _t,B as ho,C as e,D as tt,G as yo,H as _o,I as rt,J as ds,K as fs,L as bo,M as ve,N as wo,O as ct,P as M,Q as Rs,R as ko,S as qe,T as ht,U as Pt,V as It,W as Et,X as Ot,Y as js,Z as Ie,_ as Oe,$ as gs,a0 as gt,a1 as ps,a2 as mt,a3 as $o,a4 as Nt,a5 as ut,a6 as Bt,a7 as Os,a8 as hs,a9 as As,aa as Ft,ab as yt,ac as Us,ad as ys,ae as Gs,af as Co,ag as dt,ah as vt,ai as So,aj as To,ak as Ms,al as Mt,am as Is,an as Lo,ao as Vt,ap as xt,aq as Ut,ar as Fo,as as Vo,at as Ls,au as xo,av as Po,aw as Bo,ax as Do,ay as Lt,az as St,aA as zo,aB as Ro,aC as jo,aD as At,aE as Oo,aF as Ao,aG as Uo,aH as Go,aI as Fs,aJ as Vs,aK as Mo,aL as Io}from"./vendor-DdEqwv19.js";(function(){const k=document.createElement("link").relList;if(k&&k.supports&&k.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))i(y);new MutationObserver(y=>{for(const d of y)if(d.type==="childList")for(const x of d.addedNodes)x.tagName==="LINK"&&x.rel==="modulepreload"&&i(x)}).observe(document,{childList:!0,subtree:!0});function o(y){const d={};return y.integrity&&(d.integrity=y.integrity),y.referrerPolicy&&(d.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?d.credentials="include":y.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function i(y){if(y.ep)return;y.ep=!0;const d=o(y);fetch(y.href,d)}})();const Ke=Bs("config",()=>{const q=u(""),k=u([]),o=u([]),i=u([]),y=u([]),d=u(!1),x=u(!1),v=u("");function O(L){v.value=L||""}const P=Z(()=>({defaultCommitMessage:q.value,descriptionTemplates:k.value,scopeTemplates:o.value,messageTemplates:i.value,lockedFiles:y.value,currentDirectory:v.value}));async function ee(L=!1){if(!L&&x.value&&!d.value)return console.log("使用缓存的配置信息"),P.value;d.value=!0;try{d.value=!0,console.log("加载配置信息...");const G=await(await fetch("/api/config/getConfig")).json();return q.value=G.defaultCommitMessage||"",k.value=G.descriptionTemplates||[],o.value=G.scopeTemplates||[],i.value=G.messageTemplates||[],y.value=G.lockedFiles||[],G.currentDirectory&&(v.value=G.currentDirectory),x.value=!0,console.log("配置信息加载完成"),P.value}catch(z){return console.error("加载配置失败:",z),l.error(`加载配置失败: ${z.message}`),null}finally{d.value=!1}}async function V(L){try{const G=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:L})})).json();return G.success?(q.value=L,l.success("默认提交信息已保存"),!0):(l.error(`保存失败: ${G.error}`),!1)}catch(z){return l.error(`保存失败: ${z.message}`),!1}}async function p(L,z){try{const U=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:L,type:z})})).json();return U.success?(z==="description"?k.value.includes(L)||k.value.push(L):z==="scope"?o.value.includes(L)||o.value.push(L):z==="message"&&(i.value.includes(L)||i.value.push(L)),l.success("模板已保存"),!0):(l.error(`保存模板失败: ${U.error}`),!1)}catch(G){return l.error(`保存模板失败: ${G.message}`),!1}}async function A(L,z){try{const U=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:L,type:z})})).json();return U.success?(z==="description"?k.value=k.value.filter(se=>se!==L):z==="scope"?o.value=o.value.filter(se=>se!==L):z==="message"&&(i.value=i.value.filter(se=>se!==L)),l.success("模板已删除"),!0):(l.error(`删除模板失败: ${U.error}`),!1)}catch(G){return l.error(`删除模板失败: ${G.message}`),!1}}async function D(L,z,G){try{const se=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:L,newTemplate:z,type:G})})).json();if(se.success){if(G==="description"){const X=k.value.indexOf(L);X!==-1&&(k.value[X]=z)}else if(G==="scope"){const X=o.value.indexOf(L);X!==-1&&(o.value[X]=z)}else if(G==="message"){const X=i.value.indexOf(L);X!==-1&&(i.value[X]=z)}return l.success("模板已更新"),!0}else return l.error(`更新模板失败: ${se.error}`),!1}catch(U){return l.error(`更新模板失败: ${U.message}`),!1}}async function Q(){try{const z=await(await fetch("/api/locked-files")).json();return z.success?(y.value=z.lockedFiles||[],z.lockedFiles):(l.error(`加载锁定文件列表失败: ${z.error}`),[])}catch(L){return console.error("加载锁定文件列表失败:",L),l.error(`加载锁定文件列表失败: ${L.message}`),[]}}async function F(L){try{const G=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:L})})).json();return G.success?(await Q(),l.success(`文件已锁定: ${L}`),!0):(l.error(`锁定文件失败: ${G.error}`),!1)}catch(z){return console.error("锁定文件失败:",z),l.error(`锁定文件失败: ${z.message}`),!1}}async function T(L){try{const G=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:L})})).json();return G.success?(await Q(),l.success(`文件已解锁: ${L}`),!0):(l.error(`解锁文件失败: ${G.error}`),!1)}catch(z){return console.error("解锁文件失败:",z),l.error(`解锁文件失败: ${z.message}`),!1}}async function te(L){try{const G=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:L})})).json();return G.success?G.isLocked:(console.error("检查文件锁定状态失败:",G.error),!1)}catch(z){return console.error("检查文件锁定状态失败:",z),!1}}return{defaultCommitMessage:q,descriptionTemplates:k,scopeTemplates:o,messageTemplates:i,lockedFiles:y,isLoading:d,isLoaded:x,currentDirectory:v,config:P,loadConfig:ee,setCurrentDirectory:O,saveTemplate:p,saveDefaultMessage:V,deleteTemplate:A,updateTemplate:D,loadLockedFiles:Q,lockFile:F,unlockFile:T,isFileLocked:te}}),os=800;function Eo(){const q=window.location.port||"80";if(q==="5173"||q==="4173"||q==="5544"){const o="3001";return console.log(`开发环境：从环境变量读取后端端口 ${o}`),parseInt(o,10)}const k=parseInt(q,10);return console.log(`生产环境：使用当前页面端口 ${k}`),k}const No=Eo(),Ee=Bs("git",()=>{const q=Ke(),k=u(""),o=u([]),i=u(""),y=u(""),d=u(!1),x=u(!1),v=u(!1),O=u(0),P=u(""),ee=u(!1),V=u(!1),p=u(!1),A=u(!1),D=u(!1),Q=u(0),F=u(0),T=u(!1),te=u(""),L=u(0),z=u(0),G=u(!0),U=u(null),se=u(""),X=u(""),b=u([]),m=u({staged:[],unstaged:[],untracked:[]}),_=u([]),S=u(!1),j=u(!1),ae=u(!1),fe=u(!1),N=u(!1),le=u(1),ie=u(!0),me=u(0),Pe=u([]),Se=u(!1),g=u(!1),c=u(!1),E=u(!1);function H(){k.value="",o.value=[],i.value="",y.value="",d.value=!1,x.value=!1,v.value=!1,O.value=0,Q.value=0,F.value=0,T.value=!1,te.value="",L.value=0,z.value=0,V.value=!1,p.value=!1,A.value=!1,D.value=!1,P.value="",ee.value=!1,b.value=[],m.value={staged:[],unstaged:[],untracked:[]},_.value=[],S.value=!1,j.value=!1,ae.value=!1,fe.value=!1,N.value=!1,le.value=1,ie.value=!0,me.value=0}async function ce(w=!1,h=!1){if(!v.value)return;const J=Date.now();if(!w&&!h&&J-L.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let oe="/api/branch-status";const Le=[];w&&Le.push("force=true"),h&&Le.push("countOnly=true"),Le.length>0&&(oe+="?"+Le.join("&"));const He=await(await fetch(oe)).json();He&&(Q.value=He.ahead||0,F.value=He.behind||0,T.value=He.hasUpstream||!1,te.value=He.upstreamBranch||"",L.value=J,console.log(`分支状态更新：领先 ${Q.value} 个提交，落后 ${F.value} 个提交，上游分支：${T.value?te.value:"无"}`))}catch(oe){console.error("获取分支状态失败:",oe),Q.value=0,F.value=0,T.value=!1,te.value=""}}async function ge(){const w=Date.now();if(w-O.value<1e3)return console.log("使用缓存的Git仓库状态:",v.value?"是":"不是"),v.value;try{const J=await(await fetch("/api/current_directory")).json();return v.value=J.isGitRepo===!0,O.value=w,console.log(`当前目录${v.value?"是":"不是"}Git仓库`),v.value}catch(h){return console.error("检查Git仓库状态失败:",h),v.value=!1,O.value=w,!1}}async function he(w=!1){try{const oe=await(await fetch(w?"/api/branch?force=true":"/api/branch")).json();oe.branch&&(k.value=oe.branch,console.log(`当前分支更新为: ${oe.branch}${w?" (强制刷新)":""}`))}catch(h){console.error("获取分支信息失败:",h)}}async function pe(){if(v.value)try{console.log("获取所有分支...");const h=await(await fetch("/api/branches")).json();h.branches&&Array.isArray(h.branches)&&(o.value=h.branches,z.value=Date.now(),console.log(`获取到${h.branches.length}个分支`))}catch(w){console.error("获取所有分支信息失败:",w)}}async function de(w){console.log("切换到分支:",w);try{d.value=!0;const J=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:w})})).json();return J.success?(l({message:`已切换到分支: ${w}`,type:"success"}),await he(!0),await ce(!0),!0):(l({message:`切换分支失败: ${J.error}`,type:"error"}),!1)}catch(h){return l({message:`切换分支失败: ${h.message}`,type:"error"}),!1}finally{d.value=!1}}async function Te(){try{const h=await(await fetch("/api/user-info")).json();h.name&&h.email&&(i.value=h.name,y.value=h.email)}catch(w){console.error("获取用户信息失败:",w)}}async function Be(w,h){if(!w.trim())return l({message:"分支名称不能为空",type:"warning"}),!1;try{x.value=!0;const oe=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:w,baseBranch:h||k.value})})).json();return oe.success?(l({message:`已创建并切换到分支: ${w}`,type:"success"}),await he(!0),await ce(!0),await pe(),!0):(l({message:`创建分支失败: ${oe.error}`,type:"error"}),!1)}catch(J){return l({message:`创建分支失败: ${J.message}`,type:"error"}),!1}finally{x.value=!1}}async function ye(){try{const h=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return h.success?(i.value="",y.value="",l({message:"已清除Git用户配置",type:"success"}),!0):(l({message:`清除配置失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`清除配置失败: ${w.message}`,type:"error"}),!1}}async function Ne(w,h){try{const oe=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:w,email:h})})).json();return oe.success?(i.value=w,y.value=h,l({message:"已恢复Git用户配置",type:"success"}),!0):(l({message:`恢复配置失败: ${oe.error}`,type:"error"}),!1)}catch(J){return l({message:`恢复配置失败: ${J.message}`,type:"error"}),!1}}async function st(){if(!v.value)return l({message:"当前目录不是Git仓库",type:"warning"}),!1;try{p.value=!0;const h=await(await fetch("/api/pull",{method:"POST"})).json();return h.success?(l({message:"拉取成功",type:"success"}),await ce(),!0):(h.needsMerge?l({message:`需要合并更改: ${h.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):l({message:`拉取失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`拉取失败: ${w.message}`,type:"error"}),!1}finally{p.value=!1}}async function ot(){if(!v.value)return l({message:"当前目录不是Git仓库",type:"warning"}),!1;try{A.value=!0;const h=await(await fetch("/api/fetch-all",{method:"POST"})).json();return h.success?(l({message:"获取所有远程分支信息成功",type:"success"}),await ce(),!0):(l({message:`获取远程分支信息失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`获取远程分支信息失败: ${w.message}`,type:"error"}),!1}finally{A.value=!1}}async function at(){U.value&&U.value.disconnect();try{const w=`http://localhost:${No}`;if(console.log("尝试连接Socket.IO服务器:",w),U.value=vo(w,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!U.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO客户端已创建，开始注册事件监听器..."),U.value.on("connect",()=>{var h;console.log("✅ Socket.IO连接成功，事件监听器已生效，Socket ID:",(h=U.value)==null?void 0:h.id),G.value&&U.value&&U.value.emit("start_monitoring")}),U.value.on("project_info",h=>{se.value=h.projectPath,X.value=h.projectRoomId,console.log(`当前项目: ${h.projectPath}`),console.log(`房间ID: ${h.projectRoomId}`)}),U.value.on("project_changed",h=>{console.log(`项目已切换: ${h.oldProjectPath} -> ${h.newProjectPath}`),se.value=h.newProjectPath,X.value=h.newProjectRoomId,U.value&&U.value.emit("join_room",h.newProjectRoomId),console.log(`已加入新项目房间: ${h.newProjectRoomId}`)}),U.value.on("disconnect",h=>{console.log("与Socket.IO服务器断开连接:",h)}),U.value.on("git_status_update",h=>{if(G.value){if(console.log("✅ 成功监听到 git_status_update 事件:",new Date().toLocaleTimeString()),console.log("git_status_update data ==>",h),console.log("currentProjectPath.value ==>",se.value),console.log("data.projectPath ==>",h.projectPath),h.projectPath&&se.value&&h.projectPath!==se.value){console.log(`忽略不同项目的状态更新: ${h.projectPath}`);return}console.log("正在更新 Git 文件状态..."),h.porcelain!==void 0&&Qe(h.porcelain)}}),U.value.on("monitoring_status",h=>{console.log("文件监控状态:",h.active?"已启动":"已停止")}),U.value.on("connect_error",h=>{console.error("Socket连接错误:",h.message)}),U.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),U.value.on("reconnect",h=>{var J;console.log(`Socket重连成功，尝试次数: ${h}`),G.value&&(console.log("重连后重新发送start_monitoring请求"),(J=U.value)==null||J.emit("start_monitoring"))}),U.value.on("reconnect_attempt",h=>{console.log(`Socket尝试重连，第 ${h} 次尝试`)}),U.value.on("reconnect_error",h=>{console.error("Socket重连错误:",h.message)}),U.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),console.log("Socket.IO事件监听器注册完成：connect, project_info, project_changed, git_status_update, monitoring_status"),U.value&&!U.value.connected&&(console.log("Socket未连接，尝试手动连接..."),U.value.connect())}catch(w){console.error("Socket.IO连接初始化失败:",w)}}function bt(){if(console.log("toggleAutoUpdate调用，当前值:",G.value),!U.value){console.error("无法切换自动更新状态: socket连接不存在"),l.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),at(),localStorage.setItem("zen-gitsync-auto-update",G.value.toString());return}try{G.value?(console.log("发送start_monitoring命令..."),U.value.emit("start_monitoring"),l.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),U.value.emit("stop_monitoring"),l.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",G.value.toString()),console.log("已保存自动更新设置到本地存储:",G.value)}catch(w){console.error("切换自动更新状态时出错:",w),l.error(`切换自动更新失败: ${w.message}`)}}function Qe(w){if(w===void 0||w===""){_.value=[];return}const h=w.split(`
`),J=[];for(const oe of h){const Le=oe.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(Le){let De="";const He=Le[1],Ze=He.charAt(0),zt=He.charAt(1);Ze==="A"||Ze==="M"||Ze==="D"||Ze==="R"?De="added":Ze===" "&&zt==="M"?De="modified":Ze===" "&&zt==="D"?De="deleted":He==="??"?De="untracked":De="other",J.push({path:Le[2],type:De})}}_.value=J}async function Ye(w=!0){if(!v.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{S.value=!0,console.log("开始加载提交历史...");const h=new Date().getTime(),oe=await(await fetch(`/api/log?page=1&_t=${h}`)).json();oe&&oe.data&&Array.isArray(oe.data)?(b.value=[...oe.data],console.log(`提交历史加载完成，共 ${b.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",oe),b.value=[])}catch(h){console.error("获取提交历史失败:",h),w&&l({message:`获取提交历史失败: ${h.message}`,type:"error"})}finally{S.value=!1}}async function wt(){console.log("刷新提交历史..."),le.value=1,ie.value=!1,await Ye(!0),me.value=b.value.length,console.log("提交历史刷新完成")}async function Fe(){if(!v.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{j.value=!0,await nt()}catch(w){console.error("获取Git状态失败:",w),l({message:`获取Git状态失败: ${w.message}`,type:"error"})}finally{j.value=!1}}async function nt(){if(console.log("开始获取Git状态(porcelain格式)..."),!v.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const h=await(await fetch("/api/status_porcelain")).json();h.status!==void 0?Qe(h.status):_.value=[]}catch(w){console.error("获取Git状态(porcelain)失败:",w),l({message:`获取Git状态(porcelain)失败: ${w.message}`,type:"error"}),_.value=[]}}async function R(){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const w=_.value.filter(h=>{const J=h.path.replace(/\\/g,"/");return!q.lockedFiles.some(Le=>{const De=Le.replace(/\\/g,"/");return J===De})});if(w.length===0)return l({message:"没有需要暂存的文件（所有文件都被锁定）",type:"warning"}),!1;if(w.length===_.value.length){const J=await(await fetch("/api/add",{method:"POST"})).json();return J.success?(l({message:"文件已添加到暂存区",type:"success"}),!0):(l({message:`添加文件失败: ${J.error}`,type:"error"}),!1)}else{const J=await(await fetch("/api/add-filtered",{method:"POST"})).json();if(J.success){const oe=_.value.length-w.length;let Le=`已添加 ${w.length} 个文件到暂存区`;return oe>0&&(Le+=`，跳过 ${oe} 个锁定文件`),l({message:Le,type:"success"}),!0}else return l({message:`添加文件失败: ${J.error}`,type:"error"}),!1}}catch(w){return l({message:`添加文件失败: ${w.message}`,type:"error"}),!1}finally{ae.value=!1}}async function C(){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const h=await(await fetch("/api/add-all",{method:"POST"})).json();return h.success?(l({message:"所有文件已添加到暂存区",type:"success"}),!0):(l({message:`添加文件失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`添加文件失败: ${w.message}`,type:"error"}),!1}finally{ae.value=!1}}async function ne(w){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const J=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:w})})).json();return J.success?(l({message:"文件已暂存",type:"success"}),Fe(),!0):(l({message:`暂存文件失败: ${J.error}`,type:"error"}),!1)}catch(h){return l({message:`暂存文件失败: ${h.message}`,type:"error"}),!1}finally{ae.value=!1}}async function ue(w){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{N.value=!0;const J=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:w})})).json();return J.success?(l({message:"已取消暂存文件",type:"success"}),Fe(),!0):(l({message:`取消暂存失败: ${J.error}`,type:"error"}),!1)}catch(h){return l({message:`取消暂存失败: ${h.message}`,type:"error"}),!1}finally{N.value=!1}}function xe(w){return new Promise(h=>setTimeout(h,w))}async function _e(w,h=!1){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{fe.value=!0;const oe=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:w,hasNewlines:w.includes(`
`),noVerify:h})})).json();return oe.success?(l({message:"提交成功",type:"success"}),!0):(l({message:`commitChanges 提交失败: ${oe.error}`,type:"error"}),!1)}catch(J){return l({message:`提交失败: ${J.message}`,type:"error"}),!1}finally{fe.value=!1}}async function re(){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{V.value=!0;const h=await(await fetch("/api/push",{method:"POST"})).json();return h.success?(Q.value=0,F.value=0,await Promise.all([Fe(),Ye()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(l({message:`推送失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`推送失败: ${w.message}`,type:"error"}),!1}finally{V.value=!1}}async function Ae(w,h={}){if(!v.value)return l({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!w)return l({message:"请选择要合并的分支",type:"warning"}),!1;if(w===k.value)return l({message:"不能合并当前分支到自身",type:"warning"}),!1;try{D.value=!0;const J=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:w,...h})}),oe=await J.json();return J.status===409?(l({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):oe.success?(l({message:`成功合并分支 ${w} 到 ${k.value}`,type:"success"}),await Fe(),await ce(),!0):(l({message:`合并分支失败: ${oe.error}`,type:"error"}),!1)}catch(J){return l({message:`合并分支失败: ${J.message}`,type:"error"}),!1}finally{D.value=!1}}async function Xe(w,h=!1){if(console.log("开始暂存并提交操作..."),!await R())return!1;console.log("暂存完成，等待Git操作完成..."),await xe(os),console.log("开始提交更改...");const oe=await _e(w,h);return console.log("暂存并提交操作完成"),oe}async function lt(w,h=!1){try{if(console.log("开始暂存文件..."),!await R()||(console.log("暂存完成，等待Git操作完成..."),await xe(os),console.log("开始提交更改..."),!await _e(w,h)))return!1;console.log("提交完成，等待Git操作完成..."),await xe(os),console.log("开始推送到远程...");const Le=await re();return console.log("一键推送操作完成，状态已统一刷新"),Le}catch(J){console.error("一键推送操作失败:",J);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&l({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch(oe){console.error("清理锁定文件失败:",oe)}l({message:`操作失败: ${J.message}`,type:"error"});try{await Promise.all([Fe(),Ye(),ce()])}catch(oe){console.error("刷新状态失败:",oe)}return!1}}async function it(){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{N.value=!0;const h=await(await fetch("/api/reset-head",{method:"POST"})).json();return h.success?(l({message:"已重置暂存区",type:"success"}),Fe(),!0):(l({message:`重置暂存区失败: ${h.error}`,type:"error"}),!1)}catch(w){return l({message:`重置暂存区失败: ${w.message}`,type:"error"}),!1}finally{N.value=!1}}async function Ht(w){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{N.value=!0;const J=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:w})})).json();return J.success?(l({message:`已重置分支 ${w} 到远程状态`,type:"success"}),Fe(),Ye(),!0):(l({message:`重置分支失败: ${J.error}`,type:"error"}),!1)}catch(h){return l({message:`重置分支失败: ${h.message}`,type:"error"}),!1}finally{N.value=!1}}async function Jt(){if(v.value)try{ee.value=!0,console.log("获取远程仓库地址...");const h=await(await fetch("/api/remote-url")).json();h.success?(P.value=h.url||"",console.log(`获取到远程仓库地址: ${P.value}`)):(console.warn("获取远程仓库地址失败:",h.error),P.value="")}catch(w){console.error("获取远程仓库地址失败:",w),P.value=""}finally{ee.value=!1}}async function Wt(){if(!P.value)return l({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(P.value),l({message:"已复制远程仓库地址",type:"success"}),!0}catch(w){return console.error("复制远程仓库地址失败:",w),l({message:`复制失败: ${w.message}`,type:"error"}),!1}}et(()=>{const w=localStorage.getItem("zen-gitsync-auto-update");w!==null&&(G.value=w==="true"),at()});function Dt(){U.value&&(U.value.disconnect(),U.value=null)}Ds(()=>{Dt()});async function ft(){if(!v.value)return l.warning("当前目录不是Git仓库"),[];try{Se.value=!0;const h=await(await fetch("/api/stash-list")).json();return h.success?(Pe.value=h.stashes,h.stashes):(l.error(`获取stash列表失败: ${h.error}`),[])}catch(w){return console.error("获取stash列表失败:",w),l.error(`获取stash列表失败: ${w.message}`),[]}finally{Se.value=!1}}async function qt(w,h=!1,J=!0){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{E.value=!0;const Le=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:w,includeUntracked:h,excludeLocked:J})})).json();return Le.success?(l.success(Le.message),await ft(),await Fe(),!0):(l.warning(Le.message),!1)}catch(oe){return console.error("保存stash失败:",oe),l.error(`保存stash失败: ${oe.message}`),!1}finally{E.value=!1}}async function Yt(w,h=!1){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{g.value=!0;const J=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:w,pop:h})}),oe=await J.json();return J.status===409?(l.warning("应用stash时发生冲突，请手动解决"),!1):oe.success?(l.success(oe.message),await ft(),await Fe(),!0):(l.error(`应用stash失败: ${oe.error}`),!1)}catch(J){return console.error("应用stash失败:",J),l.error(`应用stash失败: ${J.message}`),!1}finally{g.value=!1}}async function Kt(w){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{c.value=!0;const J=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:w})})).json();return J.success?(l.success(J.message),await ft(),!0):(l.error(`删除stash失败: ${J.error}`),!1)}catch(h){return console.error("删除stash失败:",h),l.error(`删除stash失败: ${h.message}`),!1}finally{c.value=!1}}async function Qt(){if(!v.value)return l.warning("当前目录不是Git仓库"),!1;try{c.value=!0;const h=await(await fetch("/api/stash-clear",{method:"POST"})).json();return h.success?(l.success(h.message),Pe.value=[],!0):(l.error(`清空stash失败: ${h.error}`),!1)}catch(w){return console.error("清空stash失败:",w),l.error(`清空stash失败: ${w.message}`),!1}finally{c.value=!1}}return{currentBranch:k,allBranches:o,userName:i,userEmail:y,isChangingBranch:d,isCreatingBranch:x,isGitRepo:v,lastCheckedTime:O,branchAhead:Q,branchBehind:F,hasUpstream:T,upstreamBranch:te,lastBranchStatusTime:L,lastBranchesTime:z,remoteUrl:P,isLoadingRemoteUrl:ee,stashes:Pe,isLoadingStashes:Se,isApplyingStash:g,isDroppingStash:c,isSavingStash:E,log:b,status:m,fileList:_,isLoadingLog:S,isLoadingStatus:j,isAddingFiles:ae,isCommiting:fe,isResetting:N,autoUpdateEnabled:G,currentPage:le,hasMoreData:ie,totalCommits:me,isPushing:V,isGitPulling:p,isGitFetching:A,isGitMerging:D,$reset:H,checkGitRepo:ge,getCurrentBranch:he,getAllBranches:pe,changeBranch:de,getUserInfo:Te,createBranch:Be,clearUserConfig:ye,restoreUserConfig:Ne,getBranchStatus:ce,gitPull:st,gitFetchAll:ot,initSocketConnection:at,toggleAutoUpdate:bt,parseStatusPorcelain:Qe,fetchLog:Ye,refreshLog:wt,fetchStatus:Fe,fetchStatusPorcelain:nt,addToStage:R,addAllToStage:C,addFileToStage:ne,unstageFile:ue,commitChanges:_e,pushToRemote:re,addAndCommit:Xe,addCommitAndPush:lt,resetHead:it,resetToRemote:Ht,getRemoteUrl:Jt,copyRemoteUrl:Wt,mergeBranch:Ae,getStashList:ft,saveStash:qt,applyStash:Yt,dropStash:Kt,clearAllStashes:Qt,socket:U,disconnectSocket:Dt}});function Ho(q){return q.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function xs(q){return q?q.split(`
`).map(o=>{const i=Ho(o);return o.startsWith("diff --git")||o.startsWith("diff --cc")||o.startsWith("diff --combined")?`<div class="diff-header">${i}</div>`:o.startsWith("---")?`<div class="diff-old-file">${i}</div>`:o.startsWith("+++")?`<div class="diff-new-file">${i}</div>`:o.startsWith("@@")?`<div class="diff-hunk-header">${i}</div>`:o.startsWith("+")?`<div class="diff-added">${i}</div>`:o.startsWith("-")?`<div class="diff-removed">${i}</div>`:`<div class="diff-context">${i}</div>`}).join(""):""}function Jo(q){return q?q.trim():"(无提交信息)"}function Wo(q){if(!q)return"";const k=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,o=q.match(k);return o?o[3].trim():q.trim()}const Ps="/assets/vscode-twqwGmNt.webp",qo={class:"file-action-buttons"},Yo={key:1,style:{"font-size":"16px","font-weight":"bold"}},Ko=$e({__name:"FileActionButtons",props:{filePath:{},fileType:{},isLocked:{type:Boolean,default:!1},isLocking:{type:Boolean,default:!1},showLockButton:{type:Boolean,default:!0}},emits:["toggleLock","stage","unstage","revert"],setup(q,{emit:k}){const o=q,i=k,y=Z(()=>{switch(o.fileType){case"added":return[{type:"unstage",tooltip:"取消暂存",buttonType:"warning",icon:"-",handler:()=>i("unstage",o.filePath)}];case"modified":case"deleted":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:()=>i("stage",o.filePath)},{type:"revert",tooltip:"撤回修改",buttonType:"danger",icon:vs,handler:()=>i("revert",o.filePath)}];case"untracked":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:()=>i("stage",o.filePath)},{type:"delete",tooltip:"删除文件",buttonType:"danger",icon:ms,handler:()=>i("revert",o.filePath)}];default:return[]}});function d(v){v.stopPropagation(),i("toggleLock",o.filePath)}function x(v,O){O.stopPropagation(),v()}return(v,O)=>{const P=Re,ee=Ue,V=be;return r(),$("div",qo,[v.showLockButton?(r(),W(V,{key:0,content:v.isLocking?"处理中...":v.isLocked?"解锁文件":"锁定文件",placement:"top","show-after":200},{default:s(()=>[t(ee,{type:v.isLocked?"danger":"info",size:"small",text:"",loading:v.isLocking,disabled:v.isLocking,onClick:d,class:"file-action-btn"},{default:s(()=>[v.isLocking?Y("",!0):(r(),W(P,{key:0,size:"16"},{default:s(()=>[(r(),W(us(v.isLocked?a(Gt):a(zs))))]),_:1}))]),_:1},8,["type","loading","disabled"])]),_:1},8,["content"])):Y("",!0),v.isLocked?Y("",!0):(r(!0),$(ke,{key:1},je(y.value,p=>(r(),W(V,{key:p.type,content:p.tooltip,placement:"top","show-after":200},{default:s(()=>[t(ee,{type:p.buttonType,size:"small",text:"",onClick:A=>x(p.handler,A),class:"file-action-btn"},{default:s(()=>[typeof p.icon!="string"?(r(),W(P,{key:0,size:"16"},{default:s(()=>[(r(),W(us(p.icon)))]),_:2},1024)):(r(),$("span",Yo,I(p.icon),1))]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]))),128))])}}}),Ce=(q,k)=>{const o=q.__vccOpts||q;for(const[i,y]of k)o[i]=y;return o},Es=Ce(Ko,[["__scopeId","data-v-1b24709d"]]);function Ns(q){if(!q)return"";try{return go(q)||""}catch(k){return console.warn("Failed to get file icon class:",k),""}}const Qo={class:"files-panel"},Xo={class:"panel-header"},Zo={key:0,class:"file-count"},ea={class:"search-box"},ta={class:"files-list"},sa=["onClick"],oa={class:"file-name"},aa=["title"],na={class:"file-directory path-badge"},la={key:2,class:"file-actions"},ia={class:"diff-panel"},ra={class:"panel-header"},ca={class:"header-right"},ua={class:"selected-file"},da={class:"path-dir"},fa={class:"path-name"},pa={key:1,class:"action-buttons"},ma=["src"],va={class:"diff-content"},ga=["innerHTML"],ha={key:1,class:"diff-panel full-width"},ya={class:"panel-header"},_a={class:"header-right"},ba={class:"selected-file"},wa={class:"path-dir"},ka={class:"path-name"},$a={key:1,class:"action-buttons"},Ca=["src"],Sa={class:"diff-content"},Ta=["innerHTML"],as="fileDiff.splitPercent",ns="zen-gitsync-filediff-ratio",La=$e({__name:"FileDiffViewer",props:{files:{},emptyText:{default:"没有找到变更文件"},diffContent:{default:""},selectedFile:{default:""},height:{default:"100%"},showFileList:{type:Boolean,default:!0},context:{default:"git-status"},showOpenButton:{type:Boolean,default:!0},showActionButtons:{type:Boolean,default:!1},isFileLocked:{type:Function,default:()=>!1},isLocking:{type:Function,default:()=>!1}},emits:["file-select","open-file","open-with-vscode","toggle-lock","stage","unstage","revert"],setup(q,{emit:k}){const o=q,i=k,y=u(""),d=u(""),x=localStorage.getItem(ns)??localStorage.getItem(as),v=(()=>{const m=x?parseFloat(x):35;return isNaN(m)?35:Math.min(85,Math.max(15,m))})(),O=u(v),P=Z(()=>o.selectedFile||y.value),ee=Z(()=>o.files.map(m=>{const _=m.name||m.path.split("/").pop()||m.path;return{...m,displayName:_,dirPath:(()=>{const S=(m.path||"").split("/");return S.length>1?S.slice(0,-1).join("/"):""})(),iconClass:Ns(_)}})),V=Z(()=>{if(!d.value.trim())return ee.value;const m=d.value.toLowerCase().trim();return ee.value.filter(_=>_.displayName.toLowerCase().includes(m)||_.path.toLowerCase().includes(m))}),p=Z(()=>o.diffContent&&o.diffContent.trim()!==""),A=Z(()=>{if(!P.value)return"";const m=P.value.split("/");return m.slice(0,-1).join("/")+(m.length>1?"/":"")}),D=Z(()=>{if(!P.value)return"";const m=P.value.split("/");return m[m.length-1]||P.value});function Q(m){y.value=m,i("file-select",m)}function F(){if(!P.value){l.warning("请先选择一个文件");return}i("open-file",P.value,o.context)}function T(){if(!P.value){l.warning("请先选择一个文件");return}navigator.clipboard.writeText(P.value).then(()=>{l.success("文件路径已复制到剪贴板")}).catch(()=>{l.error("复制失败")})}function te(){if(!P.value){l.warning("请先选择一个文件");return}i("open-with-vscode",P.value,o.context)}const L=Z(()=>{switch(o.context){case"git-status":return"在系统默认编辑器中打开文件";case"commit-detail":return"打开该提交时的文件版本";case"stash-detail":return"打开该stash中的文件版本";default:return"打开文件"}});ze(()=>o.selectedFile,m=>{m!==void 0&&(y.value=m)}),ze(()=>o.files,m=>{if(m.length>0&&!P.value){const _=m[0];Q(_.path)}},{immediate:!0});const z=m=>Math.min(85,Math.max(15,m)),G=m=>{try{const _=String(z(m));localStorage.setItem(ns,_),localStorage.setItem(as,_)}catch{}};ze(O,m=>{G(m)}),et(()=>{try{const m=localStorage.getItem(ns)??localStorage.getItem(as);if(m!=null){const _=parseFloat(m);isNaN(_)||(O.value=z(_))}}catch{}});const U=u(null),se=()=>{var _,S;const m=((_=U.value)==null?void 0:_.$el)??U.value;if(m&&m.clientWidth)return m.clientWidth;try{return((S=m==null?void 0:m.getBoundingClientRect)==null?void 0:S.call(m).width)??0}catch{return 0}},X=()=>{var ae,fe,N,le;const m=((ae=U.value)==null?void 0:ae.$el)??U.value;if(!m)return;const _=(fe=m.querySelectorAll)==null?void 0:fe.call(m,".el-splitter__panel"),S=se();if(!_||_.length<1||S<=0)return;const j=((le=(N=_[0])==null?void 0:N.getBoundingClientRect)==null?void 0:le.call(N).width)??0;if(j>0){const ie=z(j/S*100);ie!==O.value&&(O.value=ie,G(ie))}},b=Z({get(){return`${z(O.value)}%`},set(m){let _=NaN;if(typeof m=="number"){const S=m,j=se();j>0&&!isNaN(S)&&(_=S/j*100)}else if(typeof m=="string"){if(m.endsWith("%"))_=parseFloat(m);else if(m.endsWith("px")){const S=parseFloat(m),j=se();j>0&&!isNaN(S)&&(_=S/j*100)}}isNaN(_)||(O.value=z(_),G(O.value))}});return(m,_)=>{const S=ho;return r(),$("div",{class:"file-diff-viewer",style:_t({height:m.height})},[m.showFileList?(r(),W(a(bo),{key:0,ref_key:"splitterRef",ref:U,layout:"horizontal",style:{height:"100%"},onResize:X,onResizeEnd:X},{default:s(()=>[t(S,{size:b.value,"onUpdate:size":_[5]||(_[5]=j=>b.value=j),min:"15%",max:"85%"},{default:s(()=>[e("div",Qo,[e("div",Xo,[_[6]||(_[6]=e("h4",null,"变更文件",-1)),m.files.length>0?(r(),$("span",Zo,"("+I(m.files.length)+")",1)):Y("",!0)]),e("div",ea,[t(a(tt),{modelValue:d.value,"onUpdate:modelValue":_[0]||(_[0]=j=>d.value=j),placeholder:"搜索文件名或路径...","prefix-icon":a(yo),clearable:"",size:"small"},null,8,["modelValue","prefix-icon"])]),e("div",ta,[t(a(_o),{height:"100%"},{default:s(()=>[m.files.length===0?(r(),W(a(rt),{key:0,description:m.emptyText,"image-size":60},null,8,["description"])):V.value.length===0?(r(),W(a(rt),{key:1,description:"没有找到匹配的文件","image-size":60})):Y("",!0),(r(!0),$(ke,null,je(V.value,j=>(r(),$("div",{key:j.path,class:ve(["file-item",{active:j.path===P.value,[`file-type-${j.type}`]:j.type,"is-locked":j.locked}]),onClick:ae=>Q(j.path)},[e("span",{class:ve(["file-icon",j.iconClass])},null,2),t(a(be),{content:j.path,placement:"top",disabled:j.displayName.length<=35,"show-after":200},{default:s(()=>[e("span",oa,I(j.displayName),1)]),_:2},1032,["content","disabled"]),j.dirPath?(r(),$("div",{key:0,class:"file-path-section",title:j.dirPath},[t(a(be),{content:j.dirPath,placement:"top",disabled:j.dirPath.length<=30,"show-after":200},{default:s(()=>[e("span",na,I(j.dirPath),1)]),_:2},1032,["content","disabled"])],8,aa)):Y("",!0),j.locked?(r(),W(a(be),{key:1,content:"该文件已被锁定，提交时会被跳过",placement:"top","show-after":200},{default:s(()=>[t(a(Re),{class:"lock-icon",color:"#E6A23C"},{default:s(()=>[t(a(Gt))]),_:1})]),_:1})):Y("",!0),m.showActionButtons?(r(),$("div",la,[t(Es,{"file-path":j.path,"file-type":j.type||"modified","is-locked":m.isFileLocked(j.path),"is-locking":m.isLocking(j.path),onToggleLock:_[1]||(_[1]=ae=>i("toggle-lock",ae)),onStage:_[2]||(_[2]=ae=>i("stage",ae)),onUnstage:_[3]||(_[3]=ae=>i("unstage",ae)),onRevert:_[4]||(_[4]=ae=>i("revert",ae))},null,8,["file-path","file-type","is-locked","is-locking"])])):Y("",!0)],10,sa))),128))]),_:1})])])]),_:1},8,["size"]),t(S,{min:"15%",max:"85%"},{default:s(()=>[e("div",ia,[e("div",ra,[_[7]||(_[7]=e("h4",null,"文件差异",-1)),e("div",ca,[P.value?(r(),W(a(be),{key:0,content:P.value,placement:"top",effect:"light","show-after":200},{default:s(()=>[e("span",ua,[e("span",da,I(A.value),1),e("span",fa,I(D.value),1)])]),_:1},8,["content"])):Y("",!0),m.showOpenButton&&P.value?(r(),$("div",pa,[t(a(be),{content:"复制文件路径",placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24",onClick:T},[t(a(Re),{class:"btn-icon"},{default:s(()=>[t(a(ds))]),_:1})])]),_:1}),t(a(be),{content:L.value,placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24",onClick:F},[t(a(Re),{class:"btn-icon"},{default:s(()=>[t(a(fs))]),_:1})])]),_:1},8,["content"]),t(a(be),{content:"用VSCode打开文件",placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24",onClick:te},[e("img",{src:a(Ps),alt:"VSCode",class:"btn-icon vscode-icon"},null,8,ma)])]),_:1})])):Y("",!0)])]),e("div",va,[p.value?(r(),$("div",{key:1,class:"diff-text",innerHTML:a(xs)(m.diffContent)},null,8,ga)):(r(),W(a(rt),{key:0,description:P.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])])]),_:1})]),_:1},512)):(r(),$("div",ha,[e("div",ya,[_[8]||(_[8]=e("h4",null,"文件差异",-1)),e("div",_a,[P.value?(r(),W(a(be),{key:0,content:P.value,placement:"top",effect:"light","show-after":200},{default:s(()=>[e("span",ba,[e("span",wa,I(A.value),1),e("span",ka,I(D.value),1)])]),_:1},8,["content"])):Y("",!0),m.showOpenButton&&P.value?(r(),$("div",$a,[t(a(be),{content:"复制文件路径",placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24",onClick:T},[t(a(Re),{class:"btn-icon"},{default:s(()=>[t(a(ds))]),_:1})])]),_:1}),t(a(be),{content:L.value,placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24 btn-primary",onClick:F},[t(a(Re),{class:"btn-icon"},{default:s(()=>[t(a(fs))]),_:1})])]),_:1},8,["content"]),t(a(be),{content:"用VSCode打开文件",placement:"top",effect:"light"},{default:s(()=>[e("button",{class:"modern-btn btn-icon-24 btn-success",onClick:te},[e("img",{src:a(Ps),alt:"VSCode",class:"btn-icon vscode-icon"},null,8,Ca)])]),_:1})])):Y("",!0)])]),e("div",Sa,[p.value?(r(),$("div",{key:1,class:"diff-text",innerHTML:a(xs)(m.diffContent)},null,8,Ta)):(r(),W(a(rt),{key:0,description:P.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])]))],4)}}}),_s=Ce(La,[["__scopeId","data-v-8d1c9842"]]),Fa={class:"common-dialog__footer"},Va=$e({__name:"CommonDialog",props:{modelValue:{type:Boolean},title:{},size:{default:"medium"},type:{default:"default"},width:{},height:{},top:{default:"50px"},closeOnClickModal:{type:Boolean,default:!1},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},customClass:{},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},heightMode:{default:"max"},heightOffset:{default:"100px"},showFooter:{type:Boolean,default:!1},confirmText:{default:"确定"},cancelText:{default:"取消"},showCancel:{type:Boolean,default:!0},confirmLoading:{type:Boolean,default:!1}},emits:["update:modelValue","confirm","cancel","close","opened","closed"],setup(q,{emit:k}){const o=q,i=k,y=Z(()=>{if(o.width)return o.width;switch(o.size){case"small":return"30%";case"medium":return"50%";case"large":return"80%";case"extra-large":return"90%";default:return"50%"}}),d=Z(()=>{const p=[];return o.customClass&&p.push(o.customClass),o.type==="flex"&&p.push("common-dialog--flex"),o.type==="full-height"&&p.push("common-dialog--full-height"),p.join(" ")}),x=Z(()=>{const p=`calc(100% - ${o.heightOffset})`;return o.heightMode==="fixed"?{height:p}:{maxHeight:p}});function v(){i("update:modelValue",!1),i("close")}function O(){i("confirm")}function P(){i("cancel"),v()}function ee(){i("opened")}function V(){i("closed")}return(p,A)=>{const D=Ue;return r(),W(a(Rs),{"model-value":p.modelValue,title:p.title,width:y.value,top:p.top,style:_t(x.value),"close-on-click-modal":p.closeOnClickModal,"close-on-press-escape":p.closeOnPressEscape,"destroy-on-close":p.destroyOnClose,draggable:p.draggable,class:ve(d.value),"append-to-body":p.appendToBody,"lock-scroll":p.lockScroll,onClose:v,onOpened:ee,onClosed:V},wo({default:s(()=>[ct(p.$slots,"default",{},void 0,!0)]),_:2},[p.showFooter||p.$slots.footer?{name:"footer",fn:s(()=>[ct(p.$slots,"footer",{},()=>[e("div",Fa,[p.showCancel?(r(),W(D,{key:0,onClick:P},{default:s(()=>[M(I(p.cancelText),1)]),_:1})):Y("",!0),t(D,{type:"primary",loading:p.confirmLoading,onClick:O},{default:s(()=>[M(I(p.confirmText),1)]),_:1},8,["loading"])])],!0)]),key:"0"}:void 0]),1032,["model-value","title","width","top","style","close-on-click-modal","close-on-press-escape","destroy-on-close","draggable","class","append-to-body","lock-scroll"])}}}),Me=Ce(Va,[["__scopeId","data-v-0f9dd475"]]),xa={key:0,class:"file-group"},Pa={class:"file-list"},Ba=["onClick"],Da={class:"file-info"},za={class:"file-name-section"},Ra=["title"],ja={class:"file-directory"},Oa={class:"file-actions"},Aa=$e({__name:"FileGroup",props:{files:{},title:{},groupKey:{},collapsedGroups:{},isFileLocked:{type:Function},isLocking:{type:Function},getFileName:{type:Function},getFileDirectory:{type:Function}},emits:["toggleCollapse","fileClick","toggleFileLock","stageFile","unstageFile","revertFileChanges"],setup(q,{emit:k}){const o=q,i=k,y=Z(()=>o.files.length>0),d=Z(()=>o.collapsedGroups[o.groupKey]);function x(){i("toggleCollapse",o.groupKey)}function v(D){i("fileClick",D)}function O(D){i("toggleFileLock",D)}function P(D){i("stageFile",D)}function ee(D){i("unstageFile",D)}function V(D){i("revertFileChanges",D)}function p(D){switch(D){case"added":return"A";case"modified":return"M";case"deleted":return"D";case"untracked":return"U";default:return""}}const A=D=>{const Q=o.getFileName(D);return Ns(Q)};return(D,Q)=>{const F=Re,T=ko("Lock"),te=be;return y.value?(r(),$("div",xa,[e("div",{class:"file-group-header",onClick:x},[t(F,{class:ve(["collapse-icon",{collapsed:d.value}])},{default:s(()=>[t(a(ht))]),_:1},8,["class"]),e("span",null,I(D.title),1)]),qe(e("div",Pa,[(r(!0),$(ke,null,je(D.files,L=>(r(),$("div",{key:L.path,class:ve(["file-item file-group-item",{"is-loading":o.isLocking(L.path)}]),onClick:z=>v(L)},[e("div",Da,[e("span",{class:ve(["file-type-icon",A(L.path)])},null,2),e("div",za,[t(te,{content:o.getFileName(L.path),placement:"top",disabled:o.getFileName(L.path).length<=25,"show-after":200},{default:s(()=>[e("span",{class:ve(["file-name",{"locked-file-name":o.isFileLocked(L.path),"deleted-file-name":L.type==="deleted"}])},[M(I(o.getFileName(L.path))+" ",1),o.isFileLocked(L.path)?(r(),W(F,{key:0,class:"lock-indicator"},{default:s(()=>[t(T)]),_:1})):Y("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:o.getFileDirectory(L.path)},[t(te,{content:o.getFileDirectory(L.path),placement:"top",disabled:o.getFileDirectory(L.path).length<=30,"show-after":200},{default:s(()=>[e("span",ja,I(o.getFileDirectory(L.path)),1)]),_:2},1032,["content","disabled"])],8,Ra),e("div",{class:ve(["file-status-indicator",[L.type,{locked:o.isFileLocked(L.path)}]])},I(p(L.type)),3)]),e("div",Oa,[t(Es,{"file-path":L.path,"file-type":L.type,"is-locked":o.isFileLocked(L.path),"is-locking":o.isLocking(L.path),onToggleLock:O,onStage:P,onUnstage:ee,onRevert:V},null,8,["file-path","file-type","is-locked","is-locking"])])],10,Ba))),128))],512),[[Pt,!d.value]])])):Y("",!0)}}}),ls=Ce(Aa,[["__scopeId","data-v-a98fce07"]]),Ua={id:"directory-selector",class:"directory-selector"},Ga=["title"],Ma={class:"directory-actions"},Ia={class:"directory-content"},Ea={class:"form-label"},Na={class:"directory-input-group"},Ha={class:"form-label"},Ja={class:"recent-directories"},Wa=["onClick"],qa=["title"],Ya={class:"directory-footer"},Ka={class:"footer-actions"},Qa=["disabled"],Xa=$e({__name:"DirectorySelector",setup(q){const k=Ke(),o=Ee(),i=Z(()=>k.currentDirectory),y=u(!1),d=u(""),x=u(!1),v=u([]);function O(){d.value=i.value,y.value=!0,ee()}async function P(){try{if(!i.value){l.warning("当前目录路径为空");return}const T=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:i.value})})).json();T.success?l.success("已在文件管理器中打开目录"):T.error&&l.error(T.error)}catch(F){l.error(`打开目录失败: ${F.message}`)}}async function ee(){try{const T=await(await fetch("/api/recent_directories")).json();T.success&&Array.isArray(T.directories)&&(v.value=T.directories)}catch(F){console.error("获取最近目录失败:",F)}}async function V(F){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:F})})}catch(T){console.error("保存最近目录失败:",T)}}async function p(){if(!d.value){l.warning("目录路径不能为空");return}try{x.value=!0;const T=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:d.value})})).json();T.success?(l.success("已切换工作目录"),y.value=!1,await V(T.directory),await ee(),k.setCurrentDirectory(T.directory),o.isGitRepo=T.isGitRepo,await k.loadConfig(!0),T.isGitRepo?(await Promise.all([o.getCurrentBranch(),o.getAllBranches(),o.getUserInfo(),o.getRemoteUrl()]),o.refreshLog()):(l.warning("当前目录不是Git仓库，部分功能将不可用"),o.$reset())):l.error(T.error||"切换目录失败")}catch(F){l.error(`切换目录失败: ${F.message}`)}finally{x.value=!1}}async function A(){try{const T=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:d.value||i.value})})).json();T.success?D(T):T.error&&l.error(T.error)}catch(F){l.error(`浏览目录失败: ${F.message}`)}}function D(F){!F||!F.items||Ie.alert(Oe("div",{class:"directory-browser"},[Oe("div",{class:"current-path"},[Oe("span",{class:"path-label"},"当前路径: "),Oe("span",{class:"path-value"},F.path)]),Oe("div",{class:"directory-list"},[F.parentPath?Oe("div",{class:"directory-item parent-dir",onClick:()=>Q(F.parentPath)},[Oe("span",{class:"dir-icon"},Oe("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Oe("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Oe("span",{class:"dir-name"},"返回上级目录")]):null,...F.items.map(T=>Oe("div",{class:"directory-item",onClick:()=>Q(T.path)},[Oe("span",{class:"dir-icon"},Oe("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Oe("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Oe("span",{class:"dir-name"},T.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:T=>{T==="confirm"&&(d.value=F.path)}})}async function Q(F){try{Ie.close(),setTimeout(async()=>{try{const te=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:F})})).json();te.success?D(te):te.error&&l.error(te.error)}catch(T){l.error(`浏览目录失败: ${T.message}`)}},100)}catch(T){l.error(`处理目录选择时出错: ${T.message}`)}}return(F,T)=>{const te=Re,L=be,z=tt,G=Et,U=It;return r(),$(ke,null,[e("div",Ua,[e("div",{class:"directory-display cursor-pointer",title:i.value,onClick:O},I(i.value),9,Ga),e("div",Ma,[t(L,{content:"在资源管理器中打开",placement:"top",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-28",onClick:P},[t(te,{class:"btn-icon"},{default:s(()=>[t(a(fs))]),_:1})])]),_:1})])]),t(Me,{modelValue:y.value,"onUpdate:modelValue":T[3]||(T[3]=se=>y.value=se),title:"切换工作目录",size:"medium","destroy-on-close":!0,"append-to-body":!0,"custom-class":"directory-dialog"},{footer:s(()=>[e("div",Ya,[e("div",Ka,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:T[1]||(T[1]=se=>y.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:T[2]||(T[2]=se=>p()),disabled:x.value},[x.value?(r(),W(te,{key:1,class:"is-loading"},{default:s(()=>T[7]||(T[7]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(r(),W(te,{key:0},{default:s(()=>[t(a(Ot))]),_:1})),T[8]||(T[8]=e("span",null,"切换",-1))],8,Qa)])])]),default:s(()=>[e("div",Ia,[t(U,{"label-position":"top"},{default:s(()=>[t(G,null,{label:s(()=>[e("div",Ea,[t(te,{class:"label-icon"},{default:s(()=>[t(a(Ot))]),_:1}),T[4]||(T[4]=e("span",null,"目录路径",-1))])]),default:s(()=>[e("div",Na,[t(z,{modelValue:d.value,"onUpdate:modelValue":T[0]||(T[0]=se=>d.value=se),placeholder:"请输入目录路径",class:"modern-input",size:"large"},null,8,["modelValue"]),e("button",{type:"button",class:"browse-btn",onClick:A},[t(te,null,{default:s(()=>[t(a(Ot))]),_:1}),T[5]||(T[5]=e("span",null,"浏览",-1))])])]),_:1}),v.value.length>0?(r(),W(G,{key:0},{label:s(()=>[e("div",Ha,[t(te,{class:"label-icon"},{default:s(()=>[t(a(js))]),_:1}),T[6]||(T[6]=e("span",null,"常用目录",-1))])]),default:s(()=>[e("div",Ja,[(r(!0),$(ke,null,je(v.value,(se,X)=>(r(),$("div",{key:X,class:"recent-dir-item",onClick:b=>d.value=se},[t(te,{class:"dir-icon"},{default:s(()=>[t(a(Ot))]),_:1}),e("span",{class:"dir-path",title:se},I(se),9,qa)],8,Wa))),128))])]),_:1})):Y("",!0)]),_:1})])]),_:1},8,["modelValue"])],64)}}}),Za=Ce(Xa,[["__scopeId","data-v-cb10aa78"]]),en={class:"card git-status-card flex flex-col"},tn={class:"status-header"},sn={class:"title-row"},on={class:"header-actions"},an=["element-loading-text"],nn={key:0,class:"status-box"},ln={key:1,class:"status-box-wrap"},rn={key:0,class:"upstream-tip"},cn={class:"tip-header"},un={class:"tip-body"},dn={class:"tip-actions"},fn={key:1,class:"branch-status-info"},pn={class:"branch-sync-status"},mn={class:"sync-status-content"},vn={class:"status-badges"},gn={class:"badge-content"},hn={class:"badge-content"},yn={key:2,class:"file-list-container"},_n={key:3,class:"empty-status"},bn={class:"empty-icon"},wn={class:"lock-feature-description"},kn={class:"description-header"},$n={key:0,class:"empty-locked-files"},Cn={class:"empty-icon"},Sn={key:1,class:"locked-files-list"},Tn={class:"locked-files-header"},Ln={class:"locked-file-items"},Fn={class:"file-info"},Vn={class:"file-path-container"},xn={class:"file-name"},Pn={class:"file-directory"},Bn={class:"file-actions"},Dn=$e({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(q,{expose:k}){const o=q,i=Ee(),y=Ke(),d=Z(()=>i.isLoadingStatus),x=u(""),v=u(""),O=u(!1),P=u(!1),ee=u(-1),V=u({});function p(g){return!!V.value[g]}const A=Z(()=>i.fileList.map(g=>({path:g.path,name:g.path.split("/").pop()||g.path,type:g.type,locked:me(g.path)})));async function D(g){await se(g)}async function Q(g,c){try{const H=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:g,context:c})})).json();H.success?l.success(H.message):l.error(H.error||"打开文件失败")}catch(E){l.error(`打开文件失败: ${E.message}`)}}async function F(g,c){try{const H=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:g,context:c})})).json();H.success?l.success(H.message):l.error(H.error||"用VSCode打开文件失败")}catch(E){l.error(`用VSCode打开文件失败: ${E.message}`)}}const T=u(!1),te=u({staged:!1,unstaged:!1,untracked:!1}),L=u(o.initialDirectory||"");async function z(){try{if(!L.value){const c=await(await fetch("/api/current_directory")).json();L.value=c.directory||"未知目录"}if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(),l({message:"Git 状态已刷新",type:"success"})}catch(g){l({message:"刷新失败: "+g.message,type:"error"})}}async function G(g){try{await Ie.confirm(`确认解锁该文件？
${g}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await y.unlockFile(g)}catch{}}async function U(){if(y.lockedFiles.length)try{await Ie.confirm(`确认解锁所有已锁定文件？共 ${y.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const g=[...y.lockedFiles];await Promise.all(g.map(c=>y.unlockFile(c))),await y.loadLockedFiles(),l.success("已清空所有文件锁定")}catch{}}async function se(g){try{P.value=!0,x.value=g,ee.value=i.fileList.findIndex(E=>E.path===g);const c=i.fileList[ee.value];if(c&&c.type==="untracked")try{const H=await(await fetch(`/api/file-content?file=${encodeURIComponent(g)}`)).json();H.success&&H.content?v.value=`diff --git a/${g} b/${g}
新文件: ${g}
--- /dev/null
+++ b/${g}
@@ -0,0 +1,${H.content.split(`
`).length} @@
`+H.content.split(`
`).map(ce=>`+${ce}`).join(`
`):v.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(E){console.error("获取未跟踪文件内容失败:",E),v.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}else if(c&&c.type==="added"){const H=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(g)}`)).json();v.value=H.diff||"没有变更"}else{const H=await(await fetch(`/api/diff?file=${encodeURIComponent(g)}`)).json();v.value=H.diff||"没有变更"}}catch(c){l({message:"获取文件差异失败: "+c.message,type:"error"}),v.value="获取差异失败: "+c.message}finally{P.value=!1}}function X(g){if(O.value=!0,i.fileList.length>0){const c=i.fileList.find(E=>E.path===g.path)||i.fileList[0];se(c.path)}}async function b(g){await i.addFileToStage(g)}async function m(g){await i.unstageFile(g)}async function _(){try{if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(!0),l.success("Git 状态已刷新")}catch(g){l.error("刷新失败: "+g.message)}}async function S(){try{await i.gitPull(),await z()}catch(g){console.error("拉取操作发生错误:",g)}}async function j(){try{await i.gitFetchAll(),await z()}catch(g){console.error("获取远程分支信息操作发生错误:",g)}}const ae=u(!1);async function fe(){if(!i.currentBranch){l.warning("未知当前分支");return}try{ae.value=!0;const g=`git push -u origin ${i.currentBranch}`,E=await(await fetch("/api/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:g})})).json();E.success?(l.success("已推送并设置上游分支"),await i.getAllBranches(),await i.getCurrentBranch(!0),await i.getBranchStatus(!0)):l.error(E.error||"设置上游失败")}catch(g){l.error(`设置上游失败: ${g.message}`)}finally{ae.value=!1}}async function N(g){try{await Ie.confirm(`确定要撤回文件 "${g}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const E=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:g})})).json();E.success?(l.success("已撤回文件修改"),await z()):l.error(E.error?`撤回失败: ${E.error}`:"撤回文件修改失败，请重试")}catch(c){if(c==="cancel"||c.message==="cancel")return;const E=c.message||"未知错误";E!=="undefined"?l.error(`撤回文件修改失败: ${E}`):l.error("撤回文件修改失败，请重试")}}function le(g){const c=g.split("/");return c[c.length-1]}function ie(g){const c=g.split("/");return c.length<=1?"":c.slice(0,-1).join("/")}function me(g){const c=g.replace(/\\/g,"/");return y.lockedFiles.some(H=>{const ce=H.replace(/\\/g,"/");return c===ce})}async function Pe(g){if(!V.value[g]){V.value[g]=!0;try{me(g)?await y.unlockFile(g):await y.lockFile(g)}finally{delete V.value[g]}}}function Se(g){te.value[g]=!te.value[g]}return et(()=>{z(),y.loadConfig(),y.loadLockedFiles()}),ze(()=>i.autoUpdateEnabled,(g,c)=>{console.log(`自动更新状态变更: ${c} -> ${g}`),i.toggleAutoUpdate()},{immediate:!1}),k({refreshStatus:_}),(g,c)=>{const E=gs,H=be,ce=Ue,ge=Re,he=Bt,pe=Nt;return r(),$(ke,null,[e("div",en,[e("div",tn,[t(Za),e("div",sn,[c[4]||(c[4]=e("h2",null,"Git 状态",-1)),e("div",on,[t(H,{content:(a(i).autoUpdateEnabled,"自动更新文件状态"),placement:"top","show-after":200},{default:s(()=>[t(E,{modelValue:a(i).autoUpdateEnabled,"onUpdate:modelValue":c[0]||(c[0]=de=>a(i).autoUpdateEnabled=de),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"4px"},"inline-prompt":"","active-icon":a(gt),"inactive-icon":a(ms),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(H,{content:"Git Pull (拉取远程更新)",placement:"top","show-after":200},{default:s(()=>[t(ce,{type:"primary",icon:a(ps),circle:"",size:"small",onClick:S,loading:a(i).isGitPulling,disabled:!a(i).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(H,{content:"Git Fetch All (获取所有远程分支)",placement:"top","show-after":200},{default:s(()=>[qe(t(ce,{type:"primary",icon:a(mt),circle:"",size:"small",onClick:j,loading:a(i).isGitFetching},null,8,["icon","loading"]),[[Pt,!1]])]),_:1}),a(y).lockedFiles.length>0?(r(),W(H,{key:0,content:"管理锁定文件",placement:"top","show-after":200},{default:s(()=>[t(ce,{type:"warning",circle:"",size:"small",onClick:c[1]||(c[1]=de=>T.value=!0)},{default:s(()=>[t(ge,null,{default:s(()=>[t(a(Gt))]),_:1})]),_:1})]),_:1})):Y("",!0),t(H,{content:"刷新状态",placement:"top","show-after":200},{default:s(()=>[t(ce,{type:"primary",icon:a($o),circle:"",size:"small",onClick:_,loading:d.value},null,8,["icon","loading"])]),_:1})])])]),qe((r(),$("div",{class:"card-content","element-loading-text":a(i).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[a(i).isGitRepo?(r(),$("div",ln,[a(i).hasUpstream?Y("",!0):(r(),$("div",rn,[e("div",cn,[t(ge,{class:"tip-icon"},{default:s(()=>[t(a(ut))]),_:1}),c[6]||(c[6]=e("span",{class:"tip-title"},"当前分支未设置上游分支",-1))]),e("div",un,[c[8]||(c[8]=e("div",{class:"tip-text"},"首次推送后即可建立与远程的跟踪关系，后续可直接 pull/push。",-1)),e("div",dn,[t(ce,{size:"small",type:"primary",plain:"",loading:ae.value,disabled:ae.value,onClick:fe},{default:s(()=>c[7]||(c[7]=[M(" 设置上游并推送 ")])),_:1},8,["loading","disabled"])])])])),a(i).hasUpstream&&(a(i).branchAhead>0||a(i).branchBehind>0)?(r(),$("div",fn,[e("div",pn,[e("div",mn,[t(H,{content:"本地分支与远程分支的状态对比",placement:"top","show-after":200},{default:s(()=>[e("div",vn,[a(i).branchAhead>0?(r(),W(he,{key:0,size:"small",type:"warning",class:"status-badge"},{default:s(()=>[e("span",gn,[t(ge,null,{default:s(()=>[t(a(Os))]),_:1}),M(" 你的分支领先 'origin/"+I(a(i).currentBranch)+"' "+I(a(i).branchAhead)+" 个提交 ",1)])]),_:1})):Y("",!0),a(i).branchBehind>0?(r(),W(he,{key:1,size:"small",type:"info",class:"status-badge"},{default:s(()=>[e("span",hn,[t(ge,null,{default:s(()=>[t(a(ht))]),_:1}),M(" 你的分支落后 'origin/"+I(a(i).currentBranch)+"' "+I(a(i).branchBehind)+" 个提交 ",1)])]),_:1})):Y("",!0)])]),_:1})])])])):Y("",!0),a(i).fileList.length?(r(),$("div",yn,[t(ls,{files:a(i).fileList.filter(de=>de.type==="added"),title:"已暂存的更改","group-key":"staged","collapsed-groups":te.value,"is-file-locked":me,"is-locking":p,"get-file-name":le,"get-file-directory":ie,onToggleCollapse:Se,onFileClick:X,onToggleFileLock:Pe,onUnstageFile:m},null,8,["files","collapsed-groups"]),t(ls,{files:a(i).fileList.filter(de=>de.type==="modified"||de.type==="deleted"),title:"未暂存的更改","group-key":"unstaged","collapsed-groups":te.value,"is-file-locked":me,"is-locking":p,"get-file-name":le,"get-file-directory":ie,onToggleCollapse:Se,onFileClick:X,onToggleFileLock:Pe,onStageFile:b,onRevertFileChanges:N},null,8,["files","collapsed-groups"]),t(ls,{files:a(i).fileList.filter(de=>de.type==="untracked"),title:"未跟踪的文件","group-key":"untracked","collapsed-groups":te.value,"is-file-locked":me,"is-locking":p,"get-file-name":le,"get-file-directory":ie,onToggleCollapse:Se,onFileClick:X,onToggleFileLock:Pe,onStageFile:b,onRevertFileChanges:N},null,8,["files","collapsed-groups"])])):a(i).isGitRepo?(r(),$("div",_n,[e("div",bn,[t(ge,null,{default:s(()=>[t(a(hs))]),_:1})]),c[9]||(c[9]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),c[10]||(c[10]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):Y("",!0)])):(r(),$("div",nn,c[5]||(c[5]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,an)),[[pe,a(i).isGitPulling||a(i).isGitFetching]])]),t(Me,{modelValue:O.value,"onUpdate:modelValue":c[2]||(c[2]=de=>O.value=de),title:"文件差异","custom-class":"file-diff-dialog",size:"extra-large",type:"flex","destroy-on-close":""},{default:s(()=>[t(_s,{files:A.value,diffContent:v.value,selectedFile:x.value,showActionButtons:!0,isFileLocked:me,isLocking:p,context:"git-status",emptyText:"选择文件查看差异",onFileSelect:D,onOpenFile:Q,onOpenWithVscode:F,onToggleLock:Pe,onStage:b,onUnstage:m,onRevert:N},null,8,["files","diffContent","selectedFile"])]),_:1},8,["modelValue"]),t(Me,{modelValue:T.value,"onUpdate:modelValue":c[3]||(c[3]=de=>T.value=de),title:"锁定文件管理",size:"large","destroy-on-close":""},{default:s(()=>[e("div",wn,[e("div",kn,[t(ge,{class:"description-icon"},{default:s(()=>[t(a(ut))]),_:1}),c[11]||(c[11]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),c[12]||(c[12]=e("div",{class:"description-content"},[e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区")])],-1))]),a(y).lockedFiles.length===0?(r(),$("div",$n,[e("div",Cn,[t(ge,null,{default:s(()=>[t(a(Gt))]),_:1})]),c[13]||(c[13]=e("p",null,"当前没有锁定的文件",-1)),c[14]||(c[14]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(r(),$("div",Sn,[e("div",Tn,[e("span",null,"🔒 已锁定 "+I(a(y).lockedFiles.length)+" 个文件",1),t(H,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:s(()=>[t(ge,{class:"info-icon"},{default:s(()=>[t(a(ut))]),_:1})]),_:1}),c[16]||(c[16]=e("div",{style:{flex:"1"}},null,-1)),t(ce,{type:"danger",size:"small",plain:"",disabled:!a(y).lockedFiles.length,onClick:U},{default:s(()=>c[15]||(c[15]=[M(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",Ln,[(r(!0),$(ke,null,je(a(y).lockedFiles,de=>(r(),$("div",{key:de,class:"locked-file-item"},[e("div",Fn,[c[17]||(c[17]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",Vn,[e("span",xn,I(le(de)),1),e("span",Pn,I(ie(de)),1)])]),e("div",Bn,[t(H,{content:"解锁文件",placement:"top"},{default:s(()=>[t(ce,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:a(zs),"aria-label":"解锁",onClick:Te=>G(de)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),zn=Ce(Dn,[["__scopeId","data-v-c44ab4ce"]]),Rn={class:"loading-container"},jn={class:"loading-text"},On={key:0,class:"loading-progress"},An=$e({__name:"GlobalLoading",props:{visible:{type:Boolean,default:!1},text:{default:"加载中..."},showProgress:{type:Boolean,default:!1},progress:{default:0},mock:{type:Boolean,default:!1}},setup(q){return(k,o)=>(r(),W(As,{to:"body"},[t(Ft,{name:"loading-fade"},{default:s(()=>[k.visible||k.mock?(r(),$("div",{key:0,class:"global-loading-overlay",onClick:o[0]||(o[0]=yt(()=>{},["stop"]))},[e("div",Rn,[o[1]||(o[1]=e("div",{class:"loading-spinner"},[e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"})],-1)),e("div",jn,I(k.text),1),k.showProgress||k.mock?(r(),$("div",On,[e("div",{class:ve(["progress-bar",{"is-mock":k.mock&&!k.showProgress}]),style:_t(k.showProgress?{width:k.progress+"%"}:void 0)},null,6)])):Y("",!0)])])):Y("",!0)]),_:1})]))}}),Un=Ce(An,[["__scopeId","data-v-6ac6414b"]]),Gn={class:"success-container"},Mn={class:"success-text"},In={key:0,class:"success-description"},En=$e({__name:"SuccessModal",props:{visible:{type:Boolean,default:!1},text:{default:"操作成功！"},description:{default:""}},setup(q){return(k,o)=>(r(),W(As,{to:"body"},[t(Ft,{name:"success-fade"},{default:s(()=>[k.visible?(r(),$("div",{key:0,class:"success-overlay",onClick:o[0]||(o[0]=yt(()=>{},["stop"]))},[e("div",Gn,[o[1]||(o[1]=e("div",{class:"success-icon"},[e("svg",{viewBox:"0 0 52 52",class:"success-svg"},[e("circle",{class:"success-circle",cx:"26",cy:"26",r:"25",fill:"none"}),e("path",{class:"success-check",fill:"none",d:"m14.1 27.2l7.1 7.2 16.7-16.8"})])],-1)),e("div",Mn,I(k.text),1),k.description?(r(),$("div",In,I(k.description),1)):Y("",!0)])])):Y("",!0)]),_:1})]))}}),Nn=Ce(En,[["__scopeId","data-v-cca06f4a"]]),We=Us({visible:!1,text:"加载中...",showProgress:!1,progress:0});function Hn(){return{loadingState:We,show:d=>{We.visible=!0,We.text=(d==null?void 0:d.text)||"加载中...",We.showProgress=(d==null?void 0:d.showProgress)||!1,We.progress=(d==null?void 0:d.progress)||0},hide:()=>{We.visible=!1},updateProgress:d=>{We.progress=Math.max(0,Math.min(100,d))},updateText:d=>{We.text=d},setText:d=>{We.visible&&(We.text=d)}}}const Tt=Us({visible:!1,text:"操作成功！",description:""});function Jn(){const q=o=>{Tt.visible=!0,Tt.text=(o==null?void 0:o.text)||"操作成功！",Tt.description=(o==null?void 0:o.description)||"";const i=(o==null?void 0:o.duration)||2e3;setTimeout(()=>{k()},i)},k=()=>{Tt.visible=!1};return{successState:Tt,show:q,hide:k}}const Wn={class:"template-form"},qn={class:"template-form-buttons"},Yn={key:0,class:"template-list"},Kn={key:1,class:"template-list-scroll"},Qn={class:"template-content"},Xn={class:"template-actions"},Zn={key:1,class:"templates-container"},el={class:"message-templates-list"},tl={class:"templates-scroll-area"},sl={class:"template-content"},ol={class:"template-actions"},al={key:0,class:"current-default-message"},nl={class:"default-message-content"},ll={key:2,class:"message-help-text"},il=$e({__name:"TemplateManager",props:{visible:{type:Boolean},type:{},title:{},placeholder:{default:"输入新模板内容"},editPlaceholder:{default:"编辑模板内容"},emptyDescription:{default:"暂无保存的模板"},showDefaultSection:{type:Boolean,default:!1},showHelpText:{type:Boolean,default:!1}},emits:["update:visible","use-template","set-default"],setup(q,{expose:k,emit:o}){const i=q,y=o,d=Ke(),x=u(""),v=u(!1),O=u(""),P=u(-1),ee=u(!1),V=u(!1),p=Z(()=>{switch(i.type){case"description":return d.descriptionTemplates||[];case"scope":return d.scopeTemplates||[];case"message":return d.messageTemplates||[];default:return[]}}),A=Z(()=>i.type==="message"?d.defaultCommitMessage:""),D=Z(()=>v.value?i.editPlaceholder:i.placeholder),Q=Z(()=>v.value?"更新模板":"添加模板"),F=Z({get:()=>i.visible,set:X=>y("update:visible",X)});ze(F,X=>{X||T()});function T(){x.value="",v.value=!1,O.value="",P.value=-1}async function te(){if(!x.value.trim()){l.warning("模板内容不能为空");return}try{ee.value=!0,v.value?await d.updateTemplate(O.value,x.value,i.type)&&T():await d.saveTemplate(x.value,i.type)&&(x.value="")}catch(X){l.error(`模板保存失败: ${X.message}`)}finally{ee.value=!1}}function L(X){y("use-template",X),i.type!=="message"&&(F.value=!1)}function z(X,b){v.value=!0,O.value=X,x.value=X,P.value=b}function G(){T()}async function U(X){try{const b=await d.deleteTemplate(X,i.type)}catch(b){l.error(`模板删除失败: ${b.message}`)}}async function se(){if(!(i.type!=="message"||!x.value.trim()))try{V.value=!0,await d.saveDefaultMessage(x.value)&&y("set-default",x.value)}catch(X){l.error(`设置默认提交信息失败: ${X.message}`)}finally{V.value=!1}}return k({resetForm:T}),(X,b)=>{const m=tt,_=Ue,S=rt,j=Co,ae=Gs,fe=Bt;return r(),W(Me,{modelValue:F.value,"onUpdate:modelValue":b[1]||(b[1]=N=>F.value=N),title:X.title,"close-on-click-modal":!1,"custom-class":X.type==="message"?"message-template-dialog":"template-dialog"},{default:s(()=>[e("div",{class:ve(["template-container",{"message-template-container":X.type==="message"}])},[e("div",Wn,[t(m,{modelValue:x.value,"onUpdate:modelValue":b[0]||(b[0]=N=>x.value=N),placeholder:D.value,class:"template-input",clearable:"",onKeyup:ys(te,["enter"])},null,8,["modelValue","placeholder"]),e("div",qn,[v.value?(r(),W(_,{key:0,onClick:G},{default:s(()=>b[2]||(b[2]=[M("取消")])),_:1})):Y("",!0),t(_,{type:"primary",onClick:te,disabled:!x.value.trim()||ee.value,loading:ee.value},{default:s(()=>[M(I(Q.value),1)]),_:1},8,["disabled","loading"]),X.type==="message"?(r(),W(_,{key:1,type:"success",onClick:se,disabled:!x.value.trim()||V.value,loading:V.value,plain:""},{default:s(()=>b[3]||(b[3]=[M(" 设为默认提交信息 ")])),_:1},8,["disabled","loading"])):Y("",!0)])]),X.type!=="message"?(r(),$("div",Yn,[e("h3",null,"已保存"+I(X.type==="description"?"模板":"作用域"),1),p.value.length===0?(r(),W(S,{key:0,description:X.emptyDescription},null,8,["description"])):(r(),$("div",Kn,[(r(!0),$(ke,null,je(p.value,(N,le)=>(r(),W(ae,{key:le,class:"template-item"},{default:s(()=>[t(j,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",Qn,I(N),1),e("div",Xn,[t(_,{type:"primary",size:"small",onClick:ie=>L(N)},{default:s(()=>b[4]||(b[4]=[M("使用")])),_:2},1032,["onClick"]),t(_,{type:"warning",size:"small",icon:a(dt),onClick:ie=>z(N,le)},{default:s(()=>b[5]||(b[5]=[M(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(_,{type:"danger",size:"small",onClick:ie=>U(N)},{default:s(()=>b[6]||(b[6]=[M("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))]))])):(r(),$("div",Zn,[e("div",el,[b[10]||(b[10]=e("h3",null,"已保存模板",-1)),e("div",tl,[p.value.length===0?(r(),W(S,{key:0,description:X.emptyDescription},null,8,["description"])):Y("",!0),(r(!0),$(ke,null,je(p.value,(N,le)=>(r(),W(ae,{key:le,class:"template-item"},{default:s(()=>[t(j,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",sl,I(N),1),e("div",ol,[t(_,{type:"primary",size:"small",onClick:ie=>L(N)},{default:s(()=>b[7]||(b[7]=[M("使用")])),_:2},1032,["onClick"]),t(_,{type:"warning",size:"small",icon:a(dt),onClick:ie=>z(N,le)},{default:s(()=>b[8]||(b[8]=[M(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(_,{type:"danger",size:"small",onClick:ie=>U(N)},{default:s(()=>b[9]||(b[9]=[M("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),X.showDefaultSection?(r(),$("div",al,[b[18]||(b[18]=e("h3",null,"当前默认提交信息",-1)),A.value?(r(),W(ae,{key:0,class:"default-message-card"},{default:s(()=>[e("div",nl,I(A.value),1)]),_:1})):(r(),W(S,{key:1,description:"尚未设置默认提交信息","image-size":100})),X.showHelpText?(r(),$("div",ll,[b[16]||(b[16]=e("h4",null,"关于默认提交信息",-1)),b[17]||(b[17]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[b[13]||(b[13]=M("你可以通过点击左侧模板的")),t(fe,{size:"small",type:"primary"},{default:s(()=>b[11]||(b[11]=[M("使用")])),_:1}),b[14]||(b[14]=M("按钮先选择喜欢的模板，然后点击上方")),t(fe,{size:"small",type:"success"},{default:s(()=>b[12]||(b[12]=[M("设为默认提交信息")])),_:1}),b[15]||(b[15]=M("按钮保存。"))])])):Y("",!0)])):Y("",!0)]))],2)]),_:1},8,["modelValue","title","custom-class"])}}}),is=Ce(il,[["__scopeId","data-v-30972b5b"]]),rl={class:"git-command-preview"},cl={class:"preview-container"},ul={class:"preview-title"},dl={class:"preview-content code-command"},fl=$e({__name:"GitCommandPreview",props:{command:{},title:{default:"Git命令预览："},copyButtonText:{default:"复制命令"},placeholder:{default:"<命令内容>"}},setup(q){const k=q,o=Z(()=>k.command||k.placeholder);async function i(){if(!k.command){l.warning("没有可复制的命令内容");return}try{await navigator.clipboard.writeText(k.command),l.success("命令已复制到剪贴板")}catch(y){l.error(`复制失败: ${y.message}`)}}return(y,d)=>{const x=Re,v=be;return r(),$("div",rl,[e("div",cl,[e("div",ul,I(y.title),1),e("div",dl,I(o.value),1),t(v,{content:y.copyButtonText,placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn copy-command-btn",onClick:i},[t(x,{class:"btn-icon"},{default:s(()=>[t(a(vt))]),_:1})])]),_:1},8,["content"])])])}}}),pl=Ce(fl,[["__scopeId","data-v-33cee85e"]]),ml={class:"one-push-content"},vl={class:"one-push-text"},gl={key:0,class:"one-push-desc"},hl=$e({__name:"QuickPushButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["beforePush","afterPush","clearFields"],setup(q,{emit:k}){const o=Ee(),i=Ke(),y=q,d=k;function x(p){const A=p.replace(/\\/g,"/");return i.lockedFiles.some(D=>{const Q=D.replace(/\\/g,"/");return A===Q})}const v=Z(()=>o.fileList.some(p=>!x(p.path))),O=Z(()=>!v.value||!y.hasUserCommitMessage||!o.hasUpstream),P=Z(()=>o.isAddingFiles||o.isCommiting||o.isPushing),ee=Z(()=>v.value?y.hasUserCommitMessage?o.hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改");async function V(){d("beforePush");try{const p=await o.addCommitAndPush(y.finalCommitMessage,y.skipHooks);p&&d("clearFields"),d("afterPush",p)}catch(p){console.error("一键推送失败:",p),d("afterPush",!1)}}return(p,A)=>{const D=Re,Q=Ue;return r(),W(a(be),{content:ee.value,placement:"top","show-after":200},{default:s(()=>[t(Q,{type:"success",onClick:V,loading:P.value,disabled:O.value,class:ve([p.from,"one-push-button"])},{default:s(()=>[e("div",ml,[t(D,{class:"one-push-icon"},{default:s(()=>[t(a(So))]),_:1}),e("div",vl,[A[0]||(A[0]=e("span",{class:"one-push-title"},"一键推送所有",-1)),p.from==="form"?(r(),$("span",gl,"暂存 + 提交 + 推送")):Y("",!0)])])]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Hs=Ce(hl,[["__scopeId","data-v-58e155b2"]]),yl={key:0},_l=$e({__name:"StageButton",props:{from:{default:"form"}},emits:["click"],setup(q,{emit:k}){const o=k,i=Ee(),y=Ke();function d(p){const A=p.replace(/\\/g,"/");return y.lockedFiles.some(D=>{const Q=D.replace(/\\/g,"/");return A===Q})}function x(){return y.lockedFiles.length===0?!1:i.fileList.some(p=>["modified","deleted","untracked"].includes(p.type)?d(p.path):!1)}const v=Z(()=>i.fileList.filter(p=>["modified","deleted","untracked"].includes(p.type)&&!d(p.path)).length),O=Z(()=>i.fileList.some(p=>["modified","deleted","untracked"].includes(p.type)&&!d(p.path))),P=Z(()=>!O.value),ee=Z(()=>O.value?x()?`暂存${v.value}个未暂存文件（逐个添加）`:"暂存所有更改（git add .）":"没有需要暂存的更改");async function V(){o("click");try{let p;x()?p=await i.addToStage():p=await i.addAllToStage(),p&&i.fetchStatus()}catch(p){console.error("添加文件失败:",p)}}return(p,A)=>{const D=Ue,Q=be;return r(),W(Q,{content:ee.value,placement:"top"},{default:s(()=>[t(D,{type:"primary",onClick:V,loading:a(i).isAddingFiles,disabled:P.value,class:ve(["stage-button",`from-${p.from}`])},{default:s(()=>[A[0]||(A[0]=M(" 暂存更改 ")),v.value>0?(r(),$("span",yl,"("+I(v.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Js=Ce(_l,[["__scopeId","data-v-80c326be"]]),bl={key:0},wl=$e({__name:"CommitButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["click","beforeCommit","afterCommit"],setup(q,{emit:k}){const o=q,i=k,y=Ee(),d=Ke();function x(p){const A=p.replace(/\\/g,"/");return d.lockedFiles.some(D=>{const Q=D.replace(/\\/g,"/");return A===Q})}const v=Z(()=>y.fileList.filter(p=>p.type==="added"&&!x(p.path)).length),O=Z(()=>v.value>0),P=Z(()=>!O.value||!o.hasUserCommitMessage),ee=Z(()=>O.value?o.hasUserCommitMessage?`提交${v.value}个已暂存文件`:"请输入提交信息":"没有已暂存的更改");async function V(){if(o.finalCommitMessage.trim()){i("beforeCommit"),i("click");try{const p=await y.commitChanges(o.finalCommitMessage,o.skipHooks);p&&(y.fetchStatus(),y.fetchLog(),y.getBranchStatus(!0)),i("afterCommit",p)}catch(p){console.error("提交失败:",p),i("afterCommit",!1)}}}return(p,A)=>{const D=Ue,Q=be;return r(),W(Q,{content:ee.value,placement:"top"},{default:s(()=>[t(D,{type:"primary",onClick:V,loading:a(y).isLoadingStatus,disabled:P.value,class:ve(["commit-button",`from-${p.from}`])},{default:s(()=>[A[0]||(A[0]=M(" 提交 ")),v.value>0?(r(),$("span",bl,"("+I(v.value)+")",1)):Y("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Ws=Ce(wl,[["__scopeId","data-v-0d2dc989"]]),kl={key:0},$l=$e({__name:"PushButton",props:{from:{default:"form"}},emits:["click","beforePush","afterPush"],setup(q,{emit:k}){const o=k,i=Ee(),y=Z(()=>i.branchAhead>0),d=Z(()=>i.fileList.some(V=>V.type==="added")),x=Z(()=>i.hasUpstream&&y.value&&!d.value),v=Z(()=>!x.value),O=Z(()=>i.hasUpstream?y.value?d.value?"有未提交的暂存更改，请先提交":`推送${i.branchAhead}个本地提交`:"没有需要推送的提交":"当前分支没有上游分支"),P=Z(()=>x.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{});async function ee(){o("beforePush"),o("click");try{const V=await i.pushToRemote();V&&await new Promise(p=>setTimeout(p,200)),o("afterPush",V)}catch(V){console.error("推送失败:",V),o("afterPush",!1)}}return(V,p)=>{const A=Ue,D=be;return r(),W(D,{content:O.value,placement:"top"},{default:s(()=>[t(A,{type:"primary",icon:a(To),onClick:ee,loading:a(i).isPushing,disabled:v.value,style:_t(P.value),class:ve(["push-button",`from-${V.from}`])},{default:s(()=>[p[0]||(p[0]=M(" 推送 ")),y.value?(r(),$("span",kl,"("+I(a(i).branchAhead)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","style","class"])]),_:1},8,["content"])}}}),qs=Ce($l,[["__scopeId","data-v-825223aa"]]),Cl={class:"form-bottom-actions"},Sl={class:"actions-flex-container"},Tl={class:"left-actions"},Ll={class:"button-grid"},Fl={class:"right-actions"},Vl=$e({__name:"GitActionButtons",props:{hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1},from:{default:"form"}},emits:["afterCommit","afterPush","beforePush","clearFields"],setup(q,{emit:k}){const o=k;function i(v){o("afterCommit",v)}function y(v){o("afterPush",v)}function d(){o("beforePush")}function x(){o("clearFields")}return(v,O)=>(r(),$("div",Cl,[e("div",Sl,[e("div",Tl,[e("div",Ll,[t(Js,{onClick:()=>{},from:v.from},null,8,["from"]),t(Ws,{"has-user-commit-message":v.hasUserCommitMessage,"final-commit-message":v.finalCommitMessage,"skip-hooks":v.skipHooks,onBeforeCommit:()=>{},onAfterCommit:i,onClick:()=>{},from:v.from},null,8,["has-user-commit-message","final-commit-message","skip-hooks","from"]),t(qs,{onBeforePush:()=>{},onAfterPush:y,onClick:()=>{},from:v.from},null,8,["from"])])]),e("div",Fl,[t(Hs,{from:v.from,"has-user-commit-message":v.hasUserCommitMessage,"final-commit-message":v.finalCommitMessage,"skip-hooks":v.skipHooks,onBeforePush:d,onAfterPush:y,onClearFields:x},null,8,["from","has-user-commit-message","final-commit-message","skip-hooks"])])])]))}}),xl=Ce(Vl,[["__scopeId","data-v-e7e0beea"]]),Pl={class:"option-header"},Bl={class:"option-info"},Dl={class:"option-title"},zl=$e({__name:"OptionSwitchCard",props:{modelValue:{type:Boolean},title:{},tooltip:{},activeText:{},inactiveText:{},activeColor:{},iconClass:{},compact:{type:Boolean}},emits:["update:modelValue"],setup(q,{emit:k}){const o=q,i=k;function y(d){i("update:modelValue",d)}return(d,x)=>{const v=gs,O=be;return r(),$("div",{class:ve(["option-card",{compact:o.compact}])},[t(O,{content:d.tooltip,placement:"top","show-after":200},{default:s(()=>[e("div",Pl,[e("div",{class:ve(["option-icon",d.iconClass])},[ct(d.$slots,"icon",{},void 0,!0)],2),e("div",Bl,[e("h4",Dl,I(d.title),1)]),t(v,{class:"option-switch","model-value":d.modelValue,"onUpdate:modelValue":y,"active-text":d.activeText,"inactive-text":d.inactiveText,"active-color":d.activeColor,size:"small"},null,8,["model-value","active-text","inactive-text","active-color"])])]),_:3},8,["content"])],2)}}}),rs=Ce(zl,[["__scopeId","data-v-98a6acaa"]]),Rl={class:"console-header"},jl={class:"header-left"},Ol={class:"header-actions"},Al={class:"console-content"},Ul={class:"console-input-row"},Gl={class:"prompt",title:"当前路径"},Ml={key:0,class:"console-output"},Il={class:"cmd-header"},El={class:"cmd-line"},Nl={class:"cmd-text"},Hl={class:"ts"},Jl={key:0,class:"output-content"},Wl={key:0,class:"stdout"},ql={key:1,class:"stderr"},Yl=$e({__name:"CommandConsole",setup(q){const k=u(""),o=u(""),i=u(!1),y=u([]);let d=0;const x=u(!1),v=u(!1);async function O(){const ee=o.value.trim();if(!ee||i.value)return;i.value=!0;const V={id:++d,command:ee,success:!1,ts:new Date().toLocaleString(),expanded:!0,stdout:"",stderr:""};y.value.unshift(V);try{const A=await(await fetch("/api/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:ee})})).json();V.success=!!(A!=null&&A.success),V.stdout=(A==null?void 0:A.stdout)||"",V.stderr=(A==null?void 0:A.error)||(A==null?void 0:A.stderr)||""}catch(p){V.success=!1,V.stderr=(p==null?void 0:p.message)||String(p)}finally{i.value=!1,o.value=""}}function P(ee){const V=y.value.findIndex(p=>p.id===ee.id);V!==-1&&(y.value[V].expanded=!y.value[V].expanded)}return et(async()=>{try{const V=await(await fetch("/api/current_directory")).json();k.value=(V==null?void 0:V.directory)||""}catch{}}),(ee,V)=>{const p=Re,A=Ue,D=be,Q=tt;return r(),$("div",{class:ve(["command-console",{fullscreen:v.value}])},[e("div",Rl,[e("div",jl,[t(p,{class:"title-icon"},{default:s(()=>[t(a(hs))]),_:1}),V[3]||(V[3]=e("span",{class:"console-title"},"自定义指令执行",-1))]),e("div",Ol,[t(D,{content:v.value?"退出全屏":"全屏显示",placement:"bottom"},{default:s(()=>[t(A,{text:"",onClick:V[0]||(V[0]=F=>v.value=!v.value),class:"toggle-console-btn"},{default:s(()=>[t(p,null,{default:s(()=>[t(a(Ms))]),_:1})]),_:1})]),_:1},8,["content"]),t(D,{content:x.value?"收起":"展开",placement:"bottom"},{default:s(()=>[t(A,{text:"",onClick:V[1]||(V[1]=F=>x.value=!x.value),class:"toggle-console-btn"},{default:s(()=>[t(p,{class:ve({"rotate-icon":!x.value})},{default:s(()=>[t(a(ht))]),_:1},8,["class"])]),_:1})]),_:1},8,["content"])])]),t(Ft,{name:"console-content-slide"},{default:s(()=>[qe(e("div",Al,[e("div",Ul,[e("span",Gl,I(k.value)+" >",1),t(Q,{modelValue:o.value,"onUpdate:modelValue":V[2]||(V[2]=F=>o.value=F),class:"console-input",placeholder:"输入命令，例如: git status",onKeydown:ys(yt(O,["prevent"]),["enter"]),disabled:i.value,clearable:""},null,8,["modelValue","onKeydown","disabled"]),t(A,{type:"primary",loading:i.value,onClick:O},{default:s(()=>V[4]||(V[4]=[M("执行")])),_:1},8,["loading"])]),y.value.length?(r(),$("div",Ml,[(r(!0),$(ke,null,je(y.value,F=>(r(),$("div",{key:F.id,class:"console-record"},[e("div",Il,[e("div",El,[V[5]||(V[5]=e("span",{class:"cmd-prefix"},">",-1)),e("span",Nl,I(F.command),1),e("span",Hl,I(F.ts),1)]),t(D,{content:F.stdout||F.stderr?F.expanded?"收起输出":"展开输出":"无输出内容",placement:"left"},{default:s(()=>[t(A,{text:"",size:"small",onClick:T=>P(F),disabled:!F.stdout&&!F.stderr,class:"toggle-output-btn"},{default:s(()=>[t(p,{class:ve({"rotate-icon":!F.expanded})},{default:s(()=>[t(a(ht))]),_:2},1032,["class"])]),_:2},1032,["onClick","disabled"])]),_:2},1032,["content"])]),t(Ft,{name:"output-slide"},{default:s(()=>[F.expanded&&(F.stdout||F.stderr)?(r(),$("div",Jl,[F.stdout?(r(),$("pre",Wl,I(F.stdout),1)):Y("",!0),F.stderr?(r(),$("pre",ql,I(F.stderr),1)):Y("",!0)])):Y("",!0)]),_:2},1024)]))),128))])):Y("",!0)],512),[[Pt,x.value]])]),_:1})],2)}}}),Kl=Ce(Yl,[["__scopeId","data-v-83d7f852"]]),Ql={class:"card-header app-card-header"},Xl={class:"header-left"},Zl={key:0,class:"header-actions"},ei={class:"card-content app-card-content"},ti={class:"layout-container"},si={key:0,class:"git-config-warning"},oi={key:1,class:"commit-section"},ai={key:0,class:"commit-form"},ni={class:"description-container"},li={key:1,class:"standard-commit-form"},ii={class:"standard-commit-header"},ri={class:"type-scope-container"},ci={class:"scope-wrapper"},ui={class:"description-container description-inline"},di={class:"advanced-fields"},fi={class:"actions-section"},pi={class:"action-groups"},mi={class:"operations-wrapper"},vi={class:"action-group"},gi={class:"group-buttons"},hi={key:0},yi={class:"action-group"},_i={class:"group-buttons"},bi={class:"action-group reset-group"},wi={class:"group-buttons"},ki={key:0},$i={class:"action-group branch-group"},Ci={class:"group-buttons"},Si={class:"action-group"},Ti={class:"group-buttons"},Li={class:"editor-header"},Fi={class:"editor-info"},Vi={class:"editor-tips"},xi={class:"json-editor-wrapper"},Pi={class:"editor-footer"},Bi={class:"footer-left"},Di={class:"footer-right"},zi={class:"config-warning-content"},Ri={class:"warning-message"},ji={class:"dialog-footer"},Oi={class:"stash-dialog-content"},Ai={class:"stash-info-card"},Ui={class:"info-icon"},Gi={class:"stash-options"},Mi={class:"options-title"},Ii={class:"option-item"},Ei={class:"option-item"},Ni={key:0,class:"stash-preview"},Hi={class:"preview-title"},Ji={class:"file-count-info"},Wi={class:"merge-dialog-content"},qi={class:"merge-intro"},Yi={class:"merge-options"},Ki={class:"dialog-footer"},Qi={class:"stash-list-content"},Xi={key:0,class:"stash-header"},Zi={class:"stash-stats"},er={class:"stat-item"},tr={class:"stat-number"},sr={key:0,class:"stash-actions-header"},or={class:"stash-list-container"},ar={key:0,class:"empty-state"},nr={key:1,class:"stash-cards"},lr={class:"stash-card-content"},ir={class:"stash-info"},rr={class:"stash-main-info"},cr={class:"stash-id-badge"},ur={class:"stash-id-text"},dr={class:"stash-description"},fr={class:"description-text"},pr={class:"stash-card-actions"},mr={class:"stash-content"},vr={key:0,class:"stash-info-row"},gr={class:"stash-id"},hr={class:"stash-id-value"},yr={class:"stash-description"},_r={class:"stash-description-value"},br={class:"stash-main-content"},wr={key:0,class:"status-updating-indicator"},kr={class:"commit-settings-content"},$r=$e({__name:"CommitForm",setup(q,{expose:k}){const o=Ee(),i=Ke(),y=u(""),{loadingState:d,show:x,hide:v,setText:O}=Hn(),{successState:P,show:ee}=Jn(),V=u(!1),p=u("输入提交信息..."),A=u(""),D=u(!1),Q=u("feat"),F=u(""),T=u(""),te=u(""),L=u(""),z=u(!1),G=u(""),U=u(!1),se=u(!1),X=u(""),b=u([]),m=u(!1),_=u(!1),S=u(""),j=u({noFf:!1,squash:!1,noCommit:!1,message:""}),ae=u([]),fe=u(!1),N=u(!1),le=u(!1),ie=u(!1),me=u(!1),Pe=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],Se=u(!1),g=u(!1),c=u(""),E=u(!1),H=u(!0),ce=u(!1),ge=u(null),he=u([]),pe=u(""),de=u(!1),Te=u("");function Be(){c.value="",E.value=!1,H.value=!Xt.value,Se.value=!0}async function ye(){try{const n=await(await fetch("/api/config/check-file-format")).json();let K="";n.success&&(n.exists?n.isValidJson||(K=`系统配置文件格式有误：${n.error}
编辑后保存可能会覆盖原文件内容。`):K="系统配置文件不存在，将使用默认配置。");const we=i.config;if(G.value=JSON.stringify(we,null,2),K){X.value=K,se.value=!0;return}z.value=!0}catch{l.error("加载配置失败")}}async function Ne(){try{U.value=!0;let f;try{f=JSON.parse(G.value)}catch(we){l.error(`JSON 解析失败: ${we.message||we}`);return}const K=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:f})})).json();if(!K.success)throw new Error(K.error||"保存失败");await i.loadConfig(!0);try{await i.loadLockedFiles()}catch{}try{Array.isArray(i.descriptionTemplates)&&(b.value=[...i.descriptionTemplates])}catch{}try{Array.isArray(i.scopeTemplates)&&(ae.value=[...i.scopeTemplates])}catch{}try{Array.isArray(i.messageTemplates)&&(ue.value=[...i.messageTemplates])}catch{}l.success("配置已保存"),z.value=!1}catch(f){l.error(`保存配置失败: ${f.message||f}`)}finally{U.value=!1}}async function st(){try{const f=await fetch("/api/config/open-file",{method:"POST"}),n=await f.json();if(!f.ok||!(n!=null&&n.success))throw new Error((n==null?void 0:n.error)||"打开失败");l.success("已用系统程序打开配置文件")}catch(f){l.error(`打开配置文件失败: ${(f==null?void 0:f.message)||f}`)}}function ot(f){se.value=!1,f==="continue"?z.value=!0:f==="open"&&st()}function at(){o.getStashList(),g.value=!0}async function bt(){try{await o.saveStash(c.value,E.value,H.value),Se.value=!1}catch(f){console.error("储藏失败:",f)}}async function Qe(f,n=!1){try{await o.applyStash(f,n),n&&await o.getStashList()}catch(K){console.error("应用储藏失败:",K)}}async function Ye(f){Ie.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.dropStash(f),await o.getStashList()}).catch(()=>{})}async function wt(){Ie.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.clearAllStashes(),await o.getStashList()}).catch(()=>{})}async function Fe(f){if(f){ge.value=f,ce.value=!0,de.value=!0,he.value=[],pe.value="",Te.value="";try{if(!f.id||f.id.length<7){pe.value="无效的stash ID",de.value=!1;return}const K=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(f.id)}`)).json();K.success&&Array.isArray(K.files)?(he.value=K.files,he.value.length>0?await nt(f.id,he.value[0]):pe.value="该stash没有变更文件"):pe.value=`获取文件列表失败: ${K.error||"未知错误"}`}catch(n){pe.value=`获取stash详情失败: ${n.message}`}finally{de.value=!1}}}async function nt(f,n){de.value=!0,Te.value=n;try{const we=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(f)}&file=${encodeURIComponent(n)}`)).json();we.success?pe.value=we.diff||"没有变更内容":pe.value=`获取差异失败: ${we.error||"未知错误"}`}catch(K){pe.value=`获取差异失败: ${K.message}`}finally{de.value=!1}}function R(f){ge.value&&nt(ge.value.id,f)}async function C(f,n){try{const we=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:f,context:n})})).json();we.success?l.success(we.message):l.error(we.error||"打开文件失败")}catch(K){l.error(`打开文件失败: ${K.message}`)}}async function ne(f,n){try{const we=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:f,context:n})})).json();we.success?l.success(we.message):l.error(we.error||"用VSCode打开文件失败")}catch(K){l.error(`用VSCode打开文件失败: ${K.message}`)}}const ue=u([]);ze(D,f=>{localStorage.setItem("zen-gitsync-standard-commit",f.toString())}),ze(le,f=>{localStorage.setItem("zen-gitsync-skip-hooks",f.toString())}),ze(ie,f=>{localStorage.setItem("zen-gitsync-auto-quick-push",f.toString())});const xe=Z(()=>{if(!D.value)return y.value||A.value;let f=`${Q.value||""}`;return F.value&&(f+=`(${F.value})`),f+=`: ${T.value}`,te.value&&(f+=`

${te.value}`),L.value&&(f+=`

${L.value}`),f}),_e=Z(()=>D.value?Q.value.trim()!==""&&T.value.trim()!=="":y.value.trim()!==""),re=Z(()=>{const f=`输入提交信息 (默认: ${A.value})`;return ie.value?`${f}（按回车一键推送）`:f}),Ae=Z(()=>ie.value?"简短描述（必填，按回车一键推送）":"简短描述（必填）"),Xe=Z(()=>he.value.map(f=>({path:f,name:f.split("/").pop()||f}))),lt=Z(()=>{let f=`git commit -m "${xe.value}"`;return le.value&&(f+=" --no-verify"),f});function it(){const f=i.config;f&&(p.value=`输入提交信息 (默认: ${f.defaultCommitMessage})`,A.value=f.defaultCommitMessage||"",f.descriptionTemplates&&Array.isArray(f.descriptionTemplates)&&(b.value=f.descriptionTemplates),f.scopeTemplates&&Array.isArray(f.scopeTemplates)&&(ae.value=f.scopeTemplates),f.messageTemplates&&Array.isArray(f.messageTemplates)&&(ue.value=f.messageTemplates))}function Ht(f){T.value=f,m.value=!1}function Jt(f){F.value=f,fe.value=!1}function Wt(){m.value=!0}function Dt(){fe.value=!0}function ft(){ee({text:"操作成功！",description:"已完成操作",duration:2e3})}async function qt(){try{await o.gitPull(),await o.fetchStatus(),await o.fetchLog(!1)}catch(f){console.error("拉取操作发生错误:",f)}}async function Yt(){try{await o.gitFetchAll(),await o.fetchStatus(),await o.fetchLog(!1)}catch(f){console.error("获取远程分支信息操作发生错误:",f)}}async function Kt(){if(!xe.value.trim()){l({message:"提交信息不能为空",type:"warning"});return}try{await o.addAndCommit(xe.value,le.value),w(),o.fetchStatus(),o.fetchLog()}catch(f){l({message:`暂存并提交失败: ${f.message}`,type:"error"})}}async function Qt(){try{await Ie.confirm(`确定要重置当前分支 "${o.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await o.resetToRemote(o.currentBranch)&&(o.fetchStatus(),o.fetchLog())}catch(f){f!=="cancel"&&l({message:`重置到远程分支失败: ${f.message}`,type:"error"})}}function w(){y.value="",T.value="",te.value="",L.value=""}function h(){x({text:"正在暂存文件...",showProgress:!1})}function J(f){if(v(),f){V.value=!0;try{setTimeout(async()=>{try{console.log("推送成功，状态已更新")}catch(n){console.error("一键推送后处理失败:",n)}finally{V.value=!1}},1e3)}catch(n){console.error("一键推送后处理失败:",n),V.value=!1}}}function oe(f){const n=f.replace(/\\/g,"/");return i.lockedFiles.some(K=>{const we=K.replace(/\\/g,"/");return n===we})}const Le=Z(()=>o.fileList.some(f=>["modified","deleted","untracked"].includes(f.type)&&!oe(f.path))),De=Z(()=>o.fileList.filter(f=>f.type==="added"&&!oe(f.path)).length),He=Z(()=>De.value>0),Ze=Z(()=>o.fileList.some(f=>!oe(f.path))),zt=Z(()=>o.fileList.length>0),Xt=Z(()=>o.fileList.length>0&&o.fileList.every(f=>oe(f.path))),Ks=Z(()=>o.branchAhead>0),Zt=Z(()=>o.branchBehind>0),bs=Z(()=>He.value),Qs=Z(()=>o.hasUpstream&&(Ks.value||Zt.value||Ze.value));function Xs(f){y.value=f,N.value=!1}async function ws(f){if(!(!ie.value||!_e.value||!o.fileList.some(K=>!oe(K.path))||!_e.value||!o.hasUpstream)&&f.key==="Enter"&&!f.shiftKey){f.preventDefault();try{h();const K=await o.addCommitAndPush(xe.value,le.value);K&&w(),J(K)}catch(K){console.error("回车自动一键提交失败:",K),J(!1)}}}async function Zs(f){try{await i.saveDefaultMessage(f)&&l.success("默认提交信息设置成功")}catch(n){l.error(`设置默认提交信息失败: ${n.message}`)}}ze(()=>o.isAddingFiles,f=>{f&&d.visible&&O("正在暂存文件...")}),ze(()=>o.isCommiting,f=>{f&&d.visible&&O("正在提交更改...")}),ze(()=>o.isPushing,f=>{f&&d.visible&&O("正在推送...")}),et(async()=>{const f=localStorage.getItem("zen-gitsync-standard-commit");f!==null&&(D.value=f==="true");const n=localStorage.getItem("zen-gitsync-skip-hooks");n!==null&&(le.value=n==="true");const K=localStorage.getItem("zen-gitsync-auto-quick-push");K!==null&&(ie.value=K==="true"),ze(()=>i.config,it,{immediate:!0}),i.config||await i.loadConfig()});function eo(){S.value="",j.value={noFf:!1,squash:!1,noCommit:!1,message:""},pt.value="all",_.value=!0,o.allBranches.length===0&&o.getAllBranches()}const pt=u("all"),to=Z(()=>{const f=o.allBranches.filter(n=>n!==o.currentBranch);if(console.log("筛选分支列表:",{allBranches:o.allBranches,currentBranch:o.currentBranch,branchTypeFilter:pt.value,filteredBranches:f}),pt.value==="local"){const n=f.filter(K=>!K.includes("origin/"));return console.log("本地分支:",n),n}else if(pt.value==="remote"){const n=f.filter(K=>K.includes("origin/"));return console.log("远程分支:",n),n}else return console.log("所有分支:",f),f});async function so(){if(!S.value){l({message:"请选择要合并的分支",type:"warning"});return}try{await o.mergeBranch(S.value,j.value)&&(_.value=!1,await o.fetchStatus(),await o.fetchLog(!1))}catch(f){console.error("合并分支操作发生错误:",f)}}const Rt=u(!1),es=u(!1);function oo(){Rt.value=!Rt.value}k({openConfigEditor:ye,toggleGitOperationsDrawer:oo});function ao(f,n){const we=[...f?b.value.filter(Ve=>Ve.toLowerCase().includes(f.toLowerCase())).map(Ve=>({value:Ve})):b.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];n(we)}function no(f,n){const we=[...f?ae.value.filter(Ve=>Ve.toLowerCase().includes(f.toLowerCase())).map(Ve=>({value:Ve})):ae.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];n(we)}function lo(f){f.isSettings?(Wt(),T.value=""):T.value=f.value}function io(f){f.isSettings?(Dt(),F.value=""):F.value=f.value}function ro(f,n){const we=[...f?ue.value.filter(Ve=>Ve.toLowerCase().includes(f.toLowerCase())).map(Ve=>({value:Ve})):ue.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];n(we)}function co(f){f.isSettings?(N.value=!0,y.value=""):y.value=f.value}return(f,n)=>{const K=Ue,we=Is,Ve=Lo,ks=Vt,$s=xt,Ge=Re,kt=tt,Je=be,uo=Vo,jt=Bt,Cs=Rs,$t=Et,Ct=Po,Ss=It,ts=Do,fo=Bo,po=rt,mo=Nt;return r(),$(ke,null,[e("div",{class:ve(["card app-card",{"is-pushing":a(o).isPushing}])},[e("div",Ql,[e("div",Xl,[n[40]||(n[40]=e("h2",null,"提交更改",-1)),a(o).userName!==""&&a(o).userEmail!==""?(r(),W(K,{key:0,icon:a(Mt),onClick:n[0]||(n[0]=B=>es.value=!0),class:"modern-btn btn-icon-24"},null,8,["icon"])):Y("",!0)]),a(o).userName!==""&&a(o).userEmail!==""?(r(),$("div",Zl,[t(xl,{"has-user-commit-message":_e.value,"final-commit-message":xe.value,"skip-hooks":le.value,from:"form",onAfterCommit:n[1]||(n[1]=B=>{B&&w()}),onAfterPush:J,onBeforePush:h,onClearFields:w},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])):Y("",!0)]),e("div",ei,[e("div",ti,[a(o).userName===""||a(o).userEmail===""?(r(),$("div",si,[t(we,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:s(()=>n[41]||(n[41]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(r(),$("div",oi,[t(pl,{command:lt.value,title:"提交命令预览：",placeholder:'git commit -m "<提交信息>"'},null,8,["command"]),D.value?(r(),$("div",li,[e("div",ii,[e("div",ri,[t($s,{modelValue:Q.value,"onUpdate:modelValue":n[3]||(n[3]=B=>Q.value=B),placeholder:"提交类型",class:"type-select",clearable:""},{default:s(()=>[(r(),$(ke,null,je(Pe,B=>t(ks,{key:B.value,label:B.label,value:B.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",ci,[t(Ve,{modelValue:F.value,"onUpdate:modelValue":n[4]||(n[4]=B=>F.value=B),"fetch-suggestions":no,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:io},null,8,["modelValue"])]),e("div",ui,[t(Ve,{modelValue:T.value,"onUpdate:modelValue":n[5]||(n[5]=B=>T.value=B),"fetch-suggestions":ao,placeholder:Ae.value,class:"description-input",clearable:"",onSelect:lo,onKeydown:ws},null,8,["modelValue","placeholder"])])])]),e("div",{class:"advanced-options-toggle",onClick:n[6]||(n[6]=B=>me.value=!me.value)},[e("span",null,I(me.value?"收起":"正文及页脚"),1),t(Ge,{class:ve(["toggle-icon",{"is-active":me.value}])},{default:s(()=>[t(a(ht))]),_:1},8,["class"])]),qe(e("div",di,[t(kt,{modelValue:te.value,"onUpdate:modelValue":n[7]||(n[7]=B=>te.value=B),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(kt,{modelValue:L.value,"onUpdate:modelValue":n[8]||(n[8]=B=>L.value=B),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[Pt,me.value]])])):(r(),$("div",ai,[e("div",ni,[t(Ve,{modelValue:y.value,"onUpdate:modelValue":n[2]||(n[2]=B=>y.value=B),"fetch-suggestions":ro,placeholder:re.value,type:"textarea",rows:3,resize:"none",class:"commit-message-input",onSelect:co,onKeydown:ws},null,8,["modelValue","placeholder"])])])),t(Kl)]))])])],2),t(uo,{modelValue:Rt.value,"onUpdate:modelValue":n[11]||(n[11]=B=>Rt.value=B),title:"Git 操作",direction:"rtl",size:"362px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:s(()=>[e("div",fi,[e("div",pi,[e("div",mi,[e("div",vi,[n[44]||(n[44]=e("div",{class:"group-title"},"基础操作",-1)),e("div",gi,[t(Js,{onClick:()=>{},from:"drawer"}),t(Ws,{"has-user-commit-message":_e.value,"final-commit-message":xe.value,"skip-hooks":le.value,onBeforeCommit:()=>{},onAfterCommit:n[9]||(n[9]=B=>{B&&w()}),onClick:()=>{},from:"drawer"},null,8,["has-user-commit-message","final-commit-message","skip-hooks"]),t(qs,{onBeforePush:()=>{},onAfterPush:n[10]||(n[10]=B=>{B&&ft()}),onClick:()=>{},from:"drawer"}),t(Je,{content:Zt.value?`拉取${a(o).branchBehind}个远程提交`:"git pull",placement:"top"},{default:s(()=>[t(K,{type:"primary",icon:a(ps),onClick:qt,loading:a(o).isGitPulling,disabled:!a(o).hasUpstream,class:"action-button",style:_t(a(o).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:s(()=>[n[42]||(n[42]=M(" 拉取 ")),Zt.value?(r(),$("span",hi,"("+I(a(o).branchBehind)+")",1)):Y("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Je,{content:"git fetch --all",placement:"top"},{default:s(()=>[t(K,{type:"info",icon:a(mt),onClick:Yt,loading:a(o).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:s(()=>n[43]||(n[43]=[M(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",yi,[n[46]||(n[46]=e("div",{class:"group-title"},"组合操作",-1)),e("div",_i,[t(Je,{content:"git add + git commit",placement:"top"},{default:s(()=>[t(K,{type:"primary",icon:a(dt),onClick:Kt,loading:a(o).isAddingFiles||a(o).isCommiting,disabled:!Le.value||!_e.value,class:"action-button"},{default:s(()=>n[45]||(n[45]=[M(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(Hs,{from:"drawer","has-user-commit-message":_e.value,"final-commit-message":xe.value,"skip-hooks":le.value,onBeforePush:h,onAfterPush:J,onClearFields:w},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])])]),e("div",bi,[n[49]||(n[49]=e("div",{class:"group-title"},"重置操作",-1)),e("div",wi,[t(Je,{content:bs.value?`撤销${De.value}个已暂存文件`:"git reset HEAD",placement:"top"},{default:s(()=>[t(K,{type:"warning",icon:a(vs),onClick:a(o).resetHead,loading:a(o).isResetting,disabled:!bs.value,class:"action-button reset-button"},{default:s(()=>[n[47]||(n[47]=M(" 重置暂存区 ")),De.value>0?(r(),$("span",ki,"("+I(De.value)+")",1)):Y("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Je,{content:"git reset --hard origin/branch",placement:"top"},{default:s(()=>[t(K,{type:"danger",icon:a(Ut),onClick:Qt,loading:a(o).isResetting,disabled:!Qs.value,class:"action-button danger-button"},{default:s(()=>n[48]||(n[48]=[M(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",$i,[n[51]||(n[51]=e("div",{class:"group-title"},"分支操作",-1)),e("div",Ci,[t(Je,{content:"合并其他分支到当前分支",placement:"top"},{default:s(()=>[t(K,{type:"primary",icon:a(Fo),onClick:eo,loading:a(o).isGitMerging,class:"action-button merge-button"},{default:s(()=>n[50]||(n[50]=[M(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Si,[n[54]||(n[54]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",Ti,[t(Je,{content:"将工作区更改储藏起来",placement:"top"},{default:s(()=>[t(K,{type:"warning",onClick:Be,loading:a(o).isSavingStash,disabled:!zt.value,class:"action-button"},{default:s(()=>n[52]||(n[52]=[M(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(Je,{content:"查看和管理所有储藏记录",placement:"top"},{default:s(()=>[t(K,{type:"info",onClick:at,class:"action-button"},{default:s(()=>n[53]||(n[53]=[M(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(Me,{modelValue:z.value,"onUpdate:modelValue":n[14]||(n[14]=B=>z.value=B),title:"编辑配置 JSON",size:"large","height-mode":"fixed","custom-class":"config-editor-dialog","show-footer":!1},{default:s(()=>[e("div",Li,[e("div",Fi,[t(Ge,{class:"info-icon"},{default:s(()=>[t(a(dt))]),_:1}),n[55]||(n[55]=e("span",{class:"info-text"},"编辑当前项目的配置文件",-1))]),e("div",Vi,[t(jt,{size:"small",type:"info"},{default:s(()=>n[56]||(n[56]=[M("支持JSON格式")])),_:1})])]),e("div",xi,[t(kt,{modelValue:G.value,"onUpdate:modelValue":n[12]||(n[12]=B=>G.value=B),type:"textarea",spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON...",class:"json-editor"},null,8,["modelValue"])]),e("div",Pi,[e("div",Bi,[t(K,{icon:a(mt),onClick:st,class:"system-config-btn"},{default:s(()=>n[57]||(n[57]=[M(" 打开系统配置文件 ")])),_:1},8,["icon"])]),e("div",Di,[t(K,{onClick:n[13]||(n[13]=B=>z.value=!1)},{default:s(()=>n[58]||(n[58]=[M("取消")])),_:1}),t(K,{type:"primary",loading:U.value,icon:a(gt),onClick:Ne,class:"save-btn"},{default:s(()=>n[59]||(n[59]=[M(" 保存配置 ")])),_:1},8,["loading","icon"])])])]),_:1},8,["modelValue"]),t(Cs,{modelValue:se.value,"onUpdate:modelValue":n[18]||(n[18]=B=>se.value=B),title:"配置文件格式提示",width:"500px","close-on-click-modal":!1,"close-on-press-escape":!1,"show-close":!1},{footer:s(()=>[e("span",ji,[t(K,{onClick:n[15]||(n[15]=B=>ot("cancel"))},{default:s(()=>n[60]||(n[60]=[M("取消")])),_:1}),t(K,{type:"info",onClick:n[16]||(n[16]=B=>ot("open"))},{default:s(()=>n[61]||(n[61]=[M("打开系统配置文件")])),_:1}),t(K,{type:"primary",onClick:n[17]||(n[17]=B=>ot("continue"))},{default:s(()=>n[62]||(n[62]=[M("继续编辑")])),_:1})])]),default:s(()=>[e("div",zi,[t(Ge,{class:"warning-icon",color:"#f56c6c",size:"24"},{default:s(()=>[t(a(Ls))]),_:1}),e("p",Ri,I(X.value),1)])]),_:1},8,["modelValue"]),t(is,{visible:m.value,"onUpdate:visible":n[19]||(n[19]=B=>m.value=B),type:"description",title:"简短描述模板设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板",onUseTemplate:Ht},null,8,["visible"]),t(is,{visible:fe.value,"onUpdate:visible":n[20]||(n[20]=B=>fe.value=B),type:"scope",title:"作用域模板设置",placeholder:"输入新作用域模板","edit-placeholder":"编辑作用域模板内容","empty-description":"暂无保存的作用域",onUseTemplate:Jt},null,8,["visible"]),t(is,{visible:N.value,"onUpdate:visible":n[21]||(n[21]=B=>N.value=B),type:"message",title:"默认提交信息设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板","show-default-section":!0,"show-help-text":!0,onUseTemplate:Xs,onSetDefault:Zs},null,8,["visible"]),t(Me,{modelValue:Se.value,"onUpdate:modelValue":n[25]||(n[25]=B=>Se.value=B),title:"储藏更改 (Git Stash)",size:"medium","close-on-click-modal":!1,"show-footer":"","confirm-text":"储藏","cancel-text":"取消","confirm-loading":a(o).isSavingStash,"custom-class":"stash-dialog",onConfirm:bt},{default:s(()=>[e("div",Oi,[e("div",Ai,[e("div",Ui,[t(Ge,null,{default:s(()=>[t(a(xo))]),_:1})]),n[63]||(n[63]=e("div",{class:"info-content"},[e("h4",null,"储藏工作区更改"),e("p",null,"将当前工作区的更改临时保存，稍后可以重新应用到任何分支")],-1))]),t(Ss,{"label-position":"top",class:"stash-form"},{default:s(()=>[t($t,{label:"储藏说明"},{default:s(()=>[t(kt,{modelValue:c.value,"onUpdate:modelValue":n[22]||(n[22]=B=>c.value=B),placeholder:"为这次储藏添加描述信息（可选）",clearable:"",rows:2,type:"textarea",resize:"none",maxlength:"200","show-word-limit":""},null,8,["modelValue"])]),_:1}),e("div",Gi,[e("h5",Mi,[t(Ge,null,{default:s(()=>[t(a(Mt))]),_:1}),n[64]||(n[64]=M(" 储藏选项 "))]),e("div",Ii,[t(Ct,{modelValue:E.value,"onUpdate:modelValue":n[23]||(n[23]=B=>E.value=B),size:"large"},{default:s(()=>n[65]||(n[65]=[e("span",{class:"option-label"},"包含未跟踪文件",-1)])),_:1},8,["modelValue"]),n[66]||(n[66]=e("p",{class:"option-desc"},"同时储藏新建但未添加到Git的文件 (--include-untracked)",-1))]),e("div",Ei,[t(Ct,{modelValue:H.value,"onUpdate:modelValue":n[24]||(n[24]=B=>H.value=B),disabled:Xt.value,size:"large"},{default:s(()=>n[67]||(n[67]=[e("span",{class:"option-label"},"排除锁定文件",-1)])),_:1},8,["modelValue","disabled"]),e("p",{class:ve(["option-desc",{disabled:Xt.value}])}," 不储藏被锁定的文件，保持其当前状态 ",2)])]),a(o).status.staged.length>0||a(o).status.unstaged.length>0?(r(),$("div",Ni,[e("h5",Hi,[t(Ge,null,{default:s(()=>[t(a(hs))]),_:1}),n[68]||(n[68]=M(" 将要储藏的文件 "))]),e("div",Ji,[a(o).status.staged.length>0?(r(),W(jt,{key:0,type:"success"},{default:s(()=>[M(" 已暂存: "+I(a(o).status.staged.length)+" 个文件 ",1)]),_:1})):Y("",!0),a(o).status.unstaged.length>0?(r(),W(jt,{key:1,type:"warning"},{default:s(()=>[M(" 未暂存: "+I(a(o).status.unstaged.length)+" 个文件 ",1)]),_:1})):Y("",!0)])])):Y("",!0)]),_:1})])]),_:1},8,["modelValue","confirm-loading"]),t(Cs,{title:"合并分支",modelValue:_.value,"onUpdate:modelValue":n[33]||(n[33]=B=>_.value=B),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:s(()=>[e("div",Ki,[t(K,{onClick:n[32]||(n[32]=B=>_.value=!1)},{default:s(()=>n[75]||(n[75]=[M("取消")])),_:1}),t(K,{type:"primary",onClick:so,loading:a(o).isGitMerging,disabled:!S.value,class:"merge-confirm-btn"},{default:s(()=>n[76]||(n[76]=[M(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:s(()=>[e("div",Wi,[e("p",qi,"选择要合并到当前分支 ("+I(a(o).currentBranch)+") 的分支:",1),t(Ss,{"label-position":"top"},{default:s(()=>[t($t,{label:"分支类型"},{default:s(()=>[t(fo,{modelValue:pt.value,"onUpdate:modelValue":n[26]||(n[26]=B=>pt.value=B),size:"small"},{default:s(()=>[t(ts,{label:"all"},{default:s(()=>n[69]||(n[69]=[M("所有分支")])),_:1}),t(ts,{label:"local"},{default:s(()=>n[70]||(n[70]=[M("本地分支")])),_:1}),t(ts,{label:"remote"},{default:s(()=>n[71]||(n[71]=[M("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t($t,{label:"选择分支"},{default:s(()=>[t($s,{modelValue:S.value,"onUpdate:modelValue":n[27]||(n[27]=B=>S.value=B),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:s(()=>[(r(!0),$(ke,null,je(to.value,B=>(r(),W(ks,{key:B,label:B,value:B},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t($t,{label:"合并选项"},{default:s(()=>[e("div",Yi,[t(Ct,{modelValue:j.value.noFf,"onUpdate:modelValue":n[28]||(n[28]=B=>j.value.noFf=B)},{default:s(()=>[t(Je,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:s(()=>n[72]||(n[72]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Ct,{modelValue:j.value.squash,"onUpdate:modelValue":n[29]||(n[29]=B=>j.value.squash=B)},{default:s(()=>[t(Je,{content:"将多个提交压缩为一个提交",placement:"top"},{default:s(()=>n[73]||(n[73]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Ct,{modelValue:j.value.noCommit,"onUpdate:modelValue":n[30]||(n[30]=B=>j.value.noCommit=B)},{default:s(()=>[t(Je,{content:"执行合并但不自动创建提交",placement:"top"},{default:s(()=>n[74]||(n[74]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),j.value.noFf&&!j.value.noCommit?(r(),W($t,{key:0,label:"合并提交信息 (可选)"},{default:s(()=>[t(kt,{modelValue:j.value.message,"onUpdate:modelValue":n[31]||(n[31]=B=>j.value.message=B),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):Y("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(Me,{modelValue:g.value,"onUpdate:modelValue":n[34]||(n[34]=B=>g.value=B),title:"储藏列表 (Git Stash)",size:"large","show-footer":!1,"custom-class":"stash-list-dialog"},{default:s(()=>[e("div",Qi,[a(o).isLoadingStashes?Y("",!0):(r(),$("div",Xi,[e("div",Zi,[e("div",er,[t(Ge,{class:"stat-icon"},{default:s(()=>[t(a(mt))]),_:1}),e("span",tr,I(a(o).stashes.length),1),n[77]||(n[77]=e("span",{class:"stat-label"},"个储藏",-1))])]),a(o).stashes.length>0?(r(),$("div",sr,[t(K,{type:"danger",size:"small",icon:a(Ut),onClick:wt,loading:a(o).isDroppingStash,class:"clear-all-btn"},{default:s(()=>n[78]||(n[78]=[M(" 清空所有储藏 ")])),_:1},8,["icon","loading"])])):Y("",!0)])),qe((r(),$("div",or,[a(o).stashes.length===0&&!a(o).isLoadingStashes?(r(),$("div",ar,[t(po,{description:"暂无储藏记录","image-size":120},{image:s(()=>[t(Ge,{class:"empty-icon"},{default:s(()=>[t(a(mt))]),_:1})]),description:s(()=>n[79]||(n[79]=[e("p",{class:"empty-text"},"还没有任何储藏记录",-1),e("p",{class:"empty-hint"},"使用 git stash 可以临时保存工作进度",-1)])),_:1})])):(r(),$("div",nr,[(r(!0),$(ke,null,je(a(o).stashes,(B,Ts)=>(r(),$("div",{key:B.id,class:ve(["stash-card",{"stash-card-latest":Ts===0}])},[e("div",lr,[e("div",ir,[e("div",rr,[e("div",cr,[t(Ge,{class:"badge-icon"},{default:s(()=>[t(a(mt))]),_:1}),e("span",ur,I(B.id),1),Ts===0?(r(),W(jt,{key:0,size:"small",type:"success",class:"latest-tag"},{default:s(()=>n[80]||(n[80]=[M("最新")])),_:1})):Y("",!0)]),e("div",dr,[e("span",fr,I(B.description),1)])])]),e("div",pr,[t(K,{size:"small",type:"info",icon:a(dt),onClick:ss=>Fe(B),loading:de.value,class:"action-btn view-btn"},{default:s(()=>n[81]||(n[81]=[M(" 查看 ")])),_:2},1032,["icon","onClick","loading"]),t(K,{size:"small",type:"success",icon:a(ps),onClick:ss=>Qe(B.id,!1),loading:a(o).isApplyingStash,class:"action-btn apply-btn"},{default:s(()=>n[82]||(n[82]=[M(" 应用 ")])),_:2},1032,["icon","onClick","loading"]),t(K,{size:"small",type:"primary",icon:a(gt),onClick:ss=>Qe(B.id,!0),loading:a(o).isApplyingStash,class:"action-btn apply-pop-btn"},{default:s(()=>n[83]||(n[83]=[M(" 应用并删除 ")])),_:2},1032,["icon","onClick","loading"]),t(K,{size:"small",type:"danger",icon:a(Ut),onClick:ss=>Ye(B.id),loading:a(o).isDroppingStash,class:"action-btn delete-btn"},{default:s(()=>n[84]||(n[84]=[M(" 删除 ")])),_:2},1032,["icon","onClick","loading"])])])],2))),128))]))])),[[mo,a(o).isLoadingStashes]])])]),_:1},8,["modelValue"]),t(Me,{modelValue:ce.value,"onUpdate:modelValue":n[35]||(n[35]=B=>ce.value=B),title:"储藏详情","custom-class":"stash-detail-dialog",size:"extra-large",type:"flex","close-on-click-modal":!1},{default:s(()=>[e("div",mr,[ge.value?(r(),$("div",vr,[e("div",gr,[n[85]||(n[85]=e("span",{class:"info-label"},"Stash ID:",-1)),e("code",hr,I(ge.value.id),1)]),e("div",yr,[n[86]||(n[86]=e("span",{class:"info-label"},"描述:",-1)),e("span",_r,I(ge.value.description),1)])])):Y("",!0),e("div",br,[t(_s,{files:Xe.value,diffContent:pe.value,selectedFile:Te.value,context:"stash-detail",emptyText:"该stash没有变更文件",onFileSelect:R,onOpenFile:C,onOpenWithVscode:ne},null,8,["files","diffContent","selectedFile"])])])]),_:1},8,["modelValue"]),t(Ft,{name:"el-fade-in-linear"},{default:s(()=>[V.value?(r(),$("div",wr,[t(Ge,{class:"is-loading"},{default:s(()=>[t(a(Lt))]),_:1}),n[87]||(n[87]=e("span",null,"更新状态中...",-1))])):Y("",!0)]),_:1}),t(Un,{visible:a(d).visible,text:a(d).text,"show-progress":a(d).showProgress,progress:a(d).progress},null,8,["visible","text","show-progress","progress"]),t(Nn,{visible:a(P).visible,text:a(P).text,description:a(P).description},null,8,["visible","text","description"]),t(Me,{modelValue:es.value,"onUpdate:modelValue":n[39]||(n[39]=B=>es.value=B),title:"提交设置",size:"medium","show-footer":!1,"custom-class":"commit-settings-dialog"},{default:s(()=>[e("div",kr,[t(rs,{modelValue:D.value,"onUpdate:modelValue":n[36]||(n[36]=B=>D.value=B),title:"提交模式",tooltip:"选择传统或标准化提交格式","active-text":"标准化","inactive-text":"普通","active-color":"#409eff"},{icon:s(()=>[t(Ge,null,{default:s(()=>[t(a(dt))]),_:1})]),_:1},8,["modelValue"]),t(rs,{modelValue:le.value,"onUpdate:modelValue":n[37]||(n[37]=B=>le.value=B),title:"跳过钩子检查",tooltip:"添加 --no-verify 参数","active-color":"#f56c6c","icon-class":"warning"},{icon:s(()=>[t(Ge,null,{default:s(()=>[t(a(Ls))]),_:1})]),_:1},8,["modelValue"]),t(rs,{modelValue:ie.value,"onUpdate:modelValue":n[38]||(n[38]=B=>ie.value=B),title:"回车自动提交",tooltip:"输入提交信息后按回车直接执行一键推送","active-color":"#67c23a","icon-class":"success"},{icon:s(()=>[t(Ge,null,{default:s(()=>[t(a(gt))]),_:1})]),_:1},8,["modelValue"])])]),_:1},8,["modelValue"])],64)}}}),Cr=Ce($r,[["__scopeId","data-v-1dc37030"]]),Sr={class:"log-header"},Tr={class:"log-actions"},Lr={key:0,class:"filter-panel-header"},Fr={class:"filter-form"},Vr={class:"filter-item"},xr={class:"filter-item"},Pr={class:"filter-item"},Br={class:"filter-item"},Dr={class:"filter-actions"},zr={key:0},Rr={key:1,class:"content-area-content"},jr={class:"table-view-container"},Or=["onClick"],Ar={class:"commit-message-cell"},Ur={class:"message-content"},Gr={key:0,class:"branch-container"},Mr={class:"message-text"},Ir={class:"author-name"},Er={class:"commit-detail-container"},Nr={key:0,class:"commit-info"},Hr={class:"commit-info-row"},Jr={class:"info-item date-item"},Wr={class:"info-value"},qr={class:"info-item message-item"},Yr=["innerHTML"],Kr=$e({__name:"LogList",setup(q,{expose:k}){const o=Ee();let i=[];const y=u(i),d=u(""),x=u(!1),v=Z(()=>o.isLoadingLog||x.value),O=u(!1),P=u(!1),ee=u(null),V=u(!1),p=u(null),A=u([]),D=u(""),Q=u(!1),F=u(""),T=u(!1),te=u([]),L=u(""),z=u(null),G=u([]),U=u([]),se=u([]),X=u(!1),b=u(0),m=u(0),_=u(null),S=u(null),j=Z(()=>y.value),ae=Z(()=>A.value.map(R=>({path:R,name:R.split("/").pop()||R})));async function fe(R=!1,C=1){const ne=Ee();if(!ne.isGitRepo){d.value="当前目录不是Git仓库";return}try{C>1?P.value=!0:x.value=!0;const ue=new URLSearchParams;ue.append("page",C.toString()),ue.append("all",R.toString()),ue.append("with_parents","true"),te.value.length>0&&ue.append("author",te.value.join(",")),U.value.length>0&&ue.append("branch",U.value.join(",")),L.value&&ue.append("message",L.value),z.value&&Array.isArray(z.value)&&z.value.length===2&&(ue.append("dateFrom",z.value[0]),ue.append("dateTo",z.value[1])),ue.append("_t",Date.now().toString());const _e=await(await fetch(`/api/log?${ue.toString()}`)).json();if(!_e||!_e.data||!Array.isArray(_e.data)){d.value="加载提交历史失败: 服务器返回数据格式不正确";return}const re=C>1;re?_e.data.forEach(Ae=>i.push(Ae)):(i.length=0,_e.data.forEach(Ae=>i.push(Ae))),y.value=[...i],ne.currentPage=C,ne.totalCommits=_e.total||i.length,ne.hasMoreData=_e.hasMore===!0,!re&&!R&&St(()=>{Se(),setTimeout(wt,200)}),d.value=""}catch(ue){d.value="加载提交历史失败: "+(ue instanceof Error?ue.message:String(ue)),C>1&&(ne.hasMoreData=!1)}finally{C>1?P.value=!1:x.value=!1}}function N(R){return R.includes("HEAD -> ")?R.replace("HEAD -> ",""):R.includes("origin/")?R:R.trim()}function le(R){return R.includes("HEAD")?"success":R.includes("origin/")?"warning":"info"}const ie=u(null),me=u(null);function Pe(R){if(!o.hasMoreData||P.value||v.value)return;const C=R.target,{scrollTop:ne,scrollHeight:ue,clientHeight:xe}=C;ue-ne-xe<=20&&Te()}function Se(){if(!ie.value)return;const R=ie.value.$el.querySelector(".el-table__body-wrapper");R&&(me.value=R,me.value&&(me.value.removeEventListener("scroll",Pe,!0),me.value.addEventListener("scroll",Pe,!0)))}function g(){me.value&&(me.value.removeEventListener("scroll",Pe,!0),me.value=null)}function c(R){R.key==="Escape"&&Fe.value&&(Fe.value=!1)}et(()=>{o.isGitRepo?(o.log.length>0?(i.length=0,o.log.forEach(R=>i.push(R)),o.totalCommits=o.log.length):fe(),Ne()):d.value="当前目录不是Git仓库",St(()=>{setTimeout(()=>{Se()},500)}),ze(()=>ie.value,R=>{R&&!O.value&&St(()=>{Se()})}),window.addEventListener("keydown",c)}),ze(()=>o.allBranches,R=>{R&&R.length>0?se.value=[...R].sort():se.value=[]},{immediate:!0}),zo(()=>{g(),ee.value!==null&&(window.clearInterval(ee.value),ee.value=null),window.removeEventListener("keydown",c)});async function E(){o.currentPage=1,o.hasMoreData=!0,await fe(O.value,1),St(()=>{if(ie.value){const R=ie.value.$el.querySelector(".el-scrollbar__wrap");R&&(R.scrollTop=0)}})}ze(()=>o.log,R=>{try{i.length=0,Array.isArray(R)&&R.forEach(C=>C&&i.push(C)),o.totalCommits=i.length,o.currentPage=1,o.hasMoreData=!1,y.value=[...i]}catch{}},{immediate:!0}),k({refreshLog:E});async function H(R){if(R){p.value=R,V.value=!0,Q.value=!0,A.value=[],D.value="",F.value="";try{if(!R.hash||R.hash.length<7){D.value="无效的提交哈希值",Q.value=!1;return}const ne=await(await fetch(`/api/commit-files?hash=${R.hash}`)).json();ne.success&&Array.isArray(ne.files)?(A.value=ne.files,A.value.length>0?await ce(R.hash,A.value[0]):D.value="该提交没有变更文件"):D.value=`获取文件列表失败: ${ne.error||"未知错误"}`}catch(C){D.value=`获取提交详情失败: ${C.message}`}finally{Q.value=!1}}}async function ce(R,C){Q.value=!0,F.value=C;try{const ue=await(await fetch(`/api/commit-file-diff?hash=${R}&file=${encodeURIComponent(C)}`)).json();ue.success?D.value=ue.diff||"没有变更内容":D.value=`获取差异失败: ${ue.error||"未知错误"}`}catch(ne){D.value=`获取差异失败: ${ne.message}`}finally{Q.value=!1}}function ge(R){p.value&&ce(p.value.hash,R)}async function he(R,C){try{const ue=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:R,context:C})})).json();ue.success?l.success(ue.message):l.error(ue.error||"打开文件失败")}catch(ne){l.error(`打开文件失败: ${ne.message}`)}}async function pe(R,C){try{const ue=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:R,context:C})})).json();ue.success?l.success(ue.message):l.error(ue.error||"用VSCode打开文件失败")}catch(ne){l.error(`用VSCode打开文件失败: ${ne.message}`)}}async function de(R){try{const C=Wo(R);await navigator.clipboard.writeText(C),l.success("提交信息已复制到剪贴板")}catch{l.error("复制失败")}}function Te(){!o.hasMoreData||P.value||v.value||fe(O.value,o.currentPage+1)}function Be(){te.value=[],U.value=[],L.value="",z.value=null,o.currentPage=1,fe(O.value,1)}function ye(){o.currentPage=1,fe(O.value,1)}async function Ne(){try{const C=await(await fetch("/api/authors")).json();C.success&&Array.isArray(C.authors)?G.value=C.authors.sort():st()}catch{st()}}function st(){const R=new Set;y.value.forEach(C=>{C.author&&R.add(C.author)}),G.value=Array.from(R).sort()}ze(()=>y.value,()=>{},{deep:!0});function ot(R,C,ne){ne.preventDefault(),b.value=ne.clientY,m.value=ne.clientX,_.value=R,X.value=!0,St(()=>{const xe=S.value;if(xe){const _e=xe.getBoundingClientRect(),re=window.innerWidth,Ae=window.innerHeight,Xe=8;let lt=ne.clientX,it=ne.clientY;lt+_e.width>re&&(lt=Math.max(Xe,ne.clientX-_e.width)),it+_e.height>Ae&&(it=Math.max(Xe,ne.clientY-_e.height)),m.value=lt,b.value=it}});const ue=()=>{X.value=!1,document.removeEventListener("click",ue)};setTimeout(()=>{document.addEventListener("click",ue)},0)}async function at(R){if(R)try{await Ie.confirm(`确定要撤销提交 ${R.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const ne=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:R.hash})})).json();ne.success?(l.success(ne.message||"已成功撤销提交"),E(),o.fetchStatus(),o.getBranchStatus()):l.error(ne.error||"撤销提交失败")}catch(C){C!=="cancel"&&l.error("撤销提交失败: "+(C.message||C))}}async function bt(R){if(R)try{await Ie.confirm(`确定要将提交 ${R.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const ne=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:R.hash})})).json();ne.success?(l.success(ne.message||"已成功Cherry-Pick提交"),E(),o.fetchStatus(),o.getBranchStatus()):l.error(ne.error||"Cherry-Pick提交失败")}catch(C){C!=="cancel"&&l.error("Cherry-Pick提交失败: "+(C.message||C))}}async function Qe(R){if(R)try{await navigator.clipboard.writeText(R.hash),l.success(`已复制提交哈希: ${R.hash.substring(0,7)}`)}catch(C){l.error(`复制提交哈希失败: ${C.message}`)}}async function Ye(R){if(R)try{await Ie.confirm(`确定要将当前分支重置(hard)到提交 ${R.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const ne=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:R.hash})})).json();ne.success?(l.success(ne.message||"已成功重置到指定提交"),E(),o.fetchStatus(),o.getBranchStatus()):l.error(ne.error||"重置到指定提交失败")}catch(C){C!=="cancel"&&l.error("重置到指定提交失败: "+(C.message||C))}}function wt(){if(!o.hasMoreData||P.value||v.value||O.value)return;if(!me.value){Se();return}const{scrollTop:R,scrollHeight:C,clientHeight:ne}=me.value;C-R-ne<=50&&Te()}const Fe=u(!1);function nt(){Fe.value=!Fe.value}return(R,C)=>{var _e;const ne=Re,ue=be,xe=Nt;return r(),$(ke,null,[e("div",{class:ve(["card",{"fullscreen-mode":Fe.value}])},[e("div",Sr,[C[13]||(C[13]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",Tr,[e("button",{onClick:C[0]||(C[0]=re=>T.value=!T.value),class:ve(["modern-btn btn-icon-32 action-button filter-button",{"active-filter":T.value}])},[t(ne,{class:"btn-icon"},{default:s(()=>[t(a(Ro))]),_:1})],2),e("button",{onClick:nt,class:ve(["modern-btn btn-icon-32 action-button fullscreen-button",{"active-fullscreen":Fe.value}])},[t(ne,{class:"btn-icon"},{default:s(()=>[(r(),W(us(Fe.value?a(ms):a(Ms))))]),_:1})],2),e("button",{onClick:C[1]||(C[1]=re=>E()),class:"modern-btn btn-icon-32 action-button refresh-button"},[t(a(vs))])])]),T.value?(r(),$("div",Lr,[e("div",Fr,[e("div",Vr,[t(a(xt),{modelValue:te.value,"onUpdate:modelValue":C[2]||(C[2]=re=>te.value=re),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>C[14]||(C[14]=[e("span",{class:"compact-label"},"作者",-1)])),default:s(()=>[(r(!0),$(ke,null,je(G.value,re=>(r(),W(a(Vt),{key:re,label:re,value:re},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",xr,[t(a(xt),{modelValue:U.value,"onUpdate:modelValue":C[3]||(C[3]=re=>U.value=re),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>C[15]||(C[15]=[e("span",{class:"compact-label"},"分支",-1)])),default:s(()=>[(r(!0),$(ke,null,je(se.value,re=>(r(),W(a(Vt),{key:re,label:re,value:re},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Pr,[t(a(tt),{modelValue:L.value,"onUpdate:modelValue":C[4]||(C[4]=re=>L.value=re),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:s(()=>C[16]||(C[16]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",Br,[t(a(jo),{modelValue:z.value,"onUpdate:modelValue":C[5]||(C[5]=re=>z.value=re),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:s(()=>C[17]||(C[17]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",Dr,[t(a(Ue),{type:"primary",size:"small",onClick:ye,class:"filter-action-button"},{default:s(()=>C[18]||(C[18]=[M("应用")])),_:1}),t(a(Ue),{type:"info",size:"small",onClick:Be,class:"filter-action-button"},{default:s(()=>C[19]||(C[19]=[M("重置")])),_:1})])])])):Y("",!0),e("div",{class:ve(["content-area",{"with-filter":T.value}])},[d.value?(r(),$("div",zr,I(d.value),1)):(r(),$("div",Rr,[e("div",jr,[qe((r(),W(a(Oo),{ref_key:"tableRef",ref:ie,data:j.value,stripe:"",border:"",class:"log-table","empty-text":v.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:ot,onRowClick:C[6]||(C[6]=re=>H(re))},{default:s(()=>[t(a(At),{label:"哈希",width:"80",resizable:""},{default:s(re=>[e("span",{class:"commit-hash",onClick:Ae=>H(re.row)},I(re.row.hash.substring(0,6)),9,Or)]),_:1}),t(a(At),{label:"提交信息","min-width":"300"},{default:s(re=>[e("div",Ar,[e("div",Ur,[re.row.branch?(r(),$("div",Gr,[(r(!0),$(ke,null,je(re.row.branch.split(","),(Ae,Xe)=>(r(),W(a(Bt),{key:Xe,size:"small",type:le(Ae),class:"branch-tag"},{default:s(()=>[M(I(N(Ae)),1)]),_:2},1032,["type"]))),128))])):Y("",!0),e("span",Mr,I(re.row.message),1),t(a(Ue),{type:"text",icon:a(vt),size:"small",onClick:yt(Ae=>de(re.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(a(At),{prop:"date",label:"日期",width:"150",resizable:""}),t(a(At),{label:"作者",width:"100",resizable:""},{default:s(re=>[t(ue,{content:re.row.email,placement:"top","show-after":200},{default:s(()=>[e("span",Ir,I(re.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[xe,v.value]])])]))],2),t(Me,{modelValue:V.value,"onUpdate:modelValue":C[7]||(C[7]=re=>V.value=re),title:`提交详情: ${(_e=p.value)!=null&&_e.hash?p.value.hash.substring(0,7):"未知"}`,size:"extra-large",type:"flex","destroy-on-close":"","custom-class":"commit-detail-dialog"},{default:s(()=>[qe((r(),$("div",Er,[p.value?(r(),$("div",Nr,[e("div",Hr,[e("div",Jr,[C[20]||(C[20]=e("span",{class:"info-label"},"日期",-1)),e("span",Wr,I(p.value.date),1)]),e("div",qr,[C[21]||(C[21]=e("span",{class:"info-label"},"提交信息",-1)),e("div",{class:"info-message",innerHTML:a(Jo)(p.value.message).replace(/\n/g,"<br>")},null,8,Yr)])])])):Y("",!0),t(_s,{files:ae.value,loading:Q.value,diffContent:D.value,selectedFile:F.value,context:"commit-detail",emptyText:"没有找到变更文件",onFileSelect:ge,onOpenFile:he,onOpenWithVscode:pe},null,8,["files","loading","diffContent","selectedFile"])])),[[xe,Q.value]])]),_:1},8,["modelValue","title"])],2),qe(e("div",{class:ve(["context-menu",{"fullscreen-context-menu":Fe.value}]),style:_t({top:b.value+"px",left:m.value+"px"}),ref_key:"contextMenuRef",ref:S},[e("div",{class:"context-menu-item",onClick:C[8]||(C[8]=re=>H(_.value))},C[22]||(C[22]=[e("i",{class:"el-icon-view"},null,-1),M(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:C[9]||(C[9]=re=>Qe(_.value))},C[23]||(C[23]=[e("i",{class:"el-icon-document-copy"},null,-1),M(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:C[10]||(C[10]=re=>Ye(_.value))},C[24]||(C[24]=[e("i",{class:"el-icon-refresh-right"},null,-1),M(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:C[11]||(C[11]=re=>at(_.value))},C[25]||(C[25]=[e("i",{class:"el-icon-delete"},null,-1),M(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:C[12]||(C[12]=re=>bt(_.value))},C[26]||(C[26]=[e("i",{class:"el-icon-edit"},null,-1),M(" Cherry-Pick 到当前分支 ")]))],6),[[Pt,X.value]])],64)}}}),Qr=Ce(Kr,[["__scopeId","data-v-410930d0"]]),Xr={class:"dialog-toolbar"},Zr=["disabled"],ec=["disabled"],tc=["disabled"],sc={class:"history-scroll"},oc={key:0,class:"loading-state"},ac={key:2,class:"history-list"},nc=["onClick"],lc={class:"command-info"},ic={class:"command-text"},rc={class:"command-meta"},cc={class:"timestamp"},uc={class:"duration"},dc={class:"item-actions"},fc=["onClick"],pc=["onClick"],mc={key:0,class:"item-details"},vc={key:0,class:"output-section"},gc={class:"output-header"},hc=["onClick"],yc={class:"output-content"},_c={key:0,class:"truncation-notice"},bc={class:"output-header"},wc={class:"output-content"},kc={key:0,class:"truncation-notice"},$c={key:2,class:"output-section error"},Cc={class:"output-content"},Sc=$e({__name:"CommandHistory",setup(q){const k=Ee(),o=u([]),i=u(!1),y=u(!1),d=u(!1),x=u(!1),v=u(new Set),O=u(!1),P=u(!1);function ee(){P.value=!0,o.value.length===0&&V()}async function V(){try{if(i.value=!0,k.socket&&k.socket.connected)k.socket.emit("request_full_history");else{const m=await(await fetch("/api/command-history")).json();m.success?o.value=m.history:l.error(`加载命令历史失败: ${m.error}`)}}catch(b){l.error(`加载命令历史失败: ${b.message}`)}finally{i.value=!1}}async function p(){if(o.value.length===0){l.warning("没有可复制的命令历史");return}try{d.value=!0;const b=o.value.map(m=>{let _=`# ${Q(m.timestamp)} (耗时: ${F(m.executionTime)}) - ${m.success?"成功":"失败"}
`;if(_+=`${m.command}
`,m.stdout&&(_+=`
# 输出:
${m.stdout}
`),m.stderr){const S=G(m.command)?"输出信息":"错误输出";_+=`
# ${S}:
${m.stderr}
`}return m.error&&(_+=`
# 错误信息:
${m.error}
`),_}).join(`
---

`);await navigator.clipboard.writeText(b),l({message:"命令历史已复制到剪贴板",type:"success",zIndex:1e5})}catch(b){l.error(`复制失败: ${b.message}`)}finally{d.value=!1}}async function A(){if(o.value.length===0){l.warning("没有可复制的命令");return}try{O.value=!0;const b=o.value.map(m=>m.command).join(`
`);await navigator.clipboard.writeText(b),l({message:"命令列表已复制到剪贴板",type:"success",zIndex:1e5})}catch(b){l.error(`复制失败: ${b.message}`)}finally{O.value=!1}}async function D(){try{if(await Ie.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),y.value=!0,k.socket&&k.socket.connected)k.socket.emit("clear_command_history");else{const m=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();m.success?(o.value=[],l.success("命令历史已清空")):l.error(`清空命令历史失败: ${m.error}`)}}catch(b){b!=="cancel"&&b.toString()!=="Error: cancel"&&l.error(`清空命令历史失败: ${b.message}`)}finally{y.value=!1}}function Q(b){return new Date(b).toLocaleString()}function F(b){return b<1e3?`${b}ms`:`${(b/1e3).toFixed(2)}s`}function T(b){v.value.has(b)?v.value.delete(b):v.value.add(b)}function te(b){return v.value.has(b)}async function L(b){try{await navigator.clipboard.writeText(b),l({message:"命令已复制到剪贴板",type:"success",zIndex:1e5})}catch(m){l.error(`复制失败: ${m.message}`)}}function z(b){return b.includes("git push")||b.includes("git-push")}function G(b){return!!z(b)}async function U(b){try{let m="";if(b.stdout&&(m+=`标准输出:
${b.stdout}

`),b.stderr){const _=G(b.command)?"输出信息":"错误输出";m+=`${_}:
${b.stderr}

`}b.error&&(m+=`错误信息:
${b.error}`),await navigator.clipboard.writeText(m.trim()),l({message:"输出已复制到剪贴板",type:"success",zIndex:1e5})}catch(m){l.error(`复制失败: ${m.message}`)}}function se(){if(!k.socket){console.error("Socket实例不可用");return}k.socket.on("initial_command_history",b=>{o.value=b.history,x.value=!0}),k.socket.on("command_history_update",b=>{o.value.unshift(b.newCommand),o.value.length>100&&o.value.pop(),x.value=!0}),k.socket.on("full_command_history",b=>{o.value=b.history,i.value=!1,x.value=!0}),k.socket.on("command_history_cleared",b=>{b.success&&(o.value=[],l.success("命令历史已清空")),y.value=!1}),k.socket.on("connect",()=>{x.value=!0,l.success("已连接到实时命令历史")}),k.socket.on("disconnect",()=>{x.value=!1,l.warning("实时命令历史连接已断开")})}function X(){k.socket&&(k.socket.off("initial_command_history"),k.socket.off("command_history_update"),k.socket.off("full_command_history"),k.socket.off("command_history_cleared"))}return et(()=>{se(),k.socket||(console.log("尝试初始化Socket连接"),k.initSocketConnection())}),Ds(()=>{X()}),(b,m)=>{const _=Re,S=be,j=Bt,ae=rt,fe=Is;return r(),$(ke,null,[t(S,{content:"查看Git命令历史",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-36",onClick:ee},[t(_,{class:"btn-icon"},{default:s(()=>[t(a(js))]),_:1})])]),_:1}),t(Me,{modelValue:P.value,"onUpdate:modelValue":m[0]||(m[0]=N=>P.value=N),title:"Git 命令历史","destroy-on-close":"","custom-class":"command-history-dialog","append-to-body":!0},{default:s(()=>[e("div",Xr,[t(j,{type:x.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:s(()=>[M(I(x.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(S,{content:"只复制命令列表（不含输出）",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn copy-commands-button enhanced-btn",onClick:A,disabled:o.value.length===0||O.value},[O.value?(r(),W(_,{key:1,class:"btn-icon is-loading"},{default:s(()=>[t(a(Lt))]),_:1})):(r(),W(_,{key:0,class:"btn-icon"},{default:s(()=>[t(a(vt))]),_:1})),m[1]||(m[1]=e("span",{class:"btn-text"},"命令",-1))],8,Zr)]),_:1}),t(S,{content:"复制完整命令历史（含输出）",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn copy-all-button enhanced-btn",onClick:p,disabled:o.value.length===0||d.value},[d.value?(r(),W(_,{key:1,class:"btn-icon is-loading"},{default:s(()=>[t(a(Lt))]),_:1})):(r(),W(_,{key:0,class:"btn-icon"},{default:s(()=>[t(a(vt))]),_:1})),m[2]||(m[2]=e("span",{class:"btn-text"},"全部",-1))],8,ec)]),_:1}),t(S,{content:"清空命令历史",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn clear-button enhanced-btn danger-btn",onClick:D,disabled:o.value.length===0||y.value},[y.value?(r(),W(_,{key:1,class:"btn-icon is-loading"},{default:s(()=>[t(a(Lt))]),_:1})):(r(),W(_,{key:0,class:"btn-icon"},{default:s(()=>[t(a(Ut))]),_:1})),m[3]||(m[3]=e("span",{class:"btn-text"},"清空",-1))],8,tc)]),_:1})]),e("div",sc,[i.value&&o.value.length===0?(r(),$("div",oc,[t(_,{class:"loading-icon is-loading"},{default:s(()=>[t(a(Lt))]),_:1}),m[4]||(m[4]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):o.value.length===0?(r(),W(ae,{key:1,description:"暂无命令历史"})):(r(),$("div",ac,[(r(!0),$(ke,null,je(o.value,(N,le)=>(r(),$("div",{key:le,class:ve(["history-item",{"is-error":!N.success}])},[e("div",{class:"item-header",onClick:ie=>T(le)},[e("div",lc,[e("div",ic,[t(j,{size:"small",type:N.success?"success":"danger",effect:"dark",class:"status-tag"},{default:s(()=>[M(I(N.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,I(N.command),1)]),e("div",rc,[e("span",cc,I(Q(N.timestamp)),1),e("span",uc,"耗时: "+I(F(N.executionTime)),1)])]),e("div",dc,[t(S,{content:"复制命令",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn item-copy-button enhanced-btn",onClick:yt(ie=>L(N.command),["stop"])},[t(_,{class:"btn-icon"},{default:s(()=>[t(a(vt))]),_:1})],8,fc)]),_:2},1024),t(S,{content:"展开/收起",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:ve(["modern-btn expand-button enhanced-btn",{"is-expanded":te(le)}]),onClick:yt(ie=>T(le),["stop"])},[t(_,{class:"btn-icon"},{default:s(()=>[te(le)?(r(),W(a(Os),{key:0})):(r(),W(a(ht),{key:1}))]),_:2},1024)],10,pc)]),_:2},1024)])],8,nc),te(le)?(r(),$("div",mc,[N.stdout?(r(),$("div",vc,[e("div",gc,[m[5]||(m[5]=e("h4",null,"标准输出",-1)),t(S,{content:"复制输出",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn output-copy-button enhanced-btn",onClick:ie=>U(N)},[t(_,{class:"btn-icon"},{default:s(()=>[t(a(vt))]),_:1})],8,hc)]),_:2},1024)]),e("pre",yc,I(N.stdout),1),N.isStdoutTruncated?(r(),$("div",_c,[t(fe,{type:"info",closable:!1,"show-icon":""},{default:s(()=>m[6]||(m[6]=[M(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):Y("",!0)])):Y("",!0),N.stderr?(r(),$("div",{key:1,class:ve(["output-section",G(N.command)?"":"error"])},[e("div",bc,[e("h4",null,I(G(N.command)?"输出信息":"错误输出"),1)]),e("pre",wc,I(N.stderr),1),N.isStderrTruncated?(r(),$("div",kc,[t(fe,{type:"info",closable:!1,"show-icon":""},{default:s(()=>[M(I(G(N.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):Y("",!0)],2)):Y("",!0),N.error?(r(),$("div",$c,[m[7]||(m[7]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",Cc,I(N.error),1)])):Y("",!0)])):Y("",!0)],2))),128))]))])]),_:1},8,["modelValue"])],64)}}}),Tc=Ce(Sc,[["__scopeId","data-v-aa45cf58"]]),Lc={class:"inline-card"},Fc={key:0,class:"inline-card__icon"},Vc={class:"inline-card__content"},xc={class:"inline-card__actions"},Pc=$e({__name:"InlineCard",setup(q){const k=Ao(),o=Z(()=>{var y;const i=(y=k.icon)==null?void 0:y.call(k);return Array.isArray(i)?i.length>0:!!i});return(i,y)=>(r(),$("div",Lc,[o.value?(r(),$("div",Fc,[ct(i.$slots,"icon",{},void 0,!0)])):Y("",!0),e("div",Vc,[ct(i.$slots,"content",{},()=>[ct(i.$slots,"default",{},void 0,!0)],!0)]),e("div",xc,[ct(i.$slots,"actions",{},void 0,!0)])]))}}),cs=Ce(Pc,[["__scopeId","data-v-d105f6c7"]]),Bc={class:"user-settings-content","element-loading-text":"正在加载配置...","element-loading-background":"rgba(0, 0, 0, 0.15)"},Dc={class:"info-section"},zc={class:"info-card"},Rc={class:"info-icon"},jc={class:"basic-info-section"},Oc={class:"basic-info-grid"},Ac={class:"settings-section"},Uc={class:"section-title"},Gc={class:"settings-grid"},Mc={class:"setting-row"},Ic={class:"setting-label"},Ec={class:"setting-row"},Nc={class:"setting-row"},Hc={class:"setting-label"},Jc={class:"setting-row"},Wc={class:"setting-row"},qc={class:"setting-label"},Yc={class:"user-settings-footer"},Kc={class:"footer-actions"},Qc=["disabled"],Xc=["disabled"],Zc=$e({__name:"GitGlobalSettingsDialog",props:{modelValue:{type:Boolean}},emits:["update:modelValue"],setup(q,{emit:k}){const o=Ee(),i=q,y=k,d=u(!1),x=u(!1),v=u(""),O=u(""),P=u(!1),ee=u("false"),V=u(!1),p=u("true"),A=u("main");let D="",Q="",F=!1,T="false",te=!1,L="true",z="main";ze(()=>i.modelValue,async _=>{if(d.value=_,_){v.value=o.userName,O.value=o.userEmail;try{x.value=!0,await X()}finally{x.value=!1}D=v.value,Q=O.value,F=P.value,T=ee.value,te=V.value,L=p.value,z=A.value}},{immediate:!0});function G(_){y("update:modelValue",_)}async function U(_){try{const j=await(await fetch("/api/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:`git config --global --get ${_}`})})).json();if(j.success)return String(j.stdout||"").trim()}catch{}return""}async function se(_,S){const ae=await(await fetch("/api/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:`git config --global ${_} ${S}`})})).json();if(!ae.success)throw new Error(ae.error||`设置 ${_} 失败`)}async function X(){const[_,S,j,ae,fe]=await Promise.all([U("push.autoSetupRemote"),U("pull.rebase"),U("fetch.prune"),U("core.autocrlf"),U("init.defaultBranch")]);P.value=(_||"false").toLowerCase()==="true";const N=(S||"false").toLowerCase();ee.value=N==="true"||N==="merges"?N:"false",V.value=(j||"false").toLowerCase()==="true";const le=(ae||"true").toLowerCase();p.value=le==="true"||le==="input"?le:"false",A.value=fe||"main"}async function b(){const _=[];try{P.value!==F&&_.push(se("push.autoSetupRemote",P.value?"true":"false")),ee.value!==T&&_.push(se("pull.rebase",ee.value)),V.value!==te&&_.push(se("fetch.prune",V.value?"true":"false")),p.value!==L&&_.push(se("core.autocrlf",p.value));const S=(A.value||"").trim();return S&&S!==z&&_.push(se("init.defaultBranch",S)),_.length===0||(await Promise.all(_),l.success("已保存变更的 Git 配置"),F=P.value,T=ee.value,te=V.value,L=p.value,z=S||z),!0}catch(S){return l.error(S.message),!1}}async function m(){if(!v.value||!O.value){l.warning("用户名和邮箱不能为空");return}let _=!0;(v.value!==D||O.value!==Q)&&(_=await o.restoreUserConfig(v.value,O.value),_&&(D=v.value,Q=O.value));const S=await b();_&&S&&(v.value===D&&O.value,d.value=!1)}return(_,S)=>{const j=Re,ae=tt,fe=Et,N=be,le=gs,ie=Vt,me=xt,Pe=It,Se=Nt;return r(),W(Me,{modelValue:d.value,"onUpdate:modelValue":[S[8]||(S[8]=g=>d.value=g),G],title:"Git 全局设置",size:"large","destroy-on-close":!0,"custom-class":"user-settings-dialog"},{footer:s(()=>[e("div",Yc,[S[17]||(S[17]=e("div",null,null,-1)),e("div",Kc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:S[7]||(S[7]=g=>d.value=!1),disabled:x.value}," 取消 ",8,Qc),e("button",{type:"button",class:"footer-btn primary-btn",onClick:m,disabled:x.value},[t(j,null,{default:s(()=>[t(a(gt))]),_:1}),S[16]||(S[16]=e("span",null,"保存设置",-1))],8,Xc)])])]),default:s(()=>[qe((r(),$("div",Bc,[e("div",Dc,[e("div",zc,[e("div",Rc,[t(j,null,{default:s(()=>[t(a(ut))]),_:1})]),S[9]||(S[9]=e("div",{class:"info-content"},[e("p",{class:"info-title"},"全局配置"),e("p",{class:"info-desc"},"这些设置将影响全局 Git 配置，对所有 Git 仓库生效")],-1))])]),t(Pe,{class:"user-form","label-width":"auto",model:{tempUserName:v.value,tempUserEmail:O.value}},{default:s(()=>[e("div",jc,[e("div",Oc,[t(fe,{class:"form-item",label:"用户名"},{default:s(()=>[t(ae,{modelValue:v.value,"onUpdate:modelValue":S[0]||(S[0]=g=>v.value=g),placeholder:"请输入 Git 用户名",class:"modern-input"},null,8,["modelValue"])]),_:1}),t(fe,{class:"form-item",label:"邮箱地址"},{default:s(()=>[t(ae,{modelValue:O.value,"onUpdate:modelValue":S[1]||(S[1]=g=>O.value=g),placeholder:"请输入 Git 邮箱地址",class:"modern-input"},null,8,["modelValue"])]),_:1})])]),e("div",Ac,[e("div",Uc,[t(j,{class:"title-icon"},{default:s(()=>[t(a(Mt))]),_:1}),S[10]||(S[10]=e("span",null,"高级配置",-1))]),e("div",Gc,[e("div",Mc,[e("label",Ic,[S[11]||(S[11]=M("自动设置上游 ")),t(N,{content:"首次 git push 时，自动为当前分支创建远程同名分支并建立跟踪关系（等同于 push -u）。",placement:"top","show-after":200},{default:s(()=>[t(j,{class:"qmark"},{default:s(()=>[t(a(ut))]),_:1})]),_:1})]),t(le,{modelValue:P.value,"onUpdate:modelValue":S[2]||(S[2]=g=>P.value=g)},null,8,["modelValue"])]),e("div",Ec,[S[12]||(S[12]=e("label",{class:"setting-label"},"拉取策略",-1)),t(me,{modelValue:ee.value,"onUpdate:modelValue":S[3]||(S[3]=g=>ee.value=g),class:"modern-input",size:"default"},{default:s(()=>[t(ie,{label:"merge (默认)",value:"false"}),t(ie,{label:"rebase",value:"true"}),t(ie,{label:"rebase(保留合并)",value:"merges"})]),_:1},8,["modelValue"])]),e("div",Nc,[e("label",Hc,[S[13]||(S[13]=M("自动清理远程分支 ")),t(N,{content:"在 git fetch 时自动 prune，移除已在远程删除但本地仍保留的远程分支引用。",placement:"top","show-after":200},{default:s(()=>[t(j,{class:"qmark"},{default:s(()=>[t(a(ut))]),_:1})]),_:1})]),t(le,{modelValue:V.value,"onUpdate:modelValue":S[4]||(S[4]=g=>V.value=g)},null,8,["modelValue"])]),e("div",Jc,[S[14]||(S[14]=e("label",{class:"setting-label"},"换行符处理",-1)),t(me,{modelValue:p.value,"onUpdate:modelValue":S[5]||(S[5]=g=>p.value=g),class:"modern-input",size:"default"},{default:s(()=>[t(ie,{label:"true (Windows)",value:"true"}),t(ie,{label:"input",value:"input"}),t(ie,{label:"false",value:"false"})]),_:1},8,["modelValue"])]),e("div",Wc,[e("label",qc,[S[15]||(S[15]=M("默认初始化分支 ")),t(N,{content:"新建仓库时（git init）默认创建的分支名，常见为 main 或 master。",placement:"top","show-after":200},{default:s(()=>[t(j,{class:"qmark"},{default:s(()=>[t(a(ut))]),_:1})]),_:1})]),t(ae,{modelValue:A.value,"onUpdate:modelValue":S[6]||(S[6]=g=>A.value=g),placeholder:"例如: main",class:"modern-input",size:"default"},null,8,["modelValue"])])])])]),_:1},8,["model"])])),[[Se,x.value]])]),_:1},8,["modelValue"])}}}),eu=Ce(Zc,[["__scopeId","data-v-52446f71"]]),tu="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",su={class:"main-header app-header"},ou={class:"header-left"},au=["src"],nu={class:"header-info"},lu={key:0,class:"header-actions"},iu={key:0,class:"command-history-section"},ru={class:"user-name"},cu={class:"main-container"},uu={key:0,class:"loading-container"},du={class:"loading-spinner"},fu={key:1,class:"grid-layout"},pu={class:"git-status-panel"},mu={key:0,class:"commit-form-panel"},vu={class:"tips"},gu={key:1,class:"commit-form-panel"},hu={key:2,class:"log-list-panel"},yu={class:"create-branch-content"},_u={class:"form-label"},bu={class:"form-label"},wu={class:"create-branch-footer"},ku={class:"footer-actions"},$u=["disabled"],Cu={class:"main-footer app-footer p-4"},Su={key:0,class:"branch-info"},Tu={class:"branch-label","aria-label":"当前分支",title:"当前分支"},Lu={key:1},Fu={class:"repo-url"},Vu=$e({__name:"App",setup(q){const k=u(""),o=u(null),i=u(null),y=u(null),d=Ee(),x=Ke(),v=u(!1),O=Z(()=>x.currentDirectory),P=u(!1);function ee(){P.value=!P.value;const g=document.documentElement;P.value?(g.setAttribute("data-theme","dark"),localStorage.setItem("theme","dark")):(g.removeAttribute("data-theme"),localStorage.setItem("theme","light"))}function V(){const g=localStorage.getItem("theme"),c=window.matchMedia("(prefers-color-scheme: dark)").matches;(g==="dark"||!g&&c)&&(P.value=!0,document.documentElement.setAttribute("data-theme","dark"))}function p(){x.config&&(k.value=`默认提交信息: ${x.config.defaultCommitMessage}`)}async function A(){try{const c=await(await fetch("/api/current_directory")).json();return x.setCurrentDirectory(c.directory||"未知目录"),c}catch(g){return console.error("获取当前目录失败:",g),{directory:"未知目录",isGitRepo:!1}}}et(async()=>{console.log("---------- 页面初始化开始 ----------"),V();try{const g=await A();x.isLoaded||await x.loadConfig(),p(),d.isGitRepo=g.isGitRepo===!0,d.lastCheckedTime=Date.now(),d.isGitRepo?await Promise.all([d.getCurrentBranch(!0),d.getAllBranches(),d.getUserInfo(),d.getRemoteUrl(),d.getBranchStatus(!0)]):l.warning("当前目录不是Git仓库，部分功能将不可用")}catch(g){console.error("初始化失败:",g)}finally{v.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{fe()},100)}});const D=u(!1),Q=u(""),F=u("");async function T(){await d.createBranch(Q.value,F.value)&&(D.value=!1,Q.value="",i.value&&i.value.refreshStatus(),d.refreshLog())}function te(){F.value=d.currentBranch,D.value=!0}async function L(g){await d.changeBranch(g)&&(i.value&&i.value.refreshStatus(),d.refreshLog())}const z=u(!1);function G(){z.value=!0}let U=!1,se=!1,X=!1,b=0,m=0,_="",S="",j=null;function ae(){const g=document.querySelector(".grid-layout");if(!g)return;const c=getComputedStyle(g).gridTemplateColumns.split(" "),E=getComputedStyle(g).gridTemplateRows.split(" ");if(c.length>=3&&E.length>=3){const H=parseFloat(c[0]),ce=parseFloat(c[2]),ge=H+ce,he=H/ge,pe=parseFloat(E[0]),de=parseFloat(E[2]),Te=pe+de,Be=pe/Te;localStorage.setItem("zen-gitsync-layout-left-ratio",he.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",Be.toString()),console.log(`布局比例已保存 - 左侧: ${(he*100).toFixed(0)}%, 上方: ${(Be*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",he.toString()),console.log(`底部布局比例已保存 - 左侧: ${(he*100).toFixed(0)}%`)}}function fe(){const g=document.querySelector(".grid-layout");if(!g)return;const c=localStorage.getItem("zen-gitsync-layout-left-ratio"),E=localStorage.getItem("zen-gitsync-layout-top-ratio");if(c){const H=parseFloat(c),ce=1-H;g.style.gridTemplateColumns=`${H}fr 8px ${ce}fr`,console.log(`已恢复左侧比例: ${(H*100).toFixed(0)}%`)}else g.style.gridTemplateColumns="1fr 8px 3fr";if(E){const H=parseFloat(E),ce=1-H;g.style.gridTemplateRows=`${H}fr 8px ${ce}fr`,console.log(`已恢复上方比例: ${(H*100).toFixed(0)}%`)}}function N(g){var H;const c=g.currentTarget;if(!c||!c.id)return;j=c.id,j==="v-resizer"?U=!0:j==="v-resizer-bottom"&&(se=!0),b=g.clientX;const E=document.querySelector(".grid-layout");_=getComputedStyle(E).gridTemplateColumns,(H=document.getElementById(j))==null||H.classList.add("active"),document.addEventListener("mousemove",le),document.addEventListener("mouseup",ie),g.preventDefault()}function le(g){if(!U&&!se)return;const c=document.querySelector(".grid-layout"),E=g.clientX-b,H=_.split(" ");if(H.length>=3){const ce=parseFloat(H[0]),ge=parseFloat(H[2]),he=ce+ge,pe=(ce+E/c.clientWidth*he)/he,de=1-pe,Te=.1,Be=.5;pe<Te?c.style.gridTemplateColumns=`${Te}fr 8px ${1-Te}fr`:pe>Be?c.style.gridTemplateColumns=`${Be}fr 8px ${1-Be}fr`:c.style.gridTemplateColumns=`${pe}fr 8px ${de}fr`}}function ie(){var g,c;U=!1,se=!1,(g=document.getElementById("v-resizer"))==null||g.classList.remove("active"),(c=document.getElementById("v-resizer-bottom"))==null||c.classList.remove("active"),document.removeEventListener("mousemove",le),document.removeEventListener("mouseup",ie),ae()}function me(g){var E;X=!0,m=g.clientY;const c=document.querySelector(".grid-layout");S=getComputedStyle(c).gridTemplateRows,(E=document.getElementById("h-resizer"))==null||E.classList.add("active"),document.addEventListener("mousemove",Pe),document.addEventListener("mouseup",Se),g.preventDefault()}function Pe(g){if(!X)return;const c=document.querySelector(".grid-layout"),E=g.clientY-m,H=S.split(" ");if(H.length>=3){const ce=parseFloat(H[0]),ge=parseFloat(H[2]),he=ce+ge,pe=(ce+E/c.clientHeight*he)/he,de=1-pe,Te=.2,Be=.8;pe<Te?c.style.gridTemplateRows=`${Te}fr 8px ${1-Te}fr`:pe>Be?c.style.gridTemplateRows=`${Be}fr 8px ${1-Be}fr`:c.style.gridTemplateRows=`${pe}fr 8px ${de}fr`}}function Se(){var g;X=!1,(g=document.getElementById("h-resizer"))==null||g.classList.remove("active"),document.removeEventListener("mousemove",Pe),document.removeEventListener("mouseup",Se),ae()}return(g,c)=>{const E=Re,H=be,ce=Gs,ge=Ue,he=tt,pe=Et,de=Vt,Te=xt,Be=It;return r(),$(ke,null,[e("header",su,[e("div",ou,[e("img",{src:a(tu),alt:"Zen GitSync Logo",class:"logo"},null,8,au),c[9]||(c[9]=e("h1",null,"Zen GitSync",-1))]),e("div",nu,[a(d).isGitRepo?(r(),$("div",lu,[a(d).isGitRepo?(r(),$("div",iu,[t(Tc)])):Y("",!0),t(H,{content:"编辑项目配置",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-36 btn-scale-on-hover",onClick:c[0]||(c[0]=ye=>{var Ne;return(Ne=y.value)==null?void 0:Ne.openConfigEditor()})},[t(E,{class:"btn-icon"},{default:s(()=>[t(a(dt))]),_:1})])]),_:1}),t(H,{content:P.value?"切换到浅色主题":"切换到深色主题",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-36",onClick:ee},[t(E,{class:"btn-icon"},{default:s(()=>[P.value?(r(),W(a(Uo),{key:0})):(r(),W(a(Go),{key:1}))]),_:1})])]),_:1},8,["content"]),t(H,{content:"Git 操作",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-36 btn-rotate-on-hover",onClick:c[1]||(c[1]=ye=>{var Ne;return(Ne=y.value)==null?void 0:Ne.toggleGitOperationsDrawer()})},[t(E,{class:"btn-icon"},{default:s(()=>[t(a(Fs))]),_:1})])]),_:1})])):Y("",!0),t(cs,{id:"user-info",class:"user-info-card",compact:""},{content:s(()=>[a(d).userName&&a(d).userEmail?(r(),W(H,{key:0,content:a(d).userEmail,placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("span",ru,I(a(d).userName),1)]),_:1},8,["content"])):(r(),$(ke,{key:1},[c[10]||(c[10]=e("span",{class:"user-label"},"用户: ",-1)),c[11]||(c[11]=e("span",{class:"user-warning"},"未配置",-1))],64))]),actions:s(()=>[t(H,{content:"用户设置",placement:"bottom",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-28",onClick:G},[t(E,{class:"btn-icon"},{default:s(()=>[t(a(Mt))]),_:1})])]),_:1})]),_:1})])]),e("main",cu,[v.value?(r(),$("div",fu,[e("div",pu,[t(zn,{ref_key:"gitStatusRef",ref:i,"initial-directory":O.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:N},null,32),a(d).isGitRepo?(r(),$("div",mu,[!a(d).userName||!a(d).userEmail?(r(),W(ce,{key:0,shadow:"hover"},{header:s(()=>c[14]||(c[14]=[e("h2",null,"Git用户未配置",-1)])),default:s(()=>[c[18]||(c[18]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",vu,[c[16]||(c[16]=e("h3",null,"您可以通过以下方式配置：",-1)),c[17]||(c[17]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[M(' git config --global user.name "您的用户名"'),e("br"),M(' git config --global user.email "您的邮箱" ')])],-1)),t(ge,{type:"primary",onClick:G},{default:s(()=>c[15]||(c[15]=[M(" 立即配置 ")])),_:1})])]),_:1})):(r(),W(Cr,{key:1,ref_key:"commitFormRef",ref:y},null,512))])):(r(),$("div",gu,[t(ce,{shadow:"hover"},{header:s(()=>c[19]||(c[19]=[e("h2",null,"Git仓库初始化",-1)])),default:s(()=>[c[20]||(c[20]=e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。",-1)),c[21]||(c[21]=e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")],-1))]),_:1})])),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:me},null,32),a(d).isGitRepo?(r(),$("div",hu,[t(Qr,{ref_key:"logListRef",ref:o},null,512)])):Y("",!0),t(Me,{modelValue:D.value,"onUpdate:modelValue":c[5]||(c[5]=ye=>D.value=ye),title:"创建新分支",size:"small","destroy-on-close":!0,"custom-class":"create-branch-dialog"},{footer:s(()=>[e("div",wu,[e("div",ku,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:c[4]||(c[4]=ye=>D.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:T,disabled:a(d).isCreatingBranch},[a(d).isCreatingBranch?(r(),W(E,{key:1,class:"is-loading"},{default:s(()=>c[24]||(c[24]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(r(),W(E,{key:0},{default:s(()=>[t(a(gt))]),_:1})),c[25]||(c[25]=e("span",null,"创建",-1))],8,$u)])])]),default:s(()=>[e("div",yu,[t(Be,{model:{newBranchName:Q.value,selectedBaseBranch:F.value},"label-position":"top"},{default:s(()=>[t(pe,null,{label:s(()=>[e("div",_u,[t(E,{class:"label-icon"},{default:s(()=>[t(a(Vs))]),_:1}),c[22]||(c[22]=e("span",null,"新分支名称",-1))])]),default:s(()=>[t(he,{modelValue:Q.value,"onUpdate:modelValue":c[2]||(c[2]=ye=>Q.value=ye),placeholder:"请输入新分支名称",class:"modern-input",size:"large",onKeyup:ys(T,["enter"])},null,8,["modelValue"])]),_:1}),t(pe,null,{label:s(()=>[e("div",bu,[t(E,{class:"label-icon"},{default:s(()=>[t(a(Fs))]),_:1}),c[23]||(c[23]=e("span",null,"基于分支",-1))])]),default:s(()=>[t(Te,{modelValue:F.value,"onUpdate:modelValue":c[3]||(c[3]=ye=>F.value=ye),placeholder:"选择基础分支",class:"modern-select",size:"large",style:{width:"100%"}},{default:s(()=>[(r(!0),$(ke,null,je(a(d).allBranches,ye=>(r(),W(de,{key:ye,label:ye,value:ye},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])])]),_:1},8,["modelValue"])])):(r(),$("div",uu,[t(ce,{class:"loading-card"},{default:s(()=>[e("div",du,[t(E,{class:"is-loading"},{default:s(()=>c[12]||(c[12]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),c[13]||(c[13]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Cu,[a(d).currentBranch?(r(),$("div",Su,[t(cs,{class:"branch-wrapper",compact:""},{content:s(()=>[t(H,{content:"当前分支",placement:"top",effect:"dark","show-after":200},{default:s(()=>[e("span",Tu,[t(E,{class:"branch-icon"},{default:s(()=>c[26]||(c[26]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M256 160a96 96 0 1 1 0 192 96 96 0 0 1 0-192zm0 512a96 96 0 1 1 0 192 96 96 0 0 1 0-192zm512-480a96 96 0 1 1 0 192 96 96 0 0 1 0-192zM352 256h288a128 128 0 0 1 128 128v48a144 144 0 0 1-144 144H368a16 16 0 0 0-16 16v64h-96v-64a112 112 0 0 1 112-112h256a80 80 0 0 0 80-80v-16a64 64 0 0 0-64-64H352v-64z"})],-1)])),_:1})])]),_:1}),t(Te,{modelValue:a(d).currentBranch,"onUpdate:modelValue":c[6]||(c[6]=ye=>a(d).currentBranch=ye),onChange:L,loading:a(d).isChangingBranch,class:"branch-select"},{default:s(()=>[(r(!0),$(ke,null,je(a(d).allBranches,ye=>(r(),W(de,{key:ye,label:ye,value:ye},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"])]),actions:s(()=>[e("button",{class:"modern-btn btn-icon-28",onClick:te},[t(E,{class:"btn-icon"},{default:s(()=>[t(a(Vs))]),_:1})])]),_:1})])):Y("",!0),a(d).remoteUrl?(r(),$("div",Lu,[t(cs,{class:"footer-right",compact:""},{content:s(()=>[c[27]||(c[27]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Fu,I(a(d).remoteUrl),1)]),actions:s(()=>[t(H,{content:"复制仓库地址",placement:"top",effect:"dark","show-after":200},{default:s(()=>[e("button",{class:"modern-btn btn-icon-28",onClick:c[7]||(c[7]=ye=>a(d).copyRemoteUrl())},[t(E,{class:"btn-icon"},{default:s(()=>[t(a(ds))]),_:1})])]),_:1})]),_:1})])):Y("",!0)]),t(eu,{modelValue:z.value,"onUpdate:modelValue":c[8]||(c[8]=ye=>z.value=ye)},null,8,["modelValue"])],64)}}}),xu=Ce(Vu,[["__scopeId","data-v-936b8cf1"]]),Ys=Mo(xu);Ys.use(Io());Ys.mount("#app");

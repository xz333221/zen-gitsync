import{d as cs,r as u,o as vt,a as us,E as i,l as As,c as Ve,b as kt,w as Xe,e as h,f as d,F as he,g as e,h as t,i as Ke,j as N,k as M,m as Nt,u as o,n as a,p as ds,q as It,s as fs,t as Re,v as ps,x as vs,y as Dt,z as $t,A as at,B as Ms,C as Jt,D as bt,G as y,H as ms,I as z,J as Wt,K as Le,L as gs,M as Ct,N as Es,O as os,P as ns,Q as Ps,R as zt,S as ye,T as He,U as ft,V as qt,W as Ae,X as Hs,Y as is,Z as Yt,_ as Xt,$ as wt,a0 as yt,a1 as Mt,a2 as Et,a3 as Ft,a4 as Rt,a5 as Bt,a6 as ys,a7 as Is,a8 as Ns,a9 as Kt,aa as hs,ab as Js,ac as _s,ad as ws,ae as Ws,af as qs,ag as Ys,ah as ks,ai as ht,aj as rt,ak as Xs,al as Ks,am as Zs,an as Qs,ao as ea,ap as ta,aq as sa,ar as aa,as as la,at as oa,au as na,av as _t,aw as ia,ax as ra,ay as ca,az as rs,aA as ua,aB as Fe,aC as da,aD as fa}from"./vendor-NGG1cSHQ.js";(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const g of document.querySelectorAll('link[rel="modulepreload"]'))p(g);new MutationObserver(g=>{for(const E of g)if(E.type==="childList")for(const F of E.addedNodes)F.tagName==="LINK"&&F.rel==="modulepreload"&&p(F)}).observe(document,{childList:!0,subtree:!0});function b(g){const E={};return g.integrity&&(E.integrity=g.integrity),g.referrerPolicy&&(E.referrerPolicy=g.referrerPolicy),g.crossOrigin==="use-credentials"?E.credentials="include":g.crossOrigin==="anonymous"?E.credentials="omit":E.credentials="same-origin",E}function p(g){if(g.ep)return;g.ep=!0;const E=b(g);fetch(g.href,E)}})();const Pt=800;function pa(){const pe="3002";return console.log(`从环境变量读取后端端口: ${pe}`),parseInt(pe,10)}const va=pa(),pt=cs("git",()=>{const pe=u(""),c=u([]),b=u(""),p=u(""),g=u(!1),E=u(!1),F=u(!1),A=u(0),P=u(""),de=u(!1),O=u(!1),Q=u(!1),se=u(!1),ae=u(!1),K=u(0),re=u(0),X=u(!1),V=u(""),L=u(0),j=u(0),q=u(!0),G=u(null),U=u([]),ee=u({staged:[],unstaged:[],untracked:[]}),ce=u([]),k=u(!1),x=u(!1),H=u(!1),J=u(!1),le=u(!1),$=u([]),m=u(!1),Z=u(!1),T=u(!1),R=u(!1);function ne(){pe.value="",c.value=[],b.value="",p.value="",g.value=!1,E.value=!1,F.value=!1,A.value=0,K.value=0,re.value=0,X.value=!1,V.value="",L.value=0,j.value=0,O.value=!1,Q.value=!1,se.value=!1,ae.value=!1,P.value="",de.value=!1,U.value=[],ee.value={staged:[],unstaged:[],untracked:[]},ce.value=[],k.value=!1,x.value=!1,H.value=!1,J.value=!1,le.value=!1}async function fe(n=!1,l=!1){if(!F.value)return;const v=Date.now();if(!n&&!l&&v-L.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let _="/api/branch-status";const oe=[];n&&oe.push("force=true"),l&&oe.push("countOnly=true"),oe.length>0&&(_+="?"+oe.join("&"));const ve=await(await fetch(_)).json();ve&&(K.value=ve.ahead||0,re.value=ve.behind||0,X.value=ve.hasUpstream||!1,V.value=ve.upstreamBranch||"",L.value=v,console.log(`分支状态更新：领先 ${K.value} 个提交，落后 ${re.value} 个提交，上游分支：${X.value?V.value:"无"}`))}catch(_){console.error("获取分支状态失败:",_),K.value=0,re.value=0,X.value=!1,V.value=""}}async function ke(){const n=Date.now();if(n-A.value<1e3)return console.log("使用缓存的Git仓库状态:",F.value?"是":"不是"),F.value;try{const v=await(await fetch("/api/current_directory")).json();return F.value=v.isGitRepo===!0,A.value=n,console.log(`当前目录${F.value?"是":"不是"}Git仓库`),F.value}catch(l){return console.error("检查Git仓库状态失败:",l),F.value=!1,A.value=n,!1}}async function Be(n=!1){try{const _=await(await fetch(n?"/api/branch?force=true":"/api/branch")).json();_.branch&&(pe.value=_.branch,console.log(`当前分支更新为: ${_.branch}${n?" (强制刷新)":""}`))}catch(l){console.error("获取分支信息失败:",l)}}async function Se(){if(F.value)try{console.log("获取所有分支...");const l=await(await fetch("/api/branches")).json();l.branches&&Array.isArray(l.branches)&&(c.value=l.branches,j.value=Date.now(),console.log(`获取到${l.branches.length}个分支`))}catch(n){console.error("获取所有分支信息失败:",n)}}async function S(n){console.log("切换到分支:",n);try{g.value=!0;const v=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:n})})).json();return v.success?(i({message:`已切换到分支: ${n}`,type:"success"}),await Be(!0),await fe(!0),!0):(i({message:`切换分支失败: ${v.error}`,type:"error"}),!1)}catch(l){return i({message:`切换分支失败: ${l.message}`,type:"error"}),!1}finally{g.value=!1}}async function me(){try{const l=await(await fetch("/api/user-info")).json();l.name&&l.email&&(b.value=l.name,p.value=l.email)}catch(n){console.error("获取用户信息失败:",n)}}async function Ie(n,l){if(!n.trim())return i({message:"分支名称不能为空",type:"warning"}),!1;try{E.value=!0;const _=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:n,baseBranch:l||pe.value})})).json();return _.success?(i({message:`已创建并切换到分支: ${n}`,type:"success"}),await Be(!0),await fe(!0),await Se(),!0):(i({message:`创建分支失败: ${_.error}`,type:"error"}),!1)}catch(v){return i({message:`创建分支失败: ${v.message}`,type:"error"}),!1}finally{E.value=!1}}async function Ge(){try{const l=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return l.success?(b.value="",p.value="",i({message:"已清除Git用户配置",type:"success"}),!0):(i({message:`清除配置失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`清除配置失败: ${n.message}`,type:"error"}),!1}}async function ze(n,l){try{const _=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:n,email:l})})).json();return _.success?(b.value=n,p.value=l,i({message:"已恢复Git用户配置",type:"success"}),!0):(i({message:`恢复配置失败: ${_.error}`,type:"error"}),!1)}catch(v){return i({message:`恢复配置失败: ${v.message}`,type:"error"}),!1}}async function Te(){if(!F.value)return i({message:"当前目录不是Git仓库",type:"warning"}),!1;try{Q.value=!0;const l=await(await fetch("/api/pull",{method:"POST"})).json();return l.success?(i({message:"拉取成功",type:"success"}),await fe(),!0):(l.needsMerge?i({message:`需要合并更改: ${l.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):i({message:`拉取失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`拉取失败: ${n.message}`,type:"error"}),!1}finally{Q.value=!1}}async function Ne(){if(!F.value)return i({message:"当前目录不是Git仓库",type:"warning"}),!1;try{se.value=!0;const l=await(await fetch("/api/fetch-all",{method:"POST"})).json();return l.success?(i({message:"获取所有远程分支信息成功",type:"success"}),await fe(),!0):(i({message:`获取远程分支信息失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`获取远程分支信息失败: ${n.message}`,type:"error"}),!1}finally{se.value=!1}}function je(){G.value&&G.value.disconnect();try{const n=`http://localhost:${va}`;if(console.log("尝试连接Socket.IO服务器:",n),G.value=As(n,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!G.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO初始化成功，socket ID:",G.value.id||"未连接"),G.value.on("connect",()=>{console.log("成功连接到Socket.IO服务器"),q.value&&G.value&&G.value.emit("start_monitoring")}),G.value.on("disconnect",l=>{console.log("与Socket.IO服务器断开连接:",l)}),G.value.on("git_status_update",l=>{q.value&&(console.log("收到Git状态更新通知:",new Date().toLocaleTimeString()),l.porcelain!==void 0&&Je(l.porcelain))}),G.value.on("monitoring_status",l=>{console.log("文件监控状态:",l.active?"已启动":"已停止")}),G.value.on("connect_error",l=>{console.error("Socket连接错误:",l.message)}),G.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),G.value.on("reconnect",l=>{var v;console.log(`Socket重连成功，尝试次数: ${l}`),q.value&&(console.log("重连后重新发送start_monitoring请求"),(v=G.value)==null||v.emit("start_monitoring"))}),G.value.on("reconnect_attempt",l=>{console.log(`Socket尝试重连，第 ${l} 次尝试`)}),G.value.on("reconnect_error",l=>{console.error("Socket重连错误:",l.message)}),G.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),G.value&&!G.value.connected&&(console.log("Socket未连接，尝试手动连接..."),G.value.connect())}catch(n){console.error("Socket.IO连接初始化失败:",n)}}function ie(){if(console.log("toggleAutoUpdate调用，当前值:",q.value),!G.value){console.error("无法切换自动更新状态: socket连接不存在"),i.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),je(),localStorage.setItem("zen-gitsync-auto-update",q.value.toString());return}try{q.value?(console.log("发送start_monitoring命令..."),G.value.emit("start_monitoring"),i.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),G.value.emit("stop_monitoring"),i.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",q.value.toString()),console.log("已保存自动更新设置到本地存储:",q.value)}catch(n){console.error("切换自动更新状态时出错:",n),i.error(`切换自动更新失败: ${n.message}`)}}function Je(n){if(n===void 0||n===""){ce.value=[];return}const l=n.split(`
`),v=[];for(const _ of l){const oe=_.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(oe){let te="";const ve=oe[1],D=ve.charAt(0),we=ve.charAt(1);D==="A"||D==="M"||D==="D"||D==="R"?te="added":D===" "&&we==="M"?te="modified":D===" "&&we==="D"?te="deleted":ve==="??"?te="untracked":te="other",v.push({path:oe[2],type:te})}}ce.value=v}async function Me(n=!0){if(!F.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{k.value=!0,console.log("开始加载提交历史...");const l=new Date().getTime(),_=await(await fetch(`/api/log?page=1&_t=${l}`)).json();_&&_.data&&Array.isArray(_.data)?(U.value=[..._.data],console.log(`提交历史加载完成，共 ${U.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",_),U.value=[])}catch(l){console.error("获取提交历史失败:",l),n&&i({message:`获取提交历史失败: ${l.message}`,type:"error"})}finally{k.value=!1}}async function w(){if(!F.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{x.value=!0,await r()}catch(n){console.error("获取Git状态失败:",n),i({message:`获取Git状态失败: ${n.message}`,type:"error"})}finally{x.value=!1}}async function r(){if(console.log("开始获取Git状态(porcelain格式)..."),!F.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const l=await(await fetch("/api/status_porcelain")).json();l.status!==void 0?Je(l.status):ce.value=[]}catch(n){console.error("获取Git状态(porcelain)失败:",n),i({message:`获取Git状态(porcelain)失败: ${n.message}`,type:"error"}),ce.value=[]}}async function W(){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{H.value=!0;const l=await(await fetch("/api/add",{method:"POST"})).json();return l.success?(i({message:"文件已添加到暂存区",type:"success"}),!0):(i({message:`添加文件失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`添加文件失败: ${n.message}`,type:"error"}),!1}finally{H.value=!1}}async function I(n){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{H.value=!0;const v=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:n})})).json();return v.success?(i({message:"文件已暂存",type:"success"}),w(),!0):(i({message:`暂存文件失败: ${v.error}`,type:"error"}),!1)}catch(l){return i({message:`暂存文件失败: ${l.message}`,type:"error"}),!1}finally{H.value=!1}}async function $e(n){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const v=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:n})})).json();return v.success?(i({message:"已取消暂存文件",type:"success"}),w(),!0):(i({message:`取消暂存失败: ${v.error}`,type:"error"}),!1)}catch(l){return i({message:`取消暂存失败: ${l.message}`,type:"error"}),!1}finally{le.value=!1}}function xe(n){return new Promise(l=>setTimeout(l,n))}async function ue(n,l=!1){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{J.value=!0;const _=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n,hasNewlines:n.includes(`
`),noVerify:l})})).json();return _.success?(i({message:"提交成功",type:"success"}),!0):(i({message:`commitChanges 提交失败: ${_.error}`,type:"error"}),!1)}catch(v){return i({message:`提交失败: ${v.message}`,type:"error"}),!1}finally{J.value=!1}}async function ge(){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{O.value=!0;const l=await(await fetch("/api/push",{method:"POST"})).json();return l.success?(i({message:"推送成功",type:"success"}),K.value=0,re.value=0,await Promise.all([w(),Me()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(i({message:`推送失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`推送失败: ${n.message}`,type:"error"}),!1}finally{O.value=!1}}async function De(n,l={}){if(!F.value)return i({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!n)return i({message:"请选择要合并的分支",type:"warning"}),!1;if(n===pe.value)return i({message:"不能合并当前分支到自身",type:"warning"}),!1;try{ae.value=!0;const v=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:n,...l})}),_=await v.json();return v.status===409?(i({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):_.success?(i({message:`成功合并分支 ${n} 到 ${pe.value}`,type:"success"}),await w(),await fe(),!0):(i({message:`合并分支失败: ${_.error}`,type:"error"}),!1)}catch(v){return i({message:`合并分支失败: ${v.message}`,type:"error"}),!1}finally{ae.value=!1}}async function be(n,l=!1){if(console.log("开始暂存并提交操作..."),!await W())return!1;console.log("暂存完成，等待Git操作完成..."),await xe(Pt),console.log("开始提交更改...");const _=await ue(n,l);return console.log("暂存并提交操作完成"),_}async function _e(n,l=!1){try{if(console.log("开始暂存文件..."),!await W()||(console.log("暂存完成，等待Git操作完成..."),await xe(Pt),console.log("开始提交更改..."),!await ue(n,l)))return!1;console.log("提交完成，等待Git操作完成..."),await xe(Pt),console.log("开始推送到远程...");const oe=await ge();return console.log("一键推送操作完成，状态已统一刷新"),oe}catch(v){console.error("一键推送操作失败:",v);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&i({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch(_){console.error("清理锁定文件失败:",_)}i({message:`操作失败: ${v.message}`,type:"error"});try{await Promise.all([w(),Me(),fe()])}catch(_){console.error("刷新状态失败:",_)}return!1}}async function lt(){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const l=await(await fetch("/api/reset-head",{method:"POST"})).json();return l.success?(i({message:"已重置暂存区",type:"success"}),w(),!0):(i({message:`重置暂存区失败: ${l.error}`,type:"error"}),!1)}catch(n){return i({message:`重置暂存区失败: ${n.message}`,type:"error"}),!1}finally{le.value=!1}}async function Ze(n){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const v=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:n})})).json();return v.success?(i({message:`已重置分支 ${n} 到远程状态`,type:"success"}),w(),Me(),!0):(i({message:`重置分支失败: ${v.error}`,type:"error"}),!1)}catch(l){return i({message:`重置分支失败: ${l.message}`,type:"error"}),!1}finally{le.value=!1}}async function Y(){if(F.value)try{de.value=!0,console.log("获取远程仓库地址...");const l=await(await fetch("/api/remote-url")).json();l.success?(P.value=l.url||"",console.log(`获取到远程仓库地址: ${P.value}`)):(console.warn("获取远程仓库地址失败:",l.error),P.value="")}catch(n){console.error("获取远程仓库地址失败:",n),P.value=""}finally{de.value=!1}}async function qe(){if(!P.value)return i({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(P.value),i({message:"已复制远程仓库地址",type:"success"}),!0}catch(n){return console.error("复制远程仓库地址失败:",n),i({message:`复制失败: ${n.message}`,type:"error"}),!1}}vt(()=>{const n=localStorage.getItem("zen-gitsync-auto-update");n!==null&&(q.value=n==="true"),je()});function Ye(){G.value&&(G.value.disconnect(),G.value=null)}us(()=>{Ye()});async function Ee(){if(!F.value)return i.warning("当前目录不是Git仓库"),[];try{m.value=!0;const l=await(await fetch("/api/stash-list")).json();return l.success?($.value=l.stashes,l.stashes):(i.error(`获取stash列表失败: ${l.error}`),[])}catch(n){return console.error("获取stash列表失败:",n),i.error(`获取stash列表失败: ${n.message}`),[]}finally{m.value=!1}}async function ot(n,l=!1){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{R.value=!0;const _=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n,includeUntracked:l})})).json();return _.success?(i.success(_.message),await Ee(),await w(),!0):(i.warning(_.message),!1)}catch(v){return console.error("保存stash失败:",v),i.error(`保存stash失败: ${v.message}`),!1}finally{R.value=!1}}async function nt(n,l=!1){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{Z.value=!0;const v=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:n,pop:l})}),_=await v.json();return v.status===409?(i.warning("应用stash时发生冲突，请手动解决"),!1):_.success?(i.success(_.message),await Ee(),await w(),!0):(i.error(`应用stash失败: ${_.error}`),!1)}catch(v){return console.error("应用stash失败:",v),i.error(`应用stash失败: ${v.message}`),!1}finally{Z.value=!1}}async function Oe(n){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{T.value=!0;const v=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:n})})).json();return v.success?(i.success(v.message),await Ee(),!0):(i.error(`删除stash失败: ${v.error}`),!1)}catch(l){return console.error("删除stash失败:",l),i.error(`删除stash失败: ${l.message}`),!1}finally{T.value=!1}}async function mt(){if(!F.value)return i.warning("当前目录不是Git仓库"),!1;try{T.value=!0;const l=await(await fetch("/api/stash-clear",{method:"POST"})).json();return l.success?(i.success(l.message),$.value=[],!0):(i.error(`清空stash失败: ${l.error}`),!1)}catch(n){return console.error("清空stash失败:",n),i.error(`清空stash失败: ${n.message}`),!1}finally{T.value=!1}}return{currentBranch:pe,allBranches:c,userName:b,userEmail:p,isChangingBranch:g,isCreatingBranch:E,isGitRepo:F,lastCheckedTime:A,branchAhead:K,branchBehind:re,hasUpstream:X,upstreamBranch:V,lastBranchStatusTime:L,lastBranchesTime:j,remoteUrl:P,isLoadingRemoteUrl:de,stashes:$,isLoadingStashes:m,isApplyingStash:Z,isDroppingStash:T,isSavingStash:R,log:U,status:ee,fileList:ce,isLoadingLog:k,isLoadingStatus:x,isAddingFiles:H,isCommiting:J,isResetting:le,autoUpdateEnabled:q,isPushing:O,isGitPulling:Q,isGitFetching:se,isGitMerging:ae,$reset:ne,checkGitRepo:ke,getCurrentBranch:Be,getAllBranches:Se,changeBranch:S,getUserInfo:me,createBranch:Ie,clearUserConfig:Ge,restoreUserConfig:ze,getBranchStatus:fe,gitPull:Te,gitFetchAll:Ne,initSocketConnection:je,toggleAutoUpdate:ie,parseStatusPorcelain:Je,fetchLog:Me,fetchStatus:w,fetchStatusPorcelain:r,addToStage:W,addFileToStage:I,unstageFile:$e,commitChanges:ue,pushToRemote:ge,addAndCommit:be,addCommitAndPush:_e,resetHead:lt,resetToRemote:Ze,getRemoteUrl:Y,copyRemoteUrl:qe,mergeBranch:De,getStashList:Ee,saveStash:ot,applyStash:nt,dropStash:Oe,clearAllStashes:mt,socket:G,disconnectSocket:Ye}}),Zt=cs("config",()=>{const pe=u(""),c=u([]),b=u([]),p=u([]),g=u([]),E=u(!1),F=u(!1),A=Ve(()=>({defaultCommitMessage:pe.value,descriptionTemplates:c.value,scopeTemplates:b.value,messageTemplates:p.value,lockedFiles:g.value}));async function P(){if(F.value&&!E.value)return console.log("使用缓存的配置信息"),A.value;try{E.value=!0,console.log("加载配置信息...");const L=await(await fetch("/api/config/getConfig")).json();return pe.value=L.defaultCommitMessage||"",c.value=L.descriptionTemplates||[],b.value=L.scopeTemplates||[],p.value=L.messageTemplates||[],g.value=L.lockedFiles||[],F.value=!0,console.log("配置信息加载完成"),A.value}catch(V){return console.error("加载配置失败:",V),i.error(`加载配置失败: ${V.message}`),null}finally{E.value=!1}}async function de(V){try{const j=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:V})})).json();return j.success?(pe.value=V,i.success("默认提交信息已保存"),!0):(i.error(`保存失败: ${j.error}`),!1)}catch(L){return i.error(`保存失败: ${L.message}`),!1}}async function O(V,L){try{const q=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:L})})).json();return q.success?(L==="description"?c.value.includes(V)||c.value.push(V):L==="scope"?b.value.includes(V)||b.value.push(V):L==="message"&&(p.value.includes(V)||p.value.push(V)),i.success("模板已保存"),!0):(i.error(`保存模板失败: ${q.error}`),!1)}catch(j){return i.error(`保存模板失败: ${j.message}`),!1}}async function Q(V,L){try{const q=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:L})})).json();return q.success?(L==="description"?c.value=c.value.filter(G=>G!==V):L==="scope"?b.value=b.value.filter(G=>G!==V):L==="message"&&(p.value=p.value.filter(G=>G!==V)),i.success("模板已删除"),!0):(i.error(`删除模板失败: ${q.error}`),!1)}catch(j){return i.error(`删除模板失败: ${j.message}`),!1}}async function se(V,L,j){try{const G=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:V,newTemplate:L,type:j})})).json();if(G.success){if(j==="description"){const U=c.value.indexOf(V);U!==-1&&(c.value[U]=L)}else if(j==="scope"){const U=b.value.indexOf(V);U!==-1&&(b.value[U]=L)}else if(j==="message"){const U=p.value.indexOf(V);U!==-1&&(p.value[U]=L)}return i.success("模板已更新"),!0}else return i.error(`更新模板失败: ${G.error}`),!1}catch(q){return i.error(`更新模板失败: ${q.message}`),!1}}async function ae(){try{const L=await(await fetch("/api/locked-files")).json();return L.success?(g.value=L.lockedFiles||[],L.lockedFiles):(i.error(`加载锁定文件列表失败: ${L.error}`),[])}catch(V){return console.error("加载锁定文件列表失败:",V),i.error(`加载锁定文件列表失败: ${V.message}`),[]}}async function K(V){try{const j=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return j.success?(await ae(),i.success(`文件已锁定: ${V}`),!0):(i.error(`锁定文件失败: ${j.error}`),!1)}catch(L){return console.error("锁定文件失败:",L),i.error(`锁定文件失败: ${L.message}`),!1}}async function re(V){try{const j=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return j.success?(await ae(),i.success(`文件已解锁: ${V}`),!0):(i.error(`解锁文件失败: ${j.error}`),!1)}catch(L){return console.error("解锁文件失败:",L),i.error(`解锁文件失败: ${L.message}`),!1}}async function X(V){try{const j=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return j.success?j.isLocked:(console.error("检查文件锁定状态失败:",j.error),!1)}catch(L){return console.error("检查文件锁定状态失败:",L),!1}}return{defaultCommitMessage:pe,descriptionTemplates:c,scopeTemplates:b,messageTemplates:p,lockedFiles:g,isLoading:E,isLoaded:F,config:A,loadConfig:P,saveDefaultMessage:de,saveTemplate:O,deleteTemplate:Q,updateTemplate:se,loadLockedFiles:ae,lockFile:K,unlockFile:re,isFileLocked:X}}),ma={class:"card"},ga={class:"status-header"},ya={class:"header-actions"},ha=["element-loading-text"],_a={key:0,class:"status-box"},wa={key:1,class:"status-box-wrap"},ka={key:0,class:"branch-status-info"},$a={class:"branch-sync-status"},ba={class:"sync-status-content"},Ca={class:"status-badges"},Sa={class:"badge-content"},Ta={class:"badge-content"},xa={key:1,class:"file-list-container"},Va={key:0,class:"file-group"},La={class:"file-list"},za=["onClick"],Ba={class:"file-info"},Ga={class:"file-path-container"},Da={class:"file-directory"},Fa={class:"file-actions"},Ra={key:1,class:"file-group"},ja={class:"file-list"},Oa=["onClick"],Ua={class:"file-info"},Aa={class:"file-path-container"},Ma={class:"file-directory"},Ea={class:"file-actions"},Pa={key:2,class:"file-group"},Ha={class:"file-list"},Ia=["onClick"],Na={class:"file-info"},Ja={class:"file-path-container"},Wa={class:"file-directory"},qa={class:"file-actions"},Ya={key:2,class:"empty-status"},Xa={class:"empty-icon"},Ka={class:"diff-content"},Za=["innerHTML"],Qa={key:1,class:"no-diff"},el={class:"file-navigation"},tl={class:"file-counter"},sl={class:"lock-feature-description"},al={class:"description-header"},ll={key:0,class:"empty-locked-files"},ol={class:"empty-icon"},nl={key:1,class:"locked-files-list"},il={class:"locked-files-header"},rl={class:"locked-file-items"},cl={class:"file-info"},ul={class:"file-path-container"},dl={class:"file-name"},fl={class:"file-directory"},pl={class:"file-actions"},vl={class:"dialog-footer"},ml=kt({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(pe,{expose:c}){const b=pe,p=pt(),g=Zt(),E=Ve(()=>p.isLoadingStatus),F=u(""),A=u(""),P=u(!1),de=u(!1),O=u(-1),Q=u(!1),se=u(b.initialDirectory||"");async function ae(){try{if(!se.value){const m=await(await fetch("/api/current_directory")).json();se.value=m.directory||"未知目录"}if(!p.isGitRepo)return;await p.fetchStatus(),await p.getBranchStatus(),i({message:"Git 状态已刷新",type:"success"})}catch($){i({message:"刷新失败: "+$.message,type:"error"})}}function K($){if(!$)return"";const m=$.split(`
`);function Z(T){return T.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return m.map(T=>{const R=Z(T);return T.startsWith("diff --git")?`<div class="diff-header">${R}</div>`:T.startsWith("---")?`<div class="diff-old-file">${R}</div>`:T.startsWith("+++")?`<div class="diff-new-file">${R}</div>`:T.startsWith("@@")?`<div class="diff-hunk-header">${R}</div>`:T.startsWith("+")?`<div class="diff-added">${R}</div>`:T.startsWith("-")?`<div class="diff-removed">${R}</div>`:`<div class="diff-context">${R}</div>`}).join("")}async function re($){try{de.value=!0,F.value=$,O.value=p.fileList.findIndex(Z=>Z.path===$);const m=p.fileList[O.value];if(m&&m.type==="untracked"){try{const T=await(await fetch(`/api/file-content?file=${encodeURIComponent($)}`)).json();T.success&&T.content?A.value=`diff --git a/${$} b/${$}
新文件: ${$}
--- /dev/null
+++ b/${$}
@@ -0,0 +1,${T.content.split(`
`).length} @@
`+T.content.split(`
`).map(R=>`+${R}`).join(`
`):A.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(Z){console.error("获取未跟踪文件内容失败:",Z),A.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}P.value=!0}else if(m&&m.type==="added"){const T=await(await fetch(`/api/diff-cached?file=${encodeURIComponent($)}`)).json();A.value=T.diff||"没有变更",P.value=!0}else{const T=await(await fetch(`/api/diff?file=${encodeURIComponent($)}`)).json();A.value=T.diff||"没有变更",P.value=!0}}catch(m){i({message:"获取文件差异失败: "+m.message,type:"error"}),A.value="获取差异失败: "+m.message}finally{de.value=!1}}async function X(){if(p.fileList.length===0||O.value<=0)return;const $=O.value-1,m=p.fileList[$];await re(m.path)}async function V(){if(p.fileList.length===0||O.value>=p.fileList.length-1)return;const $=O.value+1,m=p.fileList[$];await re(m.path)}function L($){re($.path)}async function j($){await p.addFileToStage($)}async function q($){await p.unstageFile($)}async function G(){await U()}async function U(){try{if(!p.isGitRepo)return;await p.fetchStatus(),i({message:"Git 文件状态已刷新",type:"success"})}catch($){i({message:"刷新失败: "+$.message,type:"error"})}}async function ee(){try{await p.gitPull(),await ae()}catch($){console.error("拉取操作发生错误:",$)}}async function ce(){try{await p.gitFetchAll(),await ae()}catch($){console.error("获取远程分支信息操作发生错误:",$)}}async function k($){try{await Ae.confirm(`确定要撤回文件 "${$}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const Z=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:$})})).json();Z.success?(i.success("已撤回文件修改"),await ae()):i.error(Z.error?`撤回失败: ${Z.error}`:"撤回文件修改失败，请重试")}catch(m){if(m==="cancel"||m.message==="cancel")return;const Z=m.message||"未知错误";Z!=="undefined"?i.error(`撤回文件修改失败: ${Z}`):i.error("撤回文件修改失败，请重试")}}function x($){const m=$.split("/");return m[m.length-1]}function H($){const m=$.split("/");return m.length<=1?"":m.slice(0,-1).join("/")}function J($){const m=$.replace(/\\/g,"/"),Z=g.lockedFiles.some(T=>{const R=T.replace(/\\/g,"/");return m===R});return($==="test/2.txt"||$==="2.txt")&&console.log("检查文件锁定状态:",{filePath:$,normalizedPath:m,lockedFiles:g.lockedFiles,normalizedLockedFiles:g.lockedFiles.map(T=>T.replace(/\\/g,"/")),isLocked:Z}),Z}async function le($){J($)?await g.unlockFile($):await g.lockFile($)}return vt(()=>{ae(),g.loadConfig(),g.loadLockedFiles()}),Xe(()=>p.autoUpdateEnabled,($,m)=>{console.log(`自动更新状态变更: ${m} -> ${$}`),p.toggleAutoUpdate()},{immediate:!1}),c({refreshStatus:G}),($,m)=>{const Z=ds,T=Nt,R=Re,ne=$t,fe=bt,ke=Ct,Be=Ps,Se=Jt;return d(),h(he,null,[e("div",ma,[e("div",ga,[m[5]||(m[5]=e("h2",null,"Git 状态",-1)),e("div",ya,[t(T,{content:o(p).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3},{default:a(()=>[t(Z,{modelValue:o(p).autoUpdateEnabled,"onUpdate:modelValue":m[0]||(m[0]=S=>o(p).autoUpdateEnabled=S),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":o(fs),"inactive-icon":o(It),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(T,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"primary",icon:o(ps),circle:"",size:"small",onClick:ee,loading:o(p).isGitPulling,disabled:!o(p).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(T,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3},{default:a(()=>[Ke(t(R,{type:"primary",icon:o(vs),circle:"",size:"small",onClick:ce,loading:o(p).isGitFetching},null,8,["icon","loading"]),[[Dt,!1]])]),_:1}),o(g).lockedFiles.length>0?(d(),N(T,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"warning",circle:"",size:"small",onClick:m[1]||(m[1]=S=>Q.value=!0)},{default:a(()=>[t(ne,null,{default:a(()=>[t(o(at))]),_:1})]),_:1})]),_:1})):M("",!0),t(T,{content:"刷新状态",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"primary",icon:o(Ms),circle:"",size:"small",onClick:G,loading:E.value},null,8,["icon","loading"])]),_:1})])]),Ke((d(),h("div",{class:"card-content","element-loading-text":o(p).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[o(p).isGitRepo?(d(),h("div",wa,[o(p).hasUpstream&&(o(p).branchAhead>0||o(p).branchBehind>0)?(d(),h("div",ka,[e("div",$a,[e("div",ba,[t(T,{content:"本地分支与远程分支的状态对比",placement:"top"},{default:a(()=>[e("div",Ca,[o(p).branchAhead>0?(d(),N(fe,{key:0,size:"small",type:"warning",class:"status-badge"},{default:a(()=>[e("span",Sa,[t(ne,null,{default:a(()=>[t(o(ms))]),_:1}),y(" 你的分支领先 'origin/"+z(o(p).currentBranch)+"' "+z(o(p).branchAhead)+" 个提交 ",1)])]),_:1})):M("",!0),o(p).branchBehind>0?(d(),N(fe,{key:1,size:"small",type:"info",class:"status-badge"},{default:a(()=>[e("span",Ta,[t(ne,null,{default:a(()=>[t(o(Wt))]),_:1}),y(" 你的分支落后 'origin/"+z(o(p).currentBranch)+"' "+z(o(p).branchBehind)+" 个提交 ",1)])]),_:1})):M("",!0)])]),_:1})])])])):M("",!0),o(p).fileList.length?(d(),h("div",xa,[o(p).fileList.some(S=>S.type==="added")?(d(),h("div",Va,[m[8]||(m[8]=e("div",{class:"file-group-header"},"已暂存的更改",-1)),e("div",La,[(d(!0),h(he,null,Le(o(p).fileList.filter(S=>S.type==="added"),S=>(d(),h("div",{key:S.path,class:"file-item",onClick:me=>L(S)},[e("div",Ba,[e("div",{class:ye(["file-status-indicator",["added",{locked:J(S.path)}]])},null,2),e("div",Ga,[e("span",{class:ye(["file-name",{"locked-file-name":J(S.path)}])},[y(z(x(S.path))+" ",1),J(S.path)?(d(),N(ne,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(at))]),_:1})):M("",!0)],2),e("span",Da,z(H(S.path)),1)])]),e("div",Fa,[t(T,{content:J(S.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:J(S.path)?"danger":"info",size:"small",circle:"",onClick:He(me=>le(S.path),["stop"])},{default:a(()=>[t(ne,null,{default:a(()=>[(d(),N(ft(J(S.path)?o(at):o(zt))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(T,{content:"取消暂存",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"warning",size:"small",circle:"",onClick:He(me=>q(S.path),["stop"])},{default:a(()=>m[7]||(m[7]=[y("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,za))),128))])])):M("",!0),o(p).fileList.some(S=>S.type==="modified"||S.type==="deleted")?(d(),h("div",Ra,[m[10]||(m[10]=e("div",{class:"file-group-header"},"未暂存的更改",-1)),e("div",ja,[(d(!0),h(he,null,Le(o(p).fileList.filter(S=>S.type==="modified"||S.type==="deleted"),S=>(d(),h("div",{key:S.path,class:"file-item",onClick:me=>L(S)},[e("div",Ua,[e("div",{class:ye(["file-status-indicator",[S.type,{locked:J(S.path)}]])},null,2),e("div",Aa,[e("span",{class:ye(["file-name",{"locked-file-name":J(S.path)}])},[y(z(x(S.path))+" ",1),J(S.path)?(d(),N(ne,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(at))]),_:1})):M("",!0)],2),e("span",Ma,z(H(S.path)),1)])]),e("div",Ea,[t(T,{content:J(S.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:J(S.path)?"danger":"info",size:"small",circle:"",onClick:He(me=>le(S.path),["stop"])},{default:a(()=>[t(ne,null,{default:a(()=>[(d(),N(ft(J(S.path)?o(at):o(zt))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(T,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"success",size:"small",circle:"",onClick:He(me=>j(S.path),["stop"])},{default:a(()=>m[9]||(m[9]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),t(T,{content:"撤回修改",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"danger",size:"small",icon:o(qt),circle:"",onClick:He(me=>k(S.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,Oa))),128))])])):M("",!0),o(p).fileList.some(S=>S.type==="untracked")?(d(),h("div",Pa,[m[12]||(m[12]=e("div",{class:"file-group-header"},"未跟踪的文件",-1)),e("div",Ha,[(d(!0),h(he,null,Le(o(p).fileList.filter(S=>S.type==="untracked"),S=>(d(),h("div",{key:S.path,class:"file-item",onClick:me=>L(S)},[e("div",Na,[e("div",{class:ye(["file-status-indicator",["untracked",{locked:J(S.path)}]])},null,2),e("div",Ja,[e("span",{class:ye(["file-name",{"locked-file-name":J(S.path)}])},[y(z(x(S.path))+" ",1),J(S.path)?(d(),N(ne,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(at))]),_:1})):M("",!0)],2),e("span",Wa,z(H(S.path)),1)])]),e("div",qa,[t(T,{content:J(S.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:J(S.path)?"danger":"info",size:"small",circle:"",onClick:He(me=>le(S.path),["stop"])},{default:a(()=>[t(ne,null,{default:a(()=>[(d(),N(ft(J(S.path)?o(at):o(zt))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(T,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"success",size:"small",circle:"",onClick:He(me=>j(S.path),["stop"])},{default:a(()=>m[11]||(m[11]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),t(T,{content:"删除文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"danger",size:"small",icon:o(It),circle:"",onClick:He(me=>k(S.path),["stop"])},null,8,["icon","onClick"])]),_:2},1024)])],8,Ia))),128))])])):M("",!0)])):o(p).isGitRepo?(d(),h("div",Ya,[e("div",Xa,[t(ne,null,{default:a(()=>[t(o(gs))]),_:1})]),m[13]||(m[13]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),m[14]||(m[14]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):M("",!0)])):(d(),h("div",_a,m[6]||(m[6]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,ha)),[[Se,o(p).isGitPulling||o(p).isGitFetching]])]),t(ke,{modelValue:P.value,"onUpdate:modelValue":m[2]||(m[2]=S=>P.value=S),title:`文件差异: ${F.value}`,width:"80%","destroy-on-close":"",class:"diff-dialog"},{footer:a(()=>[e("div",el,[t(R,{type:"primary",icon:o(Es),onClick:X,disabled:O.value<=0||o(p).fileList.length===0,plain:"",class:"nav-button"},{default:a(()=>m[15]||(m[15]=[y(" 上一个文件 ")])),_:1},8,["icon","disabled"]),e("div",tl,[t(fe,{type:"info",effect:"plain",class:"counter-tag"},{default:a(()=>[y(z(O.value+1)+" / "+z(o(p).fileList.length),1)]),_:1})]),t(R,{type:"primary",icon:o(os),onClick:V,disabled:O.value>=o(p).fileList.length-1||o(p).fileList.length===0,plain:"",class:"nav-button"},{icon:a(()=>[t(ne,{class:"el-icon--right"},{default:a(()=>[t(o(os))]),_:1})]),default:a(()=>[m[16]||(m[16]=y(" 下一个文件 "))]),_:1},8,["icon","disabled"])])]),default:a(()=>[Ke((d(),h("div",Ka,[A.value?(d(),h("div",{key:0,innerHTML:K(A.value),class:"diff-formatted"},null,8,Za)):(d(),h("div",Qa,"该文件没有差异或是新文件"))])),[[Se,de.value]])]),_:1},8,["modelValue","title"]),t(ke,{modelValue:Q.value,"onUpdate:modelValue":m[4]||(m[4]=S=>Q.value=S),title:"锁定文件管理",width:"700px","destroy-on-close":""},{footer:a(()=>[e("span",vl,[t(R,{onClick:m[3]||(m[3]=S=>Q.value=!1)},{default:a(()=>m[22]||(m[22]=[y("关闭")])),_:1})])]),default:a(()=>[e("div",sl,[e("div",al,[t(ne,{class:"description-icon"},{default:a(()=>[t(o(ns))]),_:1}),m[17]||(m[17]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),m[18]||(m[18]=e("div",{class:"description-content"},[e("p",null,[e("strong",null,"🔒 锁定文件的作用：")]),e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区"),e("li",null,"适用于临时文件、配置文件、或不想提交的开发中文件"),e("li",null,"锁定状态会持久保存，直到手动解锁")]),e("p",null,[e("strong",null,"💡 使用场景：")]),e("ul",null,[e("li",null,"开发过程中的临时测试文件"),e("li",null,"本地配置文件（如数据库连接、API密钥等）"),e("li",null,"正在开发但还不想提交的功能文件")])],-1))]),t(Be),o(g).lockedFiles.length===0?(d(),h("div",ll,[e("div",ol,[t(ne,null,{default:a(()=>[t(o(at))]),_:1})]),m[19]||(m[19]=e("p",null,"当前没有锁定的文件",-1)),m[20]||(m[20]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(d(),h("div",nl,[e("div",il,[e("span",null,"🔒 已锁定 "+z(o(g).lockedFiles.length)+" 个文件",1),t(T,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:a(()=>[t(ne,{class:"info-icon"},{default:a(()=>[t(o(ns))]),_:1})]),_:1})]),e("div",rl,[(d(!0),h(he,null,Le(o(g).lockedFiles,S=>(d(),h("div",{key:S,class:"locked-file-item"},[e("div",cl,[m[21]||(m[21]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",ul,[e("span",dl,z(x(S)),1),e("span",fl,z(H(S)),1)])]),e("div",pl,[t(T,{content:"解锁文件",placement:"top","hide-after":1e3},{default:a(()=>[t(R,{type:"danger",size:"small",circle:"",onClick:me=>o(g).unlockFile(S)},{default:a(()=>[t(ne,null,{default:a(()=>[t(o(zt))]),_:1})]),_:2},1032,["onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),St=(pe,c)=>{const b=pe.__vccOpts||pe;for(const[p,g]of c)b[p]=g;return b},gl=St(ml,[["__scopeId","data-v-506b053e"]]),yl={class:"card-header"},hl={key:0,class:"pushing-indicator"},_l={class:"pushing-text"},wl={key:0,class:"push-success-indicator"},kl={class:"card-content"},$l={class:"layout-container"},bl={key:0,class:"git-config-warning"},Cl={key:1,class:"commit-section"},Sl={class:"commit-options"},Tl={class:"options-row"},xl={class:"commit-mode-toggle"},Vl={class:"no-verify-toggle"},Ll={key:0,class:"commit-form"},zl={class:"description-container"},Bl={class:"input-actions"},Gl={class:"preview-section"},Dl={class:"preview-content code-command"},Fl={class:"form-bottom-actions"},Rl={class:"actions-flex-container"},jl={class:"left-actions"},Ol={class:"button-grid"},Ul={key:0},Al={key:0},Ml={key:0},El={class:"right-actions"},Pl={class:"one-push-content"},Hl={key:1,class:"standard-commit-form"},Il={class:"standard-commit-header"},Nl={class:"type-scope-container"},Jl={class:"scope-wrapper"},Wl={class:"description-container"},ql={class:"advanced-fields"},Yl={class:"preview-section"},Xl={class:"preview-content code-command"},Kl={class:"form-bottom-actions"},Zl={class:"actions-flex-container"},Ql={class:"left-actions"},eo={class:"button-grid"},to={key:0},so={key:0},ao={key:0},lo={class:"right-actions"},oo={class:"one-push-content"},no={class:"actions-section"},io={class:"action-groups"},ro={class:"operations-wrapper"},co={class:"action-group"},uo={class:"group-buttons"},fo={key:0},po={key:0},vo={key:0},mo={key:0},go={class:"action-group"},yo={class:"group-buttons"},ho={class:"action-group reset-group"},_o={class:"group-buttons"},wo={key:0},ko={class:"action-group branch-group"},$o={class:"group-buttons"},bo={class:"action-group"},Co={class:"group-buttons"},So={class:"template-container"},To={class:"template-form"},xo={class:"template-form-buttons"},Vo={class:"template-list"},Lo={class:"template-content"},zo={class:"template-actions"},Bo={class:"template-container"},Go={class:"template-form"},Do={class:"template-form-buttons"},Fo={class:"template-list"},Ro={class:"template-content"},jo={class:"template-actions"},Oo={class:"template-container message-template-container"},Uo={class:"template-form"},Ao={class:"template-form-buttons"},Mo={class:"templates-container"},Eo={class:"message-templates-list"},Po={class:"templates-scroll-area"},Ho={class:"template-content"},Io={class:"template-actions"},No={class:"current-default-message"},Jo={class:"default-message-content"},Wo={class:"message-help-text"},qo={class:"merge-dialog-content"},Yo={class:"merge-intro"},Xo={class:"merge-options"},Ko={class:"dialog-footer"},Zo={class:"stash-list-content"},Qo={key:0,class:"stash-list-actions"},en={class:"stash-dialog-content"},tn={class:"dialog-footer"},sn=kt({__name:"CommitForm",setup(pe){const c=pt(),b=Zt(),p=u(""),g=u(!1),E=u(!1),F=u("输入提交信息..."),A=u(""),P=u(!1),de=u("feat"),O=u(""),Q=u(""),se=u(""),ae=u(""),K=u([]),re=u(!1),X=u(""),V=u(!1),L=u(""),j=u(-1),q=u(!1),G=u(""),U=u({noFf:!1,squash:!1,noCommit:!1,message:""}),ee=u([]),ce=u(!1),k=u(""),x=u(!1),H=u(""),J=u(-1),le=u(!1),$=u(""),m=u(!1),Z=u(!1),T=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],R=u(!1),ne=u(!1),fe=u(""),ke=u(!1);function Be(){fe.value="",ke.value=!1,R.value=!0}function Se(){c.getStashList(),ne.value=!0}async function S(){try{await c.saveStash(fe.value,ke.value),R.value=!1}catch(f){console.error("储藏失败:",f)}}async function me(f,s=!1){try{await c.applyStash(f,s),s&&await c.getStashList()}catch(B){console.error("应用储藏失败:",B)}}async function Ie(f){Ae.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await c.dropStash(f),await c.getStashList()}).catch(()=>{})}async function Ge(){Ae.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await c.clearAllStashes(),await c.getStashList()}).catch(()=>{})}const ze=u([]),Te=u(!1),Ne=u(""),je=u(-1);Xe(P,f=>{localStorage.setItem("zen-gitsync-standard-commit",f.toString())}),Xe(m,f=>{localStorage.setItem("zen-gitsync-skip-hooks",f.toString())});const ie=Ve(()=>{if(!P.value)return p.value||A.value;let f=`${de.value||""}`;return O.value&&(f+=`(${O.value})`),f+=`: ${Q.value}`,se.value&&(f+=`

${se.value}`),ae.value&&(f+=`

${ae.value}`),f}),Je=Ve(()=>{let f=`git commit -m "${ie.value}"`;return m.value&&(f+=" --no-verify"),f});function Me(){const f=b.config;f&&(F.value=`输入提交信息 (默认: ${f.defaultCommitMessage})`,A.value=f.defaultCommitMessage||"",f.descriptionTemplates&&Array.isArray(f.descriptionTemplates)&&(K.value=f.descriptionTemplates),f.scopeTemplates&&Array.isArray(f.scopeTemplates)&&(ee.value=f.scopeTemplates),f.messageTemplates&&Array.isArray(f.messageTemplates)&&(ze.value=f.messageTemplates))}async function w(){if(!X.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(V.value)await r();else{if(K.value.includes(X.value)){i({message:"该模板已存在",type:"warning"});return}await b.saveTemplate(X.value,"description")&&(K.value.includes(X.value)||K.value.push(X.value),K.value=[...K.value],X.value="")}}catch(f){i({message:`保存模板失败: ${f.message}`,type:"error"})}}async function r(){if(!X.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(await b.updateTemplate(L.value,X.value,"description")){const s=K.value.indexOf(L.value);s!==-1&&(K.value[s]=X.value),K.value=[...K.value],V.value=!1,L.value="",j.value=-1,X.value=""}}catch(f){i({message:`更新模板失败: ${f.message}`,type:"error"})}}function W(f,s){V.value=!0,L.value=f,j.value=s,X.value=f}function I(){V.value=!1,L.value="",j.value=-1,X.value=""}async function $e(){if(!k.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(x.value)await xe();else{if(ee.value.includes(k.value)){i({message:"该模板已存在",type:"warning"});return}await b.saveTemplate(k.value,"scope")&&(ee.value.includes(k.value)||ee.value.push(k.value),ee.value=[...ee.value],k.value="")}}catch(f){i({message:`保存模板失败: ${f.message}`,type:"error"})}}async function xe(){if(!k.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(await b.updateTemplate(H.value,k.value,"scope")){const s=ee.value.indexOf(H.value);s!==-1&&(ee.value[s]=k.value),ee.value=[...ee.value],x.value=!1,H.value="",J.value=-1,k.value=""}}catch(f){i({message:`更新模板失败: ${f.message}`,type:"error"})}}function ue(f,s){x.value=!0,H.value=f,J.value=s,k.value=f}function ge(){x.value=!1,H.value="",J.value=-1,k.value=""}async function De(f){try{if(await Ae.confirm(`确定要删除描述模板 "${f}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await b.deleteTemplate(f,"description")){const B=K.value.indexOf(f);B!==-1&&K.value.splice(B,1),K.value=[...K.value]}}catch(s){if(s==="cancel")return;i({message:`删除模板失败: ${s.message}`,type:"error"})}}async function be(f){try{if(await Ae.confirm(`确定要删除作用域模板 "${f}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await b.deleteTemplate(f,"scope")){const B=ee.value.indexOf(f);B!==-1&&ee.value.splice(B,1),ee.value=[...ee.value]}}catch(s){if(s==="cancel")return;i({message:`删除模板失败: ${s.message}`,type:"error"})}}function _e(f){Q.value=f,re.value=!1}function lt(f){O.value=f,ce.value=!1}function Ze(){re.value=!0}function Y(){ce.value=!0}async function qe(){try{await c.addToStage()&&c.fetchStatus()}catch(f){i({message:`添加文件失败: ${f.message}`,type:"error"})}}async function Ye(){if(!ie.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{await c.commitChanges(ie.value,m.value)&&(v(),c.fetchStatus(),c.fetchLog(),c.getBranchStatus(!0))}catch(f){i({message:`提交失败: ${f.message}`,type:"error"})}}function Ee(){g.value=!0,setTimeout(()=>{g.value=!1},2e3)}async function ot(){try{await c.pushToRemote(),E.value=!0;try{await new Promise(f=>setTimeout(f,200)),Ee()}catch(f){console.error("推送后处理失败:",f),Ee()}finally{E.value=!1}}catch(f){E.value=!1,i({message:`推送失败: ${f.message}`,type:"error"})}}async function nt(){try{await c.gitPull(),await c.fetchStatus(),await c.fetchLog(!1)}catch(f){console.error("拉取操作发生错误:",f)}}async function Oe(){try{await c.gitFetchAll(),await c.fetchStatus(),await c.fetchLog(!1)}catch(f){console.error("获取远程分支信息操作发生错误:",f)}}async function mt(){if(!ie.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{await c.addAndCommit(ie.value,m.value),v(),c.fetchStatus(),c.fetchLog()}catch(f){i({message:`暂存并提交失败: ${f.message}`,type:"error"})}}async function n(){if(!ie.value.trim()){i({message:"提交信息不能为空",type:"warning"});return}try{if(await c.addCommitAndPush(ie.value,m.value)){v(),E.value=!0;try{await new Promise(s=>setTimeout(s,1e3)),console.log("一键推送完成，状态已在pushToRemote中刷新"),Ee()}catch(s){console.error("一键推送后处理失败:",s),Ee()}finally{E.value=!1}}}catch(f){i({message:`暂存、提交并推送失败: ${f.message}`,type:"error"})}}async function l(){try{await Ae.confirm(`确定要重置当前分支 "${c.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await c.resetToRemote(c.currentBranch)&&(c.fetchStatus(),c.fetchLog())}catch(f){f!=="cancel"&&i({message:`重置到远程分支失败: ${f.message}`,type:"error"})}}function v(){p.value="",Q.value="",se.value="",ae.value=""}function _(){$.value=A.value,le.value=!0}async function oe(){if(!$.value.trim()){i({message:"请输入默认提交信息",type:"warning"});return}try{await b.saveDefaultMessage($.value)&&(A.value=$.value,F.value=`输入提交信息 (默认: ${$.value})`,le.value=!1)}catch(f){i({message:`保存默认提交信息失败: ${f.message}`,type:"error"})}}function te(f){const s=f.replace(/\\/g,"/");return b.lockedFiles.some(B=>{const Ue=B.replace(/\\/g,"/");return s===Ue})}const ve=Ve(()=>c.fileList.some(f=>["modified","deleted","untracked"].includes(f.type)&&!te(f.path))),D=Ve(()=>c.fileList.filter(f=>["modified","deleted","untracked"].includes(f.type)&&!te(f.path)).length),we=Ve(()=>c.fileList.filter(f=>f.type==="added"&&!te(f.path)).length),Qe=Ve(()=>we.value>0),it=Ve(()=>c.fileList.some(f=>!te(f.path))),et=Ve(()=>c.branchAhead>0),jt=Ve(()=>c.branchBehind>0),tt=Ve(()=>c.hasUpstream&&et.value&&!Qe.value),Qt=Ve(()=>Qe.value),bs=Ve(()=>c.hasUpstream&&(et.value||jt.value||it.value));async function Cs(){if(!$.value.trim()){i({message:"请输入模板内容",type:"warning"});return}try{if(Te.value)await Ss();else{if(ze.value.includes($.value)){i({message:"该模板已存在",type:"warning"});return}ze.value.push($.value);const s=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:$.value,type:"message"})})).json();s.success?(i({message:"提交信息模板保存成功!",type:"success"}),$.value=""):i({message:"模板保存失败: "+s.error,type:"error"})}}catch(f){i({message:"模板保存失败: "+f.message,type:"error"})}}async function Ss(){try{if(je.value>=0){const f=Ne.value,s=$.value;ze.value[je.value]=s;const Ue=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:f,newTemplate:s,type:"message"})})).json();Ue.success?(i({message:"提交信息模板更新成功!",type:"success"}),Te.value=!1,Ne.value="",je.value=-1,$.value=""):i({message:"模板更新失败: "+Ue.error,type:"error"})}}catch(f){i({message:"模板更新失败: "+f.message,type:"error"})}}function Ts(f,s){Te.value=!0,Ne.value=f,je.value=s,$.value=f}function xs(){Te.value=!1,Ne.value="",je.value=-1,$.value=""}async function Vs(f){try{const s=ze.value.indexOf(f);s!==-1&&ze.value.splice(s,1);const Ue=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:f,type:"message"})})).json();Ue.success?i({message:"提交信息模板删除成功!",type:"success"}):i({message:"模板删除失败: "+Ue.error,type:"error"})}catch(s){i({message:"模板删除失败: "+s.message,type:"error"})}}function Ls(f){p.value=f,$.value=f}vt(async()=>{const f=localStorage.getItem("zen-gitsync-standard-commit");f!==null&&(P.value=f==="true");const s=localStorage.getItem("zen-gitsync-skip-hooks");s!==null&&(m.value=s==="true"),Xe(()=>b.config,Me,{immediate:!0}),b.config||await b.loadConfig()});function zs(){G.value="",U.value={noFf:!1,squash:!1,noCommit:!1,message:""},ct.value="all",q.value=!0,c.allBranches.length===0&&c.getAllBranches()}const ct=u("all"),Bs=Ve(()=>{const f=c.allBranches.filter(s=>s!==c.currentBranch);if(console.log("筛选分支列表:",{allBranches:c.allBranches,currentBranch:c.currentBranch,branchTypeFilter:ct.value,filteredBranches:f}),ct.value==="local"){const s=f.filter(B=>!B.includes("origin/"));return console.log("本地分支:",s),s}else if(ct.value==="remote"){const s=f.filter(B=>B.includes("origin/"));return console.log("远程分支:",s),s}else return console.log("所有分支:",f),f});async function Gs(){if(!G.value){i({message:"请选择要合并的分支",type:"warning"});return}try{await c.mergeBranch(G.value,U.value)&&(q.value=!1,await c.fetchStatus(),await c.fetchLog(!1))}catch(f){console.error("合并分支操作发生错误:",f)}}const Tt=u(!1);function Ds(){Tt.value=!Tt.value}return(f,s)=>{const B=Re,Ue=$t,Fs=Yt,es=ds,We=Xt,Ce=Nt,ts=Ft,ss=Rt,Rs=Ns,xt=Kt,Ot=Js,Vt=hs,ut=Ct,as=bt,Ut=qs,js=Ws,dt=ws,Lt=Ys,ls=_s,At=ht,Os=ks,Us=Jt;return d(),h("div",{class:ye(["card",{"is-pushing":o(c).isPushing}])},[e("div",yl,[s[29]||(s[29]=e("h2",null,"提交更改",-1)),t(B,{type:"primary",icon:o(Hs),size:"small",circle:"",onClick:Ds,class:"git-tools-button"},null,8,["icon"])]),t(is,{name:"el-fade-in-linear"},{default:a(()=>[o(c).isPushing||E.value?(d(),h("div",hl,[s[30]||(s[30]=e("div",{class:"pushing-spinner"},[e("svg",{viewBox:"0 0 50 50",class:"circular"},[e("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1)),e("div",_l,z(o(c).isPushing?"正在推送...":"更新状态中..."),1)])):M("",!0)]),_:1}),t(is,{name:"el-fade-in-linear"},{default:a(()=>[g.value?(d(),h("div",wl,[t(Ue,{class:"push-success-icon"},{default:a(()=>[t(o(fs))]),_:1}),s[31]||(s[31]=e("div",{class:"push-success-text"},"已完成!",-1))])):M("",!0)]),_:1}),e("div",kl,[e("div",$l,[o(c).userName===""||o(c).userEmail===""?(d(),h("div",bl,[t(Fs,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:a(()=>s[32]||(s[32]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(d(),h("div",Cl,[e("div",Sl,[e("div",Tl,[e("div",xl,[t(es,{modelValue:P.value,"onUpdate:modelValue":s[0]||(s[0]=C=>P.value=C),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),e("div",Vl,[t(es,{modelValue:m.value,"onUpdate:modelValue":s[1]||(s[1]=C=>m.value=C),"active-text":"跳过 Git 钩子检查 (--no-verify)"},null,8,["modelValue"])])])]),P.value?(d(),h("div",Hl,[e("div",Il,[e("div",Nl,[t(ss,{modelValue:de.value,"onUpdate:modelValue":s[3]||(s[3]=C=>de.value=C),placeholder:"提交类型",class:"type-select",clearable:""},{default:a(()=>[(d(),h(he,null,Le(T,C=>t(ts,{key:C.value,label:C.label,value:C.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",Jl,[t(We,{modelValue:O.value,"onUpdate:modelValue":s[4]||(s[4]=C=>O.value=C),placeholder:"作用域（可选）",class:"scope-input",clearable:""},null,8,["modelValue"]),t(B,{type:"primary",icon:o(wt),circle:"",size:"small",class:"settings-button",onClick:Y},null,8,["icon"])])]),e("div",Wl,[t(We,{modelValue:Q.value,"onUpdate:modelValue":s[5]||(s[5]=C=>Q.value=C),placeholder:"简短描述（必填）",class:"description-input",clearable:""},null,8,["modelValue"]),t(B,{type:"primary",icon:o(wt),circle:"",size:"small",class:"settings-button",onClick:Ze},null,8,["icon"])])]),e("div",{class:"advanced-options-toggle",onClick:s[6]||(s[6]=C=>Z.value=!Z.value)},[e("span",null,z(Z.value?"收起":"正文及页脚"),1),t(Ue,{class:ye(["toggle-icon",{"is-active":Z.value}])},{default:a(()=>[t(o(Wt))]),_:1},8,["class"])]),Ke(e("div",ql,[t(We,{modelValue:se.value,"onUpdate:modelValue":s[7]||(s[7]=C=>se.value=C),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(We,{modelValue:ae.value,"onUpdate:modelValue":s[8]||(s[8]=C=>ae.value=C),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[Dt,Z.value]]),e("div",Yl,[s[38]||(s[38]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),e("pre",Xl,z(Je.value),1)]),e("div",Kl,[e("div",Zl,[e("div",Ql,[e("div",eo,[t(B,{type:"primary",onClick:qe,loading:o(c).isAddingFiles,disabled:!ve.value,class:"stage-button"},{default:a(()=>[s[39]||(s[39]=y(" 暂存更改 ")),D.value>0?(d(),h("span",to,"("+z(D.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"]),t(B,{type:"primary",onClick:Ye,loading:o(c).isLoadingStatus,disabled:!Qe.value||!ie.value.trim()},{default:a(()=>[s[40]||(s[40]=y(" 提交 ")),we.value>0?(d(),h("span",so,"("+z(we.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"]),t(Ce,{content:tt.value?"推送已提交的更改到远程仓库":o(c).hasUpstream?et.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top"},{default:a(()=>[t(B,{type:"primary",icon:o(Mt),onClick:ot,loading:o(c).isPushing,disabled:!tt.value,style:yt(tt.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[41]||(s[41]=y(" 推送 ")),et.value?(d(),h("span",ao,"("+z(o(c).branchAhead)+")",1)):M("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",lo,[t(Ce,{content:it.value?ie.value.trim()?o(c).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top"},{default:a(()=>[t(B,{type:"success",onClick:n,loading:o(c).isAddingFiles||o(c).isCommiting||o(c).isPushing,disabled:!it.value||!ie.value.trim()||!o(c).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",oo,[t(Ue,{class:"one-push-icon"},{default:a(()=>[t(o(Et))]),_:1}),s[42]||(s[42]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])])):(d(),h("div",Ll,[e("div",zl,[t(We,{modelValue:p.value,"onUpdate:modelValue":s[2]||(s[2]=C=>p.value=C),placeholder:F.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input"},null,8,["modelValue","placeholder"]),e("div",Bl,[t(B,{type:"primary",icon:o(wt),circle:"",size:"small",class:"settings-button",onClick:_},null,8,["icon"])])]),e("div",Gl,[s[33]||(s[33]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),e("pre",Dl,'git commit -m "'+z(ie.value||"<提交信息>")+'"'+z(m.value?" --no-verify":""),1)]),e("div",Fl,[e("div",Rl,[e("div",jl,[e("div",Ol,[t(B,{type:"primary",onClick:qe,loading:o(c).isAddingFiles,disabled:!ve.value,class:"stage-button"},{default:a(()=>[s[34]||(s[34]=y(" 暂存更改 ")),D.value>0?(d(),h("span",Ul,"("+z(D.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"]),t(B,{type:"primary",onClick:Ye,loading:o(c).isLoadingStatus,disabled:!Qe.value||!ie.value.trim()},{default:a(()=>[s[35]||(s[35]=y(" 提交 ")),we.value>0?(d(),h("span",Al,"("+z(we.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"]),t(Ce,{content:tt.value?"推送已提交的更改到远程仓库":o(c).hasUpstream?et.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top"},{default:a(()=>[t(B,{type:"primary",icon:o(Mt),onClick:ot,loading:o(c).isPushing,disabled:!tt.value,style:yt(tt.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[36]||(s[36]=y(" 推送 ")),et.value?(d(),h("span",Ml,"("+z(o(c).branchAhead)+")",1)):M("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",El,[t(Ce,{content:it.value?ie.value.trim()?o(c).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top"},{default:a(()=>[t(B,{type:"success",onClick:n,loading:o(c).isAddingFiles||o(c).isCommiting||o(c).isPushing,disabled:!it.value||!ie.value.trim()||!o(c).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",Pl,[t(Ue,{class:"one-push-icon"},{default:a(()=>[t(o(Et))]),_:1}),s[37]||(s[37]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])]))]))]),t(Rs,{modelValue:Tt.value,"onUpdate:modelValue":s[9]||(s[9]=C=>Tt.value=C),title:"Git 操作",direction:"rtl",size:"340px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:a(()=>[e("div",no,[e("div",io,[e("div",ro,[e("div",co,[s[48]||(s[48]=e("div",{class:"group-title"},"基础操作",-1)),e("div",uo,[t(Ce,{content:ve.value?`暂存${D.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",onClick:qe,loading:o(c).isAddingFiles,disabled:!ve.value,class:"action-button"},{default:a(()=>[s[43]||(s[43]=y(" 暂存更改 ")),D.value>0?(d(),h("span",fo,"("+z(D.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Ce,{content:Qe.value?`提交${we.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",onClick:Ye,loading:o(c).isLoadingStatus,disabled:!Qe.value||!ie.value.trim(),class:"action-button"},{default:a(()=>[s[44]||(s[44]=y(" 提交 ")),we.value>0?(d(),h("span",po,"("+z(we.value)+")",1)):M("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Ce,{content:et.value?`推送${o(c).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",icon:o(Mt),onClick:ot,loading:o(c).isPushing,disabled:!tt.value,class:ye(["action-button","push-button",{"is-loading":o(c).isPushing}]),style:yt(tt.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[45]||(s[45]=y(" 推送 ")),et.value?(d(),h("span",vo,"("+z(o(c).branchAhead)+")",1)):M("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),t(Ce,{content:jt.value?`拉取${o(c).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",icon:o(ps),onClick:nt,loading:o(c).isGitPulling,disabled:!o(c).hasUpstream,class:"action-button",style:yt(o(c).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:a(()=>[s[46]||(s[46]=y(" 拉取 ")),jt.value?(d(),h("span",mo,"("+z(o(c).branchBehind)+")",1)):M("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Ce,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"info",icon:o(vs),onClick:Oe,loading:o(c).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:a(()=>s[47]||(s[47]=[y(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",go,[s[51]||(s[51]=e("div",{class:"group-title"},"组合操作",-1)),e("div",yo,[t(Ce,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",icon:o(Bt),onClick:mt,loading:o(c).isAddingFiles||o(c).isCommiting,disabled:!ve.value||!ie.value.trim(),class:"action-button"},{default:a(()=>s[49]||(s[49]=[y(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(Ce,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"success",icon:o(Et),onClick:n,loading:o(c).isAddingFiles||o(c).isCommiting||o(c).isPushing,disabled:!it.value||!ie.value.trim()||!o(c).hasUpstream,class:ye(["action-button","one-click-push",{"is-loading":o(c).isAddingFiles||o(c).isCommiting||o(c).isPushing}])},{default:a(()=>s[50]||(s[50]=[y(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),e("div",ho,[s[54]||(s[54]=e("div",{class:"group-title"},"重置操作",-1)),e("div",_o,[t(Ce,{content:Qt.value?`撤销${we.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"warning",icon:o(qt),onClick:o(c).resetHead,loading:o(c).isResetting,disabled:!Qt.value,class:"action-button reset-button"},{default:a(()=>[s[52]||(s[52]=y(" 重置暂存区 ")),we.value>0?(d(),h("span",wo,"("+z(we.value)+")",1)):M("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Ce,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"danger",icon:o(ys),onClick:l,loading:o(c).isResetting,disabled:!bs.value,class:"action-button danger-button"},{default:a(()=>s[53]||(s[53]=[y(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",ko,[s[56]||(s[56]=e("div",{class:"group-title"},"分支操作",-1)),e("div",$o,[t(Ce,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"primary",icon:o(Is),onClick:zs,loading:o(c).isGitMerging,class:"action-button merge-button"},{default:a(()=>s[55]||(s[55]=[y(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",bo,[s[59]||(s[59]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",Co,[t(Ce,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"warning",onClick:Be,loading:o(c).isSavingStash,disabled:!it.value,class:"action-button"},{default:a(()=>s[57]||(s[57]=[y(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(Ce,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(B,{type:"info",onClick:Se,class:"action-button"},{default:a(()=>s[58]||(s[58]=[y(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(ut,{title:"简短描述模板设置",modelValue:re.value,"onUpdate:modelValue":s[11]||(s[11]=C=>re.value=C),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",So,[e("div",To,[t(We,{modelValue:X.value,"onUpdate:modelValue":s[10]||(s[10]=C=>X.value=C),placeholder:V.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",xo,[V.value?(d(),N(B,{key:0,onClick:I},{default:a(()=>s[60]||(s[60]=[y("取消")])),_:1})):M("",!0),t(B,{type:"primary",onClick:w,disabled:!X.value.trim()},{default:a(()=>[y(z(V.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",Vo,[s[64]||(s[64]=e("h3",null,"已保存模板",-1)),K.value.length===0?(d(),N(xt,{key:0,description:"暂无保存的模板"})):M("",!0),(d(!0),h(he,null,Le(K.value,(C,Pe)=>(d(),N(Vt,{key:Pe,class:"template-item"},{default:a(()=>[t(Ot,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Lo,z(C),1),e("div",zo,[t(B,{type:"primary",size:"small",onClick:st=>_e(C)},{default:a(()=>s[61]||(s[61]=[y("使用")])),_:2},1032,["onClick"]),t(B,{type:"warning",size:"small",icon:o(Bt),onClick:st=>W(C,Pe)},{default:a(()=>s[62]||(s[62]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(B,{type:"danger",size:"small",onClick:st=>De(C)},{default:a(()=>s[63]||(s[63]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(ut,{title:"作用域模板设置",modelValue:ce.value,"onUpdate:modelValue":s[13]||(s[13]=C=>ce.value=C),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",Bo,[e("div",Go,[t(We,{modelValue:k.value,"onUpdate:modelValue":s[12]||(s[12]=C=>k.value=C),placeholder:x.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",Do,[x.value?(d(),N(B,{key:0,onClick:ge},{default:a(()=>s[65]||(s[65]=[y("取消")])),_:1})):M("",!0),t(B,{type:"primary",onClick:$e,disabled:!k.value.trim()},{default:a(()=>[y(z(x.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",Fo,[s[69]||(s[69]=e("h3",null,"已保存作用域",-1)),ee.value.length===0?(d(),N(xt,{key:0,description:"暂无保存的作用域"})):M("",!0),(d(!0),h(he,null,Le(ee.value,(C,Pe)=>(d(),N(Vt,{key:Pe,class:"template-item"},{default:a(()=>[t(Ot,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Ro,z(C),1),e("div",jo,[t(B,{type:"primary",size:"small",onClick:st=>lt(C)},{default:a(()=>s[66]||(s[66]=[y("使用")])),_:2},1032,["onClick"]),t(B,{type:"warning",size:"small",icon:o(Bt),onClick:st=>ue(C,Pe)},{default:a(()=>s[67]||(s[67]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(B,{type:"danger",size:"small",onClick:st=>be(C)},{default:a(()=>s[68]||(s[68]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(ut,{title:"默认提交信息设置",modelValue:le.value,"onUpdate:modelValue":s[15]||(s[15]=C=>le.value=C),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:a(()=>[e("div",Oo,[e("div",Uo,[t(We,{modelValue:$.value,"onUpdate:modelValue":s[14]||(s[14]=C=>$.value=C),placeholder:Te.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",Ao,[Te.value?(d(),N(B,{key:0,onClick:xs},{default:a(()=>s[70]||(s[70]=[y("取消")])),_:1})):M("",!0),t(B,{type:"primary",onClick:Cs,disabled:!$.value.trim()},{default:a(()=>[y(z(Te.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),t(B,{type:"success",onClick:oe,disabled:!$.value.trim()},{default:a(()=>s[71]||(s[71]=[y(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),e("div",Mo,[e("div",Eo,[s[75]||(s[75]=e("h3",null,"已保存模板",-1)),e("div",Po,[ze.value.length===0?(d(),N(xt,{key:0,description:"暂无保存的模板"})):M("",!0),(d(!0),h(he,null,Le(ze.value,(C,Pe)=>(d(),N(Vt,{key:Pe,class:"template-item"},{default:a(()=>[t(Ot,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Ho,z(C),1),e("div",Io,[t(B,{type:"primary",size:"small",onClick:st=>Ls(C)},{default:a(()=>s[72]||(s[72]=[y("使用")])),_:2},1032,["onClick"]),t(B,{type:"warning",size:"small",icon:o(Bt),onClick:st=>Ts(C,Pe)},{default:a(()=>s[73]||(s[73]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(B,{type:"danger",size:"small",onClick:st=>Vs(C)},{default:a(()=>s[74]||(s[74]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),e("div",No,[s[83]||(s[83]=e("h3",null,"当前默认提交信息",-1)),A.value?(d(),N(Vt,{key:0,class:"default-message-card"},{default:a(()=>[e("div",Jo,z(A.value),1)]),_:1})):(d(),N(xt,{key:1,description:"尚未设置默认提交信息","image-size":100})),e("div",Wo,[s[81]||(s[81]=e("h4",null,"关于默认提交信息",-1)),s[82]||(s[82]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[s[78]||(s[78]=y("你可以通过点击左侧模板的")),t(as,{size:"small",type:"primary"},{default:a(()=>s[76]||(s[76]=[y("使用")])),_:1}),s[79]||(s[79]=y("按钮先选择喜欢的模板，然后点击上方")),t(as,{size:"small",type:"success"},{default:a(()=>s[77]||(s[77]=[y("设为默认提交信息")])),_:1}),s[80]||(s[80]=y("按钮保存。"))])])])])])]),_:1},8,["modelValue"]),t(ut,{title:"合并分支",modelValue:q.value,"onUpdate:modelValue":s[23]||(s[23]=C=>q.value=C),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:a(()=>[e("div",Ko,[t(B,{onClick:s[22]||(s[22]=C=>q.value=!1)},{default:a(()=>s[90]||(s[90]=[y("取消")])),_:1}),t(B,{type:"primary",onClick:Gs,loading:o(c).isGitMerging,disabled:!G.value,class:"merge-confirm-btn"},{default:a(()=>s[91]||(s[91]=[y(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:a(()=>[e("div",qo,[e("p",Yo,"选择要合并到当前分支 ("+z(o(c).currentBranch)+") 的分支:",1),t(ls,{"label-position":"top"},{default:a(()=>[t(dt,{label:"分支类型"},{default:a(()=>[t(js,{modelValue:ct.value,"onUpdate:modelValue":s[16]||(s[16]=C=>ct.value=C),size:"small"},{default:a(()=>[t(Ut,{label:"all"},{default:a(()=>s[84]||(s[84]=[y("所有分支")])),_:1}),t(Ut,{label:"local"},{default:a(()=>s[85]||(s[85]=[y("本地分支")])),_:1}),t(Ut,{label:"remote"},{default:a(()=>s[86]||(s[86]=[y("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t(dt,{label:"选择分支"},{default:a(()=>[t(ss,{modelValue:G.value,"onUpdate:modelValue":s[17]||(s[17]=C=>G.value=C),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:a(()=>[(d(!0),h(he,null,Le(Bs.value,C=>(d(),N(ts,{key:C,label:C,value:C},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t(dt,{label:"合并选项"},{default:a(()=>[e("div",Xo,[t(Lt,{modelValue:U.value.noFf,"onUpdate:modelValue":s[18]||(s[18]=C=>U.value.noFf=C)},{default:a(()=>[t(Ce,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:a(()=>s[87]||(s[87]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Lt,{modelValue:U.value.squash,"onUpdate:modelValue":s[19]||(s[19]=C=>U.value.squash=C)},{default:a(()=>[t(Ce,{content:"将多个提交压缩为一个提交",placement:"top"},{default:a(()=>s[88]||(s[88]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Lt,{modelValue:U.value.noCommit,"onUpdate:modelValue":s[20]||(s[20]=C=>U.value.noCommit=C)},{default:a(()=>[t(Ce,{content:"执行合并但不自动创建提交",placement:"top"},{default:a(()=>s[89]||(s[89]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),U.value.noFf&&!U.value.noCommit?(d(),N(dt,{key:0,label:"合并提交信息 (可选)"},{default:a(()=>[t(We,{modelValue:U.value.message,"onUpdate:modelValue":s[21]||(s[21]=C=>U.value.message=C),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):M("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(ut,{title:"储藏列表 (Git Stash)",modelValue:ne.value,"onUpdate:modelValue":s[24]||(s[24]=C=>ne.value=C),width:"600px","close-on-click-modal":!1},{default:a(()=>[e("div",Zo,[Ke((d(),N(Os,{data:o(c).stashes,stripe:"",style:{width:"100%"},"empty-text":"暂无储藏记录"},{default:a(()=>[t(At,{prop:"id",label:"ID",width:"100"}),t(At,{prop:"description",label:"描述"}),t(At,{label:"操作",width:"220"},{default:a(C=>[t(B,{size:"small",onClick:Pe=>me(C.row.id,!1),loading:o(c).isApplyingStash},{default:a(()=>s[92]||(s[92]=[y(" 应用 ")])),_:2},1032,["onClick","loading"]),t(B,{size:"small",type:"primary",onClick:Pe=>me(C.row.id,!0),loading:o(c).isApplyingStash},{default:a(()=>s[93]||(s[93]=[y(" 应用并删除 ")])),_:2},1032,["onClick","loading"]),t(B,{size:"small",type:"danger",onClick:Pe=>Ie(C.row.id),loading:o(c).isDroppingStash},{default:a(()=>s[94]||(s[94]=[y(" 删除 ")])),_:2},1032,["onClick","loading"])]),_:1})]),_:1},8,["data"])),[[Us,o(c).isLoadingStashes]]),o(c).stashes.length>0?(d(),h("div",Qo,[t(B,{type:"danger",onClick:Ge,loading:o(c).isDroppingStash},{default:a(()=>s[95]||(s[95]=[y(" 清空所有储藏 ")])),_:1},8,["loading"])])):M("",!0)])]),_:1},8,["modelValue"]),t(ut,{title:"储藏更改 (Git Stash)",modelValue:R.value,"onUpdate:modelValue":s[28]||(s[28]=C=>R.value=C),width:"500px","close-on-click-modal":!1},{footer:a(()=>[e("div",tn,[t(B,{onClick:s[27]||(s[27]=C=>R.value=!1)},{default:a(()=>s[98]||(s[98]=[y("取消")])),_:1}),t(B,{type:"primary",onClick:S,loading:o(c).isSavingStash},{default:a(()=>s[99]||(s[99]=[y(" 储藏 ")])),_:1},8,["loading"])])]),default:a(()=>[e("div",en,[s[97]||(s[97]=e("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),t(ls,{"label-position":"top"},{default:a(()=>[t(dt,{label:"储藏说明 (可选)"},{default:a(()=>[t(We,{modelValue:fe.value,"onUpdate:modelValue":s[25]||(s[25]=C=>fe.value=C),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),t(dt,null,{default:a(()=>[t(Lt,{modelValue:ke.value,"onUpdate:modelValue":s[26]||(s[26]=C=>ke.value=C)},{default:a(()=>s[96]||(s[96]=[y(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1})]),_:1})])]),_:1},8,["modelValue"])])],2)}}}),an=St(sn,[["__scopeId","data-v-75807b08"]]),ln={class:"log-header"},on={class:"log-actions"},nn={key:0,class:"filter-panel-header"},rn={class:"filter-form"},cn={class:"filter-item"},un={class:"filter-item"},dn={class:"filter-item"},fn={class:"filter-item"},pn={class:"filter-actions"},vn={key:0},mn={key:1,class:"content-area-content"},gn={key:0,class:"graph-view"},yn={key:0,class:"commit-count"},hn={class:"graph-controls"},_n={class:"zoom-controls"},wn={class:"scale-info"},kn={key:1,class:"table-view-container"},$n=["onClick"],bn={class:"commit-message-cell"},Cn={class:"message-content"},Sn={key:0,class:"branch-container"},Tn={class:"message-text"},xn={class:"author-name"};const Vn={class:"commit-detail-container"},Ln={key:0,class:"commit-info"},zn={class:"commit-info-header"},Bn={class:"info-item"},Gn={class:"item-value"},Dn={class:"info-item"},Fn={class:"item-value"},Rn={class:"info-item"},jn={class:"item-value"},On={class:"commit-message-container"},Un=["innerHTML"],An={class:"commit-files-diff"},Mn={class:"files-list"},En={key:1},Pn=["onClick"],Hn={class:"file-diff"},In={key:0},Nn={key:1},Jn=["innerHTML"],gt=.5,Gt=1.5,Ht=.1,Wn=kt({__name:"LogList",setup(pe,{expose:c}){const b=pt();let p=[];const g=u(p),E=u(""),F=u(!1),A=Ve(()=>b.isLoadingLog||F.value),P=u(!1),de=u(0),O=u(!1),Q=u(null),se=u(1),ae=u(!0),K=u(!1),re=u(null),X=u(!1),V=u(null),L=u([]),j=u(""),q=u(!1),G=u(""),U=u(1),ee=u(!1),ce=u(!1),k=u([]),x=u(""),H=u(null),J=u([]),le=u([]),$=u([]),m=u(!1),Z=u(0),T=u(0),R=u(null),ne=Ve(()=>g.value);async function fe(n=!1,l=1){if(!pt().isGitRepo){E.value="当前目录不是Git仓库";return}try{l>1?K.value=!0:F.value=!0;const _=new URLSearchParams;_.append("page",l.toString()),_.append("all",n.toString()),_.append("with_parents","true"),k.value.length>0&&_.append("author",k.value.join(",")),le.value.length>0&&_.append("branch",le.value.join(",")),x.value&&_.append("message",x.value),H.value&&Array.isArray(H.value)&&H.value.length===2&&(_.append("dateFrom",H.value[0]),_.append("dateTo",H.value[1])),_.append("_t",Date.now().toString());const te=await(await fetch(`/api/log?${_.toString()}`)).json();if(!te||!te.data||!Array.isArray(te.data)){E.value="加载提交历史失败: 服务器返回数据格式不正确";return}const ve=l>1;ve?te.data.forEach(D=>p.push(D)):(p.length=0,te.data.forEach(D=>p.push(D))),g.value=[...p],se.value=l,de.value=te.total||p.length,ae.value=te.hasMore===!0,ve||(ee.value=!0,setTimeout(()=>{ee.value=!1},2e3)),!ve&&O.value?setTimeout(ke,0):!ve&&!O.value&&!n&&rt(()=>{Te(),setTimeout(nt,200)}),E.value=""}catch(_){E.value="加载提交历史失败: "+(_ instanceof Error?_.message:String(_)),l>1&&(ae.value=!1)}finally{l>1?K.value=!1:F.value=!1}}async function ke(){if(Q.value&&p.length!==0)try{Q.value.innerHTML="";const n=ia(Q.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),l={},v=n.branch(b.currentBranch||"main");l[b.currentBranch||"main"]=v,p.forEach(_=>{let oe=v;if(_.branch){const te=S(_.branch.split(",")[0]);l[te]||(l[te]=n.branch(te)),oe=l[te]}oe.commit({hash:_.hash,subject:_.message,author:`${_.author} <${_.email}>`})}),setTimeout(()=>{r()},100)}catch(n){E.value="渲染图表失败: "+(n instanceof Error?n.message:String(n))}}function Be(){O.value=!O.value,O.value&&p.length>0&&setTimeout(ke,0)}function Se(){P.value=!P.value,P.value||(ae.value=!0),se.value=1,fe(P.value),rt(()=>{setTimeout(()=>{!O.value&&!P.value&&(Te(),nt())},300)})}function S(n){return n.includes("HEAD -> ")?n.replace("HEAD -> ",""):n.includes("origin/")?n:n.trim()}function me(n){return n.includes("HEAD")?"success":n.includes("origin/")?"warning":"info"}const Ie=u(null),Ge=u(null);function ze(n){if(O.value||!ae.value||K.value||A.value)return;const l=n.target,{scrollTop:v,scrollHeight:_,clientHeight:oe}=l;_-v-oe<=20&&De()}function Te(){if(!Ie.value)return;const n=Ie.value.$el.querySelector(".el-table__body-wrapper");n&&(Ge.value=n,Ge.value&&(Ge.value.removeEventListener("scroll",ze,!0),Ge.value.addEventListener("scroll",ze,!0)))}function Ne(){Ge.value&&(Ge.value.removeEventListener("scroll",ze,!0),Ge.value=null)}function je(n){n.key==="Escape"&&Oe.value&&(Oe.value=!1)}vt(()=>{b.isGitRepo?(b.log.length>0?(p.length=0,b.log.forEach(n=>p.push(n)),de.value=b.log.length,O.value&&setTimeout(()=>{ke()},100)):fe(),lt()):E.value="当前目录不是Git仓库",rt(()=>{setTimeout(()=>{Te()},500)}),Xe(()=>Ie.value,n=>{n&&!O.value&&!P.value&&rt(()=>{Te()})}),window.addEventListener("keydown",je)}),Xe(()=>b.allBranches,n=>{n&&n.length>0?$.value=[...n].sort():$.value=[]},{immediate:!0}),Xs(()=>{Ne(),re.value!==null&&(window.clearInterval(re.value),re.value=null),window.removeEventListener("keydown",je)});async function ie(){await b.fetchLog(!0),p.length=0,b.log.forEach(n=>p.push(n)),g.value=[...p],de.value=b.log.length,se.value=1,ae.value=!1,ee.value=!0,setTimeout(()=>{ee.value=!1},2e3),O.value&&(await rt(),ke())}Xe(()=>b.log,n=>{try{p.length=0,Array.isArray(n)&&n.forEach(l=>l&&p.push(l)),de.value=p.length,se.value=1,g.value=[...p],ee.value=!0,setTimeout(()=>{ee.value=!1},2e3),O.value&&p.length>0&&setTimeout(ke,0)}catch{}},{immediate:!0}),c({refreshLog:ie});function Je(){U.value<Gt&&(U.value=Math.min(Gt,U.value+Ht),w())}function Me(){U.value>gt&&(U.value=Math.max(gt,U.value-Ht),w())}function w(){if(!Q.value)return;const n=Q.value.querySelector("svg");n&&(n.style.transform=`scale(${U.value})`,n.style.transformOrigin="top left")}function r(){if(!Q.value)return;const n=Q.value.querySelector("svg");if(!n)return;const l=n.getBoundingClientRect().width/U.value,v=Q.value.clientWidth;l>v?U.value=Math.max(gt,v/l):U.value=1,w()}async function W(n){if(n){V.value=n,X.value=!0,q.value=!0,L.value=[],j.value="",G.value="";try{if(!n.hash||n.hash.length<7){j.value="无效的提交哈希值",q.value=!1;return}const v=await(await fetch(`/api/commit-files?hash=${n.hash}`)).json();v.success&&Array.isArray(v.files)?(L.value=v.files,L.value.length>0?await I(n.hash,L.value[0]):j.value="该提交没有变更文件"):j.value=`获取文件列表失败: ${v.error||"未知错误"}`}catch(l){j.value=`获取提交详情失败: ${l.message}`}finally{q.value=!1}}}async function I(n,l){q.value=!0,G.value=l;try{const _=await(await fetch(`/api/commit-file-diff?hash=${n}&file=${encodeURIComponent(l)}`)).json();_.success?j.value=_.diff||"没有变更内容":j.value=`获取差异失败: ${_.error||"未知错误"}`}catch(v){j.value=`获取差异失败: ${v.message}`}finally{q.value=!1}}function $e(n){if(!n)return"";const l=n.split(`
`);function v(_){return _.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return l.map(_=>{const oe=v(_);return _.startsWith("diff --git")?`<div class="diff-header">${oe}</div>`:_.startsWith("---")?`<div class="diff-old-file">${oe}</div>`:_.startsWith("+++")?`<div class="diff-new-file">${oe}</div>`:_.startsWith("@@")?`<div class="diff-hunk-header">${oe}</div>`:_.startsWith("+")?`<div class="diff-added">${oe}</div>`:_.startsWith("-")?`<div class="diff-removed">${oe}</div>`:`<div class="diff-context">${oe}</div>`}).join("")}function xe(n){return n?n.trim():"(无提交信息)"}function ue(n){if(!n)return"";const l=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,v=n.match(l);return v?v[3].trim():n.trim()}async function ge(n){try{const l=ue(n);await navigator.clipboard.writeText(l),i.success("提交信息已复制到剪贴板")}catch{i.error("复制失败")}}function De(){!ae.value||K.value||A.value||fe(P.value,se.value+1)}function be(){k.value=[],le.value=[],x.value="",H.value=null,se.value=1,fe(P.value,1)}function _e(){se.value=1,fe(P.value,1)}async function lt(){try{const l=await(await fetch("/api/authors")).json();l.success&&Array.isArray(l.authors)?J.value=l.authors.sort():Ze()}catch{Ze()}}function Ze(){const n=new Set;g.value.forEach(l=>{l.author&&n.add(l.author)}),J.value=Array.from(n).sort()}Xe(()=>g.value,()=>{},{deep:!0});function Y(n,l,v){v.preventDefault(),Z.value=v.clientY,T.value=v.clientX,R.value=n,m.value=!0;const _=()=>{m.value=!1,document.removeEventListener("click",_)};setTimeout(()=>{document.addEventListener("click",_)},0)}async function qe(n){if(n)try{await Ae.confirm(`确定要撤销提交 ${n.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const v=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:n.hash})})).json();v.success?(i.success(v.message||"已成功撤销提交"),ie(),b.fetchStatus(),b.getBranchStatus()):i.error(v.error||"撤销提交失败")}catch(l){l!=="cancel"&&i.error("撤销提交失败: "+(l.message||l))}}async function Ye(n){if(n)try{await Ae.confirm(`确定要将提交 ${n.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const v=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:n.hash})})).json();v.success?(i.success(v.message||"已成功Cherry-Pick提交"),ie(),b.fetchStatus(),b.getBranchStatus()):i.error(v.error||"Cherry-Pick提交失败")}catch(l){l!=="cancel"&&i.error("Cherry-Pick提交失败: "+(l.message||l))}}async function Ee(n){if(n)try{await navigator.clipboard.writeText(n.hash),i.success(`已复制提交哈希: ${n.hash.substring(0,7)}`)}catch(l){i.error(`复制提交哈希失败: ${l.message}`)}}async function ot(n){if(n)try{await Ae.confirm(`确定要将当前分支重置(hard)到提交 ${n.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const v=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:n.hash})})).json();v.success?(i.success(v.message||"已成功重置到指定提交"),ie(),b.fetchStatus(),b.getBranchStatus()):i.error(v.error||"重置到指定提交失败")}catch(l){l!=="cancel"&&i.error("重置到指定提交失败: "+(l.message||l))}}function nt(){if(O.value||!ae.value||K.value||A.value||P.value)return;if(!Ge.value){Te();return}const{scrollTop:n,scrollHeight:l,clientHeight:v}=Ge.value;l-n-v<=50&&De()}Xe(()=>O.value,n=>{!n&&!P.value&&rt(()=>{Te(),setTimeout(nt,200)})});const Oe=u(!1);function mt(){Oe.value=!Oe.value,rt(()=>{O.value&&Q.value&&ke()})}return(n,l)=>{var ve;const v=$t,_=Nt,oe=Kt,te=Jt;return d(),h(he,null,[e("div",{class:ye(["card",{"fullscreen-mode":Oe.value}])},[e("div",ln,[l[13]||(l[13]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",on,[O.value?M("",!0):(d(),N(o(Re),{key:0,type:ce.value?"primary":"default",size:"small",onClick:l[0]||(l[0]=D=>ce.value=!ce.value),class:ye(["action-button filter-button icon-only-button",{"active-filter":ce.value}])},{icon:a(()=>[t(v,null,{default:a(()=>[t(o(Ks))]),_:1})]),_:1},8,["type","class"])),t(o(Re),{type:"primary",size:"small",onClick:Be,class:ye(["action-button view-mode-button icon-only-button",{"active-view":O.value}])},{icon:a(()=>[t(v,null,{default:a(()=>[(d(),N(ft(O.value?o(gs):o(Zs))))]),_:1})]),_:1},8,["class"]),Ke(t(o(Re),{type:"success",size:"small",onClick:Se,loading:A.value,class:ye(["action-button commit-display-button",{"active-commits":P.value}])},{icon:a(()=>[t(v,null,{default:a(()=>[(d(),N(ft(P.value?o(Qs):o(ea))))]),_:1})]),default:a(()=>[y(" "+z(P.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[Dt,!1]]),t(o(Re),{type:"info",size:"small",onClick:mt,class:ye(["action-button fullscreen-button icon-only-button",{"active-fullscreen":Oe.value}])},{icon:a(()=>[t(v,null,{default:a(()=>[(d(),N(ft(Oe.value?o(It):o(ta))))]),_:1})]),_:1},8,["class"]),t(o(Re),{circle:"",size:"small",onClick:l[1]||(l[1]=D=>ie()),class:ye([{"refresh-button-animated":ee.value},"action-button refresh-button"])},{default:a(()=>[A.value?(d(),N(v,{key:1},{default:a(()=>[t(o(sa))]),_:1})):(d(),N(v,{key:0},{default:a(()=>[t(o(qt))]),_:1}))]),_:1},8,["class"])])]),ce.value&&!O.value?(d(),h("div",nn,[e("div",rn,[e("div",cn,[t(o(Rt),{modelValue:k.value,"onUpdate:modelValue":l[2]||(l[2]=D=>k.value=D),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[14]||(l[14]=[e("span",{class:"compact-label"},"作者",-1)])),default:a(()=>[(d(!0),h(he,null,Le(J.value,D=>(d(),N(o(Ft),{key:D,label:D,value:D},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",un,[t(o(Rt),{modelValue:le.value,"onUpdate:modelValue":l[3]||(l[3]=D=>le.value=D),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[15]||(l[15]=[e("span",{class:"compact-label"},"分支",-1)])),default:a(()=>[(d(!0),h(he,null,Le($.value,D=>(d(),N(o(Ft),{key:D,label:D,value:D},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",dn,[t(o(Xt),{modelValue:x.value,"onUpdate:modelValue":l[4]||(l[4]=D=>x.value=D),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[16]||(l[16]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",fn,[t(o(aa),{modelValue:H.value,"onUpdate:modelValue":l[5]||(l[5]=D=>H.value=D),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:a(()=>l[17]||(l[17]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",pn,[t(o(Re),{type:"primary",size:"small",onClick:_e,class:"filter-action-button"},{default:a(()=>l[18]||(l[18]=[y("应用")])),_:1}),t(o(Re),{type:"info",size:"small",onClick:be,class:"filter-action-button"},{default:a(()=>l[19]||(l[19]=[y("重置")])),_:1})])])])):M("",!0),e("div",{class:ye(["content-area",{"with-filter":ce.value&&!O.value}])},[E.value?(d(),h("div",vn,z(E.value),1)):(d(),h("div",mn,[O.value?(d(),h("div",gn,[o(p).length>0?(d(),h("div",yn," 显示 "+z(o(p).length)+" 条提交记录 "+z(P.value?"(全部)":"(分页加载，每页20条)"),1)):M("",!0),e("div",hn,[e("div",_n,[t(o(Re),{type:"primary",circle:"",size:"small",onClick:Me,disabled:U.value<=gt},{default:a(()=>[t(v,null,{default:a(()=>[t(o(la))]),_:1})]),_:1},8,["disabled"]),t(o(oa),{modelValue:U.value,"onUpdate:modelValue":l[6]||(l[6]=D=>U.value=D),min:gt,max:Gt,step:Ht,onChange:w,class:"zoom-slider"},null,8,["modelValue"]),t(o(Re),{type:"primary",circle:"",size:"small",onClick:Je,disabled:U.value>=Gt},{default:a(()=>[t(v,null,{default:a(()=>[t(o(na))]),_:1})]),_:1},8,["disabled"]),t(o(Re),{type:"primary",size:"small",onClick:r},{default:a(()=>l[20]||(l[20]=[y(" 自适应大小 ")])),_:1})]),e("div",wn," 缩放: "+z(Math.round(U.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:Q,class:"graph-container"},null,512)])):(d(),h("div",kn,[Ke((d(),N(o(ks),{ref_key:"tableRef",ref:Ie,data:ne.value,stripe:"",border:"",class:"log-table","empty-text":A.value?"加载中...":"没有匹配的提交记录",height:"500",onRowContextmenu:Y},{default:a(()=>[t(o(ht),{label:"提交哈希",width:"100",resizable:""},{default:a(D=>[e("span",{class:"commit-hash",onClick:we=>W(D.row)},z(D.row.hash.substring(0,7)),9,$n)]),_:1}),t(o(ht),{label:"提交信息","min-width":"350"},{default:a(D=>[e("div",bn,[e("div",Cn,[D.row.branch?(d(),h("div",Sn,[(d(!0),h(he,null,Le(D.row.branch.split(","),(we,Qe)=>(d(),N(o(bt),{key:Qe,size:"small",type:me(we),class:"branch-tag"},{default:a(()=>[y(z(S(we)),1)]),_:2},1032,["type"]))),128))])):M("",!0),e("span",Tn,z(D.row.message),1),t(o(Re),{type:"text",icon:o(_t),size:"small",onClick:He(we=>ge(D.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(o(ht),{prop:"date",label:"日期",width:"140",resizable:""}),t(o(ht),{label:"作者",width:"120",resizable:""},{default:a(D=>[t(_,{content:D.row.email,placement:"top","hide-after":1e3},{default:a(()=>[e("span",xn,z(D.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[te,A.value]]),(P.value,M("",!0))]))]))],2),t(o(Ct),{modelValue:X.value,"onUpdate:modelValue":l[7]||(l[7]=D=>X.value=D),title:`提交详情: ${(ve=V.value)!=null&&ve.hash?V.value.hash.substring(0,7):"未知"}`,width:"80%","destroy-on-close":"",class:"commit-detail-dialog"},{default:a(()=>[Ke((d(),h("div",Vn,[V.value?(d(),h("div",Ln,[e("div",zn,[e("div",Bn,[l[24]||(l[24]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Gn,z(V.value.hash),1)]),e("div",Dn,[l[25]||(l[25]=e("span",{class:"item-label"},"作者:",-1)),e("span",Fn,z(V.value.author)+" <"+z(V.value.email)+">",1)]),e("div",Rn,[l[26]||(l[26]=e("span",{class:"item-label"},"日期:",-1)),e("span",jn,z(V.value.date),1)])]),e("div",On,[l[27]||(l[27]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:xe(V.value.message).replace(/\n/g,"<br>")},null,8,Un)])])):M("",!0),e("div",An,[e("div",Mn,[l[28]||(l[28]=e("h3",null,"变更文件",-1)),L.value.length===0?(d(),N(oe,{key:0,description:"没有找到变更文件"})):(d(),h("ul",En,[(d(!0),h(he,null,Le(L.value,D=>(d(),h("li",{key:D,class:ye({"active-file":D===G.value}),onClick:we=>I(V.value.hash,D)},z(D),11,Pn))),128))]))]),e("div",Hn,[G.value?(d(),h("h3",In," 文件差异: "+z(G.value),1)):(d(),h("h3",Nn,"文件差异")),!j.value&&!q.value?(d(),N(oe,{key:2,description:"选择文件查看差异"})):j.value?(d(),h("div",{key:3,innerHTML:$e(j.value),class:"diff-content"},null,8,Jn)):M("",!0)])])])),[[te,q.value]])]),_:1},8,["modelValue","title"])],2),Ke(e("div",{class:ye(["context-menu",{"fullscreen-context-menu":Oe.value}]),style:yt({top:Z.value+"px",left:T.value+"px"})},[e("div",{class:"context-menu-item",onClick:l[8]||(l[8]=D=>W(R.value))},l[29]||(l[29]=[e("i",{class:"el-icon-view"},null,-1),y(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:l[9]||(l[9]=D=>Ee(R.value))},l[30]||(l[30]=[e("i",{class:"el-icon-document-copy"},null,-1),y(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:l[10]||(l[10]=D=>ot(R.value))},l[31]||(l[31]=[e("i",{class:"el-icon-refresh-right"},null,-1),y(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:l[11]||(l[11]=D=>qe(R.value))},l[32]||(l[32]=[e("i",{class:"el-icon-delete"},null,-1),y(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:l[12]||(l[12]=D=>Ye(R.value))},l[33]||(l[33]=[e("i",{class:"el-icon-edit"},null,-1),y(" Cherry-Pick 到当前分支 ")]))],6),[[Dt,m.value]])],64)}}}),qn=St(Wn,[["__scopeId","data-v-22f25691"]]),Yn={class:"dialog-header"},Xn={class:"header-actions"},Kn={class:"dialog-content"},Zn={key:0,class:"loading-state"},Qn={key:2,class:"history-list"},ei=["onClick"],ti={class:"command-info"},si={class:"command-text"},ai={class:"command-meta"},li={class:"timestamp"},oi={class:"duration"},ni={class:"item-actions"},ii={key:0,class:"item-details"},ri={key:0,class:"output-section"},ci={class:"output-header"},ui={class:"output-content"},di={key:0,class:"truncation-notice"},fi={class:"output-header"},pi={class:"output-content"},vi={key:0,class:"truncation-notice"},mi={key:2,class:"output-section error"},gi={class:"output-content"},yi=kt({__name:"CommandHistory",setup(pe){const c=pt(),b=u([]),p=u(!1),g=u(!1),E=u(!1),F=u(!1),A=u(new Set),P=u(!1),de=u(!1);function O(){de.value=!0,b.value.length===0&&Q()}async function Q(){try{if(p.value=!0,c.socket&&c.socket.connected)c.socket.emit("request_full_history");else{const x=await(await fetch("/api/command-history")).json();x.success?b.value=x.history:i.error(`加载命令历史失败: ${x.error}`)}}catch(k){i.error(`加载命令历史失败: ${k.message}`)}finally{p.value=!1}}async function se(){if(b.value.length===0){i.warning("没有可复制的命令历史");return}try{E.value=!0;const k=b.value.map(x=>{let H=`# ${re(x.timestamp)} (耗时: ${X(x.executionTime)}) - ${x.success?"成功":"失败"}
`;if(H+=`${x.command}
`,x.stdout&&(H+=`
# 输出:
${x.stdout}
`),x.stderr){const J=G(x.command)?"输出信息":"错误输出";H+=`
# ${J}:
${x.stderr}
`}return x.error&&(H+=`
# 错误信息:
${x.error}
`),H}).join(`
---

`);await navigator.clipboard.writeText(k),i.success("命令历史已复制到剪贴板")}catch(k){i.error(`复制失败: ${k.message}`)}finally{E.value=!1}}async function ae(){if(b.value.length===0){i.warning("没有可复制的命令");return}try{P.value=!0;const k=b.value.map(x=>x.command).join(`
`);await navigator.clipboard.writeText(k),i.success("命令列表已复制到剪贴板")}catch(k){i.error(`复制失败: ${k.message}`)}finally{P.value=!1}}async function K(){try{if(await Ae.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),g.value=!0,c.socket&&c.socket.connected)c.socket.emit("clear_command_history");else{const x=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();x.success?(b.value=[],i.success("命令历史已清空")):i.error(`清空命令历史失败: ${x.error}`)}}catch(k){k!=="cancel"&&k.toString()!=="Error: cancel"&&i.error(`清空命令历史失败: ${k.message}`)}finally{g.value=!1}}function re(k){return new Date(k).toLocaleString()}function X(k){return k<1e3?`${k}ms`:`${(k/1e3).toFixed(2)}s`}function V(k){A.value.has(k)?A.value.delete(k):A.value.add(k)}function L(k){return A.value.has(k)}async function j(k){try{await navigator.clipboard.writeText(k),i.success("命令已复制到剪贴板")}catch(x){i.error(`复制失败: ${x.message}`)}}function q(k){return k.includes("git push")||k.includes("git-push")}function G(k){return!!q(k)}async function U(k){try{let x="";if(k.stdout&&(x+=`标准输出:
${k.stdout}

`),k.stderr){const H=G(k.command)?"输出信息":"错误输出";x+=`${H}:
${k.stderr}

`}k.error&&(x+=`错误信息:
${k.error}`),await navigator.clipboard.writeText(x.trim()),i.success("输出已复制到剪贴板")}catch(x){i.error(`复制失败: ${x.message}`)}}function ee(){if(!c.socket){console.error("Socket实例不可用");return}c.socket.on("initial_command_history",k=>{b.value=k.history,F.value=!0}),c.socket.on("command_history_update",k=>{b.value.unshift(k.newCommand),b.value.length>100&&b.value.pop(),F.value=!0}),c.socket.on("full_command_history",k=>{b.value=k.history,p.value=!1,F.value=!0}),c.socket.on("command_history_cleared",k=>{k.success&&(b.value=[],i.success("命令历史已清空")),g.value=!1}),c.socket.on("connect",()=>{F.value=!0,i.success("已连接到实时命令历史")}),c.socket.on("disconnect",()=>{F.value=!1,i.warning("实时命令历史连接已断开")})}function ce(){c.socket&&(c.socket.off("initial_command_history"),c.socket.off("command_history_update"),c.socket.off("full_command_history"),c.socket.off("command_history_cleared"))}return vt(()=>{ee(),c.socket||(console.log("尝试初始化Socket连接"),c.initSocketConnection())}),us(()=>{ce()}),(k,x)=>{const H=Re,J=bt,le=$t,$=Kt,m=Yt,Z=Ct;return d(),h(he,null,[t(H,{type:"primary",icon:o(ra),onClick:O,class:"command-history-button",title:"查看Git命令历史"},{default:a(()=>x[1]||(x[1]=[y(" 命令历史 ")])),_:1},8,["icon"]),(d(),N(ca,{to:"body"},[t(Z,{modelValue:de.value,"onUpdate:modelValue":x[0]||(x[0]=T=>de.value=T),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"",class:"command-history-dialog","z-index":99999,"append-to-body":"",modal:""},{header:a(()=>[e("div",Yn,[x[2]||(x[2]=e("h2",null,"Git 命令历史",-1)),e("div",Xn,[t(J,{type:F.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:a(()=>[y(z(F.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(H,{type:"success",icon:o(_t),circle:"",size:"small",onClick:ae,loading:P.value,class:"copy-commands-button",title:"只复制命令列表（不含输出）",disabled:b.value.length===0},null,8,["icon","loading","disabled"]),t(H,{type:"primary",icon:o(_t),circle:"",size:"small",onClick:se,loading:E.value,class:"copy-all-button",title:"复制完整命令历史（含输出）",disabled:b.value.length===0},null,8,["icon","loading","disabled"]),t(H,{type:"danger",icon:o(ys),circle:"",size:"small",onClick:K,loading:g.value,class:"clear-button",title:"清空命令历史",disabled:b.value.length===0},null,8,["icon","loading","disabled"])])])]),default:a(()=>[e("div",Kn,[p.value&&b.value.length===0?(d(),h("div",Zn,[t(le,{class:"loading-icon is-loading"},{default:a(()=>x[3]||(x[3]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),x[4]||(x[4]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):b.value.length===0?(d(),N($,{key:1,description:"暂无命令历史"})):(d(),h("div",Qn,[(d(!0),h(he,null,Le(b.value,(T,R)=>(d(),h("div",{key:R,class:ye(["history-item",{"is-error":!T.success}])},[e("div",{class:"item-header",onClick:ne=>V(R)},[e("div",ti,[e("div",si,[t(J,{size:"small",type:T.success?"success":"danger",effect:"dark",class:"status-tag"},{default:a(()=>[y(z(T.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,z(T.command),1)]),e("div",ai,[e("span",li,z(re(T.timestamp)),1),e("span",oi,"耗时: "+z(X(T.executionTime)),1)])]),e("div",ni,[t(H,{type:"primary",icon:o(_t),circle:"",size:"small",onClick:He(ne=>j(T.command),["stop"]),title:"复制命令"},null,8,["icon","onClick"]),t(H,{type:L(R)?"primary":"default",icon:L(R)?o(ms):o(Wt),circle:"",size:"small",onClick:He(ne=>V(R),["stop"]),title:"展开/收起"},null,8,["type","icon","onClick"])])],8,ei),L(R)?(d(),h("div",ii,[T.stdout?(d(),h("div",ri,[e("div",ci,[x[5]||(x[5]=e("h4",null,"标准输出",-1)),t(H,{type:"primary",icon:o(_t),circle:"",size:"small",onClick:ne=>U(T),title:"复制输出"},null,8,["icon","onClick"])]),e("pre",ui,z(T.stdout),1),T.isStdoutTruncated?(d(),h("div",di,[t(m,{type:"info",closable:!1,"show-icon":""},{default:a(()=>x[6]||(x[6]=[y(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):M("",!0)])):M("",!0),T.stderr?(d(),h("div",{key:1,class:ye(["output-section",G(T.command)?"":"error"])},[e("div",fi,[e("h4",null,z(G(T.command)?"输出信息":"错误输出"),1)]),e("pre",pi,z(T.stderr),1),T.isStderrTruncated?(d(),h("div",vi,[t(m,{type:"info",closable:!1,"show-icon":""},{default:a(()=>[y(z(G(T.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):M("",!0)],2)):M("",!0),T.error?(d(),h("div",mi,[x[7]||(x[7]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",gi,z(T.error),1)])):M("",!0)])):M("",!0)],2))),128))]))])]),_:1},8,["modelValue"])]))],64)}}}),hi=St(yi,[["__scopeId","data-v-3e9f6472"]]),_i="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",wi={class:"main-header"},ki={class:"header-left"},$i=["src"],bi={class:"header-info"},Ci={key:0,id:"user-info"},Si={class:"user-name"},Ti={class:"user-email"},xi={key:1,id:"user-info"},Vi={class:"directory-selector"},Li={class:"directory-display"},zi={class:"directory-icon"},Bi=["title"],Gi={class:"directory-actions"},Di={key:2,class:"command-history-section"},Fi={class:"main-container"},Ri={key:0,class:"loading-container"},ji={class:"loading-spinner"},Oi={key:1,class:"grid-layout"},Ui={class:"git-status-panel"},Ai={key:0,class:"commit-form-panel"},Mi={key:0,class:"card"},Ei={class:"tips"},Pi={key:1,class:"commit-form-panel"},Hi={key:2,class:"log-list-panel"},Ii={class:"dialog-footer"},Ni={class:"main-footer"},Ji={key:0,class:"branch-info"},Wi={class:"branch-wrapper"},qi={key:1,class:"footer-right"},Yi={class:"repo-url"},Xi={class:"dialog-footer"},Ki={class:"directory-input-group"},Zi={class:"recent-directories"},Qi={class:"dialog-footer"},er=kt({__name:"App",setup(pe){const c=u(""),b=u(null),p=u(null),g=pt(),E=Zt(),F=u(!1),A=u("");function P(){E.config&&(c.value=`默认提交信息: ${E.config.defaultCommitMessage}`)}async function de(){try{const r=await(await fetch("/api/current_directory")).json();return A.value=r.directory||"未知目录",r}catch(w){return console.error("获取当前目录失败:",w),{directory:"未知目录",isGitRepo:!1}}}vt(async()=>{console.log("---------- 页面初始化开始 ----------");try{const w=await de();E.isLoaded||await E.loadConfig(),P(),g.isGitRepo=w.isGitRepo===!0,g.lastCheckedTime=Date.now(),g.isGitRepo?await Promise.all([g.getCurrentBranch(!0),g.getAllBranches(),g.getUserInfo(),g.getRemoteUrl(),g.getBranchStatus(!0)]):i.warning("当前目录不是Git仓库，部分功能将不可用")}catch(w){console.error("初始化失败:",w)}finally{F.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{m()},100)}});const O=u(!1),Q=u(""),se=u("");async function ae(){await g.createBranch(Q.value,se.value)&&(O.value=!1,Q.value="",p.value&&p.value.refreshStatus(),b.value&&b.value.refreshLog())}function K(){se.value=g.currentBranch,O.value=!0}async function re(w){await g.changeBranch(w)&&(p.value&&p.value.refreshStatus(),b.value&&b.value.refreshLog())}const X=u(!1),V=u(""),L=u("");function j(){V.value=g.userName,L.value=g.userEmail,X.value=!0}async function q(){if(!V.value||!L.value){i.warning("用户名和邮箱不能为空");return}await g.restoreUserConfig(V.value,L.value)&&(X.value=!1)}async function G(){await g.clearUserConfig()&&(V.value="",L.value="")}let U=!1,ee=!1,ce=!1,k=0,x=0,H="",J="",le=null;function $(){const w=document.querySelector(".grid-layout");if(!w)return;const r=getComputedStyle(w).gridTemplateColumns.split(" "),W=getComputedStyle(w).gridTemplateRows.split(" ");if(r.length>=3&&W.length>=3){const I=parseFloat(r[0]),$e=parseFloat(r[2]),xe=I+$e,ue=I/xe,ge=parseFloat(W[0]),De=parseFloat(W[2]),be=ge+De,_e=ge/be;localStorage.setItem("zen-gitsync-layout-left-ratio",ue.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",_e.toString()),console.log(`布局比例已保存 - 左侧: ${(ue*100).toFixed(0)}%, 上方: ${(_e*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",ue.toString()),console.log(`底部布局比例已保存 - 左侧: ${(ue*100).toFixed(0)}%`)}}function m(){const w=document.querySelector(".grid-layout");if(!w)return;const r=localStorage.getItem("zen-gitsync-layout-left-ratio"),W=localStorage.getItem("zen-gitsync-layout-top-ratio");if(r){const I=parseFloat(r),$e=1-I;w.style.gridTemplateColumns=`${I}fr 8px ${$e}fr`,console.log(`已恢复左侧比例: ${(I*100).toFixed(0)}%`)}else w.style.gridTemplateColumns="1fr 8px 3fr";if(W){const I=parseFloat(W),$e=1-I;w.style.gridTemplateRows=`${I}fr 8px ${$e}fr`,console.log(`已恢复上方比例: ${(I*100).toFixed(0)}%`)}}function Z(w){var I;const r=w.currentTarget;if(!r||!r.id)return;le=r.id,le==="v-resizer"?U=!0:le==="v-resizer-bottom"&&(ee=!0),k=w.clientX;const W=document.querySelector(".grid-layout");H=getComputedStyle(W).gridTemplateColumns,(I=document.getElementById(le))==null||I.classList.add("active"),document.addEventListener("mousemove",T),document.addEventListener("mouseup",R),w.preventDefault()}function T(w){if(!U&&!ee)return;const r=document.querySelector(".grid-layout"),W=w.clientX-k,I=H.split(" ");if(I.length>=3){const $e=parseFloat(I[0]),xe=parseFloat(I[2]),ue=$e+xe,ge=($e+W/r.clientWidth*ue)/ue,De=1-ge,be=.1,_e=.5;ge<be?r.style.gridTemplateColumns=`${be}fr 8px ${1-be}fr`:ge>_e?r.style.gridTemplateColumns=`${_e}fr 8px ${1-_e}fr`:r.style.gridTemplateColumns=`${ge}fr 8px ${De}fr`}}function R(){var w,r;U=!1,ee=!1,(w=document.getElementById("v-resizer"))==null||w.classList.remove("active"),(r=document.getElementById("v-resizer-bottom"))==null||r.classList.remove("active"),document.removeEventListener("mousemove",T),document.removeEventListener("mouseup",R),$()}function ne(w){var W;ce=!0,x=w.clientY;const r=document.querySelector(".grid-layout");J=getComputedStyle(r).gridTemplateRows,(W=document.getElementById("h-resizer"))==null||W.classList.add("active"),document.addEventListener("mousemove",fe),document.addEventListener("mouseup",ke),w.preventDefault()}function fe(w){if(!ce)return;const r=document.querySelector(".grid-layout"),W=w.clientY-x,I=J.split(" ");if(I.length>=3){const $e=parseFloat(I[0]),xe=parseFloat(I[2]),ue=$e+xe,ge=($e+W/r.clientHeight*ue)/ue,De=1-ge,be=.2,_e=.8;ge<be?r.style.gridTemplateRows=`${be}fr 8px ${1-be}fr`:ge>_e?r.style.gridTemplateRows=`${_e}fr 8px ${1-_e}fr`:r.style.gridTemplateRows=`${ge}fr 8px ${De}fr`}}function ke(){var w;ce=!1,(w=document.getElementById("h-resizer"))==null||w.classList.remove("active"),document.removeEventListener("mousemove",fe),document.removeEventListener("mouseup",ke),$()}const Be=u(!1),Se=u(""),S=u(!1),me=u([]);async function Ie(){if(!A.value){i.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(A.value),i.success("已复制目录路径")}catch(w){console.error("复制目录路径失败:",w),i.error(`复制失败: ${w.message}`)}}function Ge(){Se.value=A.value,Be.value=!0,ze()}async function ze(){try{const r=await(await fetch("/api/recent_directories")).json();r.success&&Array.isArray(r.directories)&&(me.value=r.directories)}catch(w){console.error("获取最近目录失败:",w)}}async function Te(){if(!Se.value){i.warning("目录路径不能为空");return}try{S.value=!0;const r=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:Se.value})})).json();r.success?(i.success("已切换工作目录"),A.value=r.directory,Be.value=!1,await Ne(r.directory),g.isGitRepo=r.isGitRepo,r.isGitRepo?(await Promise.all([g.getCurrentBranch(),g.getAllBranches(),g.getUserInfo(),g.getRemoteUrl()]),p.value&&p.value.refreshStatus(),b.value&&b.value.refreshLog()):(i.warning("当前目录不是Git仓库，部分功能将不可用"),g.$reset())):i.error(r.error||"切换目录失败")}catch(w){i.error(`切换目录失败: ${w.message}`)}finally{S.value=!1}}async function Ne(w){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:w})})}catch(r){console.error("保存最近目录失败:",r)}}async function je(){try{if(!A.value){i.warning("当前目录路径为空");return}const r=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:A.value})})).json();r.success?i.success("已在文件管理器中打开目录"):r.error&&i.error(r.error)}catch(w){console.error("打开目录失败:",w),i.error(`打开目录失败: ${w.message}`)}}async function ie(){try{const r=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:Se.value||A.value})})).json();r.success?Je(r):r.error&&i.error(r.error)}catch(w){console.error("浏览目录失败:",w),i.error(`浏览目录失败: ${w.message}`)}}function Je(w){!w||!w.items||Ae.alert(Fe("div",{class:"directory-browser"},[Fe("div",{class:"current-path"},[Fe("span",{class:"path-label"},"当前路径: "),Fe("span",{class:"path-value"},w.path)]),Fe("div",{class:"directory-list"},[w.parentPath?Fe("div",{class:"directory-item parent-dir",onClick:()=>{Me(w.parentPath)}},[Fe("span",{class:"dir-icon"},Fe("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Fe("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Fe("span",{class:"dir-name"},"返回上级目录")]):null,...w.items.map(r=>Fe("div",{class:"directory-item",onClick:()=>{Me(r.path)}},[Fe("span",{class:"dir-icon"},Fe("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Fe("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Fe("span",{class:"dir-name"},r.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:r=>{r==="confirm"&&(Se.value=w.path)}})}async function Me(w){try{Ae.close(),setTimeout(async()=>{try{const W=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:w})})).json();W.success?Je(W):W.error&&i.error(W.error)}catch(r){console.error("浏览目录失败:",r),i.error(`浏览目录失败: ${r.message}`)}},100)}catch(r){console.error("处理目录选择时出错:",r),i.error(`处理目录选择时出错: ${r.message}`)}}return(w,r)=>{const W=$t,I=Re,$e=hs,xe=Xt,ue=ws,ge=Ft,De=Rt,be=_s,_e=Ct,lt=Yt,Ze=bt;return d(),h(he,null,[e("header",wi,[e("div",ki,[e("img",{src:o(_i),alt:"Zen GitSync Logo",class:"logo"},null,8,$i),r[14]||(r[14]=e("h1",null,"Zen GitSync UI",-1))]),e("div",bi,[o(g).userName&&o(g).userEmail?(d(),h("div",Ci,[r[15]||(r[15]=e("span",{class:"user-label"},"用户:",-1)),e("span",Si,z(o(g).userName),1),e("span",Ti,"<"+z(o(g).userEmail)+">",1),t(I,{type:"primary",size:"small",onClick:j,class:"user-settings-btn",circle:""},{default:a(()=>[t(W,null,{default:a(()=>[t(o(wt))]),_:1})]),_:1})])):(d(),h("div",xi,[r[16]||(r[16]=e("span",{class:"user-label"},"用户: ",-1)),r[17]||(r[17]=e("span",{class:"user-warning"},"未配置",-1)),t(I,{type:"primary",size:"small",onClick:j,class:"user-settings-btn",circle:""},{default:a(()=>[t(W,null,{default:a(()=>[t(o(wt))]),_:1})]),_:1})])),e("div",Vi,[e("div",Li,[e("div",zi,[t(W,null,{default:a(()=>[t(o(rs))]),_:1})]),e("div",{class:"directory-path",title:A.value},z(A.value),9,Bi)]),e("div",Gi,[t(I,{type:"primary",size:"small",onClick:Ge,class:"dir-button",circle:"",title:"切换目录"},{default:a(()=>[t(W,null,{default:a(()=>r[18]||(r[18]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),t(I,{type:"success",size:"small",onClick:je,class:"dir-button",circle:"",title:"在资源管理器中打开"},{default:a(()=>[t(W,null,{default:a(()=>r[19]||(r[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})]),_:1}),t(I,{type:"info",size:"small",onClick:Ie,class:"dir-button",circle:"",title:"复制路径"},{default:a(()=>[t(W,null,{default:a(()=>r[20]||(r[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])]),o(g).isGitRepo?(d(),h("div",Di,[t(hi)])):M("",!0)])]),e("main",Fi,[F.value?(d(),h("div",Oi,[e("div",Ui,[t(gl,{ref_key:"gitStatusRef",ref:p,"initial-directory":A.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:Z},null,32),o(g).isGitRepo?(d(),h("div",Ai,[!o(g).userName||!o(g).userEmail?(d(),h("div",Mi,[r[26]||(r[26]=e("h2",null,"Git用户未配置",-1)),r[27]||(r[27]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Ei,[r[24]||(r[24]=e("h3",null,"您可以通过以下方式配置：",-1)),r[25]||(r[25]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[y(' git config --global user.name "您的用户名"'),e("br"),y(' git config --global user.email "您的邮箱" ')])],-1)),t(I,{type:"primary",onClick:j},{default:a(()=>r[23]||(r[23]=[y(" 立即配置 ")])),_:1})])])):(d(),N(an,{key:1}))])):(d(),h("div",Pi,r[28]||(r[28]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:ne},null,32),o(g).isGitRepo?(d(),h("div",Hi,[t(qn,{ref_key:"logListRef",ref:b},null,512)])):M("",!0),t(_e,{modelValue:O.value,"onUpdate:modelValue":r[3]||(r[3]=Y=>O.value=Y),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Ii,[t(I,{onClick:r[2]||(r[2]=Y=>O.value=!1)},{default:a(()=>r[29]||(r[29]=[y("取消")])),_:1}),t(I,{type:"primary",onClick:ae,loading:o(g).isCreatingBranch},{default:a(()=>r[30]||(r[30]=[y(" 创建 ")])),_:1},8,["loading"])])]),default:a(()=>[t(be,{model:{newBranchName:Q.value,selectedBaseBranch:se.value}},{default:a(()=>[t(ue,{label:"新分支名称"},{default:a(()=>[t(xe,{modelValue:Q.value,"onUpdate:modelValue":r[0]||(r[0]=Y=>Q.value=Y),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),t(ue,{label:"基于分支"},{default:a(()=>[t(De,{modelValue:se.value,"onUpdate:modelValue":r[1]||(r[1]=Y=>se.value=Y),placeholder:"选择基础分支",style:{width:"100%"}},{default:a(()=>[(d(!0),h(he,null,Le(o(g).allBranches,Y=>(d(),N(ge,{key:Y,label:Y,value:Y},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(d(),h("div",Ri,[t($e,{class:"loading-card"},{default:a(()=>[e("div",ji,[t(W,{class:"is-loading"},{default:a(()=>r[21]||(r[21]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),r[22]||(r[22]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Ni,[o(g).currentBranch?(d(),h("div",Ji,[e("div",Wi,[r[32]||(r[32]=e("span",{class:"branch-label"},"当前分支:",-1)),t(De,{modelValue:o(g).currentBranch,"onUpdate:modelValue":r[4]||(r[4]=Y=>o(g).currentBranch=Y),size:"small",onChange:re,loading:o(g).isChangingBranch,class:"branch-select"},{default:a(()=>[(d(!0),h(he,null,Le(o(g).allBranches,Y=>(d(),N(ge,{key:Y,label:Y,value:Y},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),t(I,{type:"primary",size:"small",onClick:K,class:"create-branch-btn"},{default:a(()=>[t(W,null,{default:a(()=>[t(o(ua))]),_:1}),r[31]||(r[31]=y(" 新建分支 "))]),_:1})])])):M("",!0),o(g).remoteUrl?(d(),h("div",qi,[r[34]||(r[34]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Yi,z(o(g).remoteUrl),1),t(I,{type:"primary",circle:"",size:"small",onClick:r[5]||(r[5]=Y=>o(g).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:a(()=>[t(W,null,{default:a(()=>r[33]||(r[33]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):M("",!0)]),t(_e,{modelValue:X.value,"onUpdate:modelValue":r[9]||(r[9]=Y=>X.value=Y),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Xi,[t(I,{type:"danger",onClick:G},{default:a(()=>r[36]||(r[36]=[y(" 清除配置 ")])),_:1}),t(I,{onClick:r[8]||(r[8]=Y=>X.value=!1)},{default:a(()=>r[37]||(r[37]=[y("取消")])),_:1}),t(I,{type:"primary",onClick:q},{default:a(()=>r[38]||(r[38]=[y(" 保存 ")])),_:1})])]),default:a(()=>[t(be,null,{default:a(()=>[t(ue,{label:"用户名"},{default:a(()=>[t(xe,{modelValue:V.value,"onUpdate:modelValue":r[6]||(r[6]=Y=>V.value=Y),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),t(ue,{label:"邮箱"},{default:a(()=>[t(xe,{modelValue:L.value,"onUpdate:modelValue":r[7]||(r[7]=Y=>L.value=Y),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),t(ue,null,{default:a(()=>[t(lt,{type:"info",closable:!1,"show-icon":""},{default:a(()=>r[35]||(r[35]=[y(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),t(_e,{modelValue:Be.value,"onUpdate:modelValue":r[13]||(r[13]=Y=>Be.value=Y),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:a(()=>[e("span",Qi,[t(I,{onClick:r[11]||(r[11]=Y=>Be.value=!1)},{default:a(()=>r[40]||(r[40]=[y("取消")])),_:1}),t(I,{type:"primary",onClick:r[12]||(r[12]=Y=>Te()),loading:S.value},{default:a(()=>r[41]||(r[41]=[y(" 切换 ")])),_:1},8,["loading"])])]),default:a(()=>[t(be,null,{default:a(()=>[t(ue,{label:"目录路径"},{default:a(()=>[e("div",Ki,[t(xe,{modelValue:Se.value,"onUpdate:modelValue":r[10]||(r[10]=Y=>Se.value=Y),placeholder:"请输入目录路径"},null,8,["modelValue"]),t(I,{type:"primary",onClick:ie},{default:a(()=>[t(W,null,{default:a(()=>[t(o(rs))]),_:1}),r[39]||(r[39]=y(" 浏览 "))]),_:1})])]),_:1}),me.value.length>0?(d(),N(ue,{key:0,label:"常用目录"},{default:a(()=>[e("div",Zi,[(d(!0),h(he,null,Le(me.value,(Y,qe)=>(d(),N(Ze,{key:qe,class:"recent-dir-tag",onClick:Ye=>Se.value=Y,effect:"plain"},{default:a(()=>[y(z(Y),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):M("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),tr=St(er,[["__scopeId","data-v-0b3bb49c"]]),$s=da(tr);$s.use(fa());$s.mount("#app");

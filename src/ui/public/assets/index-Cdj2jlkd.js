import{d as ws,r as d,c as I,E as n,o as mt,a as bs,l as lo,b as Pe,w as Ge,e as w,f as c,n as vt,g as E,h as e,t as P,i as t,u as a,j as no,k as s,m as A,p as Ft,F as xe,q as Me,s as he,v as De,x as ke,y as io,z as tt,A as Et,B as Lt,C as ro,D as es,G as D,H as as,I as at,J as It,K as xt,L as Tt,M as ks,N as ls,O as ns,P as $s,Q as ut,R as ts,S as ft,T as co,U as is,V as zt,W as Cs,X as ss,Y as uo,Z as Ye,_ as Ss,$ as rs,a0 as Bt,a1 as Ts,a2 as Nt,a3 as fo,a4 as Vs,a5 as po,a6 as ct,a7 as pt,a8 as mo,a9 as vo,aa as Fs,ab as hs,ac as go,ad as At,ae as Ut,af as Vt,ag as ho,ah as yo,ai as _o,aj as Ls,ak as xs,al as os,am as wo,an as bo,ao as ko,ap as Bs,aq as rt,ar as $o,as as Co,at as So,au as To,av as Vo,aw as Fo,ax as Lo,ay as xo,az as Bo,aA as zo,aB as Rt,aC as Po,aD as jo,aE as zs,aF as Gt,aG as ys,aH as _s,aI as Oo,aJ as Do,aK as Ne,aL as Ro,aM as Go}from"./vendor-3cU_OMlZ.js";(function(){const k=document.createElement("link").relList;if(k&&k.supports&&k.supports("modulepreload"))return;for(const g of document.querySelectorAll('link[rel="modulepreload"]'))i(g);new MutationObserver(g=>{for(const f of g)if(f.type==="childList")for(const j of f.addedNodes)j.tagName==="LINK"&&j.rel==="modulepreload"&&i(j)}).observe(document,{childList:!0,subtree:!0});function o(g){const f={};return g.integrity&&(f.integrity=g.integrity),g.referrerPolicy&&(f.referrerPolicy=g.referrerPolicy),g.crossOrigin==="use-credentials"?f.credentials="include":g.crossOrigin==="anonymous"?f.credentials="omit":f.credentials="same-origin",f}function i(g){if(g.ep)return;g.ep=!0;const f=o(g);fetch(g.href,f)}})();const it=ws("config",()=>{const N=d(""),k=d([]),o=d([]),i=d([]),g=d([]),f=d(!1),j=d(!1),_=I(()=>({defaultCommitMessage:N.value,descriptionTemplates:k.value,scopeTemplates:o.value,messageTemplates:i.value,lockedFiles:g.value}));async function G(V=!1){if(!V&&j.value&&!f.value)return console.log("使用缓存的配置信息"),_.value;try{f.value=!0,console.log("加载配置信息...");const C=await(await fetch("/api/config/getConfig")).json();return N.value=C.defaultCommitMessage||"",k.value=C.descriptionTemplates||[],o.value=C.scopeTemplates||[],i.value=C.messageTemplates||[],g.value=C.lockedFiles||[],j.value=!0,console.log("配置信息加载完成"),_.value}catch(x){return console.error("加载配置失败:",x),n.error(`加载配置失败: ${x.message}`),null}finally{f.value=!1}}async function te(V){try{const C=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:V})})).json();return C.success?(N.value=V,n.success("默认提交信息已保存"),!0):(n.error(`保存失败: ${C.error}`),!1)}catch(x){return n.error(`保存失败: ${x.message}`),!1}}async function H(V,x){try{const K=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:x})})).json();return K.success?(x==="description"?k.value.includes(V)||k.value.push(V):x==="scope"?o.value.includes(V)||o.value.push(V):x==="message"&&(i.value.includes(V)||i.value.push(V)),n.success("模板已保存"),!0):(n.error(`保存模板失败: ${K.error}`),!1)}catch(C){return n.error(`保存模板失败: ${C.message}`),!1}}async function M(V,x){try{const K=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:x})})).json();return K.success?(x==="description"?k.value=k.value.filter(le=>le!==V):x==="scope"?o.value=o.value.filter(le=>le!==V):x==="message"&&(i.value=i.value.filter(le=>le!==V)),n.success("模板已删除"),!0):(n.error(`删除模板失败: ${K.error}`),!1)}catch(C){return n.error(`删除模板失败: ${C.message}`),!1}}async function y(V,x,C){try{const le=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:V,newTemplate:x,type:C})})).json();if(le.success){if(C==="description"){const R=k.value.indexOf(V);R!==-1&&(k.value[R]=x)}else if(C==="scope"){const R=o.value.indexOf(V);R!==-1&&(o.value[R]=x)}else if(C==="message"){const R=i.value.indexOf(V);R!==-1&&(i.value[R]=x)}return n.success("模板已更新"),!0}else return n.error(`更新模板失败: ${le.error}`),!1}catch(K){return n.error(`更新模板失败: ${K.message}`),!1}}async function J(){try{const x=await(await fetch("/api/locked-files")).json();return x.success?(g.value=x.lockedFiles||[],x.lockedFiles):(n.error(`加载锁定文件列表失败: ${x.error}`),[])}catch(V){return console.error("加载锁定文件列表失败:",V),n.error(`加载锁定文件列表失败: ${V.message}`),[]}}async function S(V){try{const C=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return C.success?(await J(),n.success(`文件已锁定: ${V}`),!0):(n.error(`锁定文件失败: ${C.error}`),!1)}catch(x){return console.error("锁定文件失败:",x),n.error(`锁定文件失败: ${x.message}`),!1}}async function q(V){try{const C=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return C.success?(await J(),n.success(`文件已解锁: ${V}`),!0):(n.error(`解锁文件失败: ${C.error}`),!1)}catch(x){return console.error("解锁文件失败:",x),n.error(`解锁文件失败: ${x.message}`),!1}}async function X(V){try{const C=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return C.success?C.isLocked:(console.error("检查文件锁定状态失败:",C.error),!1)}catch(x){return console.error("检查文件锁定状态失败:",x),!1}}return{defaultCommitMessage:N,descriptionTemplates:k,scopeTemplates:o,messageTemplates:i,lockedFiles:g,isLoading:f,isLoaded:j,config:_,loadConfig:G,saveDefaultMessage:te,saveTemplate:H,deleteTemplate:M,updateTemplate:y,loadLockedFiles:J,lockFile:S,unlockFile:q,isFileLocked:X}}),Yt=800;function Mo(){const N=window.location.port||"80";if(N==="5173"||N==="4173"||N==="5544"){const o="3001";return console.log(`开发环境：从环境变量读取后端端口 ${o}`),parseInt(o,10)}const k=parseInt(N,10);return console.log(`生产环境：使用当前页面端口 ${k}`),k}const Ao=Mo(),st=ws("git",()=>{const N=it(),k=d(""),o=d([]),i=d(""),g=d(""),f=d(!1),j=d(!1),_=d(!1),G=d(0),te=d(""),H=d(!1),M=d(!1),y=d(!1),J=d(!1),S=d(!1),q=d(0),X=d(0),V=d(!1),x=d(""),C=d(0),K=d(0),le=d(!0),R=d(null),ve=d(""),Q=d(""),h=d([]),z=d({staged:[],unstaged:[],untracked:[]}),U=d([]),fe=d(!1),pe=d(!1),me=d(!1),ye=d(!1),ee=d(!1),se=d([]),de=d(!1),we=d(!1),B=d(!1),T=d(!1);function ie(){k.value="",o.value=[],i.value="",g.value="",f.value=!1,j.value=!1,_.value=!1,G.value=0,q.value=0,X.value=0,V.value=!1,x.value="",C.value=0,K.value=0,M.value=!1,y.value=!1,J.value=!1,S.value=!1,te.value="",H.value=!1,h.value=[],z.value={staged:[],unstaged:[],untracked:[]},U.value=[],fe.value=!1,pe.value=!1,me.value=!1,ye.value=!1,ee.value=!1}async function Z(u=!1,m=!1){if(!_.value)return;const L=Date.now();if(!u&&!m&&L-C.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let $="/api/branch-status";const ue=[];u&&ue.push("force=true"),m&&ue.push("countOnly=true"),ue.length>0&&($+="?"+ue.join("&"));const He=await(await fetch($)).json();He&&(q.value=He.ahead||0,X.value=He.behind||0,V.value=He.hasUpstream||!1,x.value=He.upstreamBranch||"",C.value=L,console.log(`分支状态更新：领先 ${q.value} 个提交，落后 ${X.value} 个提交，上游分支：${V.value?x.value:"无"}`))}catch($){console.error("获取分支状态失败:",$),q.value=0,X.value=0,V.value=!1,x.value=""}}async function ge(){const u=Date.now();if(u-G.value<1e3)return console.log("使用缓存的Git仓库状态:",_.value?"是":"不是"),_.value;try{const L=await(await fetch("/api/current_directory")).json();return _.value=L.isGitRepo===!0,G.value=u,console.log(`当前目录${_.value?"是":"不是"}Git仓库`),_.value}catch(m){return console.error("检查Git仓库状态失败:",m),_.value=!1,G.value=u,!1}}async function be(u=!1){try{const $=await(await fetch(u?"/api/branch?force=true":"/api/branch")).json();$.branch&&(k.value=$.branch,console.log(`当前分支更新为: ${$.branch}${u?" (强制刷新)":""}`))}catch(m){console.error("获取分支信息失败:",m)}}async function Ae(){if(_.value)try{console.log("获取所有分支...");const m=await(await fetch("/api/branches")).json();m.branches&&Array.isArray(m.branches)&&(o.value=m.branches,K.value=Date.now(),console.log(`获取到${m.branches.length}个分支`))}catch(u){console.error("获取所有分支信息失败:",u)}}async function Oe(u){console.log("切换到分支:",u);try{f.value=!0;const L=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return L.success?(n({message:`已切换到分支: ${u}`,type:"success"}),await be(!0),await Z(!0),!0):(n({message:`切换分支失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`切换分支失败: ${m.message}`,type:"error"}),!1}finally{f.value=!1}}async function $e(){try{const m=await(await fetch("/api/user-info")).json();m.name&&m.email&&(i.value=m.name,g.value=m.email)}catch(u){console.error("获取用户信息失败:",u)}}async function ce(u,m){if(!u.trim())return n({message:"分支名称不能为空",type:"warning"}),!1;try{j.value=!0;const $=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:u,baseBranch:m||k.value})})).json();return $.success?(n({message:`已创建并切换到分支: ${u}`,type:"success"}),await be(!0),await Z(!0),await Ae(),!0):(n({message:`创建分支失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`创建分支失败: ${L.message}`,type:"error"}),!1}finally{j.value=!1}}async function Be(){try{const m=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return m.success?(i.value="",g.value="",n({message:"已清除Git用户配置",type:"success"}),!0):(n({message:`清除配置失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`清除配置失败: ${u.message}`,type:"error"}),!1}}async function ot(u,m){try{const $=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:u,email:m})})).json();return $.success?(i.value=u,g.value=m,n({message:"已恢复Git用户配置",type:"success"}),!0):(n({message:`恢复配置失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`恢复配置失败: ${L.message}`,type:"error"}),!1}}async function lt(){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{y.value=!0;const m=await(await fetch("/api/pull",{method:"POST"})).json();return m.success?(n({message:"拉取成功",type:"success"}),await Z(),!0):(m.needsMerge?n({message:`需要合并更改: ${m.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):n({message:`拉取失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`拉取失败: ${u.message}`,type:"error"}),!1}finally{y.value=!1}}async function We(){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{J.value=!0;const m=await(await fetch("/api/fetch-all",{method:"POST"})).json();return m.success?(n({message:"获取所有远程分支信息成功",type:"success"}),await Z(),!0):(n({message:`获取远程分支信息失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`获取远程分支信息失败: ${u.message}`,type:"error"}),!1}finally{J.value=!1}}async function Xe(){R.value&&R.value.disconnect();try{const u=`http://localhost:${Ao}`;if(console.log("尝试连接Socket.IO服务器:",u),R.value=lo(u,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!R.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO客户端已创建，开始注册事件监听器..."),R.value.on("connect",()=>{var m;console.log("✅ Socket.IO连接成功，事件监听器已生效，Socket ID:",(m=R.value)==null?void 0:m.id),le.value&&R.value&&R.value.emit("start_monitoring")}),R.value.on("project_info",m=>{ve.value=m.projectPath,Q.value=m.projectRoomId,console.log(`当前项目: ${m.projectPath}`),console.log(`房间ID: ${m.projectRoomId}`)}),R.value.on("project_changed",m=>{console.log(`项目已切换: ${m.oldProjectPath} -> ${m.newProjectPath}`),ve.value=m.newProjectPath,Q.value=m.newProjectRoomId,R.value&&R.value.emit("join_room",m.newProjectRoomId),console.log(`已加入新项目房间: ${m.newProjectRoomId}`)}),R.value.on("disconnect",m=>{console.log("与Socket.IO服务器断开连接:",m)}),R.value.on("git_status_update",m=>{if(le.value){if(console.log("✅ 成功监听到 git_status_update 事件:",new Date().toLocaleTimeString()),console.log("git_status_update data ==>",m),console.log("currentProjectPath.value ==>",ve.value),console.log("data.projectPath ==>",m.projectPath),m.projectPath&&ve.value&&m.projectPath!==ve.value){console.log(`忽略不同项目的状态更新: ${m.projectPath}`);return}console.log("正在更新 Git 文件状态..."),m.porcelain!==void 0&&r(m.porcelain)}}),R.value.on("monitoring_status",m=>{console.log("文件监控状态:",m.active?"已启动":"已停止")}),R.value.on("connect_error",m=>{console.error("Socket连接错误:",m.message)}),R.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),R.value.on("reconnect",m=>{var L;console.log(`Socket重连成功，尝试次数: ${m}`),le.value&&(console.log("重连后重新发送start_monitoring请求"),(L=R.value)==null||L.emit("start_monitoring"))}),R.value.on("reconnect_attempt",m=>{console.log(`Socket尝试重连，第 ${m} 次尝试`)}),R.value.on("reconnect_error",m=>{console.error("Socket重连错误:",m.message)}),R.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),console.log("Socket.IO事件监听器注册完成：connect, project_info, project_changed, git_status_update, monitoring_status"),R.value&&!R.value.connected&&(console.log("Socket未连接，尝试手动连接..."),R.value.connect())}catch(u){console.error("Socket.IO连接初始化失败:",u)}}function O(){if(console.log("toggleAutoUpdate调用，当前值:",le.value),!R.value){console.error("无法切换自动更新状态: socket连接不存在"),n.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),Xe(),localStorage.setItem("zen-gitsync-auto-update",le.value.toString());return}try{le.value?(console.log("发送start_monitoring命令..."),R.value.emit("start_monitoring"),n.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),R.value.emit("stop_monitoring"),n.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",le.value.toString()),console.log("已保存自动更新设置到本地存储:",le.value)}catch(u){console.error("切换自动更新状态时出错:",u),n.error(`切换自动更新失败: ${u.message}`)}}function r(u){if(u===void 0||u===""){U.value=[];return}const m=u.split(`
`),L=[];for(const $ of m){const ue=$.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(ue){let ze="";const He=ue[1],qe=He.charAt(0),Pt=He.charAt(1);qe==="A"||qe==="M"||qe==="D"||qe==="R"?ze="added":qe===" "&&Pt==="M"?ze="modified":qe===" "&&Pt==="D"?ze="deleted":He==="??"?ze="untracked":ze="other",L.push({path:ue[2],type:ze})}}U.value=L}async function W(u=!0){if(!_.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{fe.value=!0,console.log("开始加载提交历史...");const m=new Date().getTime(),$=await(await fetch(`/api/log?page=1&_t=${m}`)).json();$&&$.data&&Array.isArray($.data)?(h.value=[...$.data],console.log(`提交历史加载完成，共 ${h.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",$),h.value=[])}catch(m){console.error("获取提交历史失败:",m),u&&n({message:`获取提交历史失败: ${m.message}`,type:"error"})}finally{fe.value=!1}}async function oe(){if(!_.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{pe.value=!0,await Ce()}catch(u){console.error("获取Git状态失败:",u),n({message:`获取Git状态失败: ${u.message}`,type:"error"})}finally{pe.value=!1}}async function Ce(){if(console.log("开始获取Git状态(porcelain格式)..."),!_.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const m=await(await fetch("/api/status_porcelain")).json();m.status!==void 0?r(m.status):U.value=[]}catch(u){console.error("获取Git状态(porcelain)失败:",u),n({message:`获取Git状态(porcelain)失败: ${u.message}`,type:"error"}),U.value=[]}}async function Ue(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const u=U.value.filter(m=>{const L=m.path.replace(/\\/g,"/");return!N.lockedFiles.some(ue=>{const ze=ue.replace(/\\/g,"/");return L===ze})});if(u.length===0)return n({message:"没有需要暂存的文件（所有文件都被锁定）",type:"warning"}),!1;if(u.length===U.value.length){const L=await(await fetch("/api/add",{method:"POST"})).json();return L.success?(n({message:"文件已添加到暂存区",type:"success"}),!0):(n({message:`添加文件失败: ${L.error}`,type:"error"}),!1)}else{const L=await(await fetch("/api/add-filtered",{method:"POST"})).json();if(L.success){const $=U.value.length-u.length;let ue=`已添加 ${u.length} 个文件到暂存区`;return $>0&&(ue+=`，跳过 ${$} 个锁定文件`),n({message:ue,type:"success"}),!0}else return n({message:`添加文件失败: ${L.error}`,type:"error"}),!1}}catch(u){return n({message:`添加文件失败: ${u.message}`,type:"error"}),!1}finally{me.value=!1}}async function Te(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const m=await(await fetch("/api/add-all",{method:"POST"})).json();return m.success?(n({message:"所有文件已添加到暂存区",type:"success"}),!0):(n({message:`添加文件失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`添加文件失败: ${u.message}`,type:"error"}),!1}finally{me.value=!1}}async function _e(u){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const L=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return L.success?(n({message:"文件已暂存",type:"success"}),oe(),!0):(n({message:`暂存文件失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`暂存文件失败: ${m.message}`,type:"error"}),!1}finally{me.value=!1}}async function Ee(u){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{ee.value=!0;const L=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return L.success?(n({message:"已取消暂存文件",type:"success"}),oe(),!0):(n({message:`取消暂存失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`取消暂存失败: ${m.message}`,type:"error"}),!1}finally{ee.value=!1}}function Ve(u){return new Promise(m=>setTimeout(m,u))}async function Se(u,m=!1){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{ye.value=!0;const $=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,hasNewlines:u.includes(`
`),noVerify:m})})).json();return $.success?(n({message:"提交成功",type:"success"}),!0):(n({message:`commitChanges 提交失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`提交失败: ${L.message}`,type:"error"}),!1}finally{ye.value=!1}}async function ne(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{M.value=!0;const m=await(await fetch("/api/push",{method:"POST"})).json();return m.success?(q.value=0,X.value=0,await Promise.all([oe(),W()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(n({message:`推送失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`推送失败: ${u.message}`,type:"error"}),!1}finally{M.value=!1}}async function Re(u,m={}){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!u)return n({message:"请选择要合并的分支",type:"warning"}),!1;if(u===k.value)return n({message:"不能合并当前分支到自身",type:"warning"}),!1;try{S.value=!0;const L=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u,...m})}),$=await L.json();return L.status===409?(n({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):$.success?(n({message:`成功合并分支 ${u} 到 ${k.value}`,type:"success"}),await oe(),await Z(),!0):(n({message:`合并分支失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`合并分支失败: ${L.message}`,type:"error"}),!1}finally{S.value=!1}}async function Je(u,m=!1){if(console.log("开始暂存并提交操作..."),!await Ue())return!1;console.log("暂存完成，等待Git操作完成..."),await Ve(Yt),console.log("开始提交更改...");const $=await Se(u,m);return console.log("暂存并提交操作完成"),$}async function Ze(u,m=!1){try{if(console.log("开始暂存文件..."),!await Ue()||(console.log("暂存完成，等待Git操作完成..."),await Ve(Yt),console.log("开始提交更改..."),!await Se(u,m)))return!1;console.log("提交完成，等待Git操作完成..."),await Ve(Yt),console.log("开始推送到远程...");const ue=await ne();return console.log("一键推送操作完成，状态已统一刷新"),ue}catch(L){console.error("一键推送操作失败:",L);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&n({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch($){console.error("清理锁定文件失败:",$)}n({message:`操作失败: ${L.message}`,type:"error"});try{await Promise.all([oe(),W(),Z()])}catch($){console.error("刷新状态失败:",$)}return!1}}async function gt(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{ee.value=!0;const m=await(await fetch("/api/reset-head",{method:"POST"})).json();return m.success?(n({message:"已重置暂存区",type:"success"}),oe(),!0):(n({message:`重置暂存区失败: ${m.error}`,type:"error"}),!1)}catch(u){return n({message:`重置暂存区失败: ${u.message}`,type:"error"}),!1}finally{ee.value=!1}}async function ht(u){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{ee.value=!0;const L=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return L.success?(n({message:`已重置分支 ${u} 到远程状态`,type:"success"}),oe(),W(),!0):(n({message:`重置分支失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`重置分支失败: ${m.message}`,type:"error"}),!1}finally{ee.value=!1}}async function yt(){if(_.value)try{H.value=!0,console.log("获取远程仓库地址...");const m=await(await fetch("/api/remote-url")).json();m.success?(te.value=m.url||"",console.log(`获取到远程仓库地址: ${te.value}`)):(console.warn("获取远程仓库地址失败:",m.error),te.value="")}catch(u){console.error("获取远程仓库地址失败:",u),te.value=""}finally{H.value=!1}}async function _t(){if(!te.value)return n({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(te.value),n({message:"已复制远程仓库地址",type:"success"}),!0}catch(u){return console.error("复制远程仓库地址失败:",u),n({message:`复制失败: ${u.message}`,type:"error"}),!1}}mt(()=>{const u=localStorage.getItem("zen-gitsync-auto-update");u!==null&&(le.value=u==="true"),Xe()});function nt(){R.value&&(R.value.disconnect(),R.value=null)}bs(()=>{nt()});async function Ie(){if(!_.value)return n.warning("当前目录不是Git仓库"),[];try{de.value=!0;const m=await(await fetch("/api/stash-list")).json();return m.success?(se.value=m.stashes,m.stashes):(n.error(`获取stash列表失败: ${m.error}`),[])}catch(u){return console.error("获取stash列表失败:",u),n.error(`获取stash列表失败: ${u.message}`),[]}finally{de.value=!1}}async function wt(u,m=!1,L=!0){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{T.value=!0;const ue=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,includeUntracked:m,excludeLocked:L})})).json();return ue.success?(n.success(ue.message),await Ie(),await oe(),!0):(n.warning(ue.message),!1)}catch($){return console.error("保存stash失败:",$),n.error(`保存stash失败: ${$.message}`),!1}finally{T.value=!1}}async function b(u,m=!1){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{we.value=!0;const L=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u,pop:m})}),$=await L.json();return L.status===409?(n.warning("应用stash时发生冲突，请手动解决"),!1):$.success?(n.success($.message),await Ie(),await oe(),!0):(n.error(`应用stash失败: ${$.error}`),!1)}catch(L){return console.error("应用stash失败:",L),n.error(`应用stash失败: ${L.message}`),!1}finally{we.value=!1}}async function v(u){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{B.value=!0;const L=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u})})).json();return L.success?(n.success(L.message),await Ie(),!0):(n.error(`删除stash失败: ${L.error}`),!1)}catch(m){return console.error("删除stash失败:",m),n.error(`删除stash失败: ${m.message}`),!1}finally{B.value=!1}}async function Y(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{B.value=!0;const m=await(await fetch("/api/stash-clear",{method:"POST"})).json();return m.success?(n.success(m.message),se.value=[],!0):(n.error(`清空stash失败: ${m.error}`),!1)}catch(u){return console.error("清空stash失败:",u),n.error(`清空stash失败: ${u.message}`),!1}finally{B.value=!1}}return{currentBranch:k,allBranches:o,userName:i,userEmail:g,isChangingBranch:f,isCreatingBranch:j,isGitRepo:_,lastCheckedTime:G,branchAhead:q,branchBehind:X,hasUpstream:V,upstreamBranch:x,lastBranchStatusTime:C,lastBranchesTime:K,remoteUrl:te,isLoadingRemoteUrl:H,stashes:se,isLoadingStashes:de,isApplyingStash:we,isDroppingStash:B,isSavingStash:T,log:h,status:z,fileList:U,isLoadingLog:fe,isLoadingStatus:pe,isAddingFiles:me,isCommiting:ye,isResetting:ee,autoUpdateEnabled:le,isPushing:M,isGitPulling:y,isGitFetching:J,isGitMerging:S,$reset:ie,checkGitRepo:ge,getCurrentBranch:be,getAllBranches:Ae,changeBranch:Oe,getUserInfo:$e,createBranch:ce,clearUserConfig:Be,restoreUserConfig:ot,getBranchStatus:Z,gitPull:lt,gitFetchAll:We,initSocketConnection:Xe,toggleAutoUpdate:O,parseStatusPorcelain:r,fetchLog:W,fetchStatus:oe,fetchStatusPorcelain:Ce,addToStage:Ue,addAllToStage:Te,addFileToStage:_e,unstageFile:Ee,commitChanges:Se,pushToRemote:ne,addAndCommit:Je,addCommitAndPush:Ze,resetHead:gt,resetToRemote:ht,getRemoteUrl:yt,copyRemoteUrl:_t,mergeBranch:Re,getStashList:Ie,saveStash:wt,applyStash:b,dropStash:v,clearAllStashes:Y,socket:R,disconnectSocket:nt}});function Uo(N){return N.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function Eo(N){return N?N.split(`
`).map(o=>{const i=Uo(o);return o.startsWith("diff --git")||o.startsWith("diff --cc")||o.startsWith("diff --combined")?`<div class="diff-header">${i}</div>`:o.startsWith("---")?`<div class="diff-old-file">${i}</div>`:o.startsWith("+++")?`<div class="diff-new-file">${i}</div>`:o.startsWith("@@")?`<div class="diff-hunk-header">${i}</div>`:o.startsWith("+")?`<div class="diff-added">${i}</div>`:o.startsWith("-")?`<div class="diff-removed">${i}</div>`:`<div class="diff-context">${i}</div>`}).join(""):""}function Io(N){return N?N.trim():"(无提交信息)"}function No(N){if(!N)return"";const k=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,o=N.match(k);return o?o[3].trim():N.trim()}const Ho="/assets/vscode-twqwGmNt.webp",Jo={key:0,class:"files-panel"},Wo={class:"panel-header"},qo={key:0,class:"file-count"},Yo={class:"files-list"},Ko=["onClick"],Qo={class:"file-name"},Xo={class:"panel-header"},Zo={class:"header-right"},ea={class:"selected-file"},ta={class:"path-dir"},sa={class:"path-name"},oa={key:1,class:"action-buttons"},aa=["src"],la={class:"diff-content"},na=["innerHTML"],ia=Pe({__name:"FileDiffViewer",props:{files:{},emptyText:{default:"没有找到变更文件"},diffContent:{default:""},selectedFile:{default:""},height:{default:"100%"},showFileList:{type:Boolean,default:!0},context:{default:"git-status"},showOpenButton:{type:Boolean,default:!0}},emits:["file-select","open-file","open-with-vscode"],setup(N,{emit:k}){const o=N,i=k,g=d(""),f=I(()=>o.selectedFile||g.value),j=I(()=>o.files.map(S=>({...S,displayName:S.name||S.path.split("/").pop()||S.path}))),_=I(()=>o.diffContent&&o.diffContent.trim()!==""),G=I(()=>{if(!f.value)return"";const S=f.value.split("/");return S.slice(0,-1).join("/")+(S.length>1?"/":"")}),te=I(()=>{if(!f.value)return"";const S=f.value.split("/");return S[S.length-1]||f.value});function H(S){g.value=S,i("file-select",S)}function M(){if(!f.value){n.warning("请先选择一个文件");return}i("open-file",f.value,o.context)}function y(){if(!f.value){n.warning("请先选择一个文件");return}i("open-with-vscode",f.value,o.context)}const J=I(()=>{switch(o.context){case"git-status":return"在系统默认编辑器中打开文件";case"commit-detail":return"打开该提交时的文件版本";case"stash-detail":return"打开该stash中的文件版本";default:return"打开文件"}});return Ge(()=>o.selectedFile,S=>{S!==void 0&&(g.value=S)}),Ge(()=>o.files,S=>{if(S.length>0&&!f.value){const q=S[0];H(q.path)}},{immediate:!0}),(S,q)=>(c(),w("div",{class:"file-diff-viewer",style:vt({height:S.height})},[S.showFileList?(c(),w("div",Jo,[e("div",Wo,[q[0]||(q[0]=e("h4",null,"变更文件",-1)),S.files.length>0?(c(),w("span",qo,"("+P(S.files.length)+")",1)):E("",!0)]),e("div",Yo,[t(a(no),{height:"100%"},{default:s(()=>[S.files.length===0?(c(),A(a(Ft),{key:0,description:S.emptyText,"image-size":60},null,8,["description"])):E("",!0),(c(!0),w(xe,null,Me(j.value,X=>(c(),w("div",{key:X.path,class:he(["file-item",{active:X.path===f.value,[`file-type-${X.type}`]:X.type,"is-locked":X.locked}]),onClick:V=>H(X.path)},[t(a(tt),{class:"file-icon"},{default:s(()=>[t(a(Et))]),_:1}),t(a(De),{content:X.path,placement:"top",disabled:X.displayName.length<=35,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",Qo,P(X.displayName),1)]),_:2},1032,["content","disabled"]),X.locked?(c(),A(a(De),{key:0,content:"该文件已被锁定，提交时会被跳过",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(a(tt),{class:"lock-icon",color:"#E6A23C"},{default:s(()=>[t(a(Lt))]),_:1})]),_:1})):E("",!0)],10,Ko))),128))]),_:1})])])):E("",!0),e("div",{class:he(["diff-panel",{"full-width":!S.showFileList}])},[e("div",Xo,[q[1]||(q[1]=e("h4",null,"文件差异",-1)),e("div",Zo,[f.value?(c(),A(a(De),{key:0,content:f.value,placement:"top",effect:"light","hide-after":1e3,"show-after":200},{default:s(()=>[e("span",ea,[e("span",ta,P(G.value),1),e("span",sa,P(te.value),1)])]),_:1},8,["content"])):E("",!0),S.showOpenButton&&f.value?(c(),w("div",oa,[t(a(De),{content:J.value,placement:"top",effect:"light"},{default:s(()=>[t(a(ke),{type:"primary",size:"small",icon:a(io),onClick:M,class:"open-file-btn"},null,8,["icon"])]),_:1},8,["content"]),t(a(De),{content:"用VSCode打开文件",placement:"top",effect:"light"},{default:s(()=>[t(a(ke),{type:"success",size:"small",onClick:y,class:"vscode-btn"},{default:s(()=>[e("img",{src:a(Ho),alt:"VSCode",class:"vscode-icon"},null,8,aa)]),_:1})]),_:1})])):E("",!0)])]),e("div",la,[_.value?(c(),w("div",{key:1,class:"diff-text",innerHTML:a(Eo)(S.diffContent)},null,8,na)):(c(),A(a(Ft),{key:0,description:f.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])],2)],4))}}),je=(N,k)=>{const o=N.__vccOpts||N;for(const[i,g]of k)o[i]=g;return o},cs=je(ia,[["__scopeId","data-v-5053ef5f"]]),ra={class:"common-dialog__footer"},ca=Pe({__name:"CommonDialog",props:{modelValue:{type:Boolean},title:{},size:{default:"medium"},type:{default:"default"},width:{},height:{},top:{default:"80px"},closeOnClickModal:{type:Boolean,default:!1},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},customClass:{},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},heightMode:{default:"max"},heightOffset:{default:"160px"},showFooter:{type:Boolean,default:!1},confirmText:{default:"确定"},cancelText:{default:"取消"},showCancel:{type:Boolean,default:!0},confirmLoading:{type:Boolean,default:!1}},emits:["update:modelValue","confirm","cancel","close","opened","closed"],setup(N,{emit:k}){const o=N,i=k,g=I(()=>{if(o.width)return o.width;switch(o.size){case"small":return"30%";case"medium":return"50%";case"large":return"80%";case"extra-large":return"90%";default:return"50%"}}),f=I(()=>{const y=[];return o.customClass&&y.push(o.customClass),o.type==="flex"&&y.push("common-dialog--flex"),o.type==="full-height"&&y.push("common-dialog--full-height"),y.join(" ")}),j=I(()=>{const y=`calc(100% - ${o.heightOffset})`;return o.heightMode==="fixed"?{height:y}:{maxHeight:y}});function _(){i("update:modelValue",!1),i("close")}function G(){i("confirm")}function te(){i("cancel"),_()}function H(){i("opened")}function M(){i("closed")}return(y,J)=>{const S=ke;return c(),A(a(as),{"model-value":y.modelValue,title:y.title,width:g.value,top:y.top,style:vt(j.value),"close-on-click-modal":y.closeOnClickModal,"close-on-press-escape":y.closeOnPressEscape,"destroy-on-close":y.destroyOnClose,draggable:y.draggable,class:he(f.value),"append-to-body":y.appendToBody,"lock-scroll":y.lockScroll,onClose:_,onOpened:H,onClosed:M},ro({default:s(()=>[es(y.$slots,"default",{},void 0,!0)]),_:2},[y.showFooter||y.$slots.footer?{name:"footer",fn:s(()=>[es(y.$slots,"footer",{},()=>[e("div",ra,[y.showCancel?(c(),A(S,{key:0,onClick:te},{default:s(()=>[D(P(y.cancelText),1)]),_:1})):E("",!0),t(S,{type:"primary",loading:y.confirmLoading,onClick:G},{default:s(()=>[D(P(y.confirmText),1)]),_:1},8,["loading"])])],!0)]),key:"0"}:void 0]),1032,["model-value","title","width","top","style","close-on-click-modal","close-on-press-escape","destroy-on-close","draggable","class","append-to-body","lock-scroll"])}}}),Qe=je(ca,[["__scopeId","data-v-e76f4ba1"]]),ua={key:0,class:"file-group"},da={class:"file-list"},fa=["onClick"],pa={class:"file-info"},ma={class:"file-name-section"},va=["title"],ga={class:"file-directory"},ha={class:"file-actions"},ya={key:1,style:{"font-size":"16px","font-weight":"bold"}},_a=Pe({__name:"FileGroup",props:{files:{},title:{},groupKey:{},collapsedGroups:{},isFileLocked:{type:Function},isLocking:{type:Function},getFileName:{type:Function},getFileDirectory:{type:Function}},emits:["toggleCollapse","fileClick","toggleFileLock","stageFile","unstageFile","revertFileChanges"],setup(N,{emit:k}){const o=N,i=k,g=I(()=>o.files.length>0),f=I(()=>o.collapsedGroups[o.groupKey]);function j(){i("toggleCollapse",o.groupKey)}function _(S){i("fileClick",S)}function G(S,q){q.stopPropagation(),i("toggleFileLock",S)}function te(S,q){q.stopPropagation(),i("stageFile",S)}function H(S,q){q.stopPropagation(),i("unstageFile",S)}function M(S,q){q.stopPropagation(),i("revertFileChanges",S)}function y(S){switch(S){case"added":return[{type:"unstage",tooltip:"取消暂存",buttonType:"warning",icon:"-",handler:H}];case"modified":case"deleted":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:te},{type:"revert",tooltip:"撤回修改",buttonType:"danger",icon:ns,handler:M}];case"untracked":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:te},{type:"delete",tooltip:"删除文件",buttonType:"danger",icon:ls,handler:M}];default:return[]}}function J(S){switch(S){case"added":return"A";case"modified":return"M";case"deleted":return"D";case"untracked":return"U";default:return""}}return(S,q)=>{const X=tt,V=De,x=ke;return g.value?(c(),w("div",ua,[e("div",{class:"file-group-header",onClick:j},[t(X,{class:he(["collapse-icon",{collapsed:f.value}])},{default:s(()=>[t(a(It))]),_:1},8,["class"]),e("span",null,P(S.title),1)]),at(e("div",da,[(c(!0),w(xe,null,Me(S.files,C=>(c(),w("div",{key:C.path,class:he(["file-item",{"is-loading":o.isLocking(C.path)}]),onClick:K=>_(C)},[e("div",pa,[e("div",{class:he(["file-status-indicator",[C.type,{locked:o.isFileLocked(C.path)}]])},P(J(C.type)),3),e("div",ma,[t(V,{content:o.getFileName(C.path),placement:"top",disabled:o.getFileName(C.path).length<=25,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",{class:he(["file-name",{"locked-file-name":o.isFileLocked(C.path),"deleted-file-name":C.type==="deleted"}])},[D(P(o.getFileName(C.path))+" ",1),o.isFileLocked(C.path)?(c(),A(X,{key:0,class:"lock-indicator"},{default:s(()=>[t(a(Lt))]),_:1})):E("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:o.getFileDirectory(C.path)},[t(V,{content:o.getFileDirectory(C.path),placement:"top",disabled:o.getFileDirectory(C.path).length<=30,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",ga,P(o.getFileDirectory(C.path)),1)]),_:2},1032,["content","disabled"])],8,va)]),e("div",ha,[t(V,{content:o.isLocking(C.path)?"处理中...":o.isFileLocked(C.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(x,{type:o.isFileLocked(C.path)?"danger":"info",size:"small",text:"",loading:o.isLocking(C.path),disabled:o.isLocking(C.path),onClick:K=>G(C.path,K),class:"file-action-btn"},{default:s(()=>[o.isLocking(C.path)?E("",!0):(c(),A(X,{key:0,size:"16"},{default:s(()=>[(c(),A(Tt(o.isFileLocked(C.path)?a(Lt):a(ks))))]),_:2},1024))]),_:2},1032,["type","loading","disabled","onClick"])]),_:2},1032,["content"]),o.isFileLocked(C.path)?E("",!0):(c(!0),w(xe,{key:0},Me(y(C.type),K=>(c(),A(V,{key:K.type,content:K.tooltip,placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(x,{type:K.buttonType,size:"small",text:"",onClick:le=>K.handler(C.path,le),class:"file-action-btn"},{default:s(()=>[typeof K.icon!="string"?(c(),A(X,{key:0,size:"16"},{default:s(()=>[(c(),A(Tt(K.icon)))]),_:2},1024)):(c(),w("span",ya,P(K.icon),1))]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]))),128))])],10,fa))),128))],512),[[xt,!f.value]])])):E("",!0)}}}),Kt=je(_a,[["__scopeId","data-v-02537d45"]]),wa={class:"card"},ba={class:"status-header"},ka={class:"header-actions"},$a=["element-loading-text"],Ca={key:0,class:"status-box"},Sa={key:1,class:"status-box-wrap"},Ta={key:0,class:"branch-status-info"},Va={class:"branch-sync-status"},Fa={class:"sync-status-content"},La={class:"status-badges"},xa={class:"badge-content"},Ba={class:"badge-content"},za={key:1,class:"file-list-container"},Pa={key:2,class:"empty-status"},ja={class:"empty-icon"},Oa={class:"lock-feature-description"},Da={class:"description-header"},Ra={key:0,class:"empty-locked-files"},Ga={class:"empty-icon"},Ma={key:1,class:"locked-files-list"},Aa={class:"locked-files-header"},Ua={class:"locked-file-items"},Ea={class:"file-info"},Ia={class:"file-path-container"},Na={class:"file-name"},Ha={class:"file-directory"},Ja={class:"file-actions"},Wa={class:"dialog-footer"},qa=Pe({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(N,{expose:k}){const o=N,i=st(),g=it(),f=I(()=>i.isLoadingStatus),j=d(""),_=d(""),G=d(!1),te=d(!1),H=d(-1),M=d({});function y(B){return!!M.value[B]}const J=I(()=>i.fileList.map(B=>({path:B.path,name:B.path.split("/").pop()||B.path,type:B.type,locked:se(B.path)})));async function S(B){await ve(B)}async function q(B,T){try{const Z=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:B,context:T})})).json();Z.success?n.success(Z.message):n.error(Z.error||"打开文件失败")}catch(ie){n.error(`打开文件失败: ${ie.message}`)}}async function X(B,T){try{const Z=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:B,context:T})})).json();Z.success?n.success(Z.message):n.error(Z.error||"用VSCode打开文件失败")}catch(ie){n.error(`用VSCode打开文件失败: ${ie.message}`)}}const V=d(!1),x=d({staged:!1,unstaged:!1,untracked:!1}),C=d(o.initialDirectory||"");async function K(){try{if(!C.value){const T=await(await fetch("/api/current_directory")).json();C.value=T.directory||"未知目录"}if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(),n({message:"Git 状态已刷新",type:"success"})}catch(B){n({message:"刷新失败: "+B.message,type:"error"})}}async function le(B){try{await Ye.confirm(`确认解锁该文件？
${B}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await g.unlockFile(B)}catch{}}async function R(){if(g.lockedFiles.length)try{await Ye.confirm(`确认解锁所有已锁定文件？共 ${g.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const B=[...g.lockedFiles];await Promise.all(B.map(T=>g.unlockFile(T))),await g.loadLockedFiles(),n.success("已清空所有文件锁定")}catch{}}async function ve(B){try{te.value=!0,j.value=B,H.value=i.fileList.findIndex(ie=>ie.path===B);const T=i.fileList[H.value];if(T&&T.type==="untracked")try{const Z=await(await fetch(`/api/file-content?file=${encodeURIComponent(B)}`)).json();Z.success&&Z.content?_.value=`diff --git a/${B} b/${B}
新文件: ${B}
--- /dev/null
+++ b/${B}
@@ -0,0 +1,${Z.content.split(`
`).length} @@
`+Z.content.split(`
`).map(ge=>`+${ge}`).join(`
`):_.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(ie){console.error("获取未跟踪文件内容失败:",ie),_.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}else if(T&&T.type==="added"){const Z=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(B)}`)).json();_.value=Z.diff||"没有变更"}else{const Z=await(await fetch(`/api/diff?file=${encodeURIComponent(B)}`)).json();_.value=Z.diff||"没有变更"}}catch(T){n({message:"获取文件差异失败: "+T.message,type:"error"}),_.value="获取差异失败: "+T.message}finally{te.value=!1}}function Q(B){if(G.value=!0,i.fileList.length>0){const T=i.fileList.find(ie=>ie.path===B.path)||i.fileList[0];ve(T.path)}}async function h(B){await i.addFileToStage(B)}async function z(B){await i.unstageFile(B)}async function U(){try{if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(!0),n.success("Git 状态已刷新")}catch(B){n.error("刷新失败: "+B.message)}}async function fe(){try{await i.gitPull(),await K()}catch(B){console.error("拉取操作发生错误:",B)}}async function pe(){try{await i.gitFetchAll(),await K()}catch(B){console.error("获取远程分支信息操作发生错误:",B)}}async function me(B){try{await Ye.confirm(`确定要撤回文件 "${B}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const ie=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:B})})).json();ie.success?(n.success("已撤回文件修改"),await K()):n.error(ie.error?`撤回失败: ${ie.error}`:"撤回文件修改失败，请重试")}catch(T){if(T==="cancel"||T.message==="cancel")return;const ie=T.message||"未知错误";ie!=="undefined"?n.error(`撤回文件修改失败: ${ie}`):n.error("撤回文件修改失败，请重试")}}function ye(B){const T=B.split("/");return T[T.length-1]}function ee(B){const T=B.split("/");return T.length<=1?"":T.slice(0,-1).join("/")}function se(B){const T=B.replace(/\\/g,"/");return g.lockedFiles.some(Z=>{const ge=Z.replace(/\\/g,"/");return T===ge})}async function de(B){if(!M.value[B]){M.value[B]=!0;try{se(B)?await g.unlockFile(B):await g.lockFile(B)}finally{delete M.value[B]}}}function we(B){x.value[B]=!x.value[B]}return mt(()=>{K(),g.loadConfig(),g.loadLockedFiles()}),Ge(()=>i.autoUpdateEnabled,(B,T)=>{console.log(`自动更新状态变更: ${T} -> ${B}`),i.toggleAutoUpdate()},{immediate:!1}),k({refreshStatus:U}),(B,T)=>{const ie=$s,Z=De,ge=ke,be=tt,Ae=zt,Oe=uo,$e=is;return c(),w(xe,null,[e("div",wa,[e("div",ba,[T[5]||(T[5]=e("h2",null,"Git 状态",-1)),e("div",ka,[t(Z,{content:a(i).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ie,{modelValue:a(i).autoUpdateEnabled,"onUpdate:modelValue":T[0]||(T[0]=ce=>a(i).autoUpdateEnabled=ce),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"8px"},"inline-prompt":"","active-icon":a(ut),"inactive-icon":a(ls),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(Z,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"primary",icon:a(ts),circle:"",size:"small",onClick:fe,loading:a(i).isGitPulling,disabled:!a(i).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(Z,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[at(t(ge,{type:"primary",icon:a(ft),circle:"",size:"small",onClick:pe,loading:a(i).isGitFetching},null,8,["icon","loading"]),[[xt,!1]])]),_:1}),a(g).lockedFiles.length>0?(c(),A(Z,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"warning",circle:"",size:"small",onClick:T[1]||(T[1]=ce=>V.value=!0)},{default:s(()=>[t(be,null,{default:s(()=>[t(a(Lt))]),_:1})]),_:1})]),_:1})):E("",!0),t(Z,{content:"刷新状态",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"primary",icon:a(co),circle:"",size:"small",onClick:U,loading:f.value},null,8,["icon","loading"])]),_:1})])]),at((c(),w("div",{class:"card-content","element-loading-text":a(i).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[a(i).isGitRepo?(c(),w("div",Sa,[a(i).hasUpstream&&(a(i).branchAhead>0||a(i).branchBehind>0)?(c(),w("div",Ta,[e("div",Va,[e("div",Fa,[t(Z,{content:"本地分支与远程分支的状态对比",placement:"top","show-after":200},{default:s(()=>[e("div",La,[a(i).branchAhead>0?(c(),A(Ae,{key:0,size:"small",type:"warning",class:"status-badge"},{default:s(()=>[e("span",xa,[t(be,null,{default:s(()=>[t(a(Cs))]),_:1}),D(" 你的分支领先 'origin/"+P(a(i).currentBranch)+"' "+P(a(i).branchAhead)+" 个提交 ",1)])]),_:1})):E("",!0),a(i).branchBehind>0?(c(),A(Ae,{key:1,size:"small",type:"info",class:"status-badge"},{default:s(()=>[e("span",Ba,[t(be,null,{default:s(()=>[t(a(It))]),_:1}),D(" 你的分支落后 'origin/"+P(a(i).currentBranch)+"' "+P(a(i).branchBehind)+" 个提交 ",1)])]),_:1})):E("",!0)])]),_:1})])])])):E("",!0),a(i).fileList.length?(c(),w("div",za,[t(Kt,{files:a(i).fileList.filter(ce=>ce.type==="added"),title:"已暂存的更改","group-key":"staged","collapsed-groups":x.value,"is-file-locked":se,"is-locking":y,"get-file-name":ye,"get-file-directory":ee,onToggleCollapse:we,onFileClick:Q,onToggleFileLock:de,onUnstageFile:z},null,8,["files","collapsed-groups"]),t(Kt,{files:a(i).fileList.filter(ce=>ce.type==="modified"||ce.type==="deleted"),title:"未暂存的更改","group-key":"unstaged","collapsed-groups":x.value,"is-file-locked":se,"is-locking":y,"get-file-name":ye,"get-file-directory":ee,onToggleCollapse:we,onFileClick:Q,onToggleFileLock:de,onStageFile:h,onRevertFileChanges:me},null,8,["files","collapsed-groups"]),t(Kt,{files:a(i).fileList.filter(ce=>ce.type==="untracked"),title:"未跟踪的文件","group-key":"untracked","collapsed-groups":x.value,"is-file-locked":se,"is-locking":y,"get-file-name":ye,"get-file-directory":ee,onToggleCollapse:we,onFileClick:Q,onToggleFileLock:de,onStageFile:h,onRevertFileChanges:me},null,8,["files","collapsed-groups"])])):a(i).isGitRepo?(c(),w("div",Pa,[e("div",ja,[t(be,null,{default:s(()=>[t(a(Et))]),_:1})]),T[7]||(T[7]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),T[8]||(T[8]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):E("",!0)])):(c(),w("div",Ca,T[6]||(T[6]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,$a)),[[$e,a(i).isGitPulling||a(i).isGitFetching]])]),t(Qe,{modelValue:G.value,"onUpdate:modelValue":T[2]||(T[2]=ce=>G.value=ce),title:"文件差异","custom-class":"file-diff-dialog",size:"extra-large",type:"flex","destroy-on-close":""},{default:s(()=>[t(cs,{files:J.value,diffContent:_.value,selectedFile:j.value,context:"git-status",emptyText:"选择文件查看差异",onFileSelect:S,onOpenFile:q,onOpenWithVscode:X},null,8,["files","diffContent","selectedFile"])]),_:1},8,["modelValue"]),t(Qe,{modelValue:V.value,"onUpdate:modelValue":T[4]||(T[4]=ce=>V.value=ce),title:"锁定文件管理",size:"large","destroy-on-close":""},{footer:s(()=>[e("span",Wa,[t(ge,{onClick:T[3]||(T[3]=ce=>V.value=!1)},{default:s(()=>T[16]||(T[16]=[D("关闭")])),_:1})])]),default:s(()=>[e("div",Oa,[e("div",Da,[t(be,{class:"description-icon"},{default:s(()=>[t(a(ss))]),_:1}),T[9]||(T[9]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),T[10]||(T[10]=e("div",{class:"description-content"},[e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区")])],-1))]),t(Oe),a(g).lockedFiles.length===0?(c(),w("div",Ra,[e("div",Ga,[t(be,null,{default:s(()=>[t(a(Lt))]),_:1})]),T[11]||(T[11]=e("p",null,"当前没有锁定的文件",-1)),T[12]||(T[12]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(c(),w("div",Ma,[e("div",Aa,[e("span",null,"🔒 已锁定 "+P(a(g).lockedFiles.length)+" 个文件",1),t(Z,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:s(()=>[t(be,{class:"info-icon"},{default:s(()=>[t(a(ss))]),_:1})]),_:1}),T[14]||(T[14]=e("div",{style:{flex:"1"}},null,-1)),t(ge,{type:"danger",size:"small",plain:"",disabled:!a(g).lockedFiles.length,onClick:R},{default:s(()=>T[13]||(T[13]=[D(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",Ua,[(c(!0),w(xe,null,Me(a(g).lockedFiles,ce=>(c(),w("div",{key:ce,class:"locked-file-item"},[e("div",Ea,[T[15]||(T[15]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",Ia,[e("span",Na,P(ye(ce)),1),e("span",Ha,P(ee(ce)),1)])]),e("div",Ja,[t(Z,{content:"解锁文件",placement:"top","hide-after":1e3},{default:s(()=>[t(ge,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:a(ks),"aria-label":"解锁",onClick:Be=>le(ce)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),Ya=je(qa,[["__scopeId","data-v-06313de6"]]),Ka={class:"loading-container"},Qa={class:"loading-text"},Xa={key:0,class:"loading-progress"},Za=Pe({__name:"GlobalLoading",props:{visible:{type:Boolean,default:!1},text:{default:"加载中..."},showProgress:{type:Boolean,default:!1},progress:{default:0}},setup(N){return(k,o)=>(c(),A(Ss,{to:"body"},[t(rs,{name:"loading-fade"},{default:s(()=>[k.visible?(c(),w("div",{key:0,class:"global-loading-overlay",onClick:o[0]||(o[0]=Bt(()=>{},["stop"]))},[e("div",Ka,[o[1]||(o[1]=e("div",{class:"loading-spinner"},[e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"})],-1)),e("div",Qa,P(k.text),1),k.showProgress?(c(),w("div",Xa,[e("div",{class:"progress-bar",style:vt({width:k.progress+"%"})},null,4)])):E("",!0)])])):E("",!0)]),_:1})]))}}),el=je(Za,[["__scopeId","data-v-12e53b20"]]),tl={class:"success-container"},sl={class:"success-text"},ol={key:0,class:"success-description"},al=Pe({__name:"SuccessModal",props:{visible:{type:Boolean,default:!1},text:{default:"操作成功！"},description:{default:""}},setup(N){return(k,o)=>(c(),A(Ss,{to:"body"},[t(rs,{name:"success-fade"},{default:s(()=>[k.visible?(c(),w("div",{key:0,class:"success-overlay",onClick:o[0]||(o[0]=Bt(()=>{},["stop"]))},[e("div",tl,[o[1]||(o[1]=e("div",{class:"success-icon"},[e("svg",{viewBox:"0 0 52 52",class:"success-svg"},[e("circle",{class:"success-circle",cx:"26",cy:"26",r:"25",fill:"none"}),e("path",{class:"success-check",fill:"none",d:"m14.1 27.2l7.1 7.2 16.7-16.8"})])],-1)),e("div",sl,P(k.text),1),k.description?(c(),w("div",ol,P(k.description),1)):E("",!0)])])):E("",!0)]),_:1})]))}}),ll=je(al,[["__scopeId","data-v-c64a7b5e"]]),et=Ts({visible:!1,text:"加载中...",showProgress:!1,progress:0});function nl(){return{loadingState:et,show:f=>{et.visible=!0,et.text=(f==null?void 0:f.text)||"加载中...",et.showProgress=(f==null?void 0:f.showProgress)||!1,et.progress=(f==null?void 0:f.progress)||0},hide:()=>{et.visible=!1},updateProgress:f=>{et.progress=Math.max(0,Math.min(100,f))},updateText:f=>{et.text=f},setText:f=>{et.visible&&(et.text=f)}}}const Ct=Ts({visible:!1,text:"操作成功！",description:""});function il(){const N=o=>{Ct.visible=!0,Ct.text=(o==null?void 0:o.text)||"操作成功！",Ct.description=(o==null?void 0:o.description)||"";const i=(o==null?void 0:o.duration)||2e3;setTimeout(()=>{k()},i)},k=()=>{Ct.visible=!1};return{successState:Ct,show:N,hide:k}}const rl={class:"template-form"},cl={class:"template-form-buttons"},ul={key:0,class:"template-list"},dl={key:1,class:"template-list-scroll"},fl={class:"template-content"},pl={class:"template-actions"},ml={key:1,class:"templates-container"},vl={class:"message-templates-list"},gl={class:"templates-scroll-area"},hl={class:"template-content"},yl={class:"template-actions"},_l={key:0,class:"current-default-message"},wl={class:"default-message-content"},bl={key:2,class:"message-help-text"},kl=Pe({__name:"TemplateManager",props:{visible:{type:Boolean},type:{},title:{},placeholder:{default:"输入新模板内容"},editPlaceholder:{default:"编辑模板内容"},emptyDescription:{default:"暂无保存的模板"},showDefaultSection:{type:Boolean,default:!1},showHelpText:{type:Boolean,default:!1}},emits:["update:visible","use-template","set-default"],setup(N,{expose:k,emit:o}){const i=N,g=o,f=it(),j=d(""),_=d(!1),G=d(""),te=d(-1),H=d(!1),M=d(!1),y=I(()=>{switch(i.type){case"description":return f.descriptionTemplates||[];case"scope":return f.scopeTemplates||[];case"message":return f.messageTemplates||[];default:return[]}}),J=I(()=>i.type==="message"?f.defaultCommitMessage:""),S=I(()=>_.value?i.editPlaceholder:i.placeholder),q=I(()=>_.value?"更新模板":"添加模板"),X=I({get:()=>i.visible,set:Q=>g("update:visible",Q)});Ge(X,Q=>{Q||V()});function V(){j.value="",_.value=!1,G.value="",te.value=-1}async function x(){if(!j.value.trim()){n.warning("模板内容不能为空");return}try{H.value=!0,_.value?await f.updateTemplate(G.value,j.value,i.type)&&V():await f.saveTemplate(j.value,i.type)&&(j.value="")}catch(Q){n.error(`模板保存失败: ${Q.message}`)}finally{H.value=!1}}function C(Q){g("use-template",Q),i.type!=="message"&&(X.value=!1)}function K(Q,h){_.value=!0,G.value=Q,j.value=Q,te.value=h}function le(){V()}async function R(Q){try{const h=await f.deleteTemplate(Q,i.type)}catch(h){n.error(`模板删除失败: ${h.message}`)}}async function ve(){if(!(i.type!=="message"||!j.value.trim()))try{M.value=!0,await f.saveDefaultMessage(j.value)&&g("set-default",j.value)}catch(Q){n.error(`设置默认提交信息失败: ${Q.message}`)}finally{M.value=!1}}return k({resetForm:V}),(Q,h)=>{const z=Nt,U=ke,fe=Ft,pe=po,me=Vs,ye=zt,ee=as;return c(),A(ee,{modelValue:X.value,"onUpdate:modelValue":h[1]||(h[1]=se=>X.value=se),title:Q.title,width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:he(Q.type==="message"?"message-template-dialog":"template-dialog")},{default:s(()=>[e("div",{class:he(["template-container",{"message-template-container":Q.type==="message"}])},[e("div",rl,[t(z,{modelValue:j.value,"onUpdate:modelValue":h[0]||(h[0]=se=>j.value=se),placeholder:S.value,class:"template-input",clearable:"",onKeyup:fo(x,["enter"])},null,8,["modelValue","placeholder"]),e("div",cl,[_.value?(c(),A(U,{key:0,onClick:le},{default:s(()=>h[2]||(h[2]=[D("取消")])),_:1})):E("",!0),t(U,{type:"primary",onClick:x,disabled:!j.value.trim()||H.value,loading:H.value},{default:s(()=>[D(P(q.value),1)]),_:1},8,["disabled","loading"]),Q.type==="message"?(c(),A(U,{key:1,type:"success",onClick:ve,disabled:!j.value.trim()||M.value,loading:M.value,plain:""},{default:s(()=>h[3]||(h[3]=[D(" 设为默认提交信息 ")])),_:1},8,["disabled","loading"])):E("",!0)])]),Q.type!=="message"?(c(),w("div",ul,[e("h3",null,"已保存"+P(Q.type==="description"?"模板":"作用域"),1),y.value.length===0?(c(),A(fe,{key:0,description:Q.emptyDescription},null,8,["description"])):(c(),w("div",dl,[(c(!0),w(xe,null,Me(y.value,(se,de)=>(c(),A(me,{key:de,class:"template-item"},{default:s(()=>[t(pe,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",fl,P(se),1),e("div",pl,[t(U,{type:"primary",size:"small",onClick:we=>C(se)},{default:s(()=>h[4]||(h[4]=[D("使用")])),_:2},1032,["onClick"]),t(U,{type:"warning",size:"small",icon:a(ct),onClick:we=>K(se,de)},{default:s(()=>h[5]||(h[5]=[D(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(U,{type:"danger",size:"small",onClick:we=>R(se)},{default:s(()=>h[6]||(h[6]=[D("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))]))])):(c(),w("div",ml,[e("div",vl,[h[10]||(h[10]=e("h3",null,"已保存模板",-1)),e("div",gl,[y.value.length===0?(c(),A(fe,{key:0,description:Q.emptyDescription},null,8,["description"])):E("",!0),(c(!0),w(xe,null,Me(y.value,(se,de)=>(c(),A(me,{key:de,class:"template-item"},{default:s(()=>[t(pe,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",hl,P(se),1),e("div",yl,[t(U,{type:"primary",size:"small",onClick:we=>C(se)},{default:s(()=>h[7]||(h[7]=[D("使用")])),_:2},1032,["onClick"]),t(U,{type:"warning",size:"small",icon:a(ct),onClick:we=>K(se,de)},{default:s(()=>h[8]||(h[8]=[D(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(U,{type:"danger",size:"small",onClick:we=>R(se)},{default:s(()=>h[9]||(h[9]=[D("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),Q.showDefaultSection?(c(),w("div",_l,[h[18]||(h[18]=e("h3",null,"当前默认提交信息",-1)),J.value?(c(),A(me,{key:0,class:"default-message-card"},{default:s(()=>[e("div",wl,P(J.value),1)]),_:1})):(c(),A(fe,{key:1,description:"尚未设置默认提交信息","image-size":100})),Q.showHelpText?(c(),w("div",bl,[h[16]||(h[16]=e("h4",null,"关于默认提交信息",-1)),h[17]||(h[17]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[h[13]||(h[13]=D("你可以通过点击左侧模板的")),t(ye,{size:"small",type:"primary"},{default:s(()=>h[11]||(h[11]=[D("使用")])),_:1}),h[14]||(h[14]=D("按钮先选择喜欢的模板，然后点击上方")),t(ye,{size:"small",type:"success"},{default:s(()=>h[12]||(h[12]=[D("设为默认提交信息")])),_:1}),h[15]||(h[15]=D("按钮保存。"))])])):E("",!0)])):E("",!0)]))],2)]),_:1},8,["modelValue","title","class"])}}}),Qt=je(kl,[["__scopeId","data-v-9593b134"]]),$l={class:"git-command-preview"},Cl={class:"preview-container"},Sl={class:"preview-title"},Tl={class:"preview-content code-command"},Vl=Pe({__name:"GitCommandPreview",props:{command:{},title:{default:"Git命令预览："},copyButtonText:{default:"复制命令"},placeholder:{default:"<命令内容>"}},setup(N){const k=N,o=I(()=>k.command||k.placeholder);async function i(){if(!k.command){n.warning("没有可复制的命令内容");return}try{await navigator.clipboard.writeText(k.command),n.success("命令已复制到剪贴板")}catch(g){n.error(`复制失败: ${g.message}`)}}return(g,f)=>{const j=tt,_=De;return c(),w("div",$l,[e("div",Cl,[e("div",Sl,P(g.title),1),e("div",Tl,P(o.value),1),t(_,{content:g.copyButtonText,placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-command-btn",onClick:i},[t(j,{class:"btn-icon"},{default:s(()=>[t(a(pt))]),_:1})])]),_:1},8,["content"])])])}}}),Fl=je(Vl,[["__scopeId","data-v-0c971ebc"]]),Ll={class:"one-push-content"},xl={class:"one-push-text"},Bl={key:0,class:"one-push-desc"},zl=Pe({__name:"QuickPushButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["beforePush","afterPush","clearFields"],setup(N,{emit:k}){const o=st(),i=it(),g=N,f=k;function j(y){const J=y.replace(/\\/g,"/");return i.lockedFiles.some(S=>{const q=S.replace(/\\/g,"/");return J===q})}const _=I(()=>o.fileList.some(y=>!j(y.path))),G=I(()=>!_.value||!g.hasUserCommitMessage||!o.hasUpstream),te=I(()=>o.isAddingFiles||o.isCommiting||o.isPushing),H=I(()=>_.value?g.hasUserCommitMessage?o.hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改");async function M(){f("beforePush");try{const y=await o.addCommitAndPush(g.finalCommitMessage,g.skipHooks);y&&f("clearFields"),f("afterPush",y)}catch(y){console.error("一键推送失败:",y),f("afterPush",!1)}}return(y,J)=>{const S=tt,q=ke;return c(),A(a(De),{content:H.value,placement:"top","show-after":200},{default:s(()=>[t(q,{type:"success",onClick:M,loading:te.value,disabled:G.value,class:he([y.from,"one-push-button"])},{default:s(()=>[e("div",Ll,[t(S,{class:"one-push-icon"},{default:s(()=>[t(a(mo))]),_:1}),e("div",xl,[J[0]||(J[0]=e("span",{class:"one-push-title"},"一键推送所有",-1)),y.from==="form"?(c(),w("span",Bl,"暂存 + 提交 + 推送")):E("",!0)])])]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Ps=je(zl,[["__scopeId","data-v-58e155b2"]]),Pl={key:0},jl=Pe({__name:"StageButton",props:{from:{default:"form"}},emits:["click"],setup(N,{emit:k}){const o=k,i=st(),g=it();function f(y){const J=y.replace(/\\/g,"/");return g.lockedFiles.some(S=>{const q=S.replace(/\\/g,"/");return J===q})}function j(){return g.lockedFiles.length===0?!1:i.fileList.some(y=>["modified","deleted","untracked"].includes(y.type)?f(y.path):!1)}const _=I(()=>i.fileList.filter(y=>["modified","deleted","untracked"].includes(y.type)&&!f(y.path)).length),G=I(()=>i.fileList.some(y=>["modified","deleted","untracked"].includes(y.type)&&!f(y.path))),te=I(()=>!G.value),H=I(()=>G.value?j()?`暂存${_.value}个未暂存文件（逐个添加）`:"暂存所有更改（git add .）":"没有需要暂存的更改");async function M(){o("click");try{let y;j()?y=await i.addToStage():y=await i.addAllToStage(),y&&i.fetchStatus()}catch(y){console.error("添加文件失败:",y)}}return(y,J)=>{const S=ke,q=De;return c(),A(q,{content:H.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(S,{type:"primary",onClick:M,loading:a(i).isAddingFiles,disabled:te.value,class:he(["stage-button",`from-${y.from}`])},{default:s(()=>[J[0]||(J[0]=D(" 暂存更改 ")),_.value>0?(c(),w("span",Pl,"("+P(_.value)+")",1)):E("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),js=je(jl,[["__scopeId","data-v-67a3259e"]]),Ol={key:0},Dl=Pe({__name:"CommitButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["click","beforeCommit","afterCommit"],setup(N,{emit:k}){const o=N,i=k,g=st(),f=it();function j(y){const J=y.replace(/\\/g,"/");return f.lockedFiles.some(S=>{const q=S.replace(/\\/g,"/");return J===q})}const _=I(()=>g.fileList.filter(y=>y.type==="added"&&!j(y.path)).length),G=I(()=>_.value>0),te=I(()=>!G.value||!o.hasUserCommitMessage),H=I(()=>G.value?o.hasUserCommitMessage?`提交${_.value}个已暂存文件`:"请输入提交信息":"没有已暂存的更改");async function M(){if(o.finalCommitMessage.trim()){i("beforeCommit"),i("click");try{const y=await g.commitChanges(o.finalCommitMessage,o.skipHooks);y&&(g.fetchStatus(),g.fetchLog(),g.getBranchStatus(!0)),i("afterCommit",y)}catch(y){console.error("提交失败:",y),i("afterCommit",!1)}}}return(y,J)=>{const S=ke,q=De;return c(),A(q,{content:H.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(S,{type:"primary",onClick:M,loading:a(g).isLoadingStatus,disabled:te.value,class:he(["commit-button",`from-${y.from}`])},{default:s(()=>[J[0]||(J[0]=D(" 提交 ")),_.value>0?(c(),w("span",Ol,"("+P(_.value)+")",1)):E("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Os=je(Dl,[["__scopeId","data-v-5a88b7bc"]]),Rl={key:0},Gl=Pe({__name:"PushButton",props:{from:{default:"form"}},emits:["click","beforePush","afterPush"],setup(N,{emit:k}){const o=k,i=st(),g=I(()=>i.branchAhead>0),f=I(()=>i.fileList.some(M=>M.type==="added")),j=I(()=>i.hasUpstream&&g.value&&!f.value),_=I(()=>!j.value),G=I(()=>i.hasUpstream?g.value?f.value?"有未提交的暂存更改，请先提交":`推送${i.branchAhead}个本地提交`:"没有需要推送的提交":"当前分支没有上游分支"),te=I(()=>j.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{});async function H(){o("beforePush"),o("click");try{const M=await i.pushToRemote();M&&await new Promise(y=>setTimeout(y,200)),o("afterPush",M)}catch(M){console.error("推送失败:",M),o("afterPush",!1)}}return(M,y)=>{const J=ke,S=De;return c(),A(S,{content:G.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(J,{type:"primary",icon:a(vo),onClick:H,loading:a(i).isPushing,disabled:_.value,style:vt(te.value),class:he(["push-button",`from-${M.from}`])},{default:s(()=>[y[0]||(y[0]=D(" 推送 ")),g.value?(c(),w("span",Rl,"("+P(a(i).branchAhead)+")",1)):E("",!0)]),_:1},8,["icon","loading","disabled","style","class"])]),_:1},8,["content"])}}}),Ds=je(Gl,[["__scopeId","data-v-3c2392d6"]]),Ml={class:"form-bottom-actions"},Al={class:"actions-flex-container"},Ul={class:"left-actions"},El={class:"button-grid"},Il={class:"right-actions"},Nl=Pe({__name:"GitActionButtons",props:{hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1},from:{default:"form"}},emits:["afterCommit","afterPush","beforePush","clearFields"],setup(N,{emit:k}){const o=k;function i(_){o("afterCommit",_)}function g(_){o("afterPush",_)}function f(){o("beforePush")}function j(){o("clearFields")}return(_,G)=>(c(),w("div",Ml,[e("div",Al,[e("div",Ul,[e("div",El,[t(js,{onClick:()=>{},from:_.from},null,8,["from"]),t(Os,{"has-user-commit-message":_.hasUserCommitMessage,"final-commit-message":_.finalCommitMessage,"skip-hooks":_.skipHooks,onBeforeCommit:()=>{},onAfterCommit:i,onClick:()=>{},from:_.from},null,8,["has-user-commit-message","final-commit-message","skip-hooks","from"]),t(Ds,{onBeforePush:()=>{},onAfterPush:g,onClick:()=>{},from:_.from},null,8,["from"])])]),e("div",Il,[t(Ps,{from:_.from,"has-user-commit-message":_.hasUserCommitMessage,"final-commit-message":_.finalCommitMessage,"skip-hooks":_.skipHooks,onBeforePush:f,onAfterPush:g,onClearFields:j},null,8,["from","has-user-commit-message","final-commit-message","skip-hooks"])])])]))}}),Hl=je(Nl,[["__scopeId","data-v-6cf9ea2c"]]),Jl={class:"option-card compact"},Wl={class:"option-header"},ql={class:"option-info"},Yl={class:"option-title"},Kl=Pe({__name:"OptionSwitchCard",props:{modelValue:{type:Boolean},title:{},tooltip:{},activeText:{},inactiveText:{},activeColor:{},iconClass:{}},emits:["update:modelValue"],setup(N,{emit:k}){const o=k;function i(g){o("update:modelValue",g)}return(g,f)=>{const j=$s,_=De;return c(),w("div",Jl,[t(_,{content:g.tooltip,placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[e("div",Wl,[e("div",{class:he(["option-icon",g.iconClass])},[es(g.$slots,"icon",{},void 0,!0)],2),e("div",ql,[e("h4",Yl,P(g.title),1)]),t(j,{class:"option-switch","model-value":g.modelValue,"onUpdate:modelValue":i,"active-text":g.activeText,"inactive-text":g.inactiveText,"active-color":g.activeColor,size:"small"},null,8,["model-value","active-text","inactive-text","active-color"])])]),_:3},8,["content"])])}}}),Xt=je(Kl,[["__scopeId","data-v-39acaac6"]]),Ql={class:"card-header"},Xl={key:0,class:"header-actions"},Zl={class:"card-content"},en={class:"layout-container"},tn={key:0,class:"git-config-warning"},sn={key:1,class:"commit-section"},on={class:"commit-options"},an={key:0,class:"commit-form"},ln={class:"description-container"},nn={key:1,class:"standard-commit-form"},rn={class:"standard-commit-header"},cn={class:"type-scope-container"},un={class:"scope-wrapper"},dn={class:"description-container description-inline"},fn={class:"advanced-fields"},pn={class:"actions-section"},mn={class:"action-groups"},vn={class:"operations-wrapper"},gn={class:"action-group"},hn={class:"group-buttons"},yn={key:0},_n={class:"action-group"},wn={class:"group-buttons"},bn={class:"action-group reset-group"},kn={class:"group-buttons"},$n={key:0},Cn={class:"action-group branch-group"},Sn={class:"group-buttons"},Tn={class:"action-group"},Vn={class:"group-buttons"},Fn={class:"editor-header"},Ln={class:"editor-info"},xn={class:"editor-tips"},Bn={class:"json-editor-wrapper"},zn={class:"editor-footer"},Pn={class:"footer-left"},jn={class:"footer-right"},On={class:"config-warning-content"},Dn={class:"warning-message"},Rn={class:"dialog-footer"},Gn={class:"stash-dialog-content"},Mn={class:"stash-info-card"},An={class:"info-icon"},Un={class:"stash-options"},En={class:"options-title"},In={class:"option-item"},Nn={class:"option-item"},Hn={key:0,class:"stash-preview"},Jn={class:"preview-title"},Wn={class:"file-count-info"},qn={class:"merge-dialog-content"},Yn={class:"merge-intro"},Kn={class:"merge-options"},Qn={class:"dialog-footer"},Xn={class:"stash-list-content"},Zn={key:0,class:"stash-header"},ei={class:"stash-stats"},ti={class:"stat-item"},si={class:"stat-number"},oi={key:0,class:"stash-actions-header"},ai={class:"stash-list-container"},li={key:0,class:"empty-state"},ni={key:1,class:"stash-cards"},ii={class:"stash-card-content"},ri={class:"stash-info"},ci={class:"stash-main-info"},ui={class:"stash-id-badge"},di={class:"stash-id-text"},fi={class:"stash-description"},pi={class:"description-text"},mi={class:"stash-card-actions"},vi={class:"stash-content"},gi={key:0,class:"stash-info-row"},hi={class:"stash-id"},yi={class:"stash-id-value"},_i={class:"stash-description"},wi={class:"stash-description-value"},bi={class:"stash-main-content"},ki={key:0,class:"status-updating-indicator"},$i=Pe({__name:"CommitForm",setup(N,{expose:k}){const o=st(),i=it(),g=d(""),{loadingState:f,show:j,hide:_,setText:G}=nl(),{successState:te,show:H}=il(),M=d(!1),y=d("输入提交信息..."),J=d(""),S=d(!1),q=d("feat"),X=d(""),V=d(""),x=d(""),C=d(""),K=d(!1),le=d(""),R=d(!1),ve=d(!1),Q=d(""),h=d([]),z=d(!1),U=d(!1),fe=d(""),pe=d({noFf:!1,squash:!1,noCommit:!1,message:""}),me=d([]),ye=d(!1),ee=d(!1),se=d(!1),de=d(!1),we=d(!1),B=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],T=d(!1),ie=d(!1),Z=d(""),ge=d(!1),be=d(!0),Ae=d(!1),Oe=d(null),$e=d([]),ce=d(""),Be=d(!1),ot=d("");function lt(){Z.value="",ge.value=!1,be.value=!Ht.value,T.value=!0}async function We(){try{const l=await(await fetch("/api/config/check-file-format")).json();let ae="";l.success&&(l.exists?l.isValidJson||(ae=`系统配置文件格式有误：${l.error}
编辑后保存可能会覆盖原文件内容。`):ae="系统配置文件不存在，将使用默认配置。");const re=i.config;if(le.value=JSON.stringify(re,null,2),ae){Q.value=ae,ve.value=!0;return}K.value=!0}catch{n.error("加载配置失败")}}async function Xe(){try{R.value=!0;let p;try{p=JSON.parse(le.value)}catch(re){n.error(`JSON 解析失败: ${re.message||re}`);return}const ae=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:p})})).json();if(!ae.success)throw new Error(ae.error||"保存失败");await i.loadConfig(!0);try{await i.loadLockedFiles()}catch{}try{Array.isArray(i.descriptionTemplates)&&(h.value=[...i.descriptionTemplates])}catch{}try{Array.isArray(i.scopeTemplates)&&(me.value=[...i.scopeTemplates])}catch{}try{Array.isArray(i.messageTemplates)&&(Re.value=[...i.messageTemplates])}catch{}n.success("配置已保存"),K.value=!1}catch(p){n.error(`保存配置失败: ${p.message||p}`)}finally{R.value=!1}}async function O(){try{const p=await fetch("/api/config/open-file",{method:"POST"}),l=await p.json();if(!p.ok||!(l!=null&&l.success))throw new Error((l==null?void 0:l.error)||"打开失败");n.success("已用系统程序打开配置文件")}catch(p){n.error(`打开配置文件失败: ${(p==null?void 0:p.message)||p}`)}}function r(p){ve.value=!1,p==="continue"?K.value=!0:p==="open"&&O()}function W(){o.getStashList(),ie.value=!0}async function oe(){try{await o.saveStash(Z.value,ge.value,be.value),T.value=!1}catch(p){console.error("储藏失败:",p)}}async function Ce(p,l=!1){try{await o.applyStash(p,l),l&&await o.getStashList()}catch(ae){console.error("应用储藏失败:",ae)}}async function Ue(p){Ye.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.dropStash(p),await o.getStashList()}).catch(()=>{})}async function Te(){Ye.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.clearAllStashes(),await o.getStashList()}).catch(()=>{})}async function _e(p){if(p){Oe.value=p,Ae.value=!0,Be.value=!0,$e.value=[],ce.value="",ot.value="";try{if(!p.id||p.id.length<7){ce.value="无效的stash ID",Be.value=!1;return}const ae=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(p.id)}`)).json();ae.success&&Array.isArray(ae.files)?($e.value=ae.files,$e.value.length>0?await Ee(p.id,$e.value[0]):ce.value="该stash没有变更文件"):ce.value=`获取文件列表失败: ${ae.error||"未知错误"}`}catch(l){ce.value=`获取stash详情失败: ${l.message}`}finally{Be.value=!1}}}async function Ee(p,l){Be.value=!0,ot.value=l;try{const re=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(p)}&file=${encodeURIComponent(l)}`)).json();re.success?ce.value=re.diff||"没有变更内容":ce.value=`获取差异失败: ${re.error||"未知错误"}`}catch(ae){ce.value=`获取差异失败: ${ae.message}`}finally{Be.value=!1}}function Ve(p){Oe.value&&Ee(Oe.value.id,p)}async function Se(p,l){try{const re=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p,context:l})})).json();re.success?n.success(re.message):n.error(re.error||"打开文件失败")}catch(ae){n.error(`打开文件失败: ${ae.message}`)}}async function ne(p,l){try{const re=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p,context:l})})).json();re.success?n.success(re.message):n.error(re.error||"用VSCode打开文件失败")}catch(ae){n.error(`用VSCode打开文件失败: ${ae.message}`)}}const Re=d([]);Ge(S,p=>{localStorage.setItem("zen-gitsync-standard-commit",p.toString())}),Ge(se,p=>{localStorage.setItem("zen-gitsync-skip-hooks",p.toString())}),Ge(de,p=>{localStorage.setItem("zen-gitsync-auto-quick-push",p.toString())});const Je=I(()=>{if(!S.value)return g.value||J.value;let p=`${q.value||""}`;return X.value&&(p+=`(${X.value})`),p+=`: ${V.value}`,x.value&&(p+=`

${x.value}`),C.value&&(p+=`

${C.value}`),p}),Ze=I(()=>S.value?q.value.trim()!==""&&V.value.trim()!=="":g.value.trim()!==""),gt=I(()=>{const p=`输入提交信息 (默认: ${J.value})`;return de.value?`${p}（按回车一键推送）`:p}),ht=I(()=>de.value?"简短描述（必填，按回车一键推送）":"简短描述（必填）"),yt=I(()=>$e.value.map(p=>({path:p,name:p.split("/").pop()||p}))),_t=I(()=>{let p=`git commit -m "${Je.value}"`;return se.value&&(p+=" --no-verify"),p});function nt(){const p=i.config;p&&(y.value=`输入提交信息 (默认: ${p.defaultCommitMessage})`,J.value=p.defaultCommitMessage||"",p.descriptionTemplates&&Array.isArray(p.descriptionTemplates)&&(h.value=p.descriptionTemplates),p.scopeTemplates&&Array.isArray(p.scopeTemplates)&&(me.value=p.scopeTemplates),p.messageTemplates&&Array.isArray(p.messageTemplates)&&(Re.value=p.messageTemplates))}function Ie(p){V.value=p,z.value=!1}function wt(p){X.value=p,ye.value=!1}function b(){z.value=!0}function v(){ye.value=!0}function Y(){H({text:"操作成功！",description:"已完成操作",duration:2e3})}async function u(){try{await o.gitPull(),await o.fetchStatus(),await o.fetchLog(!1)}catch(p){console.error("拉取操作发生错误:",p)}}async function m(){try{await o.gitFetchAll(),await o.fetchStatus(),await o.fetchLog(!1)}catch(p){console.error("获取远程分支信息操作发生错误:",p)}}async function L(){if(!Je.value.trim()){n({message:"提交信息不能为空",type:"warning"});return}try{await o.addAndCommit(Je.value,se.value),ue(),o.fetchStatus(),o.fetchLog()}catch(p){n({message:`暂存并提交失败: ${p.message}`,type:"error"})}}async function $(){try{await Ye.confirm(`确定要重置当前分支 "${o.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await o.resetToRemote(o.currentBranch)&&(o.fetchStatus(),o.fetchLog())}catch(p){p!=="cancel"&&n({message:`重置到远程分支失败: ${p.message}`,type:"error"})}}function ue(){g.value="",V.value="",x.value="",C.value=""}function ze(){j({text:"正在暂存文件...",showProgress:!1})}function He(p){if(_(),p){M.value=!0;try{setTimeout(async()=>{try{console.log("推送成功，状态已更新")}catch(l){console.error("一键推送后处理失败:",l)}finally{M.value=!1}},1e3)}catch(l){console.error("一键推送后处理失败:",l),M.value=!1}}}function qe(p){const l=p.replace(/\\/g,"/");return i.lockedFiles.some(ae=>{const re=ae.replace(/\\/g,"/");return l===re})}const Pt=I(()=>o.fileList.some(p=>["modified","deleted","untracked"].includes(p.type)&&!qe(p.path))),jt=I(()=>o.fileList.filter(p=>p.type==="added"&&!qe(p.path)).length),Gs=I(()=>jt.value>0),Ms=I(()=>o.fileList.some(p=>!qe(p.path))),As=I(()=>o.fileList.length>0),Ht=I(()=>o.fileList.length>0&&o.fileList.every(p=>qe(p.path))),Us=I(()=>o.branchAhead>0),Jt=I(()=>o.branchBehind>0),us=I(()=>Gs.value),Es=I(()=>o.hasUpstream&&(Us.value||Jt.value||Ms.value));function Is(p){g.value=p,ee.value=!1}async function ds(p){if(!(!de.value||!Ze.value||!o.fileList.some(ae=>!qe(ae.path))||!Ze.value||!o.hasUpstream)&&p.key==="Enter"&&!p.shiftKey){p.preventDefault();try{ze();const ae=await o.addCommitAndPush(Je.value,se.value);ae&&ue(),He(ae)}catch(ae){console.error("回车自动一键提交失败:",ae),He(!1)}}}async function Ns(p){try{await i.saveDefaultMessage(p)&&n.success("默认提交信息设置成功")}catch(l){n.error(`设置默认提交信息失败: ${l.message}`)}}Ge(()=>o.isAddingFiles,p=>{p&&f.visible&&G("正在暂存文件...")}),Ge(()=>o.isCommiting,p=>{p&&f.visible&&G("正在提交更改...")}),Ge(()=>o.isPushing,p=>{p&&f.visible&&G("正在推送到远程仓库...")}),mt(async()=>{const p=localStorage.getItem("zen-gitsync-standard-commit");p!==null&&(S.value=p==="true");const l=localStorage.getItem("zen-gitsync-skip-hooks");l!==null&&(se.value=l==="true");const ae=localStorage.getItem("zen-gitsync-auto-quick-push");ae!==null&&(de.value=ae==="true"),Ge(()=>i.config,nt,{immediate:!0}),i.config||await i.loadConfig()});function Hs(){fe.value="",pe.value={noFf:!1,squash:!1,noCommit:!1,message:""},dt.value="all",U.value=!0,o.allBranches.length===0&&o.getAllBranches()}const dt=d("all"),Js=I(()=>{const p=o.allBranches.filter(l=>l!==o.currentBranch);if(console.log("筛选分支列表:",{allBranches:o.allBranches,currentBranch:o.currentBranch,branchTypeFilter:dt.value,filteredBranches:p}),dt.value==="local"){const l=p.filter(ae=>!ae.includes("origin/"));return console.log("本地分支:",l),l}else if(dt.value==="remote"){const l=p.filter(ae=>ae.includes("origin/"));return console.log("远程分支:",l),l}else return console.log("所有分支:",p),p});async function Ws(){if(!fe.value){n({message:"请选择要合并的分支",type:"warning"});return}try{await o.mergeBranch(fe.value,pe.value)&&(U.value=!1,await o.fetchStatus(),await o.fetchLog(!1))}catch(p){console.error("合并分支操作发生错误:",p)}}const Ot=d(!1);function qs(){Ot.value=!Ot.value}k({openConfigEditor:We,toggleGitOperationsDrawer:qs});function Ys(p,l){const re=[...p?h.value.filter(Fe=>Fe.toLowerCase().includes(p.toLowerCase())).map(Fe=>({value:Fe})):h.value.map(Fe=>({value:Fe})),{value:"⚙️ 管理模板...",isSettings:!0}];l(re)}function Ks(p,l){const re=[...p?me.value.filter(Fe=>Fe.toLowerCase().includes(p.toLowerCase())).map(Fe=>({value:Fe})):me.value.map(Fe=>({value:Fe})),{value:"⚙️ 管理模板...",isSettings:!0}];l(re)}function Qs(p){p.isSettings?(b(),V.value=""):V.value=p.value}function Xs(p){p.isSettings?(v(),X.value=""):X.value=p.value}function Zs(p,l){const re=[...p?Re.value.filter(Fe=>Fe.toLowerCase().includes(p.toLowerCase())).map(Fe=>({value:Fe})):Re.value.map(Fe=>({value:Fe})),{value:"⚙️ 管理模板...",isSettings:!0}];l(re)}function eo(p){p.isSettings?(ee.value=!0,g.value=""):g.value=p.value}return(p,l)=>{const ae=Fs,re=tt,Fe=go,fs=At,ps=Ut,bt=Nt,Le=ke,Ke=De,to=yo,Dt=zt,ms=as,kt=xs,$t=wo,vs=Ls,Wt=ko,so=bo,oo=Ft,ao=is;return c(),w(xe,null,[e("div",{class:he(["card",{"is-pushing":a(o).isPushing}])},[e("div",Ql,[l[38]||(l[38]=e("h2",null,"提交更改",-1)),a(o).userName!==""&&a(o).userEmail!==""?(c(),w("div",Xl,[t(Hl,{"has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":se.value,from:"form",onAfterCommit:l[0]||(l[0]=F=>{F&&ue()}),onAfterPush:He,onBeforePush:ze,onClearFields:ue},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])):E("",!0)]),e("div",Zl,[e("div",en,[a(o).userName===""||a(o).userEmail===""?(c(),w("div",tn,[t(ae,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:s(()=>l[39]||(l[39]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(c(),w("div",sn,[e("div",on,[t(Xt,{modelValue:S.value,"onUpdate:modelValue":l[1]||(l[1]=F=>S.value=F),title:"提交模式",tooltip:"选择传统或标准化提交格式","active-text":"标准化","inactive-text":"普通","active-color":"#409eff"},{icon:s(()=>[t(re,null,{default:s(()=>[t(a(ct))]),_:1})]),_:1},8,["modelValue"]),t(Xt,{modelValue:se.value,"onUpdate:modelValue":l[2]||(l[2]=F=>se.value=F),title:"跳过钩子检查",tooltip:"添加 --no-verify 参数","active-color":"#f56c6c","icon-class":"warning"},{icon:s(()=>[t(re,null,{default:s(()=>[t(a(hs))]),_:1})]),_:1},8,["modelValue"]),t(Xt,{modelValue:de.value,"onUpdate:modelValue":l[3]||(l[3]=F=>de.value=F),title:"回车自动提交",tooltip:"输入提交信息后按回车直接执行一键推送","active-color":"#67c23a","icon-class":"success"},{icon:s(()=>[t(re,null,{default:s(()=>[t(a(ut))]),_:1})]),_:1},8,["modelValue"])]),t(Fl,{command:_t.value,title:"提交命令预览：",placeholder:'git commit -m "<提交信息>"'},null,8,["command"]),S.value?(c(),w("div",nn,[e("div",rn,[e("div",cn,[t(ps,{modelValue:q.value,"onUpdate:modelValue":l[5]||(l[5]=F=>q.value=F),placeholder:"提交类型",class:"type-select",clearable:""},{default:s(()=>[(c(),w(xe,null,Me(B,F=>t(fs,{key:F.value,label:F.label,value:F.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",un,[t(Fe,{modelValue:X.value,"onUpdate:modelValue":l[6]||(l[6]=F=>X.value=F),"fetch-suggestions":Ks,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:Xs},null,8,["modelValue"])]),e("div",dn,[t(Fe,{modelValue:V.value,"onUpdate:modelValue":l[7]||(l[7]=F=>V.value=F),"fetch-suggestions":Ys,placeholder:ht.value,class:"description-input",clearable:"",onSelect:Qs,onKeydown:ds},null,8,["modelValue","placeholder"])])])]),e("div",{class:"advanced-options-toggle",onClick:l[8]||(l[8]=F=>we.value=!we.value)},[e("span",null,P(we.value?"收起":"正文及页脚"),1),t(re,{class:he(["toggle-icon",{"is-active":we.value}])},{default:s(()=>[t(a(It))]),_:1},8,["class"])]),at(e("div",fn,[t(bt,{modelValue:x.value,"onUpdate:modelValue":l[9]||(l[9]=F=>x.value=F),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(bt,{modelValue:C.value,"onUpdate:modelValue":l[10]||(l[10]=F=>C.value=F),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[xt,we.value]])])):(c(),w("div",an,[e("div",ln,[t(Fe,{modelValue:g.value,"onUpdate:modelValue":l[4]||(l[4]=F=>g.value=F),"fetch-suggestions":Zs,placeholder:gt.value,type:"textarea",rows:3,resize:"none",class:"commit-message-input",onSelect:eo,onKeydown:ds},null,8,["modelValue","placeholder"])])]))]))])])],2),t(to,{modelValue:Ot.value,"onUpdate:modelValue":l[13]||(l[13]=F=>Ot.value=F),title:"Git 操作",direction:"rtl",size:"360px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:s(()=>[e("div",pn,[e("div",mn,[e("div",vn,[e("div",gn,[l[42]||(l[42]=e("div",{class:"group-title"},"基础操作",-1)),e("div",hn,[t(js,{onClick:()=>{},from:"drawer"}),t(Os,{"has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":se.value,onBeforeCommit:()=>{},onAfterCommit:l[11]||(l[11]=F=>{F&&ue()}),onClick:()=>{},from:"drawer"},null,8,["has-user-commit-message","final-commit-message","skip-hooks"]),t(Ds,{onBeforePush:()=>{},onAfterPush:l[12]||(l[12]=F=>{F&&Y()}),onClick:()=>{},from:"drawer"}),t(Ke,{content:Jt.value?`拉取${a(o).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:a(ts),onClick:u,loading:a(o).isGitPulling,disabled:!a(o).hasUpstream,class:"action-button",style:vt(a(o).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:s(()=>[l[40]||(l[40]=D(" 拉取 ")),Jt.value?(c(),w("span",yn,"("+P(a(o).branchBehind)+")",1)):E("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Ke,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"info",icon:a(ft),onClick:m,loading:a(o).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:s(()=>l[41]||(l[41]=[D(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",_n,[l[44]||(l[44]=e("div",{class:"group-title"},"组合操作",-1)),e("div",wn,[t(Ke,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:a(ct),onClick:L,loading:a(o).isAddingFiles||a(o).isCommiting,disabled:!Pt.value||!Ze.value,class:"action-button"},{default:s(()=>l[43]||(l[43]=[D(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(Ps,{from:"drawer","has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":se.value,onBeforePush:ze,onAfterPush:He,onClearFields:ue},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])])]),e("div",bn,[l[47]||(l[47]=e("div",{class:"group-title"},"重置操作",-1)),e("div",kn,[t(Ke,{content:us.value?`撤销${jt.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"warning",icon:a(ns),onClick:a(o).resetHead,loading:a(o).isResetting,disabled:!us.value,class:"action-button reset-button"},{default:s(()=>[l[45]||(l[45]=D(" 重置暂存区 ")),jt.value>0?(c(),w("span",$n,"("+P(jt.value)+")",1)):E("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Ke,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"danger",icon:a(Vt),onClick:$,loading:a(o).isResetting,disabled:!Es.value,class:"action-button danger-button"},{default:s(()=>l[46]||(l[46]=[D(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",Cn,[l[49]||(l[49]=e("div",{class:"group-title"},"分支操作",-1)),e("div",Sn,[t(Ke,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:a(ho),onClick:Hs,loading:a(o).isGitMerging,class:"action-button merge-button"},{default:s(()=>l[48]||(l[48]=[D(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Tn,[l[52]||(l[52]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",Vn,[t(Ke,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"warning",onClick:lt,loading:a(o).isSavingStash,disabled:!As.value,class:"action-button"},{default:s(()=>l[50]||(l[50]=[D(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(Ke,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"info",onClick:W,class:"action-button"},{default:s(()=>l[51]||(l[51]=[D(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:K.value,"onUpdate:modelValue":l[16]||(l[16]=F=>K.value=F),title:"编辑配置 JSON",size:"large","height-mode":"fixed","custom-class":"config-editor-dialog","show-footer":!1},{default:s(()=>[e("div",Fn,[e("div",Ln,[t(re,{class:"info-icon"},{default:s(()=>[t(a(ct))]),_:1}),l[53]||(l[53]=e("span",{class:"info-text"},"编辑当前项目的配置文件",-1))]),e("div",xn,[t(Dt,{size:"small",type:"info"},{default:s(()=>l[54]||(l[54]=[D("支持JSON格式")])),_:1})])]),e("div",Bn,[t(bt,{modelValue:le.value,"onUpdate:modelValue":l[14]||(l[14]=F=>le.value=F),type:"textarea",spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON...",class:"json-editor"},null,8,["modelValue"])]),e("div",zn,[e("div",Pn,[t(Le,{icon:a(ft),onClick:O,class:"system-config-btn"},{default:s(()=>l[55]||(l[55]=[D(" 打开系统配置文件 ")])),_:1},8,["icon"])]),e("div",jn,[t(Le,{onClick:l[15]||(l[15]=F=>K.value=!1)},{default:s(()=>l[56]||(l[56]=[D("取消")])),_:1}),t(Le,{type:"primary",loading:R.value,icon:a(ut),onClick:Xe,class:"save-btn"},{default:s(()=>l[57]||(l[57]=[D(" 保存配置 ")])),_:1},8,["loading","icon"])])])]),_:1},8,["modelValue"]),t(ms,{modelValue:ve.value,"onUpdate:modelValue":l[20]||(l[20]=F=>ve.value=F),title:"配置文件格式提示",width:"500px","close-on-click-modal":!1,"close-on-press-escape":!1,"show-close":!1},{footer:s(()=>[e("span",Rn,[t(Le,{onClick:l[17]||(l[17]=F=>r("cancel"))},{default:s(()=>l[58]||(l[58]=[D("取消")])),_:1}),t(Le,{type:"info",onClick:l[18]||(l[18]=F=>r("open"))},{default:s(()=>l[59]||(l[59]=[D("打开系统配置文件")])),_:1}),t(Le,{type:"primary",onClick:l[19]||(l[19]=F=>r("continue"))},{default:s(()=>l[60]||(l[60]=[D("继续编辑")])),_:1})])]),default:s(()=>[e("div",On,[t(re,{class:"warning-icon",color:"#f56c6c",size:"24"},{default:s(()=>[t(a(hs))]),_:1}),e("p",Dn,P(Q.value),1)])]),_:1},8,["modelValue"]),t(Qt,{visible:z.value,"onUpdate:visible":l[21]||(l[21]=F=>z.value=F),type:"description",title:"简短描述模板设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板",onUseTemplate:Ie},null,8,["visible"]),t(Qt,{visible:ye.value,"onUpdate:visible":l[22]||(l[22]=F=>ye.value=F),type:"scope",title:"作用域模板设置",placeholder:"输入新作用域模板","edit-placeholder":"编辑作用域模板内容","empty-description":"暂无保存的作用域",onUseTemplate:wt},null,8,["visible"]),t(Qt,{visible:ee.value,"onUpdate:visible":l[23]||(l[23]=F=>ee.value=F),type:"message",title:"默认提交信息设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板","show-default-section":!0,"show-help-text":!0,onUseTemplate:Is,onSetDefault:Ns},null,8,["visible"]),t(Qe,{modelValue:T.value,"onUpdate:modelValue":l[27]||(l[27]=F=>T.value=F),title:"储藏更改 (Git Stash)",size:"medium","close-on-click-modal":!1,"show-footer":"","confirm-text":"储藏","cancel-text":"取消","confirm-loading":a(o).isSavingStash,"custom-class":"stash-dialog",onConfirm:oe},{default:s(()=>[e("div",Gn,[e("div",Mn,[e("div",An,[t(re,null,{default:s(()=>[t(a(_o))]),_:1})]),l[61]||(l[61]=e("div",{class:"info-content"},[e("h4",null,"储藏工作区更改"),e("p",null,"将当前工作区的更改临时保存，稍后可以重新应用到任何分支")],-1))]),t(vs,{"label-position":"top",class:"stash-form"},{default:s(()=>[t(kt,{label:"储藏说明"},{default:s(()=>[t(bt,{modelValue:Z.value,"onUpdate:modelValue":l[24]||(l[24]=F=>Z.value=F),placeholder:"为这次储藏添加描述信息（可选）",clearable:"",rows:2,type:"textarea",resize:"none",maxlength:"200","show-word-limit":""},null,8,["modelValue"])]),_:1}),e("div",Un,[e("h5",En,[t(re,null,{default:s(()=>[t(a(os))]),_:1}),l[62]||(l[62]=D(" 储藏选项 "))]),e("div",In,[t($t,{modelValue:ge.value,"onUpdate:modelValue":l[25]||(l[25]=F=>ge.value=F),size:"large"},{default:s(()=>l[63]||(l[63]=[e("span",{class:"option-label"},"包含未跟踪文件",-1)])),_:1},8,["modelValue"]),l[64]||(l[64]=e("p",{class:"option-desc"},"同时储藏新建但未添加到Git的文件 (--include-untracked)",-1))]),e("div",Nn,[t($t,{modelValue:be.value,"onUpdate:modelValue":l[26]||(l[26]=F=>be.value=F),disabled:Ht.value,size:"large"},{default:s(()=>l[65]||(l[65]=[e("span",{class:"option-label"},"排除锁定文件",-1)])),_:1},8,["modelValue","disabled"]),e("p",{class:he(["option-desc",{disabled:Ht.value}])}," 不储藏被锁定的文件，保持其当前状态 ",2)])]),a(o).status.staged.length>0||a(o).status.unstaged.length>0?(c(),w("div",Hn,[e("h5",Jn,[t(re,null,{default:s(()=>[t(a(Et))]),_:1}),l[66]||(l[66]=D(" 将要储藏的文件 "))]),e("div",Wn,[a(o).status.staged.length>0?(c(),A(Dt,{key:0,type:"success"},{default:s(()=>[D(" 已暂存: "+P(a(o).status.staged.length)+" 个文件 ",1)]),_:1})):E("",!0),a(o).status.unstaged.length>0?(c(),A(Dt,{key:1,type:"warning"},{default:s(()=>[D(" 未暂存: "+P(a(o).status.unstaged.length)+" 个文件 ",1)]),_:1})):E("",!0)])])):E("",!0)]),_:1})])]),_:1},8,["modelValue","confirm-loading"]),t(ms,{title:"合并分支",modelValue:U.value,"onUpdate:modelValue":l[35]||(l[35]=F=>U.value=F),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:s(()=>[e("div",Qn,[t(Le,{onClick:l[34]||(l[34]=F=>U.value=!1)},{default:s(()=>l[73]||(l[73]=[D("取消")])),_:1}),t(Le,{type:"primary",onClick:Ws,loading:a(o).isGitMerging,disabled:!fe.value,class:"merge-confirm-btn"},{default:s(()=>l[74]||(l[74]=[D(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:s(()=>[e("div",qn,[e("p",Yn,"选择要合并到当前分支 ("+P(a(o).currentBranch)+") 的分支:",1),t(vs,{"label-position":"top"},{default:s(()=>[t(kt,{label:"分支类型"},{default:s(()=>[t(so,{modelValue:dt.value,"onUpdate:modelValue":l[28]||(l[28]=F=>dt.value=F),size:"small"},{default:s(()=>[t(Wt,{label:"all"},{default:s(()=>l[67]||(l[67]=[D("所有分支")])),_:1}),t(Wt,{label:"local"},{default:s(()=>l[68]||(l[68]=[D("本地分支")])),_:1}),t(Wt,{label:"remote"},{default:s(()=>l[69]||(l[69]=[D("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t(kt,{label:"选择分支"},{default:s(()=>[t(ps,{modelValue:fe.value,"onUpdate:modelValue":l[29]||(l[29]=F=>fe.value=F),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:s(()=>[(c(!0),w(xe,null,Me(Js.value,F=>(c(),A(fs,{key:F,label:F,value:F},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t(kt,{label:"合并选项"},{default:s(()=>[e("div",Kn,[t($t,{modelValue:pe.value.noFf,"onUpdate:modelValue":l[30]||(l[30]=F=>pe.value.noFf=F)},{default:s(()=>[t(Ke,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:s(()=>l[70]||(l[70]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t($t,{modelValue:pe.value.squash,"onUpdate:modelValue":l[31]||(l[31]=F=>pe.value.squash=F)},{default:s(()=>[t(Ke,{content:"将多个提交压缩为一个提交",placement:"top"},{default:s(()=>l[71]||(l[71]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t($t,{modelValue:pe.value.noCommit,"onUpdate:modelValue":l[32]||(l[32]=F=>pe.value.noCommit=F)},{default:s(()=>[t(Ke,{content:"执行合并但不自动创建提交",placement:"top"},{default:s(()=>l[72]||(l[72]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),pe.value.noFf&&!pe.value.noCommit?(c(),A(kt,{key:0,label:"合并提交信息 (可选)"},{default:s(()=>[t(bt,{modelValue:pe.value.message,"onUpdate:modelValue":l[33]||(l[33]=F=>pe.value.message=F),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):E("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(Qe,{modelValue:ie.value,"onUpdate:modelValue":l[36]||(l[36]=F=>ie.value=F),title:"储藏列表 (Git Stash)",size:"large","show-footer":!1,"custom-class":"stash-list-dialog"},{default:s(()=>[e("div",Xn,[a(o).isLoadingStashes?E("",!0):(c(),w("div",Zn,[e("div",ei,[e("div",ti,[t(re,{class:"stat-icon"},{default:s(()=>[t(a(ft))]),_:1}),e("span",si,P(a(o).stashes.length),1),l[75]||(l[75]=e("span",{class:"stat-label"},"个储藏",-1))])]),a(o).stashes.length>0?(c(),w("div",oi,[t(Le,{type:"danger",size:"small",icon:a(Vt),onClick:Te,loading:a(o).isDroppingStash,class:"clear-all-btn"},{default:s(()=>l[76]||(l[76]=[D(" 清空所有储藏 ")])),_:1},8,["icon","loading"])])):E("",!0)])),at((c(),w("div",ai,[a(o).stashes.length===0&&!a(o).isLoadingStashes?(c(),w("div",li,[t(oo,{description:"暂无储藏记录","image-size":120},{image:s(()=>[t(re,{class:"empty-icon"},{default:s(()=>[t(a(ft))]),_:1})]),description:s(()=>l[77]||(l[77]=[e("p",{class:"empty-text"},"还没有任何储藏记录",-1),e("p",{class:"empty-hint"},"使用 git stash 可以临时保存工作进度",-1)])),_:1})])):(c(),w("div",ni,[(c(!0),w(xe,null,Me(a(o).stashes,(F,gs)=>(c(),w("div",{key:F.id,class:he(["stash-card",{"stash-card-latest":gs===0}])},[e("div",ii,[e("div",ri,[e("div",ci,[e("div",ui,[t(re,{class:"badge-icon"},{default:s(()=>[t(a(ft))]),_:1}),e("span",di,P(F.id),1),gs===0?(c(),A(Dt,{key:0,size:"small",type:"success",class:"latest-tag"},{default:s(()=>l[78]||(l[78]=[D("最新")])),_:1})):E("",!0)]),e("div",fi,[e("span",pi,P(F.description),1)])])]),e("div",mi,[t(Le,{size:"small",type:"info",icon:a(ct),onClick:qt=>_e(F),loading:Be.value,class:"action-btn view-btn"},{default:s(()=>l[79]||(l[79]=[D(" 查看 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"success",icon:a(ts),onClick:qt=>Ce(F.id,!1),loading:a(o).isApplyingStash,class:"action-btn apply-btn"},{default:s(()=>l[80]||(l[80]=[D(" 应用 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"primary",icon:a(ut),onClick:qt=>Ce(F.id,!0),loading:a(o).isApplyingStash,class:"action-btn apply-pop-btn"},{default:s(()=>l[81]||(l[81]=[D(" 应用并删除 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"danger",icon:a(Vt),onClick:qt=>Ue(F.id),loading:a(o).isDroppingStash,class:"action-btn delete-btn"},{default:s(()=>l[82]||(l[82]=[D(" 删除 ")])),_:2},1032,["icon","onClick","loading"])])])],2))),128))]))])),[[ao,a(o).isLoadingStashes]])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:Ae.value,"onUpdate:modelValue":l[37]||(l[37]=F=>Ae.value=F),title:"储藏详情","custom-class":"stash-detail-dialog",size:"extra-large",type:"flex","close-on-click-modal":!1},{default:s(()=>[e("div",vi,[Oe.value?(c(),w("div",gi,[e("div",hi,[l[83]||(l[83]=e("span",{class:"info-label"},"Stash ID:",-1)),e("code",yi,P(Oe.value.id),1)]),e("div",_i,[l[84]||(l[84]=e("span",{class:"info-label"},"描述:",-1)),e("span",wi,P(Oe.value.description),1)])])):E("",!0),e("div",bi,[t(cs,{files:yt.value,diffContent:ce.value,selectedFile:ot.value,context:"stash-detail",emptyText:"该stash没有变更文件",onFileSelect:Ve,onOpenFile:Se,onOpenWithVscode:ne},null,8,["files","diffContent","selectedFile"])])])]),_:1},8,["modelValue"]),t(rs,{name:"el-fade-in-linear"},{default:s(()=>[M.value?(c(),w("div",ki,[t(re,{class:"is-loading"},{default:s(()=>[t(a(Bs))]),_:1}),l[85]||(l[85]=e("span",null,"更新状态中...",-1))])):E("",!0)]),_:1}),t(el,{visible:a(f).visible,text:a(f).text,"show-progress":a(f).showProgress,progress:a(f).progress},null,8,["visible","text","show-progress","progress"]),t(ll,{visible:a(te).visible,text:a(te).text,description:a(te).description},null,8,["visible","text","description"])],64)}}}),Ci=je($i,[["__scopeId","data-v-a7f444ea"]]),Si={class:"log-header"},Ti={class:"log-actions"},Vi={key:0,class:"filter-panel-header"},Fi={class:"filter-form"},Li={class:"filter-item"},xi={class:"filter-item"},Bi={class:"filter-item"},zi={class:"filter-item"},Pi={class:"filter-actions"},ji={key:0},Oi={key:1,class:"content-area-content"},Di={key:0,class:"graph-view"},Ri={key:0,class:"commit-count"},Gi={class:"graph-controls"},Mi={class:"zoom-controls"},Ai={class:"scale-info"},Ui={key:1,class:"table-view-container"},Ei=["onClick"],Ii={class:"commit-message-cell"},Ni={class:"message-content"},Hi={key:0,class:"branch-container"},Ji={class:"message-text"},Wi={class:"author-name"};const qi={class:"commit-detail-container"},Yi={key:0,class:"commit-info"},Ki={class:"commit-info-header"},Qi={class:"info-item"},Xi={class:"item-value"},Zi={class:"info-item"},er={class:"item-value"},tr={class:"info-item"},sr={class:"item-value"},or={class:"commit-message-container"},ar=["innerHTML"],St=.5,Mt=1.5,Zt=.1,lr=Pe({__name:"LogList",setup(N,{expose:k}){const o=st();let i=[];const g=d(i),f=d(""),j=d(!1),_=I(()=>o.isLoadingLog||j.value),G=d(!1),te=d(0),H=d(!1),M=d(null),y=d(1),J=d(!0),S=d(!1),q=d(null),X=d(!1),V=d(null),x=d([]),C=d(""),K=d(!1),le=d(""),R=d(1),ve=d(!1),Q=d(!1),h=d([]),z=d(""),U=d(null),fe=d([]),pe=d([]),me=d([]),ye=d(!1),ee=d(0),se=d(0),de=d(null),we=I(()=>g.value),B=I(()=>x.value.map(b=>({path:b,name:b.split("/").pop()||b})));async function T(b=!1,v=1){if(!st().isGitRepo){f.value="当前目录不是Git仓库";return}try{v>1?S.value=!0:j.value=!0;const u=new URLSearchParams;u.append("page",v.toString()),u.append("all",b.toString()),u.append("with_parents","true"),h.value.length>0&&u.append("author",h.value.join(",")),pe.value.length>0&&u.append("branch",pe.value.join(",")),z.value&&u.append("message",z.value),U.value&&Array.isArray(U.value)&&U.value.length===2&&(u.append("dateFrom",U.value[0]),u.append("dateTo",U.value[1])),u.append("_t",Date.now().toString());const L=await(await fetch(`/api/log?${u.toString()}`)).json();if(!L||!L.data||!Array.isArray(L.data)){f.value="加载提交历史失败: 服务器返回数据格式不正确";return}const $=v>1;$?L.data.forEach(ue=>i.push(ue)):(i.length=0,L.data.forEach(ue=>i.push(ue))),g.value=[...i],y.value=v,te.value=L.total||i.length,J.value=L.hasMore===!0,$||(ve.value=!0,setTimeout(()=>{ve.value=!1},2e3)),!$&&H.value?setTimeout(ie,0):!$&&!H.value&&!b&&rt(()=>{Be(),setTimeout(nt,200)}),f.value=""}catch(u){f.value="加载提交历史失败: "+(u instanceof Error?u.message:String(u)),v>1&&(J.value=!1)}finally{v>1?S.value=!1:j.value=!1}}async function ie(){if(M.value&&i.length!==0)try{M.value.innerHTML="";const b=jo(M.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),v={},Y=b.branch(o.currentBranch||"main");v[o.currentBranch||"main"]=Y,i.forEach(u=>{let m=Y;if(u.branch){const L=be(u.branch.split(",")[0]);v[L]||(v[L]=b.branch(L)),m=v[L]}m.commit({hash:u.hash,subject:u.message,author:`${u.author} <${u.email}>`})}),setTimeout(()=>{W()},100)}catch(b){f.value="渲染图表失败: "+(b instanceof Error?b.message:String(b))}}function Z(){H.value=!H.value,H.value&&i.length>0&&setTimeout(ie,0)}function ge(){G.value=!G.value,G.value||(J.value=!0),y.value=1,T(G.value),rt(()=>{setTimeout(()=>{!H.value&&!G.value&&(Be(),nt())},300)})}function be(b){return b.includes("HEAD -> ")?b.replace("HEAD -> ",""):b.includes("origin/")?b:b.trim()}function Ae(b){return b.includes("HEAD")?"success":b.includes("origin/")?"warning":"info"}const Oe=d(null),$e=d(null);function ce(b){if(H.value||!J.value||S.value||_.value)return;const v=b.target,{scrollTop:Y,scrollHeight:u,clientHeight:m}=v;u-Y-m<=20&&Ve()}function Be(){if(!Oe.value)return;const b=Oe.value.$el.querySelector(".el-table__body-wrapper");b&&($e.value=b,$e.value&&($e.value.removeEventListener("scroll",ce,!0),$e.value.addEventListener("scroll",ce,!0)))}function ot(){$e.value&&($e.value.removeEventListener("scroll",ce,!0),$e.value=null)}function lt(b){b.key==="Escape"&&Ie.value&&(Ie.value=!1)}mt(()=>{o.isGitRepo?(o.log.length>0?(i.length=0,o.log.forEach(b=>i.push(b)),te.value=o.log.length,H.value&&setTimeout(()=>{ie()},100)):T(),Re()):f.value="当前目录不是Git仓库",rt(()=>{setTimeout(()=>{Be()},500)}),Ge(()=>Oe.value,b=>{b&&!H.value&&!G.value&&rt(()=>{Be()})}),window.addEventListener("keydown",lt)}),Ge(()=>o.allBranches,b=>{b&&b.length>0?me.value=[...b].sort():me.value=[]},{immediate:!0}),$o(()=>{ot(),q.value!==null&&(window.clearInterval(q.value),q.value=null),window.removeEventListener("keydown",lt)});async function We(){await o.fetchLog(!0),i.length=0,o.log.forEach(b=>i.push(b)),g.value=[...i],te.value=o.log.length,y.value=1,J.value=!1,ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),H.value&&(await rt(),ie())}Ge(()=>o.log,b=>{try{i.length=0,Array.isArray(b)&&b.forEach(v=>v&&i.push(v)),te.value=i.length,y.value=1,g.value=[...i],ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),H.value&&i.length>0&&setTimeout(ie,0)}catch{}},{immediate:!0}),k({refreshLog:We});function Xe(){R.value<Mt&&(R.value=Math.min(Mt,R.value+Zt),r())}function O(){R.value>St&&(R.value=Math.max(St,R.value-Zt),r())}function r(){if(!M.value)return;const b=M.value.querySelector("svg");b&&(b.style.transform=`scale(${R.value})`,b.style.transformOrigin="top left")}function W(){if(!M.value)return;const b=M.value.querySelector("svg");if(!b)return;const v=b.getBoundingClientRect().width/R.value,Y=M.value.clientWidth;v>Y?R.value=Math.max(St,Y/v):R.value=1,r()}async function oe(b){if(b){V.value=b,X.value=!0,K.value=!0,x.value=[],C.value="",le.value="";try{if(!b.hash||b.hash.length<7){C.value="无效的提交哈希值",K.value=!1;return}const Y=await(await fetch(`/api/commit-files?hash=${b.hash}`)).json();Y.success&&Array.isArray(Y.files)?(x.value=Y.files,x.value.length>0?await Ce(b.hash,x.value[0]):C.value="该提交没有变更文件"):C.value=`获取文件列表失败: ${Y.error||"未知错误"}`}catch(v){C.value=`获取提交详情失败: ${v.message}`}finally{K.value=!1}}}async function Ce(b,v){K.value=!0,le.value=v;try{const u=await(await fetch(`/api/commit-file-diff?hash=${b}&file=${encodeURIComponent(v)}`)).json();u.success?C.value=u.diff||"没有变更内容":C.value=`获取差异失败: ${u.error||"未知错误"}`}catch(Y){C.value=`获取差异失败: ${Y.message}`}finally{K.value=!1}}function Ue(b){V.value&&Ce(V.value.hash,b)}async function Te(b,v){try{const u=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:b,context:v})})).json();u.success?n.success(u.message):n.error(u.error||"打开文件失败")}catch(Y){n.error(`打开文件失败: ${Y.message}`)}}async function _e(b,v){try{const u=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:b,context:v})})).json();u.success?n.success(u.message):n.error(u.error||"用VSCode打开文件失败")}catch(Y){n.error(`用VSCode打开文件失败: ${Y.message}`)}}async function Ee(b){try{const v=No(b);await navigator.clipboard.writeText(v),n.success("提交信息已复制到剪贴板")}catch{n.error("复制失败")}}function Ve(){!J.value||S.value||_.value||T(G.value,y.value+1)}function Se(){h.value=[],pe.value=[],z.value="",U.value=null,y.value=1,T(G.value,1)}function ne(){y.value=1,T(G.value,1)}async function Re(){try{const v=await(await fetch("/api/authors")).json();v.success&&Array.isArray(v.authors)?fe.value=v.authors.sort():Je()}catch{Je()}}function Je(){const b=new Set;g.value.forEach(v=>{v.author&&b.add(v.author)}),fe.value=Array.from(b).sort()}Ge(()=>g.value,()=>{},{deep:!0});function Ze(b,v,Y){Y.preventDefault(),ee.value=Y.clientY,se.value=Y.clientX,de.value=b,ye.value=!0;const u=()=>{ye.value=!1,document.removeEventListener("click",u)};setTimeout(()=>{document.addEventListener("click",u)},0)}async function gt(b){if(b)try{await Ye.confirm(`确定要撤销提交 ${b.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const Y=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:b.hash})})).json();Y.success?(n.success(Y.message||"已成功撤销提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(Y.error||"撤销提交失败")}catch(v){v!=="cancel"&&n.error("撤销提交失败: "+(v.message||v))}}async function ht(b){if(b)try{await Ye.confirm(`确定要将提交 ${b.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const Y=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:b.hash})})).json();Y.success?(n.success(Y.message||"已成功Cherry-Pick提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(Y.error||"Cherry-Pick提交失败")}catch(v){v!=="cancel"&&n.error("Cherry-Pick提交失败: "+(v.message||v))}}async function yt(b){if(b)try{await navigator.clipboard.writeText(b.hash),n.success(`已复制提交哈希: ${b.hash.substring(0,7)}`)}catch(v){n.error(`复制提交哈希失败: ${v.message}`)}}async function _t(b){if(b)try{await Ye.confirm(`确定要将当前分支重置(hard)到提交 ${b.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const Y=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:b.hash})})).json();Y.success?(n.success(Y.message||"已成功重置到指定提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(Y.error||"重置到指定提交失败")}catch(v){v!=="cancel"&&n.error("重置到指定提交失败: "+(v.message||v))}}function nt(){if(H.value||!J.value||S.value||_.value||G.value)return;if(!$e.value){Be();return}const{scrollTop:b,scrollHeight:v,clientHeight:Y}=$e.value;v-b-Y<=50&&Ve()}Ge(()=>H.value,b=>{!b&&!G.value&&rt(()=>{Be(),setTimeout(nt,200)})});const Ie=d(!1);function wt(){Ie.value=!Ie.value,rt(()=>{H.value&&M.value&&ie()})}return(b,v)=>{var L;const Y=tt,u=De,m=is;return c(),w(xe,null,[e("div",{class:he(["card",{"fullscreen-mode":Ie.value}])},[e("div",Si,[v[14]||(v[14]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",Ti,[H.value?E("",!0):(c(),A(a(ke),{key:0,type:Q.value?"primary":"default",size:"small",onClick:v[0]||(v[0]=$=>Q.value=!Q.value),class:he(["action-button filter-button icon-only-button",{"active-filter":Q.value}])},{icon:s(()=>[t(Y,null,{default:s(()=>[t(a(Co))]),_:1})]),_:1},8,["type","class"])),t(a(ke),{type:"primary",size:"small",onClick:Z,class:he(["action-button view-mode-button icon-only-button",{"active-view":H.value}])},{icon:s(()=>[t(Y,null,{default:s(()=>[(c(),A(Tt(H.value?a(Et):a(So))))]),_:1})]),_:1},8,["class"]),at(t(a(ke),{type:"success",size:"small",onClick:ge,loading:_.value,class:he(["action-button commit-display-button",{"active-commits":G.value}])},{icon:s(()=>[t(Y,null,{default:s(()=>[(c(),A(Tt(G.value?a(To):a(Vo))))]),_:1})]),default:s(()=>[D(" "+P(G.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[xt,!1]]),t(a(ke),{type:"info",size:"small",onClick:wt,class:he(["action-button fullscreen-button icon-only-button",{"active-fullscreen":Ie.value}])},{icon:s(()=>[t(Y,null,{default:s(()=>[(c(),A(Tt(Ie.value?a(ls):a(Fo))))]),_:1})]),_:1},8,["class"]),t(a(ke),{circle:"",size:"small",onClick:v[1]||(v[1]=$=>We()),class:he([{"refresh-button-animated":ve.value},"action-button refresh-button"])},{default:s(()=>[_.value?(c(),A(Y,{key:1},{default:s(()=>[t(a(Bs))]),_:1})):(c(),A(Y,{key:0},{default:s(()=>[t(a(ns))]),_:1}))]),_:1},8,["class"])])]),Q.value&&!H.value?(c(),w("div",Vi,[e("div",Fi,[e("div",Li,[t(a(Ut),{modelValue:h.value,"onUpdate:modelValue":v[2]||(v[2]=$=>h.value=$),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[15]||(v[15]=[e("span",{class:"compact-label"},"作者",-1)])),default:s(()=>[(c(!0),w(xe,null,Me(fe.value,$=>(c(),A(a(At),{key:$,label:$,value:$},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",xi,[t(a(Ut),{modelValue:pe.value,"onUpdate:modelValue":v[3]||(v[3]=$=>pe.value=$),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[16]||(v[16]=[e("span",{class:"compact-label"},"分支",-1)])),default:s(()=>[(c(!0),w(xe,null,Me(me.value,$=>(c(),A(a(At),{key:$,label:$,value:$},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Bi,[t(a(Nt),{modelValue:z.value,"onUpdate:modelValue":v[4]||(v[4]=$=>z.value=$),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[17]||(v[17]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",zi,[t(a(Lo),{modelValue:U.value,"onUpdate:modelValue":v[5]||(v[5]=$=>U.value=$),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:s(()=>v[18]||(v[18]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",Pi,[t(a(ke),{type:"primary",size:"small",onClick:ne,class:"filter-action-button"},{default:s(()=>v[19]||(v[19]=[D("应用")])),_:1}),t(a(ke),{type:"info",size:"small",onClick:Se,class:"filter-action-button"},{default:s(()=>v[20]||(v[20]=[D("重置")])),_:1})])])])):E("",!0),e("div",{class:he(["content-area",{"with-filter":Q.value&&!H.value}])},[f.value?(c(),w("div",ji,P(f.value),1)):(c(),w("div",Oi,[H.value?(c(),w("div",Di,[a(i).length>0?(c(),w("div",Ri," 显示 "+P(a(i).length)+" 条提交记录 "+P(G.value?"(全部)":"(分页加载，每页20条)"),1)):E("",!0),e("div",Gi,[e("div",Mi,[t(a(ke),{type:"primary",circle:"",size:"small",onClick:O,disabled:R.value<=St},{default:s(()=>[t(Y,null,{default:s(()=>[t(a(xo))]),_:1})]),_:1},8,["disabled"]),t(a(Bo),{modelValue:R.value,"onUpdate:modelValue":v[6]||(v[6]=$=>R.value=$),min:St,max:Mt,step:Zt,onChange:r,class:"zoom-slider"},null,8,["modelValue"]),t(a(ke),{type:"primary",circle:"",size:"small",onClick:Xe,disabled:R.value>=Mt},{default:s(()=>[t(Y,null,{default:s(()=>[t(a(zo))]),_:1})]),_:1},8,["disabled"]),t(a(ke),{type:"primary",size:"small",onClick:W},{default:s(()=>v[21]||(v[21]=[D(" 自适应大小 ")])),_:1})]),e("div",Ai," 缩放: "+P(Math.round(R.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:M,class:"graph-container"},null,512)])):(c(),w("div",Ui,[at((c(),A(a(Po),{ref_key:"tableRef",ref:Oe,data:we.value,stripe:"",border:"",class:"log-table","empty-text":_.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:Ze,onRowClick:v[7]||(v[7]=$=>oe($))},{default:s(()=>[t(a(Rt),{label:"哈希",width:"80",resizable:""},{default:s($=>[e("span",{class:"commit-hash",onClick:ue=>oe($.row)},P($.row.hash.substring(0,6)),9,Ei)]),_:1}),t(a(Rt),{label:"提交信息","min-width":"300"},{default:s($=>[e("div",Ii,[e("div",Ni,[$.row.branch?(c(),w("div",Hi,[(c(!0),w(xe,null,Me($.row.branch.split(","),(ue,ze)=>(c(),A(a(zt),{key:ze,size:"small",type:Ae(ue),class:"branch-tag"},{default:s(()=>[D(P(be(ue)),1)]),_:2},1032,["type"]))),128))])):E("",!0),e("span",Ji,P($.row.message),1),t(a(ke),{type:"text",icon:a(pt),size:"small",onClick:Bt(ue=>Ee($.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(a(Rt),{prop:"date",label:"日期",width:"150",resizable:""}),t(a(Rt),{label:"作者",width:"100",resizable:""},{default:s($=>[t(u,{content:$.row.email,placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[e("span",Wi,P($.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[m,_.value]]),(G.value,E("",!0))]))]))],2),t(Qe,{modelValue:X.value,"onUpdate:modelValue":v[8]||(v[8]=$=>X.value=$),title:`提交详情: ${(L=V.value)!=null&&L.hash?V.value.hash.substring(0,7):"未知"}`,size:"extra-large",type:"flex","destroy-on-close":"","custom-class":"commit-detail-dialog"},{default:s(()=>[at((c(),w("div",qi,[V.value?(c(),w("div",Yi,[e("div",Ki,[e("div",Qi,[v[25]||(v[25]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Xi,P(V.value.hash),1)]),e("div",Zi,[v[26]||(v[26]=e("span",{class:"item-label"},"作者:",-1)),e("span",er,P(V.value.author)+" <"+P(V.value.email)+">",1)]),e("div",tr,[v[27]||(v[27]=e("span",{class:"item-label"},"日期:",-1)),e("span",sr,P(V.value.date),1)])]),e("div",or,[v[28]||(v[28]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:a(Io)(V.value.message).replace(/\n/g,"<br>")},null,8,ar)])])):E("",!0),t(cs,{files:B.value,loading:K.value,diffContent:C.value,selectedFile:le.value,context:"commit-detail",emptyText:"没有找到变更文件",onFileSelect:Ue,onOpenFile:Te,onOpenWithVscode:_e},null,8,["files","loading","diffContent","selectedFile"])])),[[m,K.value]])]),_:1},8,["modelValue","title"])],2),at(e("div",{class:he(["context-menu",{"fullscreen-context-menu":Ie.value}]),style:vt({top:ee.value+"px",left:se.value+"px"})},[e("div",{class:"context-menu-item",onClick:v[9]||(v[9]=$=>oe(de.value))},v[29]||(v[29]=[e("i",{class:"el-icon-view"},null,-1),D(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:v[10]||(v[10]=$=>yt(de.value))},v[30]||(v[30]=[e("i",{class:"el-icon-document-copy"},null,-1),D(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:v[11]||(v[11]=$=>_t(de.value))},v[31]||(v[31]=[e("i",{class:"el-icon-refresh-right"},null,-1),D(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:v[12]||(v[12]=$=>gt(de.value))},v[32]||(v[32]=[e("i",{class:"el-icon-delete"},null,-1),D(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:v[13]||(v[13]=$=>ht(de.value))},v[33]||(v[33]=[e("i",{class:"el-icon-edit"},null,-1),D(" Cherry-Pick 到当前分支 ")]))],6),[[xt,ye.value]])],64)}}}),nr=je(lr,[["__scopeId","data-v-96634551"]]),ir={class:"dialog-toolbar"},rr=["disabled"],cr=["disabled"],ur=["disabled"],dr={class:"history-scroll"},fr={key:0,class:"loading-state"},pr={key:2,class:"history-list"},mr=["onClick"],vr={class:"command-info"},gr={class:"command-text"},hr={class:"command-meta"},yr={class:"timestamp"},_r={class:"duration"},wr={class:"item-actions"},br=["onClick"],kr=["onClick"],$r={key:0,class:"item-details"},Cr={key:0,class:"output-section"},Sr={class:"output-header"},Tr=["onClick"],Vr={class:"output-content"},Fr={key:0,class:"truncation-notice"},Lr={class:"output-header"},xr={class:"output-content"},Br={key:0,class:"truncation-notice"},zr={key:2,class:"output-section error"},Pr={class:"output-content"},jr=Pe({__name:"CommandHistory",setup(N){const k=st(),o=d([]),i=d(!1),g=d(!1),f=d(!1),j=d(!1),_=d(new Set),G=d(!1),te=d(!1);function H(){te.value=!0,o.value.length===0&&M()}async function M(){try{if(i.value=!0,k.socket&&k.socket.connected)k.socket.emit("request_full_history");else{const z=await(await fetch("/api/command-history")).json();z.success?o.value=z.history:n.error(`加载命令历史失败: ${z.error}`)}}catch(h){n.error(`加载命令历史失败: ${h.message}`)}finally{i.value=!1}}async function y(){if(o.value.length===0){n.warning("没有可复制的命令历史");return}try{f.value=!0;const h=o.value.map(z=>{let U=`# ${q(z.timestamp)} (耗时: ${X(z.executionTime)}) - ${z.success?"成功":"失败"}
`;if(U+=`${z.command}
`,z.stdout&&(U+=`
# 输出:
${z.stdout}
`),z.stderr){const fe=le(z.command)?"输出信息":"错误输出";U+=`
# ${fe}:
${z.stderr}
`}return z.error&&(U+=`
# 错误信息:
${z.error}
`),U}).join(`
---

`);await navigator.clipboard.writeText(h),n({message:"命令历史已复制到剪贴板",type:"success",zIndex:1e5})}catch(h){n.error(`复制失败: ${h.message}`)}finally{f.value=!1}}async function J(){if(o.value.length===0){n.warning("没有可复制的命令");return}try{G.value=!0;const h=o.value.map(z=>z.command).join(`
`);await navigator.clipboard.writeText(h),n({message:"命令列表已复制到剪贴板",type:"success",zIndex:1e5})}catch(h){n.error(`复制失败: ${h.message}`)}finally{G.value=!1}}async function S(){try{if(await Ye.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),g.value=!0,k.socket&&k.socket.connected)k.socket.emit("clear_command_history");else{const z=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();z.success?(o.value=[],n.success("命令历史已清空")):n.error(`清空命令历史失败: ${z.error}`)}}catch(h){h!=="cancel"&&h.toString()!=="Error: cancel"&&n.error(`清空命令历史失败: ${h.message}`)}finally{g.value=!1}}function q(h){return new Date(h).toLocaleString()}function X(h){return h<1e3?`${h}ms`:`${(h/1e3).toFixed(2)}s`}function V(h){_.value.has(h)?_.value.delete(h):_.value.add(h)}function x(h){return _.value.has(h)}async function C(h){try{await navigator.clipboard.writeText(h),n({message:"命令已复制到剪贴板",type:"success",zIndex:1e5})}catch(z){n.error(`复制失败: ${z.message}`)}}function K(h){return h.includes("git push")||h.includes("git-push")}function le(h){return!!K(h)}async function R(h){try{let z="";if(h.stdout&&(z+=`标准输出:
${h.stdout}

`),h.stderr){const U=le(h.command)?"输出信息":"错误输出";z+=`${U}:
${h.stderr}

`}h.error&&(z+=`错误信息:
${h.error}`),await navigator.clipboard.writeText(z.trim()),n({message:"输出已复制到剪贴板",type:"success",zIndex:1e5})}catch(z){n.error(`复制失败: ${z.message}`)}}function ve(){if(!k.socket){console.error("Socket实例不可用");return}k.socket.on("initial_command_history",h=>{o.value=h.history,j.value=!0}),k.socket.on("command_history_update",h=>{o.value.unshift(h.newCommand),o.value.length>100&&o.value.pop(),j.value=!0}),k.socket.on("full_command_history",h=>{o.value=h.history,i.value=!1,j.value=!0}),k.socket.on("command_history_cleared",h=>{h.success&&(o.value=[],n.success("命令历史已清空")),g.value=!1}),k.socket.on("connect",()=>{j.value=!0,n.success("已连接到实时命令历史")}),k.socket.on("disconnect",()=>{j.value=!1,n.warning("实时命令历史连接已断开")})}function Q(){k.socket&&(k.socket.off("initial_command_history"),k.socket.off("command_history_update"),k.socket.off("full_command_history"),k.socket.off("command_history_cleared"))}return mt(()=>{ve(),k.socket||(console.log("尝试初始化Socket连接"),k.initSocketConnection())}),bs(()=>{Q()}),(h,z)=>{const U=tt,fe=De,pe=zt,me=Ft,ye=Fs;return c(),w(xe,null,[t(fe,{content:"查看Git命令历史",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn command-history-button",onClick:H},[t(U,{class:"btn-icon"},{default:s(()=>[t(a(zs))]),_:1})])]),_:1}),t(Qe,{modelValue:te.value,"onUpdate:modelValue":z[0]||(z[0]=ee=>te.value=ee),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"","custom-class":"command-history-dialog","append-to-body":!0},{default:s(()=>[e("div",ir,[t(pe,{type:j.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:s(()=>[D(P(j.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(fe,{content:"只复制命令列表（不含输出）",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-commands-button enhanced-btn",onClick:J,disabled:o.value.length===0||G.value},[G.value?(c(),A(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[1]||(z[1]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(c(),A(U,{key:0,class:"btn-icon"},{default:s(()=>[t(a(pt))]),_:1})),z[2]||(z[2]=e("span",{class:"btn-text"},"命令",-1))],8,rr)]),_:1}),t(fe,{content:"复制完整命令历史（含输出）",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-all-button enhanced-btn",onClick:y,disabled:o.value.length===0||f.value},[f.value?(c(),A(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[3]||(z[3]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(c(),A(U,{key:0,class:"btn-icon"},{default:s(()=>[t(a(pt))]),_:1})),z[4]||(z[4]=e("span",{class:"btn-text"},"全部",-1))],8,cr)]),_:1}),t(fe,{content:"清空命令历史",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn clear-button enhanced-btn danger-btn",onClick:S,disabled:o.value.length===0||g.value},[g.value?(c(),A(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[5]||(z[5]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(c(),A(U,{key:0,class:"btn-icon"},{default:s(()=>[t(a(Vt))]),_:1})),z[6]||(z[6]=e("span",{class:"btn-text"},"清空",-1))],8,ur)]),_:1})]),e("div",dr,[i.value&&o.value.length===0?(c(),w("div",fr,[t(U,{class:"loading-icon is-loading"},{default:s(()=>z[7]||(z[7]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),z[8]||(z[8]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):o.value.length===0?(c(),A(me,{key:1,description:"暂无命令历史"})):(c(),w("div",pr,[(c(!0),w(xe,null,Me(o.value,(ee,se)=>(c(),w("div",{key:se,class:he(["history-item",{"is-error":!ee.success}])},[e("div",{class:"item-header",onClick:de=>V(se)},[e("div",vr,[e("div",gr,[t(pe,{size:"small",type:ee.success?"success":"danger",effect:"dark",class:"status-tag"},{default:s(()=>[D(P(ee.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,P(ee.command),1)]),e("div",hr,[e("span",yr,P(q(ee.timestamp)),1),e("span",_r,"耗时: "+P(X(ee.executionTime)),1)])]),e("div",wr,[t(fe,{content:"复制命令",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn item-copy-button enhanced-btn",onClick:Bt(de=>C(ee.command),["stop"])},[t(U,{class:"btn-icon"},{default:s(()=>[t(a(pt))]),_:1})],8,br)]),_:2},1024),t(fe,{content:"展开/收起",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:he(["modern-btn expand-button enhanced-btn",{"is-expanded":x(se)}]),onClick:Bt(de=>V(se),["stop"])},[t(U,{class:"btn-icon"},{default:s(()=>[x(se)?(c(),A(a(Cs),{key:0})):(c(),A(a(It),{key:1}))]),_:2},1024)],10,kr)]),_:2},1024)])],8,mr),x(se)?(c(),w("div",$r,[ee.stdout?(c(),w("div",Cr,[e("div",Sr,[z[9]||(z[9]=e("h4",null,"标准输出",-1)),t(fe,{content:"复制输出",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn output-copy-button enhanced-btn",onClick:de=>R(ee)},[t(U,{class:"btn-icon"},{default:s(()=>[t(a(pt))]),_:1})],8,Tr)]),_:2},1024)]),e("pre",Vr,P(ee.stdout),1),ee.isStdoutTruncated?(c(),w("div",Fr,[t(ye,{type:"info",closable:!1,"show-icon":""},{default:s(()=>z[10]||(z[10]=[D(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):E("",!0)])):E("",!0),ee.stderr?(c(),w("div",{key:1,class:he(["output-section",le(ee.command)?"":"error"])},[e("div",Lr,[e("h4",null,P(le(ee.command)?"输出信息":"错误输出"),1)]),e("pre",xr,P(ee.stderr),1),ee.isStderrTruncated?(c(),w("div",Br,[t(ye,{type:"info",closable:!1,"show-icon":""},{default:s(()=>[D(P(le(ee.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):E("",!0)],2)):E("",!0),ee.error?(c(),w("div",zr,[z[11]||(z[11]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",Pr,P(ee.error),1)])):E("",!0)])):E("",!0)],2))),128))]))])]),_:1},8,["modelValue"])],64)}}}),Or=je(jr,[["__scopeId","data-v-1880e2cb"]]),Dr="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",Rr={class:"main-header"},Gr={class:"header-left"},Mr=["src"],Ar={class:"header-info"},Ur={key:0,id:"user-info"},Er={class:"user-name"},Ir={class:"user-email"},Nr={key:1,id:"user-info"},Hr={class:"directory-selector"},Jr={class:"directory-display"},Wr={class:"directory-icon"},qr=["title"],Yr={class:"directory-actions"},Kr={key:2,class:"header-actions-right"},Qr={key:0,class:"command-history-section"},Xr={class:"main-container"},Zr={key:0,class:"loading-container"},ec={class:"loading-spinner"},tc={key:1,class:"grid-layout"},sc={class:"git-status-panel"},oc={key:0,class:"commit-form-panel"},ac={key:0,class:"card"},lc={class:"tips"},nc={key:1,class:"commit-form-panel"},ic={key:2,class:"log-list-panel"},rc={class:"create-branch-content"},cc={class:"form-label"},uc={class:"form-label"},dc={class:"create-branch-footer"},fc={class:"footer-actions"},pc=["disabled"],mc={class:"main-footer"},vc={key:0,class:"branch-info"},gc={class:"branch-wrapper"},hc={key:1,class:"footer-right"},yc={class:"repo-url"},_c={class:"user-settings-content"},wc={class:"form-group"},bc={class:"form-label"},kc={class:"form-group"},$c={class:"form-label"},Cc={class:"info-section"},Sc={class:"info-card"},Tc={class:"info-icon"},Vc={class:"user-settings-footer"},Fc={class:"footer-actions"},Lc={class:"directory-content"},xc={class:"form-label"},Bc={class:"directory-input-group"},zc={class:"form-label"},Pc={class:"recent-directories"},jc=["onClick"],Oc={class:"dir-path"},Dc={class:"directory-footer"},Rc={class:"footer-actions"},Gc=["disabled"],Mc=Pe({__name:"App",setup(N){const k=d(""),o=d(null),i=d(null),g=d(null),f=st(),j=it(),_=d(!1),G=d("");function te(){j.config&&(k.value=`默认提交信息: ${j.config.defaultCommitMessage}`)}async function H(){try{const r=await(await fetch("/api/current_directory")).json();return G.value=r.directory||"未知目录",r}catch(O){return console.error("获取当前目录失败:",O),{directory:"未知目录",isGitRepo:!1}}}mt(async()=>{console.log("---------- 页面初始化开始 ----------");try{const O=await H();j.isLoaded||await j.loadConfig(),te(),f.isGitRepo=O.isGitRepo===!0,f.lastCheckedTime=Date.now(),f.isGitRepo?await Promise.all([f.getCurrentBranch(!0),f.getAllBranches(),f.getUserInfo(),f.getRemoteUrl(),f.getBranchStatus(!0)]):n.warning("当前目录不是Git仓库，部分功能将不可用")}catch(O){console.error("初始化失败:",O)}finally{_.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{ee()},100)}});const M=d(!1),y=d(""),J=d("");async function S(){await f.createBranch(y.value,J.value)&&(M.value=!1,y.value="",i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog())}function q(){J.value=f.currentBranch,M.value=!0}async function X(O){await f.changeBranch(O)&&(i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog())}const V=d(!1),x=d(""),C=d("");function K(){x.value=f.userName,C.value=f.userEmail,V.value=!0}async function le(){if(!x.value||!C.value){n.warning("用户名和邮箱不能为空");return}await f.restoreUserConfig(x.value,C.value)&&(V.value=!1)}async function R(){await f.clearUserConfig()&&(x.value="",C.value="")}let ve=!1,Q=!1,h=!1,z=0,U=0,fe="",pe="",me=null;function ye(){const O=document.querySelector(".grid-layout");if(!O)return;const r=getComputedStyle(O).gridTemplateColumns.split(" "),W=getComputedStyle(O).gridTemplateRows.split(" ");if(r.length>=3&&W.length>=3){const oe=parseFloat(r[0]),Ce=parseFloat(r[2]),Ue=oe+Ce,Te=oe/Ue,_e=parseFloat(W[0]),Ee=parseFloat(W[2]),Ve=_e+Ee,Se=_e/Ve;localStorage.setItem("zen-gitsync-layout-left-ratio",Te.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",Se.toString()),console.log(`布局比例已保存 - 左侧: ${(Te*100).toFixed(0)}%, 上方: ${(Se*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",Te.toString()),console.log(`底部布局比例已保存 - 左侧: ${(Te*100).toFixed(0)}%`)}}function ee(){const O=document.querySelector(".grid-layout");if(!O)return;const r=localStorage.getItem("zen-gitsync-layout-left-ratio"),W=localStorage.getItem("zen-gitsync-layout-top-ratio");if(r){const oe=parseFloat(r),Ce=1-oe;O.style.gridTemplateColumns=`${oe}fr 8px ${Ce}fr`,console.log(`已恢复左侧比例: ${(oe*100).toFixed(0)}%`)}else O.style.gridTemplateColumns="1fr 8px 3fr";if(W){const oe=parseFloat(W),Ce=1-oe;O.style.gridTemplateRows=`${oe}fr 8px ${Ce}fr`,console.log(`已恢复上方比例: ${(oe*100).toFixed(0)}%`)}}function se(O){var oe;const r=O.currentTarget;if(!r||!r.id)return;me=r.id,me==="v-resizer"?ve=!0:me==="v-resizer-bottom"&&(Q=!0),z=O.clientX;const W=document.querySelector(".grid-layout");fe=getComputedStyle(W).gridTemplateColumns,(oe=document.getElementById(me))==null||oe.classList.add("active"),document.addEventListener("mousemove",de),document.addEventListener("mouseup",we),O.preventDefault()}function de(O){if(!ve&&!Q)return;const r=document.querySelector(".grid-layout"),W=O.clientX-z,oe=fe.split(" ");if(oe.length>=3){const Ce=parseFloat(oe[0]),Ue=parseFloat(oe[2]),Te=Ce+Ue,_e=(Ce+W/r.clientWidth*Te)/Te,Ee=1-_e,Ve=.1,Se=.5;_e<Ve?r.style.gridTemplateColumns=`${Ve}fr 8px ${1-Ve}fr`:_e>Se?r.style.gridTemplateColumns=`${Se}fr 8px ${1-Se}fr`:r.style.gridTemplateColumns=`${_e}fr 8px ${Ee}fr`}}function we(){var O,r;ve=!1,Q=!1,(O=document.getElementById("v-resizer"))==null||O.classList.remove("active"),(r=document.getElementById("v-resizer-bottom"))==null||r.classList.remove("active"),document.removeEventListener("mousemove",de),document.removeEventListener("mouseup",we),ye()}function B(O){var W;h=!0,U=O.clientY;const r=document.querySelector(".grid-layout");pe=getComputedStyle(r).gridTemplateRows,(W=document.getElementById("h-resizer"))==null||W.classList.add("active"),document.addEventListener("mousemove",T),document.addEventListener("mouseup",ie),O.preventDefault()}function T(O){if(!h)return;const r=document.querySelector(".grid-layout"),W=O.clientY-U,oe=pe.split(" ");if(oe.length>=3){const Ce=parseFloat(oe[0]),Ue=parseFloat(oe[2]),Te=Ce+Ue,_e=(Ce+W/r.clientHeight*Te)/Te,Ee=1-_e,Ve=.2,Se=.8;_e<Ve?r.style.gridTemplateRows=`${Ve}fr 8px ${1-Ve}fr`:_e>Se?r.style.gridTemplateRows=`${Se}fr 8px ${1-Se}fr`:r.style.gridTemplateRows=`${_e}fr 8px ${Ee}fr`}}function ie(){var O;h=!1,(O=document.getElementById("h-resizer"))==null||O.classList.remove("active"),document.removeEventListener("mousemove",T),document.removeEventListener("mouseup",ie),ye()}const Z=d(!1),ge=d(""),be=d(!1),Ae=d([]);function Oe(){ge.value=G.value,Z.value=!0,$e()}async function $e(){try{const r=await(await fetch("/api/recent_directories")).json();r.success&&Array.isArray(r.directories)&&(Ae.value=r.directories)}catch(O){console.error("获取最近目录失败:",O)}}async function ce(){if(!ge.value){n.warning("目录路径不能为空");return}try{be.value=!0;const r=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:ge.value})})).json();r.success?(n.success("已切换工作目录"),G.value=r.directory,Z.value=!1,await Be(r.directory),await $e(),f.isGitRepo=r.isGitRepo,await j.loadConfig(!0),r.isGitRepo?(await Promise.all([f.getCurrentBranch(),f.getAllBranches(),f.getUserInfo(),f.getRemoteUrl()]),i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog()):(n.warning("当前目录不是Git仓库，部分功能将不可用"),f.$reset())):n.error(r.error||"切换目录失败")}catch(O){n.error(`切换目录失败: ${O.message}`)}finally{be.value=!1}}async function Be(O){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:O})})}catch(r){console.error("保存最近目录失败:",r)}}async function ot(){try{if(!G.value){n.warning("当前目录路径为空");return}const r=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:G.value})})).json();r.success?n.success("已在文件管理器中打开目录"):r.error&&n.error(r.error)}catch(O){console.error("打开目录失败:",O),n.error(`打开目录失败: ${O.message}`)}}async function lt(){try{const r=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:ge.value||G.value})})).json();r.success?We(r):r.error&&n.error(r.error)}catch(O){console.error("浏览目录失败:",O),n.error(`浏览目录失败: ${O.message}`)}}function We(O){!O||!O.items||Ye.alert(Ne("div",{class:"directory-browser"},[Ne("div",{class:"current-path"},[Ne("span",{class:"path-label"},"当前路径: "),Ne("span",{class:"path-value"},O.path)]),Ne("div",{class:"directory-list"},[O.parentPath?Ne("div",{class:"directory-item parent-dir",onClick:()=>{Xe(O.parentPath)}},[Ne("span",{class:"dir-icon"},Ne("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Ne("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ne("span",{class:"dir-name"},"返回上级目录")]):null,...O.items.map(r=>Ne("div",{class:"directory-item",onClick:()=>{Xe(r.path)}},[Ne("span",{class:"dir-icon"},Ne("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Ne("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ne("span",{class:"dir-name"},r.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:r=>{r==="confirm"&&(ge.value=O.path)}})}async function Xe(O){try{Ye.close(),setTimeout(async()=>{try{const W=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:O})})).json();W.success?We(W):W.error&&n.error(W.error)}catch(r){console.error("浏览目录失败:",r),n.error(`浏览目录失败: ${r.message}`)}},100)}catch(r){console.error("处理目录选择时出错:",r),n.error(`处理目录选择时出错: ${r.message}`)}}return(O,r)=>{const W=tt,oe=De,Ce=Vs,Ue=ke,Te=Nt,_e=xs,Ee=At,Ve=Ut,Se=Ls;return c(),w(xe,null,[e("header",Rr,[e("div",Gr,[e("img",{src:a(Dr),alt:"Zen GitSync Logo",class:"logo"},null,8,Mr),r[16]||(r[16]=e("h1",null,"Zen GitSync",-1))]),e("div",Ar,[a(f).userName&&a(f).userEmail?(c(),w("div",Ur,[e("span",Er,P(a(f).userName),1),e("span",Ir,"<"+P(a(f).userEmail)+">",1),t(oe,{content:"用户设置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn user-settings-btn",onClick:K},[t(W,{class:"btn-icon"},{default:s(()=>[t(a(os))]),_:1})])]),_:1})])):(c(),w("div",Nr,[r[17]||(r[17]=e("span",{class:"user-label"},"用户: ",-1)),r[18]||(r[18]=e("span",{class:"user-warning"},"未配置",-1)),t(oe,{content:"用户设置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn user-settings-btn",onClick:K},[t(W,{class:"btn-icon"},{default:s(()=>[t(a(os))]),_:1})])]),_:1})])),e("div",Hr,[e("div",Jr,[e("div",Wr,[t(W,null,{default:s(()=>[t(a(Gt))]),_:1})]),e("div",{class:"directory-path",title:G.value},P(G.value),9,qr)]),e("div",Yr,[t(oe,{content:"切换目录",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn dir-btn",onClick:Oe},[t(W,{class:"btn-icon"},{default:s(()=>r[19]||(r[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})])]),_:1}),t(oe,{content:"在资源管理器中打开",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn dir-btn",onClick:ot},[t(W,{class:"btn-icon"},{default:s(()=>r[20]||(r[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})])]),_:1})])]),a(f).isGitRepo?(c(),w("div",Kr,[a(f).isGitRepo?(c(),w("div",Qr,[t(Or)])):E("",!0),t(oe,{content:"编辑项目配置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn config-btn",onClick:r[0]||(r[0]=ne=>{var Re;return(Re=g.value)==null?void 0:Re.openConfigEditor()})},[t(W,{class:"btn-icon"},{default:s(()=>[t(a(ct))]),_:1})])]),_:1}),t(oe,{content:"Git 操作",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn drawer-btn",onClick:r[1]||(r[1]=ne=>{var Re;return(Re=g.value)==null?void 0:Re.toggleGitOperationsDrawer()})},[t(W,{class:"btn-icon"},{default:s(()=>[t(a(ys))]),_:1})])]),_:1})])):E("",!0)])]),e("main",Xr,[_.value?(c(),w("div",tc,[e("div",sc,[t(Ya,{ref_key:"gitStatusRef",ref:i,"initial-directory":G.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:se},null,32),a(f).isGitRepo?(c(),w("div",oc,[!a(f).userName||!a(f).userEmail?(c(),w("div",ac,[r[26]||(r[26]=e("h2",null,"Git用户未配置",-1)),r[27]||(r[27]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",lc,[r[24]||(r[24]=e("h3",null,"您可以通过以下方式配置：",-1)),r[25]||(r[25]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[D(' git config --global user.name "您的用户名"'),e("br"),D(' git config --global user.email "您的邮箱" ')])],-1)),t(Ue,{type:"primary",onClick:K},{default:s(()=>r[23]||(r[23]=[D(" 立即配置 ")])),_:1})])])):(c(),A(Ci,{key:1,ref_key:"commitFormRef",ref:g},null,512))])):(c(),w("div",nc,r[28]||(r[28]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:B},null,32),a(f).isGitRepo?(c(),w("div",ic,[t(nr,{ref_key:"logListRef",ref:o},null,512)])):E("",!0),t(Qe,{modelValue:M.value,"onUpdate:modelValue":r[5]||(r[5]=ne=>M.value=ne),title:"创建新分支",size:"small","destroy-on-close":!0,"custom-class":"create-branch-dialog"},{footer:s(()=>[e("div",dc,[e("div",fc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[4]||(r[4]=ne=>M.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:S,disabled:a(f).isCreatingBranch},[a(f).isCreatingBranch?(c(),A(W,{key:1,class:"is-loading"},{default:s(()=>r[31]||(r[31]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(c(),A(W,{key:0},{default:s(()=>[t(a(ut))]),_:1})),r[32]||(r[32]=e("span",null,"创建",-1))],8,pc)])])]),default:s(()=>[e("div",rc,[t(Se,{model:{newBranchName:y.value,selectedBaseBranch:J.value},"label-position":"top"},{default:s(()=>[t(_e,null,{label:s(()=>[e("div",cc,[t(W,{class:"label-icon"},{default:s(()=>[t(a(_s))]),_:1}),r[29]||(r[29]=e("span",null,"新分支名称",-1))])]),default:s(()=>[t(Te,{modelValue:y.value,"onUpdate:modelValue":r[2]||(r[2]=ne=>y.value=ne),placeholder:"请输入新分支名称",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1}),t(_e,null,{label:s(()=>[e("div",uc,[t(W,{class:"label-icon"},{default:s(()=>[t(a(ys))]),_:1}),r[30]||(r[30]=e("span",null,"基于分支",-1))])]),default:s(()=>[t(Ve,{modelValue:J.value,"onUpdate:modelValue":r[3]||(r[3]=ne=>J.value=ne),placeholder:"选择基础分支",class:"modern-select",size:"large",style:{width:"100%"}},{default:s(()=>[(c(!0),w(xe,null,Me(a(f).allBranches,ne=>(c(),A(Ee,{key:ne,label:ne,value:ne},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])])]),_:1},8,["modelValue"])])):(c(),w("div",Zr,[t(Ce,{class:"loading-card"},{default:s(()=>[e("div",ec,[t(W,{class:"is-loading"},{default:s(()=>r[21]||(r[21]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),r[22]||(r[22]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",mc,[a(f).currentBranch?(c(),w("div",vc,[e("div",gc,[r[34]||(r[34]=e("span",{class:"branch-label"},"当前分支:",-1)),t(Ve,{modelValue:a(f).currentBranch,"onUpdate:modelValue":r[6]||(r[6]=ne=>a(f).currentBranch=ne),size:"small",onChange:X,loading:a(f).isChangingBranch,class:"branch-select"},{default:s(()=>[(c(!0),w(xe,null,Me(a(f).allBranches,ne=>(c(),A(Ee,{key:ne,label:ne,value:ne},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),e("button",{class:"modern-btn create-branch-btn",onClick:q},[t(W,{class:"btn-icon"},{default:s(()=>[t(a(_s))]),_:1}),r[33]||(r[33]=e("span",{class:"btn-text"},"新建分支",-1))])])])):E("",!0),a(f).remoteUrl?(c(),w("div",hc,[r[36]||(r[36]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",yc,P(a(f).remoteUrl),1),t(oe,{content:"复制仓库地址",placement:"top",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn copy-url-btn",onClick:r[7]||(r[7]=ne=>a(f).copyRemoteUrl())},[t(W,{class:"btn-icon"},{default:s(()=>r[35]||(r[35]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})])]),_:1})])):E("",!0)]),t(Qe,{modelValue:V.value,"onUpdate:modelValue":r[11]||(r[11]=ne=>V.value=ne),title:"Git 用户设置",size:"small","destroy-on-close":!0,"custom-class":"user-settings-dialog"},{footer:s(()=>[e("div",Vc,[e("button",{type:"button",class:"footer-btn danger-btn",onClick:R},[t(W,null,{default:s(()=>[t(a(Vt))]),_:1}),r[40]||(r[40]=e("span",null,"清除配置",-1))]),e("div",Fc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[10]||(r[10]=ne=>V.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:le},[t(W,null,{default:s(()=>[t(a(ut))]),_:1}),r[41]||(r[41]=e("span",null,"保存设置",-1))])])])]),default:s(()=>[e("div",_c,[t(Se,{class:"user-form",model:{tempUserName:x.value,tempUserEmail:C.value},"label-position":"top"},{default:s(()=>[e("div",wc,[t(_e,{class:"form-item"},{label:s(()=>[e("div",bc,[t(W,{class:"label-icon"},{default:s(()=>[t(a(Oo))]),_:1}),r[37]||(r[37]=e("span",null,"用户名",-1))])]),default:s(()=>[t(Te,{modelValue:x.value,"onUpdate:modelValue":r[8]||(r[8]=ne=>x.value=ne),placeholder:"请输入 Git 用户名",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1})]),e("div",kc,[t(_e,{class:"form-item"},{label:s(()=>[e("div",$c,[t(W,{class:"label-icon"},{default:s(()=>[t(a(Do))]),_:1}),r[38]||(r[38]=e("span",null,"邮箱地址",-1))])]),default:s(()=>[t(Te,{modelValue:C.value,"onUpdate:modelValue":r[9]||(r[9]=ne=>C.value=ne),placeholder:"请输入 Git 邮箱地址",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1})]),e("div",Cc,[e("div",Sc,[e("div",Tc,[t(W,null,{default:s(()=>[t(a(ss))]),_:1})]),r[39]||(r[39]=e("div",{class:"info-content"},[e("p",{class:"info-title"},"全局配置"),e("p",{class:"info-desc"},"这些设置将影响全局 Git 配置，对所有 Git 仓库生效")],-1))])])]),_:1},8,["model"])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:Z.value,"onUpdate:modelValue":r[15]||(r[15]=ne=>Z.value=ne),title:"切换工作目录",size:"medium","destroy-on-close":!0,"custom-class":"directory-dialog"},{footer:s(()=>[e("div",Dc,[e("div",Rc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[13]||(r[13]=ne=>Z.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:r[14]||(r[14]=ne=>ce()),disabled:be.value},[be.value?(c(),A(W,{key:1,class:"is-loading"},{default:s(()=>r[45]||(r[45]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(c(),A(W,{key:0},{default:s(()=>[t(a(ut))]),_:1})),r[46]||(r[46]=e("span",null,"切换",-1))],8,Gc)])])]),default:s(()=>[e("div",Lc,[t(Se,{"label-position":"top"},{default:s(()=>[t(_e,null,{label:s(()=>[e("div",xc,[t(W,{class:"label-icon"},{default:s(()=>[t(a(Gt))]),_:1}),r[42]||(r[42]=e("span",null,"目录路径",-1))])]),default:s(()=>[e("div",Bc,[t(Te,{modelValue:ge.value,"onUpdate:modelValue":r[12]||(r[12]=ne=>ge.value=ne),placeholder:"请输入目录路径",class:"modern-input",size:"large"},null,8,["modelValue"]),e("button",{type:"button",class:"browse-btn",onClick:lt},[t(W,null,{default:s(()=>[t(a(Gt))]),_:1}),r[43]||(r[43]=e("span",null,"浏览",-1))])])]),_:1}),Ae.value.length>0?(c(),A(_e,{key:0},{label:s(()=>[e("div",zc,[t(W,{class:"label-icon"},{default:s(()=>[t(a(zs))]),_:1}),r[44]||(r[44]=e("span",null,"常用目录",-1))])]),default:s(()=>[e("div",Pc,[(c(!0),w(xe,null,Me(Ae.value,(ne,Re)=>(c(),w("div",{key:Re,class:"recent-dir-item",onClick:Je=>ge.value=ne},[t(W,{class:"dir-icon"},{default:s(()=>[t(a(Gt))]),_:1}),e("span",Oc,P(ne),1)],8,jc))),128))])]),_:1})):E("",!0)]),_:1})])]),_:1},8,["modelValue"])],64)}}}),Ac=je(Mc,[["__scopeId","data-v-3eb3dcc0"]]),Rs=Ro(Ac);Rs.use(Go());Rs.mount("#app");

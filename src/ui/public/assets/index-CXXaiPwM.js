import{d as $s,r as u,o as _t,a as bs,E as n,l as ca,c as Fe,b as zt,w as Ke,e as w,f,F as Se,g as e,h as t,i as Ee,j as I,k as A,m as as,u as o,n as a,p as Cs,q as ss,s as Ss,t as Ue,v as Ts,x as xs,y as ft,z as Bt,A as lt,B as ua,C as ls,D as Dt,G as y,H as Vs,I as L,J as gt,K as he,L as Be,M as Ls,N as Ft,O as da,P as hs,Q as ys,R as fa,S as Ot,T as Me,U as Ye,V as ht,W as os,X as pa,Y as St,Z as va,_ as _s,$ as ns,a0 as ma,a1 as xt,a2 as Zt,a3 as Qt,a4 as Mt,a5 as Pt,a6 as is,a7 as zs,a8 as ga,a9 as ha,aa as rs,ab as Bs,ac as ya,ad as Ds,ae as Fs,af as _a,ag as wa,ah as ka,ai as Rs,aj as Vt,ak as $a,al as dt,am as ba,an as Ca,ao as Sa,ap as Ta,aq as xa,ar as Va,as as La,at as za,au as Ba,av as Da,aw as Fa,ax as Lt,ay as Ra,az as Ga,aA as ja,aB as ws,aC as ks,aD as Aa,aE as Ae,aF as Ua,aG as Oa}from"./vendor-CKzSEQ8A.js";(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const h of document.querySelectorAll('link[rel="modulepreload"]'))p(h);new MutationObserver(h=>{for(const E of h)if(E.type==="childList")for(const R of E.addedNodes)R.tagName==="LINK"&&R.rel==="modulepreload"&&p(R)}).observe(document,{childList:!0,subtree:!0});function k(h){const E={};return h.integrity&&(E.integrity=h.integrity),h.referrerPolicy&&(E.referrerPolicy=h.referrerPolicy),h.crossOrigin==="use-credentials"?E.credentials="include":h.crossOrigin==="anonymous"?E.credentials="omit":E.credentials="same-origin",E}function p(h){if(h.ep)return;h.ep=!0;const E=k(h);fetch(h.href,E)}})();const es=800;function Ea(){const ye="3002";return console.log(`从环境变量读取后端端口: ${ye}`),parseInt(ye,10)}const Ma=Ea(),yt=$s("git",()=>{const ye=u(""),d=u([]),k=u(""),p=u(""),h=u(!1),E=u(!1),R=u(!1),O=u(0),M=u(""),ve=u(!1),U=u(!1),Z=u(!1),Q=u(!1),ie=u(!1),re=u(0),_e=u(0),pe=u(!1),S=u(""),z=u(0),B=u(0),J=u(!0),F=u(null),N=u([]),we=u({staged:[],unstaged:[],untracked:[]}),ce=u([]),V=u(!1),T=u(!1),W=u(!1),ae=u(!1),Y=u(!1),ne=u([]),ee=u(!1),xe=u(!1),G=u(!1),b=u(!1);function v(){ye.value="",d.value=[],k.value="",p.value="",h.value=!1,E.value=!1,R.value=!1,O.value=0,re.value=0,_e.value=0,pe.value=!1,S.value="",z.value=0,B.value=0,U.value=!1,Z.value=!1,Q.value=!1,ie.value=!1,M.value="",ve.value=!1,N.value=[],we.value={staged:[],unstaged:[],untracked:[]},ce.value=[],V.value=!1,T.value=!1,W.value=!1,ae.value=!1,Y.value=!1}async function X(i=!1,l=!1){if(!R.value)return;const m=Date.now();if(!i&&!l&&m-z.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let $="/api/branch-status";const le=[];i&&le.push("force=true"),l&&le.push("countOnly=true"),le.length>0&&($+="?"+le.join("&"));const Le=await(await fetch($)).json();Le&&(re.value=Le.ahead||0,_e.value=Le.behind||0,pe.value=Le.hasUpstream||!1,S.value=Le.upstreamBranch||"",z.value=m,console.log(`分支状态更新：领先 ${re.value} 个提交，落后 ${_e.value} 个提交，上游分支：${pe.value?S.value:"无"}`))}catch($){console.error("获取分支状态失败:",$),re.value=0,_e.value=0,pe.value=!1,S.value=""}}async function D(){const i=Date.now();if(i-O.value<1e3)return console.log("使用缓存的Git仓库状态:",R.value?"是":"不是"),R.value;try{const m=await(await fetch("/api/current_directory")).json();return R.value=m.isGitRepo===!0,O.value=i,console.log(`当前目录${R.value?"是":"不是"}Git仓库`),R.value}catch(l){return console.error("检查Git仓库状态失败:",l),R.value=!1,O.value=i,!1}}async function P(i=!1){try{const $=await(await fetch(i?"/api/branch?force=true":"/api/branch")).json();$.branch&&(ye.value=$.branch,console.log(`当前分支更新为: ${$.branch}${i?" (强制刷新)":""}`))}catch(l){console.error("获取分支信息失败:",l)}}async function te(){if(R.value)try{console.log("获取所有分支...");const l=await(await fetch("/api/branches")).json();l.branches&&Array.isArray(l.branches)&&(d.value=l.branches,B.value=Date.now(),console.log(`获取到${l.branches.length}个分支`))}catch(i){console.error("获取所有分支信息失败:",i)}}async function De(i){console.log("切换到分支:",i);try{h.value=!0;const m=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:i})})).json();return m.success?(n({message:`已切换到分支: ${i}`,type:"success"}),await P(!0),await X(!0),!0):(n({message:`切换分支失败: ${m.error}`,type:"error"}),!1)}catch(l){return n({message:`切换分支失败: ${l.message}`,type:"error"}),!1}finally{h.value=!1}}async function Ge(){try{const l=await(await fetch("/api/user-info")).json();l.name&&l.email&&(k.value=l.name,p.value=l.email)}catch(i){console.error("获取用户信息失败:",i)}}async function je(i,l){if(!i.trim())return n({message:"分支名称不能为空",type:"warning"}),!1;try{E.value=!0;const $=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:i,baseBranch:l||ye.value})})).json();return $.success?(n({message:`已创建并切换到分支: ${i}`,type:"success"}),await P(!0),await X(!0),await te(),!0):(n({message:`创建分支失败: ${$.error}`,type:"error"}),!1)}catch(m){return n({message:`创建分支失败: ${m.message}`,type:"error"}),!1}finally{E.value=!1}}async function be(){try{const l=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return l.success?(k.value="",p.value="",n({message:"已清除Git用户配置",type:"success"}),!0):(n({message:`清除配置失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`清除配置失败: ${i.message}`,type:"error"}),!1}}async function g(i,l){try{const $=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:i,email:l})})).json();return $.success?(k.value=i,p.value=l,n({message:"已恢复Git用户配置",type:"success"}),!0):(n({message:`恢复配置失败: ${$.error}`,type:"error"}),!1)}catch(m){return n({message:`恢复配置失败: ${m.message}`,type:"error"}),!1}}async function oe(){if(!R.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{Z.value=!0;const l=await(await fetch("/api/pull",{method:"POST"})).json();return l.success?(n({message:"拉取成功",type:"success"}),await X(),!0):(l.needsMerge?n({message:`需要合并更改: ${l.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):n({message:`拉取失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`拉取失败: ${i.message}`,type:"error"}),!1}finally{Z.value=!1}}async function Re(){if(!R.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{Q.value=!0;const l=await(await fetch("/api/fetch-all",{method:"POST"})).json();return l.success?(n({message:"获取所有远程分支信息成功",type:"success"}),await X(),!0):(n({message:`获取远程分支信息失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`获取远程分支信息失败: ${i.message}`,type:"error"}),!1}finally{Q.value=!1}}function Oe(){F.value&&F.value.disconnect();try{const i=`http://localhost:${Ma}`;if(console.log("尝试连接Socket.IO服务器:",i),F.value=ca(i,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!F.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO初始化成功，socket ID:",F.value.id||"未连接"),F.value.on("connect",()=>{console.log("成功连接到Socket.IO服务器"),J.value&&F.value&&F.value.emit("start_monitoring")}),F.value.on("disconnect",l=>{console.log("与Socket.IO服务器断开连接:",l)}),F.value.on("git_status_update",l=>{J.value&&(console.log("收到Git状态更新通知:",new Date().toLocaleTimeString()),l.porcelain!==void 0&&Xe(l.porcelain))}),F.value.on("monitoring_status",l=>{console.log("文件监控状态:",l.active?"已启动":"已停止")}),F.value.on("connect_error",l=>{console.error("Socket连接错误:",l.message)}),F.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),F.value.on("reconnect",l=>{var m;console.log(`Socket重连成功，尝试次数: ${l}`),J.value&&(console.log("重连后重新发送start_monitoring请求"),(m=F.value)==null||m.emit("start_monitoring"))}),F.value.on("reconnect_attempt",l=>{console.log(`Socket尝试重连，第 ${l} 次尝试`)}),F.value.on("reconnect_error",l=>{console.error("Socket重连错误:",l.message)}),F.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),F.value&&!F.value.connected&&(console.log("Socket未连接，尝试手动连接..."),F.value.connect())}catch(i){console.error("Socket.IO连接初始化失败:",i)}}function Ne(){if(console.log("toggleAutoUpdate调用，当前值:",J.value),!F.value){console.error("无法切换自动更新状态: socket连接不存在"),n.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),Oe(),localStorage.setItem("zen-gitsync-auto-update",J.value.toString());return}try{J.value?(console.log("发送start_monitoring命令..."),F.value.emit("start_monitoring"),n.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),F.value.emit("stop_monitoring"),n.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",J.value.toString()),console.log("已保存自动更新设置到本地存储:",J.value)}catch(i){console.error("切换自动更新状态时出错:",i),n.error(`切换自动更新失败: ${i.message}`)}}function Xe(i){if(i===void 0||i===""){ce.value=[];return}const l=i.split(`
`),m=[];for(const $ of l){const le=$.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(le){let ue="";const Le=le[1],j=Le.charAt(0),Ie=Le.charAt(1);j==="A"||j==="M"||j==="D"||j==="R"?ue="added":j===" "&&Ie==="M"?ue="modified":j===" "&&Ie==="D"?ue="deleted":Le==="??"?ue="untracked":ue="other",m.push({path:le[2],type:ue})}}ce.value=m}async function Je(i=!0){if(!R.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{V.value=!0,console.log("开始加载提交历史...");const l=new Date().getTime(),$=await(await fetch(`/api/log?page=1&_t=${l}`)).json();$&&$.data&&Array.isArray($.data)?(N.value=[...$.data],console.log(`提交历史加载完成，共 ${N.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",$),N.value=[])}catch(l){console.error("获取提交历史失败:",l),i&&n({message:`获取提交历史失败: ${l.message}`,type:"error"})}finally{V.value=!1}}async function C(){if(!R.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{T.value=!0,await c()}catch(i){console.error("获取Git状态失败:",i),n({message:`获取Git状态失败: ${i.message}`,type:"error"})}finally{T.value=!1}}async function c(){if(console.log("开始获取Git状态(porcelain格式)..."),!R.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const l=await(await fetch("/api/status_porcelain")).json();l.status!==void 0?Xe(l.status):ce.value=[]}catch(i){console.error("获取Git状态(porcelain)失败:",i),n({message:`获取Git状态(porcelain)失败: ${i.message}`,type:"error"}),ce.value=[]}}async function q(){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{W.value=!0;const l=await(await fetch("/api/add",{method:"POST"})).json();return l.success?(n({message:"文件已添加到暂存区",type:"success"}),!0):(n({message:`添加文件失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`添加文件失败: ${i.message}`,type:"error"}),!1}finally{W.value=!1}}async function H(i){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{W.value=!0;const m=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:i})})).json();return m.success?(n({message:"文件已暂存",type:"success"}),C(),!0):(n({message:`暂存文件失败: ${m.error}`,type:"error"}),!1)}catch(l){return n({message:`暂存文件失败: ${l.message}`,type:"error"}),!1}finally{W.value=!1}}async function Ve(i){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{Y.value=!0;const m=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:i})})).json();return m.success?(n({message:"已取消暂存文件",type:"success"}),C(),!0):(n({message:`取消暂存失败: ${m.error}`,type:"error"}),!1)}catch(l){return n({message:`取消暂存失败: ${l.message}`,type:"error"}),!1}finally{Y.value=!1}}function ze(i){return new Promise(l=>setTimeout(l,i))}async function de(i,l=!1){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{ae.value=!0;const $=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:i,hasNewlines:i.includes(`
`),noVerify:l})})).json();return $.success?(n({message:"提交成功",type:"success"}),!0):(n({message:`commitChanges 提交失败: ${$.error}`,type:"error"}),!1)}catch(m){return n({message:`提交失败: ${m.message}`,type:"error"}),!1}finally{ae.value=!1}}async function Ce(){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{U.value=!0;const l=await(await fetch("/api/push",{method:"POST"})).json();return l.success?(n({message:"推送成功",type:"success"}),re.value=0,_e.value=0,await Promise.all([C(),Je()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(n({message:`推送失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`推送失败: ${i.message}`,type:"error"}),!1}finally{U.value=!1}}async function me(i,l={}){if(!R.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!i)return n({message:"请选择要合并的分支",type:"warning"}),!1;if(i===ye.value)return n({message:"不能合并当前分支到自身",type:"warning"}),!1;try{ie.value=!0;const m=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:i,...l})}),$=await m.json();return m.status===409?(n({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):$.success?(n({message:`成功合并分支 ${i} 到 ${ye.value}`,type:"success"}),await C(),await X(),!0):(n({message:`合并分支失败: ${$.error}`,type:"error"}),!1)}catch(m){return n({message:`合并分支失败: ${m.message}`,type:"error"}),!1}finally{ie.value=!1}}async function ge(i,l=!1){if(console.log("开始暂存并提交操作..."),!await q())return!1;console.log("暂存完成，等待Git操作完成..."),await ze(es),console.log("开始提交更改...");const $=await de(i,l);return console.log("暂存并提交操作完成"),$}async function $e(i,l=!1){try{if(console.log("开始暂存文件..."),!await q()||(console.log("暂存完成，等待Git操作完成..."),await ze(es),console.log("开始提交更改..."),!await de(i,l)))return!1;console.log("提交完成，等待Git操作完成..."),await ze(es),console.log("开始推送到远程...");const le=await Ce();return console.log("一键推送操作完成，状态已统一刷新"),le}catch(m){console.error("一键推送操作失败:",m);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&n({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch($){console.error("清理锁定文件失败:",$)}n({message:`操作失败: ${m.message}`,type:"error"});try{await Promise.all([C(),Je(),X()])}catch($){console.error("刷新状态失败:",$)}return!1}}async function We(){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{Y.value=!0;const l=await(await fetch("/api/reset-head",{method:"POST"})).json();return l.success?(n({message:"已重置暂存区",type:"success"}),C(),!0):(n({message:`重置暂存区失败: ${l.error}`,type:"error"}),!1)}catch(i){return n({message:`重置暂存区失败: ${i.message}`,type:"error"}),!1}finally{Y.value=!1}}async function ke(i){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{Y.value=!0;const m=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:i})})).json();return m.success?(n({message:`已重置分支 ${i} 到远程状态`,type:"success"}),C(),Je(),!0):(n({message:`重置分支失败: ${m.error}`,type:"error"}),!1)}catch(l){return n({message:`重置分支失败: ${l.message}`,type:"error"}),!1}finally{Y.value=!1}}async function K(){if(R.value)try{ve.value=!0,console.log("获取远程仓库地址...");const l=await(await fetch("/api/remote-url")).json();l.success?(M.value=l.url||"",console.log(`获取到远程仓库地址: ${M.value}`)):(console.warn("获取远程仓库地址失败:",l.error),M.value="")}catch(i){console.error("获取远程仓库地址失败:",i),M.value=""}finally{ve.value=!1}}async function ot(){if(!M.value)return n({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(M.value),n({message:"已复制远程仓库地址",type:"success"}),!0}catch(i){return console.error("复制远程仓库地址失败:",i),n({message:`复制失败: ${i.message}`,type:"error"}),!1}}_t(()=>{const i=localStorage.getItem("zen-gitsync-auto-update");i!==null&&(J.value=i==="true"),Oe()});function nt(){F.value&&(F.value.disconnect(),F.value=null)}bs(()=>{nt()});async function Ze(){if(!R.value)return n.warning("当前目录不是Git仓库"),[];try{ee.value=!0;const l=await(await fetch("/api/stash-list")).json();return l.success?(ne.value=l.stashes,l.stashes):(n.error(`获取stash列表失败: ${l.error}`),[])}catch(i){return console.error("获取stash列表失败:",i),n.error(`获取stash列表失败: ${i.message}`),[]}finally{ee.value=!1}}async function wt(i,l=!1,m=!0){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{b.value=!0;const le=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:i,includeUntracked:l,excludeLocked:m})})).json();return le.success?(n.success(le.message),await Ze(),await C(),!0):(n.warning(le.message),!1)}catch($){return console.error("保存stash失败:",$),n.error(`保存stash失败: ${$.message}`),!1}finally{b.value=!1}}async function it(i,l=!1){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{xe.value=!0;const m=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:i,pop:l})}),$=await m.json();return m.status===409?(n.warning("应用stash时发生冲突，请手动解决"),!1):$.success?(n.success($.message),await Ze(),await C(),!0):(n.error(`应用stash失败: ${$.error}`),!1)}catch(m){return console.error("应用stash失败:",m),n.error(`应用stash失败: ${m.message}`),!1}finally{xe.value=!1}}async function He(i){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{G.value=!0;const m=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:i})})).json();return m.success?(n.success(m.message),await Ze(),!0):(n.error(`删除stash失败: ${m.error}`),!1)}catch(l){return console.error("删除stash失败:",l),n.error(`删除stash失败: ${l.message}`),!1}finally{G.value=!1}}async function kt(){if(!R.value)return n.warning("当前目录不是Git仓库"),!1;try{G.value=!0;const l=await(await fetch("/api/stash-clear",{method:"POST"})).json();return l.success?(n.success(l.message),ne.value=[],!0):(n.error(`清空stash失败: ${l.error}`),!1)}catch(i){return console.error("清空stash失败:",i),n.error(`清空stash失败: ${i.message}`),!1}finally{G.value=!1}}return{currentBranch:ye,allBranches:d,userName:k,userEmail:p,isChangingBranch:h,isCreatingBranch:E,isGitRepo:R,lastCheckedTime:O,branchAhead:re,branchBehind:_e,hasUpstream:pe,upstreamBranch:S,lastBranchStatusTime:z,lastBranchesTime:B,remoteUrl:M,isLoadingRemoteUrl:ve,stashes:ne,isLoadingStashes:ee,isApplyingStash:xe,isDroppingStash:G,isSavingStash:b,log:N,status:we,fileList:ce,isLoadingLog:V,isLoadingStatus:T,isAddingFiles:W,isCommiting:ae,isResetting:Y,autoUpdateEnabled:J,isPushing:U,isGitPulling:Z,isGitFetching:Q,isGitMerging:ie,$reset:v,checkGitRepo:D,getCurrentBranch:P,getAllBranches:te,changeBranch:De,getUserInfo:Ge,createBranch:je,clearUserConfig:be,restoreUserConfig:g,getBranchStatus:X,gitPull:oe,gitFetchAll:Re,initSocketConnection:Oe,toggleAutoUpdate:Ne,parseStatusPorcelain:Xe,fetchLog:Je,fetchStatus:C,fetchStatusPorcelain:c,addToStage:q,addFileToStage:H,unstageFile:Ve,commitChanges:de,pushToRemote:Ce,addAndCommit:ge,addCommitAndPush:$e,resetHead:We,resetToRemote:ke,getRemoteUrl:K,copyRemoteUrl:ot,mergeBranch:me,getStashList:Ze,saveStash:wt,applyStash:it,dropStash:He,clearAllStashes:kt,socket:F,disconnectSocket:nt}}),cs=$s("config",()=>{const ye=u(""),d=u([]),k=u([]),p=u([]),h=u([]),E=u(!1),R=u(!1),O=Fe(()=>({defaultCommitMessage:ye.value,descriptionTemplates:d.value,scopeTemplates:k.value,messageTemplates:p.value,lockedFiles:h.value}));async function M(S=!1){if(!S&&R.value&&!E.value)return console.log("使用缓存的配置信息"),O.value;try{E.value=!0,console.log("加载配置信息...");const B=await(await fetch("/api/config/getConfig")).json();return ye.value=B.defaultCommitMessage||"",d.value=B.descriptionTemplates||[],k.value=B.scopeTemplates||[],p.value=B.messageTemplates||[],h.value=B.lockedFiles||[],R.value=!0,console.log("配置信息加载完成"),O.value}catch(z){return console.error("加载配置失败:",z),n.error(`加载配置失败: ${z.message}`),null}finally{E.value=!1}}async function ve(S){try{const B=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:S})})).json();return B.success?(ye.value=S,n.success("默认提交信息已保存"),!0):(n.error(`保存失败: ${B.error}`),!1)}catch(z){return n.error(`保存失败: ${z.message}`),!1}}async function U(S,z){try{const J=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:S,type:z})})).json();return J.success?(z==="description"?d.value.includes(S)||d.value.push(S):z==="scope"?k.value.includes(S)||k.value.push(S):z==="message"&&(p.value.includes(S)||p.value.push(S)),n.success("模板已保存"),!0):(n.error(`保存模板失败: ${J.error}`),!1)}catch(B){return n.error(`保存模板失败: ${B.message}`),!1}}async function Z(S,z){try{const J=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:S,type:z})})).json();return J.success?(z==="description"?d.value=d.value.filter(F=>F!==S):z==="scope"?k.value=k.value.filter(F=>F!==S):z==="message"&&(p.value=p.value.filter(F=>F!==S)),n.success("模板已删除"),!0):(n.error(`删除模板失败: ${J.error}`),!1)}catch(B){return n.error(`删除模板失败: ${B.message}`),!1}}async function Q(S,z,B){try{const F=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:S,newTemplate:z,type:B})})).json();if(F.success){if(B==="description"){const N=d.value.indexOf(S);N!==-1&&(d.value[N]=z)}else if(B==="scope"){const N=k.value.indexOf(S);N!==-1&&(k.value[N]=z)}else if(B==="message"){const N=p.value.indexOf(S);N!==-1&&(p.value[N]=z)}return n.success("模板已更新"),!0}else return n.error(`更新模板失败: ${F.error}`),!1}catch(J){return n.error(`更新模板失败: ${J.message}`),!1}}async function ie(){try{const z=await(await fetch("/api/locked-files")).json();return z.success?(h.value=z.lockedFiles||[],z.lockedFiles):(n.error(`加载锁定文件列表失败: ${z.error}`),[])}catch(S){return console.error("加载锁定文件列表失败:",S),n.error(`加载锁定文件列表失败: ${S.message}`),[]}}async function re(S){try{const B=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return B.success?(await ie(),n.success(`文件已锁定: ${S}`),!0):(n.error(`锁定文件失败: ${B.error}`),!1)}catch(z){return console.error("锁定文件失败:",z),n.error(`锁定文件失败: ${z.message}`),!1}}async function _e(S){try{const B=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return B.success?(await ie(),n.success(`文件已解锁: ${S}`),!0):(n.error(`解锁文件失败: ${B.error}`),!1)}catch(z){return console.error("解锁文件失败:",z),n.error(`解锁文件失败: ${z.message}`),!1}}async function pe(S){try{const B=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:S})})).json();return B.success?B.isLocked:(console.error("检查文件锁定状态失败:",B.error),!1)}catch(z){return console.error("检查文件锁定状态失败:",z),!1}}return{defaultCommitMessage:ye,descriptionTemplates:d,scopeTemplates:k,messageTemplates:p,lockedFiles:h,isLoading:E,isLoaded:R,config:O,loadConfig:M,saveDefaultMessage:ve,saveTemplate:U,deleteTemplate:Z,updateTemplate:Q,loadLockedFiles:ie,lockFile:re,unlockFile:_e,isFileLocked:pe}}),Pa={class:"card"},Ha={class:"status-header"},Ia={class:"header-actions"},Na=["element-loading-text"],Ja={key:0,class:"status-box"},Wa={key:1,class:"status-box-wrap"},qa={key:0,class:"branch-status-info"},Ya={class:"branch-sync-status"},Xa={class:"sync-status-content"},Ka={class:"status-badges"},Za={class:"badge-content"},Qa={class:"badge-content"},el={key:1,class:"file-list-container"},tl={key:0,class:"file-group"},sl={class:"file-list"},al=["onClick"],ll={class:"file-info"},ol={class:"file-name-section"},nl=["title"],il={class:"file-directory"},rl={class:"file-actions"},cl={key:1,class:"file-group"},ul={class:"file-list"},dl=["onClick"],fl={class:"file-info"},pl={class:"file-name-section"},vl=["title"],ml={class:"file-directory"},gl={class:"file-actions"},hl={key:2,class:"file-group"},yl={class:"file-list"},_l=["onClick"],wl={class:"file-info"},kl={class:"file-name-section"},$l=["title"],bl={class:"file-directory"},Cl={class:"file-actions"},Sl={key:2,class:"empty-status"},Tl={class:"empty-icon"},xl={class:"diff-content"},Vl=["innerHTML"],Ll={key:1,class:"no-diff"},zl={class:"file-navigation"},Bl={class:"file-counter"},Dl={class:"lock-feature-description"},Fl={class:"description-header"},Rl={key:0,class:"empty-locked-files"},Gl={class:"empty-icon"},jl={key:1,class:"locked-files-list"},Al={class:"locked-files-header"},Ul={class:"locked-file-items"},Ol={class:"file-info"},El={class:"file-path-container"},Ml={class:"file-name"},Pl={class:"file-directory"},Hl={class:"file-actions"},Il={class:"dialog-footer"},Nl=zt({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(ye,{expose:d}){const k=ye,p=yt(),h=cs(),E=Fe(()=>p.isLoadingStatus),R=u(""),O=u(""),M=u(!1),ve=u(!1),U=u(-1),Z=u(!1),Q=u({staged:!1,unstaged:!1,untracked:!1}),ie=u(k.initialDirectory||"");async function re(){try{if(!ie.value){const v=await(await fetch("/api/current_directory")).json();ie.value=v.directory||"未知目录"}if(!p.isGitRepo)return;await p.fetchStatus(),await p.getBranchStatus(),n({message:"Git 状态已刷新",type:"success"})}catch(b){n({message:"刷新失败: "+b.message,type:"error"})}}async function _e(b){try{await Me.confirm(`确认解锁该文件？
${b}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await h.unlockFile(b)}catch{}}async function pe(){if(h.lockedFiles.length)try{await Me.confirm(`确认解锁所有已锁定文件？共 ${h.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const b=[...h.lockedFiles];await Promise.all(b.map(v=>h.unlockFile(v))),await h.loadLockedFiles(),n.success("已清空所有文件锁定")}catch{}}function S(b){if(!b)return"";const v=b.split(`
`);function X(D){return D.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return v.map(D=>{const P=X(D);return D.startsWith("diff --git")?`<div class="diff-header">${P}</div>`:D.startsWith("---")?`<div class="diff-old-file">${P}</div>`:D.startsWith("+++")?`<div class="diff-new-file">${P}</div>`:D.startsWith("@@")?`<div class="diff-hunk-header">${P}</div>`:D.startsWith("+")?`<div class="diff-added">${P}</div>`:D.startsWith("-")?`<div class="diff-removed">${P}</div>`:`<div class="diff-context">${P}</div>`}).join("")}async function z(b){try{ve.value=!0,R.value=b,U.value=p.fileList.findIndex(X=>X.path===b);const v=p.fileList[U.value];if(v&&v.type==="untracked"){try{const D=await(await fetch(`/api/file-content?file=${encodeURIComponent(b)}`)).json();D.success&&D.content?O.value=`diff --git a/${b} b/${b}
新文件: ${b}
--- /dev/null
+++ b/${b}
@@ -0,0 +1,${D.content.split(`
`).length} @@
`+D.content.split(`
`).map(P=>`+${P}`).join(`
`):O.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(X){console.error("获取未跟踪文件内容失败:",X),O.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}M.value=!0}else if(v&&v.type==="added"){const D=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(b)}`)).json();O.value=D.diff||"没有变更",M.value=!0}else{const D=await(await fetch(`/api/diff?file=${encodeURIComponent(b)}`)).json();O.value=D.diff||"没有变更",M.value=!0}}catch(v){n({message:"获取文件差异失败: "+v.message,type:"error"}),O.value="获取差异失败: "+v.message}finally{ve.value=!1}}async function B(){if(p.fileList.length===0||U.value<=0)return;const b=U.value-1,v=p.fileList[b];await z(v.path)}async function J(){if(p.fileList.length===0||U.value>=p.fileList.length-1)return;const b=U.value+1,v=p.fileList[b];await z(v.path)}function F(b){z(b.path)}async function N(b){await p.addFileToStage(b)}async function we(b){await p.unstageFile(b)}async function ce(){await V()}async function V(){try{if(!p.isGitRepo)return;await p.fetchStatus(),n({message:"Git 文件状态已刷新",type:"success"})}catch(b){n({message:"刷新失败: "+b.message,type:"error"})}}async function T(){try{await p.gitPull(),await re()}catch(b){console.error("拉取操作发生错误:",b)}}async function W(){try{await p.gitFetchAll(),await re()}catch(b){console.error("获取远程分支信息操作发生错误:",b)}}async function ae(b){try{await Me.confirm(`确定要撤回文件 "${b}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const X=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:b})})).json();X.success?(n.success("已撤回文件修改"),await re()):n.error(X.error?`撤回失败: ${X.error}`:"撤回文件修改失败，请重试")}catch(v){if(v==="cancel"||v.message==="cancel")return;const X=v.message||"未知错误";X!=="undefined"?n.error(`撤回文件修改失败: ${X}`):n.error("撤回文件修改失败，请重试")}}function Y(b){const v=b.split("/");return v[v.length-1]}function ne(b){const v=b.split("/");return v.length<=1?"":v.slice(0,-1).join("/")}function ee(b){const v=b.replace(/\\/g,"/"),X=h.lockedFiles.some(D=>{const P=D.replace(/\\/g,"/");return v===P});return(b==="test/2.txt"||b==="2.txt")&&console.log("检查文件锁定状态:",{filePath:b,normalizedPath:v,lockedFiles:h.lockedFiles,normalizedLockedFiles:h.lockedFiles.map(D=>D.replace(/\\/g,"/")),isLocked:X}),X}function xe(b){ee(b)?h.unlockFile(b):h.lockFile(b)}function G(b){Q.value[b]=!Q.value[b]}return _t(()=>{re(),h.loadConfig(),h.loadLockedFiles()}),Ke(()=>p.autoUpdateEnabled,(b,v)=>{console.log(`自动更新状态变更: ${v} -> ${b}`),p.toggleAutoUpdate()},{immediate:!1}),d({refreshStatus:ce}),(b,v)=>{const X=Cs,D=as,P=Ue,te=Bt,De=Dt,Ge=Ft,je=fa,be=ls;return f(),w(Se,null,[e("div",Pa,[e("div",Ha,[v[8]||(v[8]=e("h2",null,"Git 状态",-1)),e("div",Ia,[t(D,{content:o(p).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3},{default:a(()=>[t(X,{modelValue:o(p).autoUpdateEnabled,"onUpdate:modelValue":v[0]||(v[0]=g=>o(p).autoUpdateEnabled=g),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":o(Ss),"inactive-icon":o(ss),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(D,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"primary",icon:o(Ts),circle:"",size:"small",onClick:T,loading:o(p).isGitPulling,disabled:!o(p).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(D,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3},{default:a(()=>[Ee(t(P,{type:"primary",icon:o(xs),circle:"",size:"small",onClick:W,loading:o(p).isGitFetching},null,8,["icon","loading"]),[[ft,!1]])]),_:1}),o(h).lockedFiles.length>0?(f(),I(D,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"warning",circle:"",size:"small",onClick:v[1]||(v[1]=g=>Z.value=!0)},{default:a(()=>[t(te,null,{default:a(()=>[t(o(lt))]),_:1})]),_:1})]),_:1})):A("",!0),t(D,{content:"刷新状态",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"primary",icon:o(ua),circle:"",size:"small",onClick:ce,loading:E.value},null,8,["icon","loading"])]),_:1})])]),Ee((f(),w("div",{class:"card-content","element-loading-text":o(p).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[o(p).isGitRepo?(f(),w("div",Wa,[o(p).hasUpstream&&(o(p).branchAhead>0||o(p).branchBehind>0)?(f(),w("div",qa,[e("div",Ya,[e("div",Xa,[t(D,{content:"本地分支与远程分支的状态对比",placement:"top"},{default:a(()=>[e("div",Ka,[o(p).branchAhead>0?(f(),I(De,{key:0,size:"small",type:"warning",class:"status-badge"},{default:a(()=>[e("span",Za,[t(te,null,{default:a(()=>[t(o(Vs))]),_:1}),y(" 你的分支领先 'origin/"+L(o(p).currentBranch)+"' "+L(o(p).branchAhead)+" 个提交 ",1)])]),_:1})):A("",!0),o(p).branchBehind>0?(f(),I(De,{key:1,size:"small",type:"info",class:"status-badge"},{default:a(()=>[e("span",Qa,[t(te,null,{default:a(()=>[t(o(gt))]),_:1}),y(" 你的分支落后 'origin/"+L(o(p).currentBranch)+"' "+L(o(p).branchBehind)+" 个提交 ",1)])]),_:1})):A("",!0)])]),_:1})])])])):A("",!0),o(p).fileList.length?(f(),w("div",el,[o(p).fileList.some(g=>g.type==="added")?(f(),w("div",tl,[e("div",{class:"file-group-header",onClick:v[2]||(v[2]=g=>G("staged"))},[t(te,{class:he(["collapse-icon",{collapsed:Q.value.staged}])},{default:a(()=>[t(o(gt))]),_:1},8,["class"]),v[10]||(v[10]=e("span",null,"已暂存的更改",-1))]),Ee(e("div",sl,[(f(!0),w(Se,null,Be(o(p).fileList.filter(g=>g.type==="added"),g=>(f(),w("div",{key:g.path,class:"file-item",onClick:oe=>F(g)},[e("div",ll,[e("div",{class:he(["file-status-indicator",["added",{locked:ee(g.path)}]])},null,2),e("div",ol,[t(D,{content:Y(g.path),placement:"top",disabled:Y(g.path).length<=25,"hide-after":1e3},{default:a(()=>[e("span",{class:he(["file-name",{"locked-file-name":ee(g.path)}])},[y(L(Y(g.path))+" ",1),ee(g.path)?(f(),I(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(lt))]),_:1})):A("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ne(g.path)},[t(D,{content:ne(g.path),placement:"top",disabled:ne(g.path).length<=30,"hide-after":1e3},{default:a(()=>[e("span",il,L(ne(g.path)),1)]),_:2},1032,["content","disabled"])],8,nl)]),e("div",rl,[t(D,{content:ee(g.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:ee(g.path)?"danger":"info",size:"small",circle:"",onClick:Ye(oe=>xe(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),I(ht(ee(g.path)?o(lt):o(Ot))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(D,{content:"取消暂存",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"warning",size:"small",circle:"",onClick:Ye(oe=>we(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>v[11]||(v[11]=[y("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,al))),128))],512),[[ft,!Q.value.staged]])])):A("",!0),o(p).fileList.some(g=>g.type==="modified"||g.type==="deleted")?(f(),w("div",cl,[e("div",{class:"file-group-header",onClick:v[3]||(v[3]=g=>G("unstaged"))},[t(te,{class:he(["collapse-icon",{collapsed:Q.value.unstaged}])},{default:a(()=>[t(o(gt))]),_:1},8,["class"]),v[12]||(v[12]=e("span",null,"未暂存的更改",-1))]),Ee(e("div",ul,[(f(!0),w(Se,null,Be(o(p).fileList.filter(g=>g.type==="modified"||g.type==="deleted"),g=>(f(),w("div",{key:g.path,class:"file-item",onClick:oe=>F(g)},[e("div",fl,[e("div",{class:he(["file-status-indicator",[g.type,{locked:ee(g.path)}]])},null,2),e("div",pl,[t(D,{content:Y(g.path),placement:"top",disabled:Y(g.path).length<=25,"hide-after":1e3},{default:a(()=>[e("span",{class:he(["file-name",{"locked-file-name":ee(g.path)}])},[y(L(Y(g.path))+" ",1),ee(g.path)?(f(),I(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(lt))]),_:1})):A("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ne(g.path)},[t(D,{content:ne(g.path),placement:"top",disabled:ne(g.path).length<=30,"hide-after":1e3},{default:a(()=>[e("span",ml,L(ne(g.path)),1)]),_:2},1032,["content","disabled"])],8,vl)]),e("div",gl,[t(D,{content:ee(g.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:ee(g.path)?"danger":"info",size:"small",circle:"",onClick:Ye(oe=>xe(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),I(ht(ee(g.path)?o(lt):o(Ot))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(D,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"success",size:"small",circle:"",onClick:Ye(oe=>N(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>v[13]||(v[13]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),t(D,{content:"撤回修改",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"danger",size:"small",icon:o(os),circle:"",onClick:Ye(oe=>ae(g.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,dl))),128))],512),[[ft,!Q.value.unstaged]])])):A("",!0),o(p).fileList.some(g=>g.type==="untracked")?(f(),w("div",hl,[e("div",{class:"file-group-header",onClick:v[4]||(v[4]=g=>G("untracked"))},[t(te,{class:he(["collapse-icon",{collapsed:Q.value.untracked}])},{default:a(()=>[t(o(gt))]),_:1},8,["class"]),v[14]||(v[14]=e("span",null,"未跟踪的文件",-1))]),Ee(e("div",yl,[(f(!0),w(Se,null,Be(o(p).fileList.filter(g=>g.type==="untracked"),g=>(f(),w("div",{key:g.path,class:"file-item",onClick:oe=>F(g)},[e("div",wl,[e("div",{class:he(["file-status-indicator",["untracked",{locked:ee(g.path)}]])},null,2),e("div",kl,[t(D,{content:Y(g.path),placement:"top",disabled:Y(g.path).length<=25,"hide-after":1e3},{default:a(()=>[e("span",{class:he(["file-name",{"locked-file-name":ee(g.path)}])},[y(L(Y(g.path))+" ",1),ee(g.path)?(f(),I(te,{key:0,class:"lock-indicator"},{default:a(()=>[t(o(lt))]),_:1})):A("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:ne(g.path)},[t(D,{content:ne(g.path),placement:"top",disabled:ne(g.path).length<=30,"hide-after":1e3},{default:a(()=>[e("span",bl,L(ne(g.path)),1)]),_:2},1032,["content","disabled"])],8,$l)]),e("div",Cl,[t(D,{content:ee(g.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:ee(g.path)?"danger":"info",size:"small",circle:"",onClick:Ye(oe=>xe(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>[t(te,{size:"12"},{default:a(()=>[(f(),I(ht(ee(g.path)?o(lt):o(Ot))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),t(D,{content:"添加到暂存区",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"success",size:"small",circle:"",onClick:Ye(oe=>N(g.path),["stop"]),class:"file-action-btn"},{default:a(()=>v[15]||(v[15]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),t(D,{content:"删除文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"danger",size:"small",icon:o(ss),circle:"",onClick:Ye(oe=>ae(g.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,_l))),128))],512),[[ft,!Q.value.untracked]])])):A("",!0)])):o(p).isGitRepo?(f(),w("div",Sl,[e("div",Tl,[t(te,null,{default:a(()=>[t(o(Ls))]),_:1})]),v[16]||(v[16]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),v[17]||(v[17]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):A("",!0)])):(f(),w("div",Ja,v[9]||(v[9]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,Na)),[[be,o(p).isGitPulling||o(p).isGitFetching]])]),t(Ge,{modelValue:M.value,"onUpdate:modelValue":v[5]||(v[5]=g=>M.value=g),title:`文件差异: ${R.value}`,width:"80%","destroy-on-close":"",class:"diff-dialog"},{footer:a(()=>[e("div",zl,[t(P,{type:"primary",icon:o(da),onClick:B,disabled:U.value<=0||o(p).fileList.length===0,plain:"",class:"nav-button"},{default:a(()=>v[18]||(v[18]=[y(" 上一个文件 ")])),_:1},8,["icon","disabled"]),e("div",Bl,[t(De,{type:"info",effect:"plain",class:"counter-tag"},{default:a(()=>[y(L(U.value+1)+" / "+L(o(p).fileList.length),1)]),_:1})]),t(P,{type:"primary",icon:o(hs),onClick:J,disabled:U.value>=o(p).fileList.length-1||o(p).fileList.length===0,plain:"",class:"nav-button"},{icon:a(()=>[t(te,{class:"el-icon--right"},{default:a(()=>[t(o(hs))]),_:1})]),default:a(()=>[v[19]||(v[19]=y(" 下一个文件 "))]),_:1},8,["icon","disabled"])])]),default:a(()=>[Ee((f(),w("div",xl,[O.value?(f(),w("div",{key:0,innerHTML:S(O.value),class:"diff-formatted"},null,8,Vl)):(f(),w("div",Ll,"该文件没有差异或是新文件"))])),[[be,ve.value]])]),_:1},8,["modelValue","title"]),t(Ge,{modelValue:Z.value,"onUpdate:modelValue":v[7]||(v[7]=g=>Z.value=g),title:"锁定文件管理",width:"700px","destroy-on-close":""},{footer:a(()=>[e("span",Il,[t(P,{onClick:v[6]||(v[6]=g=>Z.value=!1)},{default:a(()=>v[27]||(v[27]=[y("关闭")])),_:1})])]),default:a(()=>[e("div",Dl,[e("div",Fl,[t(te,{class:"description-icon"},{default:a(()=>[t(o(ys))]),_:1}),v[20]||(v[20]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),v[21]||(v[21]=e("div",{class:"description-content"},[e("p",null,[e("strong",null,"🔒 锁定文件的作用：")]),e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区"),e("li",null,"适用于临时文件、配置文件、或不想提交的开发中文件"),e("li",null,"锁定状态会持久保存，直到手动解锁")]),e("p",null,[e("strong",null,"💡 使用场景：")]),e("ul",null,[e("li",null,"开发过程中的临时测试文件"),e("li",null,"本地配置文件（如数据库连接、API密钥等）"),e("li",null,"正在开发但还不想提交的功能文件")])],-1))]),t(je),o(h).lockedFiles.length===0?(f(),w("div",Rl,[e("div",Gl,[t(te,null,{default:a(()=>[t(o(lt))]),_:1})]),v[22]||(v[22]=e("p",null,"当前没有锁定的文件",-1)),v[23]||(v[23]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(f(),w("div",jl,[e("div",Al,[e("span",null,"🔒 已锁定 "+L(o(h).lockedFiles.length)+" 个文件",1),t(D,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:a(()=>[t(te,{class:"info-icon"},{default:a(()=>[t(o(ys))]),_:1})]),_:1}),v[25]||(v[25]=e("div",{style:{flex:"1"}},null,-1)),t(P,{type:"danger",size:"small",plain:"",disabled:!o(h).lockedFiles.length,onClick:pe},{default:a(()=>v[24]||(v[24]=[y(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",Ul,[(f(!0),w(Se,null,Be(o(h).lockedFiles,g=>(f(),w("div",{key:g,class:"locked-file-item"},[e("div",Ol,[v[26]||(v[26]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",El,[e("span",Ml,L(Y(g)),1),e("span",Pl,L(ne(g)),1)])]),e("div",Hl,[t(D,{content:"解锁文件",placement:"top","hide-after":1e3},{default:a(()=>[t(P,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:o(Ot),"aria-label":"解锁",onClick:oe=>_e(g)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),Rt=(ye,d)=>{const k=ye.__vccOpts||ye;for(const[p,h]of d)k[p]=h;return k},Jl=Rt(Nl,[["__scopeId","data-v-42564fa9"]]),Wl={class:"card-header"},ql={class:"header-actions"},Yl={key:0,class:"pushing-indicator"},Xl={class:"pushing-text"},Kl={key:0,class:"push-success-indicator"},Zl={class:"card-content"},Ql={class:"layout-container"},eo={key:0,class:"git-config-warning"},to={key:1,class:"commit-section"},so={class:"commit-options"},ao={class:"options-row"},lo={class:"commit-mode-toggle"},oo={class:"no-verify-toggle"},no={key:0,class:"commit-form"},io={class:"description-container"},ro={class:"preview-section"},co={class:"preview-content code-command"},uo={class:"form-bottom-actions"},fo={class:"actions-flex-container"},po={class:"left-actions"},vo={class:"button-grid"},mo={key:0},go={key:0},ho={key:0},yo={class:"right-actions"},_o={class:"one-push-content"},wo={key:1,class:"standard-commit-form"},ko={class:"standard-commit-header"},$o={class:"type-scope-container"},bo={class:"scope-wrapper"},Co={class:"description-container"},So={class:"advanced-fields"},To={class:"preview-section"},xo={class:"preview-content code-command"},Vo={class:"form-bottom-actions"},Lo={class:"actions-flex-container"},zo={class:"left-actions"},Bo={class:"button-grid"},Do={key:0},Fo={key:0},Ro={key:0},Go={class:"right-actions"},jo={class:"one-push-content"},Ao={class:"actions-section"},Uo={class:"action-groups"},Oo={class:"operations-wrapper"},Eo={class:"action-group"},Mo={class:"group-buttons"},Po={key:0},Ho={key:0},Io={key:0},No={key:0},Jo={class:"action-group"},Wo={class:"group-buttons"},qo={class:"action-group reset-group"},Yo={class:"group-buttons"},Xo={key:0},Ko={class:"action-group branch-group"},Zo={class:"group-buttons"},Qo={class:"action-group"},en={class:"group-buttons"},tn={class:"dialog-footer"},sn={class:"template-container"},an={class:"template-form"},ln={class:"template-form-buttons"},on={class:"template-list"},nn={class:"template-content"},rn={class:"template-actions"},cn={class:"template-container"},un={class:"template-form"},dn={class:"template-form-buttons"},fn={class:"template-list"},pn={class:"template-content"},vn={class:"template-actions"},mn={class:"template-container message-template-container"},gn={class:"template-form"},hn={class:"template-form-buttons"},yn={class:"templates-container"},_n={class:"message-templates-list"},wn={class:"templates-scroll-area"},kn={class:"template-content"},$n={class:"template-actions"},bn={class:"current-default-message"},Cn={class:"default-message-content"},Sn={class:"message-help-text"},Tn={class:"merge-dialog-content"},xn={class:"merge-intro"},Vn={class:"merge-options"},Ln={class:"dialog-footer"},zn={class:"stash-list-content"},Bn={key:0,class:"stash-list-actions"},Dn={class:"stash-dialog-content"},Fn={class:"dialog-footer"},Rn={key:0,class:"stash-detail-content"},Gn={class:"stash-header"},jn={class:"stash-info"},An={class:"stash-description"},Un={class:"stash-main-content"},On={class:"stash-files-panel"},En={class:"panel-header"},Mn={class:"files-list"},Pn=["onClick"],Hn={class:"file-name"},In={class:"stash-diff-panel"},Nn={class:"panel-header"},Jn={key:0,class:"selected-file"},Wn={class:"diff-content"},qn=["innerHTML"],Yn={class:"dialog-footer"},Xn=zt({__name:"CommitForm",setup(ye){const d=yt(),k=cs(),p=u(""),h=u(!1),E=u(!1),R=u("输入提交信息..."),O=u(""),M=u(!1),ve=u("feat"),U=u(""),Z=u(""),Q=u(""),ie=u(""),re=u(!1),_e=u(""),pe=u(!1),S=u([]),z=u(!1),B=u(""),J=u(!1),F=u(""),N=u(-1),we=u(!1),ce=u(""),V=u({noFf:!1,squash:!1,noCommit:!1,message:""}),T=u([]),W=u(!1),ae=u(""),Y=u(!1),ne=u(""),ee=u(-1),xe=u(!1),G=u(""),b=u(!1),v=u(!1),X=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],D=u(!1),P=u(!1),te=u(""),De=u(!1),Ge=u(!0),je=u(!1),be=u(null),g=u([]),oe=u(""),Re=u(!1),Oe=u("");function Ne(){te.value="",De.value=!1,Ge.value=!0,D.value=!0}function Xe(){try{const r=k.config;_e.value=JSON.stringify(r,null,2),re.value=!0}catch{n.error("加载配置失败")}}async function Je(){try{pe.value=!0;let r;try{r=JSON.parse(_e.value)}catch(se){n.error(`JSON 解析失败: ${se.message||se}`);return}const x=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:r})})).json();if(!x.success)throw new Error(x.error||"保存失败");await k.loadConfig(!0);try{await k.loadLockedFiles()}catch{}try{Array.isArray(k.descriptionTemplates)&&(S.value=[...k.descriptionTemplates])}catch{}try{Array.isArray(k.scopeTemplates)&&(T.value=[...k.scopeTemplates])}catch{}try{Array.isArray(k.messageTemplates)&&(me.value=[...k.messageTemplates])}catch{}n.success("配置已保存"),re.value=!1}catch(r){n.error(`保存配置失败: ${r.message||r}`)}finally{pe.value=!1}}function C(){d.getStashList(),P.value=!0}async function c(){try{await d.saveStash(te.value,De.value,Ge.value),D.value=!1}catch(r){console.error("储藏失败:",r)}}async function q(r,s=!1){try{await d.applyStash(r,s),s&&await d.getStashList()}catch(x){console.error("应用储藏失败:",x)}}async function H(r){Me.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await d.dropStash(r),await d.getStashList()}).catch(()=>{})}async function Ve(){Me.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await d.clearAllStashes(),await d.getStashList()}).catch(()=>{})}async function ze(r){if(r){be.value=r,je.value=!0,Re.value=!0,g.value=[],oe.value="",Oe.value="";try{if(!r.id||r.id.length<7){oe.value="无效的stash ID",Re.value=!1;return}const x=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(r.id)}`)).json();x.success&&Array.isArray(x.files)?(g.value=x.files,g.value.length>0?await de(r.id,g.value[0]):oe.value="该stash没有变更文件"):oe.value=`获取文件列表失败: ${x.error||"未知错误"}`}catch(s){oe.value=`获取stash详情失败: ${s.message}`}finally{Re.value=!1}}}async function de(r,s){Re.value=!0,Oe.value=s;try{const se=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(r)}&file=${encodeURIComponent(s)}`)).json();se.success?oe.value=se.diff||"没有变更内容":oe.value=`获取差异失败: ${se.error||"未知错误"}`}catch(x){oe.value=`获取差异失败: ${x.message}`}finally{Re.value=!1}}function Ce(r){if(!r)return"";const s=r.split(`
`);function x(se){return se.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return s.map(se=>{const fe=x(se);return se.startsWith("diff --git")?`<div class="diff-header">${fe}</div>`:se.startsWith("---")?`<div class="diff-old-file">${fe}</div>`:se.startsWith("+++")?`<div class="diff-new-file">${fe}</div>`:se.startsWith("@@")?`<div class="diff-hunk-header">${fe}</div>`:se.startsWith("+")?`<div class="diff-added">${fe}</div>`:se.startsWith("-")?`<div class="diff-removed">${fe}</div>`:`<div class="diff-context">${fe}</div>`}).join("")}const me=u([]),ge=u(!1),$e=u(""),We=u(-1);Ke(M,r=>{localStorage.setItem("zen-gitsync-standard-commit",r.toString())}),Ke(b,r=>{localStorage.setItem("zen-gitsync-skip-hooks",r.toString())});const ke=Fe(()=>{if(!M.value)return p.value||O.value;let r=`${ve.value||""}`;return U.value&&(r+=`(${U.value})`),r+=`: ${Z.value}`,Q.value&&(r+=`

${Q.value}`),ie.value&&(r+=`

${ie.value}`),r}),K=Fe(()=>{let r=`git commit -m "${ke.value}"`;return b.value&&(r+=" --no-verify"),r});function ot(){const r=k.config;r&&(R.value=`输入提交信息 (默认: ${r.defaultCommitMessage})`,O.value=r.defaultCommitMessage||"",r.descriptionTemplates&&Array.isArray(r.descriptionTemplates)&&(S.value=r.descriptionTemplates),r.scopeTemplates&&Array.isArray(r.scopeTemplates)&&(T.value=r.scopeTemplates),r.messageTemplates&&Array.isArray(r.messageTemplates)&&(me.value=r.messageTemplates))}async function nt(){if(!B.value.trim()){n({message:"请输入模板内容",type:"warning"});return}try{if(J.value)await Ze();else{if(S.value.includes(B.value)){n({message:"该模板已存在",type:"warning"});return}await k.saveTemplate(B.value,"description")&&(S.value.includes(B.value)||S.value.push(B.value),S.value=[...S.value],B.value="")}}catch(r){n({message:`保存模板失败: ${r.message}`,type:"error"})}}async function Ze(){if(!B.value.trim()){n({message:"请输入模板内容",type:"warning"});return}try{if(await k.updateTemplate(F.value,B.value,"description")){const s=S.value.indexOf(F.value);s!==-1&&(S.value[s]=B.value),S.value=[...S.value],J.value=!1,F.value="",N.value=-1,B.value=""}}catch(r){n({message:`更新模板失败: ${r.message}`,type:"error"})}}function wt(r,s){J.value=!0,F.value=r,N.value=s,B.value=r}function it(){J.value=!1,F.value="",N.value=-1,B.value=""}async function He(){if(!ae.value.trim()){n({message:"请输入模板内容",type:"warning"});return}try{if(Y.value)await kt();else{if(T.value.includes(ae.value)){n({message:"该模板已存在",type:"warning"});return}await k.saveTemplate(ae.value,"scope")&&(T.value.includes(ae.value)||T.value.push(ae.value),T.value=[...T.value],ae.value="")}}catch(r){n({message:`保存模板失败: ${r.message}`,type:"error"})}}async function kt(){if(!ae.value.trim()){n({message:"请输入模板内容",type:"warning"});return}try{if(await k.updateTemplate(ne.value,ae.value,"scope")){const s=T.value.indexOf(ne.value);s!==-1&&(T.value[s]=ae.value),T.value=[...T.value],Y.value=!1,ne.value="",ee.value=-1,ae.value=""}}catch(r){n({message:`更新模板失败: ${r.message}`,type:"error"})}}function i(r,s){Y.value=!0,ne.value=r,ee.value=s,ae.value=r}function l(){Y.value=!1,ne.value="",ee.value=-1,ae.value=""}async function m(r){try{if(await Me.confirm(`确定要删除描述模板 "${r}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await k.deleteTemplate(r,"description")){const x=S.value.indexOf(r);x!==-1&&S.value.splice(x,1),S.value=[...S.value]}}catch(s){if(s==="cancel")return;n({message:`删除模板失败: ${s.message}`,type:"error"})}}async function $(r){try{if(await Me.confirm(`确定要删除作用域模板 "${r}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await k.deleteTemplate(r,"scope")){const x=T.value.indexOf(r);x!==-1&&T.value.splice(x,1),T.value=[...T.value]}}catch(s){if(s==="cancel")return;n({message:`删除模板失败: ${s.message}`,type:"error"})}}function le(r){Z.value=r,z.value=!1}function ue(r){U.value=r,W.value=!1}function Le(){z.value=!0}function j(){W.value=!0}async function Ie(){try{await d.addToStage()&&d.fetchStatus()}catch(r){n({message:`添加文件失败: ${r.message}`,type:"error"})}}async function $t(){if(!ke.value.trim()){n({message:"提交信息不能为空",type:"warning"});return}try{await d.commitChanges(ke.value,b.value)&&(Nt(),d.fetchStatus(),d.fetchLog(),d.getBranchStatus(!0))}catch(r){n({message:`提交失败: ${r.message}`,type:"error"})}}function Gt(){h.value=!0,setTimeout(()=>{h.value=!1},2e3)}async function Ht(){try{await d.pushToRemote(),E.value=!0;try{await new Promise(r=>setTimeout(r,200)),Gt()}catch(r){console.error("推送后处理失败:",r),Gt()}finally{E.value=!1}}catch(r){E.value=!1,n({message:`推送失败: ${r.message}`,type:"error"})}}async function js(){try{await d.gitPull(),await d.fetchStatus(),await d.fetchLog(!1)}catch(r){console.error("拉取操作发生错误:",r)}}async function As(){try{await d.gitFetchAll(),await d.fetchStatus(),await d.fetchLog(!1)}catch(r){console.error("获取远程分支信息操作发生错误:",r)}}async function Us(){if(!ke.value.trim()){n({message:"提交信息不能为空",type:"warning"});return}try{await d.addAndCommit(ke.value,b.value),Nt(),d.fetchStatus(),d.fetchLog()}catch(r){n({message:`暂存并提交失败: ${r.message}`,type:"error"})}}async function It(){if(!ke.value.trim()){n({message:"提交信息不能为空",type:"warning"});return}try{if(await d.addCommitAndPush(ke.value,b.value)){Nt(),E.value=!0;try{await new Promise(s=>setTimeout(s,1e3)),console.log("一键推送完成，状态已在pushToRemote中刷新"),Gt()}catch(s){console.error("一键推送后处理失败:",s),Gt()}finally{E.value=!1}}}catch(r){n({message:`暂存、提交并推送失败: ${r.message}`,type:"error"})}}async function Os(){try{await Me.confirm(`确定要重置当前分支 "${d.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await d.resetToRemote(d.currentBranch)&&(d.fetchStatus(),d.fetchLog())}catch(r){r!=="cancel"&&n({message:`重置到远程分支失败: ${r.message}`,type:"error"})}}function Nt(){p.value="",Z.value="",Q.value="",ie.value=""}function Es(){G.value=O.value,xe.value=!0}async function Ms(){if(!G.value.trim()){n({message:"请输入默认提交信息",type:"warning"});return}try{await k.saveDefaultMessage(G.value)&&(O.value=G.value,R.value=`输入提交信息 (默认: ${G.value})`,xe.value=!1)}catch(r){n({message:`保存默认提交信息失败: ${r.message}`,type:"error"})}}function jt(r){const s=r.replace(/\\/g,"/");return k.lockedFiles.some(x=>{const se=x.replace(/\\/g,"/");return s===se})}const bt=Fe(()=>d.fileList.some(r=>["modified","deleted","untracked"].includes(r.type)&&!jt(r.path))),rt=Fe(()=>d.fileList.filter(r=>["modified","deleted","untracked"].includes(r.type)&&!jt(r.path)).length),qe=Fe(()=>d.fileList.filter(r=>r.type==="added"&&!jt(r.path)).length),pt=Fe(()=>qe.value>0),ct=Fe(()=>d.fileList.some(r=>!jt(r.path))),Qe=Fe(()=>d.branchAhead>0),Jt=Fe(()=>d.branchBehind>0),et=Fe(()=>d.hasUpstream&&Qe.value&&!pt.value),us=Fe(()=>pt.value),Ps=Fe(()=>d.hasUpstream&&(Qe.value||Jt.value||ct.value));async function Hs(){if(!G.value.trim()){n({message:"请输入模板内容",type:"warning"});return}try{if(ge.value)await Is();else{if(me.value.includes(G.value)){n({message:"该模板已存在",type:"warning"});return}me.value.push(G.value);const s=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:G.value,type:"message"})})).json();s.success?(n({message:"提交信息模板保存成功!",type:"success"}),G.value=""):n({message:"模板保存失败: "+s.error,type:"error"})}}catch(r){n({message:"模板保存失败: "+r.message,type:"error"})}}async function Is(){try{if(We.value>=0){const r=$e.value,s=G.value;me.value[We.value]=s;const se=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:r,newTemplate:s,type:"message"})})).json();se.success?(n({message:"提交信息模板更新成功!",type:"success"}),ge.value=!1,$e.value="",We.value=-1,G.value=""):n({message:"模板更新失败: "+se.error,type:"error"})}}catch(r){n({message:"模板更新失败: "+r.message,type:"error"})}}function Ns(r,s){ge.value=!0,$e.value=r,We.value=s,G.value=r}function Js(){ge.value=!1,$e.value="",We.value=-1,G.value=""}async function Ws(r){try{const s=me.value.indexOf(r);s!==-1&&me.value.splice(s,1);const se=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:r,type:"message"})})).json();se.success?n({message:"提交信息模板删除成功!",type:"success"}):n({message:"模板删除失败: "+se.error,type:"error"})}catch(s){n({message:"模板删除失败: "+s.message,type:"error"})}}function qs(r){p.value=r,G.value=r}_t(async()=>{const r=localStorage.getItem("zen-gitsync-standard-commit");r!==null&&(M.value=r==="true");const s=localStorage.getItem("zen-gitsync-skip-hooks");s!==null&&(b.value=s==="true"),Ke(()=>k.config,ot,{immediate:!0}),k.config||await k.loadConfig()});function Ys(){ce.value="",V.value={noFf:!1,squash:!1,noCommit:!1,message:""},vt.value="all",we.value=!0,d.allBranches.length===0&&d.getAllBranches()}const vt=u("all"),Xs=Fe(()=>{const r=d.allBranches.filter(s=>s!==d.currentBranch);if(console.log("筛选分支列表:",{allBranches:d.allBranches,currentBranch:d.currentBranch,branchTypeFilter:vt.value,filteredBranches:r}),vt.value==="local"){const s=r.filter(x=>!x.includes("origin/"));return console.log("本地分支:",s),s}else if(vt.value==="remote"){const s=r.filter(x=>x.includes("origin/"));return console.log("远程分支:",s),s}else return console.log("所有分支:",r),r});async function Ks(){if(!ce.value){n({message:"请选择要合并的分支",type:"warning"});return}try{await d.mergeBranch(ce.value,V.value)&&(we.value=!1,await d.fetchStatus(),await d.fetchLog(!1))}catch(r){console.error("合并分支操作发生错误:",r)}}const At=u(!1);function Zs(){At.value=!At.value}function Qs(r,s){const se=[...r?S.value.filter(fe=>fe.toLowerCase().includes(r.toLowerCase())).map(fe=>({value:fe})):S.value.map(fe=>({value:fe})),{value:"⚙️ 管理模板...",isSettings:!0}];s(se)}function ea(r,s){const se=[...r?T.value.filter(fe=>fe.toLowerCase().includes(r.toLowerCase())).map(fe=>({value:fe})):T.value.map(fe=>({value:fe})),{value:"⚙️ 管理模板...",isSettings:!0}];s(se)}function ta(r){r.isSettings?(Le(),Z.value=""):Z.value=r.value}function sa(r){r.isSettings?(j(),U.value=""):U.value=r.value}function aa(r,s){const se=[...r?me.value.filter(fe=>fe.toLowerCase().includes(r.toLowerCase())).map(fe=>({value:fe})):me.value.map(fe=>({value:fe})),{value:"⚙️ 管理模板...",isSettings:!0}];s(se)}function la(r){r.isSettings?(Es(),p.value=""):p.value=r.value}return(r,s)=>{const x=Ue,se=Bt,fe=ns,ds=Cs,Wt=ma,Te=as,fs=Mt,ps=Pt,tt=is,oa=ha,st=Ft,mt=rs,qt=ya,Ut=Bs,vs=Dt,Yt=wa,na=_a,ut=Fs,Ct=ka,ms=Ds,Xt=Vt,ia=Rs,ra=pa("Document"),gs=$a,Kt=ls;return f(),w("div",{class:he(["card",{"is-pushing":o(d).isPushing}])},[e("div",Wl,[s[36]||(s[36]=e("h2",null,"提交更改",-1)),e("div",ql,[t(x,{size:"small",type:"primary",icon:o(St),onClick:Xe},{default:a(()=>s[35]||(s[35]=[y("配置")])),_:1},8,["icon"]),t(x,{type:"primary",icon:o(va),size:"small",circle:"",onClick:Zs,class:"git-tools-button"},null,8,["icon"])])]),t(_s,{name:"el-fade-in-linear"},{default:a(()=>[o(d).isPushing||E.value?(f(),w("div",Yl,[s[37]||(s[37]=e("div",{class:"pushing-spinner"},[e("svg",{viewBox:"0 0 50 50",class:"circular"},[e("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1)),e("div",Xl,L(o(d).isPushing?"正在推送...":"更新状态中..."),1)])):A("",!0)]),_:1}),t(_s,{name:"el-fade-in-linear"},{default:a(()=>[h.value?(f(),w("div",Kl,[t(se,{class:"push-success-icon"},{default:a(()=>[t(o(Ss))]),_:1}),s[38]||(s[38]=e("div",{class:"push-success-text"},"已完成!",-1))])):A("",!0)]),_:1}),e("div",Zl,[e("div",Ql,[o(d).userName===""||o(d).userEmail===""?(f(),w("div",eo,[t(fe,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:a(()=>s[39]||(s[39]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(f(),w("div",to,[e("div",so,[e("div",ao,[e("div",lo,[t(ds,{modelValue:M.value,"onUpdate:modelValue":s[0]||(s[0]=_=>M.value=_),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),e("div",oo,[t(ds,{modelValue:b.value,"onUpdate:modelValue":s[1]||(s[1]=_=>b.value=_),"active-text":"跳过 Git 钩子检查 (--no-verify)"},null,8,["modelValue"])])])]),M.value?(f(),w("div",wo,[e("div",ko,[e("div",$o,[t(ps,{modelValue:ve.value,"onUpdate:modelValue":s[3]||(s[3]=_=>ve.value=_),placeholder:"提交类型",class:"type-select",clearable:""},{default:a(()=>[(f(),w(Se,null,Be(X,_=>t(fs,{key:_.value,label:_.label,value:_.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",bo,[t(Wt,{modelValue:U.value,"onUpdate:modelValue":s[4]||(s[4]=_=>U.value=_),"fetch-suggestions":ea,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:sa},null,8,["modelValue"])])]),e("div",Co,[t(Wt,{modelValue:Z.value,"onUpdate:modelValue":s[5]||(s[5]=_=>Z.value=_),"fetch-suggestions":Qs,placeholder:"简短描述（必填）",class:"description-input",clearable:"",onSelect:ta},null,8,["modelValue"])])]),e("div",{class:"advanced-options-toggle",onClick:s[6]||(s[6]=_=>v.value=!v.value)},[e("span",null,L(v.value?"收起":"正文及页脚"),1),t(se,{class:he(["toggle-icon",{"is-active":v.value}])},{default:a(()=>[t(o(gt))]),_:1},8,["class"])]),Ee(e("div",So,[t(tt,{modelValue:Q.value,"onUpdate:modelValue":s[7]||(s[7]=_=>Q.value=_),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(tt,{modelValue:ie.value,"onUpdate:modelValue":s[8]||(s[8]=_=>ie.value=_),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[ft,v.value]]),e("div",To,[s[45]||(s[45]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),e("pre",xo,L(K.value),1)]),e("div",Vo,[e("div",Lo,[e("div",zo,[e("div",Bo,[t(x,{type:"primary",onClick:Ie,loading:o(d).isAddingFiles,disabled:!bt.value,class:"stage-button"},{default:a(()=>[s[46]||(s[46]=y(" 暂存更改 ")),rt.value>0?(f(),w("span",Do,"("+L(rt.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"]),t(x,{type:"primary",onClick:$t,loading:o(d).isLoadingStatus,disabled:!pt.value||!ke.value.trim()},{default:a(()=>[s[47]||(s[47]=y(" 提交 ")),qe.value>0?(f(),w("span",Fo,"("+L(qe.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"]),t(Te,{content:et.value?"推送已提交的更改到远程仓库":o(d).hasUpstream?Qe.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top"},{default:a(()=>[t(x,{type:"primary",icon:o(Zt),onClick:Ht,loading:o(d).isPushing,disabled:!et.value,style:xt(et.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[48]||(s[48]=y(" 推送 ")),Qe.value?(f(),w("span",Ro,"("+L(o(d).branchAhead)+")",1)):A("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",Go,[t(Te,{content:ct.value?ke.value.trim()?o(d).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top"},{default:a(()=>[t(x,{type:"success",onClick:It,loading:o(d).isAddingFiles||o(d).isCommiting||o(d).isPushing,disabled:!ct.value||!ke.value.trim()||!o(d).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",jo,[t(se,{class:"one-push-icon"},{default:a(()=>[t(o(Qt))]),_:1}),s[49]||(s[49]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])])):(f(),w("div",no,[e("div",io,[t(Wt,{modelValue:p.value,"onUpdate:modelValue":s[2]||(s[2]=_=>p.value=_),"fetch-suggestions":aa,placeholder:R.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input",onSelect:la},null,8,["modelValue","placeholder"])]),e("div",ro,[s[40]||(s[40]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),e("pre",co,'git commit -m "'+L(ke.value||"<提交信息>")+'"'+L(b.value?" --no-verify":""),1)]),e("div",uo,[e("div",fo,[e("div",po,[e("div",vo,[t(x,{type:"primary",onClick:Ie,loading:o(d).isAddingFiles,disabled:!bt.value,class:"stage-button"},{default:a(()=>[s[41]||(s[41]=y(" 暂存更改 ")),rt.value>0?(f(),w("span",mo,"("+L(rt.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"]),t(x,{type:"primary",onClick:$t,loading:o(d).isLoadingStatus,disabled:!pt.value||!ke.value.trim()},{default:a(()=>[s[42]||(s[42]=y(" 提交 ")),qe.value>0?(f(),w("span",go,"("+L(qe.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"]),t(Te,{content:et.value?"推送已提交的更改到远程仓库":o(d).hasUpstream?Qe.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top"},{default:a(()=>[t(x,{type:"primary",icon:o(Zt),onClick:Ht,loading:o(d).isPushing,disabled:!et.value,style:xt(et.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[43]||(s[43]=y(" 推送 ")),Qe.value?(f(),w("span",ho,"("+L(o(d).branchAhead)+")",1)):A("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",yo,[t(Te,{content:ct.value?ke.value.trim()?o(d).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top"},{default:a(()=>[t(x,{type:"success",onClick:It,loading:o(d).isAddingFiles||o(d).isCommiting||o(d).isPushing,disabled:!ct.value||!ke.value.trim()||!o(d).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",_o,[t(se,{class:"one-push-icon"},{default:a(()=>[t(o(Qt))]),_:1}),s[44]||(s[44]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])]))]))]),t(oa,{modelValue:At.value,"onUpdate:modelValue":s[9]||(s[9]=_=>At.value=_),title:"Git 操作",direction:"rtl",size:"340px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:a(()=>[e("div",Ao,[e("div",Uo,[e("div",Oo,[e("div",Eo,[s[55]||(s[55]=e("div",{class:"group-title"},"基础操作",-1)),e("div",Mo,[t(Te,{content:bt.value?`暂存${rt.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",onClick:Ie,loading:o(d).isAddingFiles,disabled:!bt.value,class:"action-button"},{default:a(()=>[s[50]||(s[50]=y(" 暂存更改 ")),rt.value>0?(f(),w("span",Po,"("+L(rt.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Te,{content:pt.value?`提交${qe.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",onClick:$t,loading:o(d).isLoadingStatus,disabled:!pt.value||!ke.value.trim(),class:"action-button"},{default:a(()=>[s[51]||(s[51]=y(" 提交 ")),qe.value>0?(f(),w("span",Ho,"("+L(qe.value)+")",1)):A("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),t(Te,{content:Qe.value?`推送${o(d).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",icon:o(Zt),onClick:Ht,loading:o(d).isPushing,disabled:!et.value,class:he(["action-button","push-button",{"is-loading":o(d).isPushing}]),style:xt(et.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[s[52]||(s[52]=y(" 推送 ")),Qe.value?(f(),w("span",Io,"("+L(o(d).branchAhead)+")",1)):A("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),t(Te,{content:Jt.value?`拉取${o(d).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",icon:o(Ts),onClick:js,loading:o(d).isGitPulling,disabled:!o(d).hasUpstream,class:"action-button",style:xt(o(d).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:a(()=>[s[53]||(s[53]=y(" 拉取 ")),Jt.value?(f(),w("span",No,"("+L(o(d).branchBehind)+")",1)):A("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Te,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"info",icon:o(xs),onClick:As,loading:o(d).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:a(()=>s[54]||(s[54]=[y(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Jo,[s[58]||(s[58]=e("div",{class:"group-title"},"组合操作",-1)),e("div",Wo,[t(Te,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",icon:o(St),onClick:Us,loading:o(d).isAddingFiles||o(d).isCommiting,disabled:!bt.value||!ke.value.trim(),class:"action-button"},{default:a(()=>s[56]||(s[56]=[y(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(Te,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"success",icon:o(Qt),onClick:It,loading:o(d).isAddingFiles||o(d).isCommiting||o(d).isPushing,disabled:!ct.value||!ke.value.trim()||!o(d).hasUpstream,class:he(["action-button","one-click-push",{"is-loading":o(d).isAddingFiles||o(d).isCommiting||o(d).isPushing}])},{default:a(()=>s[57]||(s[57]=[y(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),e("div",qo,[s[61]||(s[61]=e("div",{class:"group-title"},"重置操作",-1)),e("div",Yo,[t(Te,{content:us.value?`撤销${qe.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"warning",icon:o(os),onClick:o(d).resetHead,loading:o(d).isResetting,disabled:!us.value,class:"action-button reset-button"},{default:a(()=>[s[59]||(s[59]=y(" 重置暂存区 ")),qe.value>0?(f(),w("span",Xo,"("+L(qe.value)+")",1)):A("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Te,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"danger",icon:o(zs),onClick:Os,loading:o(d).isResetting,disabled:!Ps.value,class:"action-button danger-button"},{default:a(()=>s[60]||(s[60]=[y(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",Ko,[s[63]||(s[63]=e("div",{class:"group-title"},"分支操作",-1)),e("div",Zo,[t(Te,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"primary",icon:o(ga),onClick:Ys,loading:o(d).isGitMerging,class:"action-button merge-button"},{default:a(()=>s[62]||(s[62]=[y(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Qo,[s[66]||(s[66]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",en,[t(Te,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"warning",onClick:Ne,loading:o(d).isSavingStash,disabled:!ct.value,class:"action-button"},{default:a(()=>s[64]||(s[64]=[y(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(Te,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip"},{default:a(()=>[t(x,{type:"info",onClick:C,class:"action-button"},{default:a(()=>s[65]||(s[65]=[y(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(st,{class:"config-editor-dialog",title:"编辑配置 JSON",modelValue:re.value,"onUpdate:modelValue":s[12]||(s[12]=_=>re.value=_),width:"60%"},{footer:a(()=>[e("span",tn,[t(x,{onClick:s[11]||(s[11]=_=>re.value=!1)},{default:a(()=>s[67]||(s[67]=[y("取消")])),_:1}),t(x,{type:"primary",loading:pe.value,onClick:Je},{default:a(()=>s[68]||(s[68]=[y("保存")])),_:1},8,["loading"])])]),default:a(()=>[t(tt,{modelValue:_e.value,"onUpdate:modelValue":s[10]||(s[10]=_=>_e.value=_),type:"textarea",rows:18,spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON"},null,8,["modelValue"])]),_:1},8,["modelValue"]),t(st,{title:"简短描述模板设置",modelValue:z.value,"onUpdate:modelValue":s[14]||(s[14]=_=>z.value=_),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",sn,[e("div",an,[t(tt,{modelValue:B.value,"onUpdate:modelValue":s[13]||(s[13]=_=>B.value=_),placeholder:J.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",ln,[J.value?(f(),I(x,{key:0,onClick:it},{default:a(()=>s[69]||(s[69]=[y("取消")])),_:1})):A("",!0),t(x,{type:"primary",onClick:nt,disabled:!B.value.trim()},{default:a(()=>[y(L(J.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",on,[s[73]||(s[73]=e("h3",null,"已保存模板",-1)),S.value.length===0?(f(),I(mt,{key:0,description:"暂无保存的模板"})):A("",!0),(f(!0),w(Se,null,Be(S.value,(_,Pe)=>(f(),I(Ut,{key:Pe,class:"template-item"},{default:a(()=>[t(qt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",nn,L(_),1),e("div",rn,[t(x,{type:"primary",size:"small",onClick:at=>le(_)},{default:a(()=>s[70]||(s[70]=[y("使用")])),_:2},1032,["onClick"]),t(x,{type:"warning",size:"small",icon:o(St),onClick:at=>wt(_,Pe)},{default:a(()=>s[71]||(s[71]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(x,{type:"danger",size:"small",onClick:at=>m(_)},{default:a(()=>s[72]||(s[72]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(st,{title:"作用域模板设置",modelValue:W.value,"onUpdate:modelValue":s[16]||(s[16]=_=>W.value=_),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",cn,[e("div",un,[t(tt,{modelValue:ae.value,"onUpdate:modelValue":s[15]||(s[15]=_=>ae.value=_),placeholder:Y.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",dn,[Y.value?(f(),I(x,{key:0,onClick:l},{default:a(()=>s[74]||(s[74]=[y("取消")])),_:1})):A("",!0),t(x,{type:"primary",onClick:He,disabled:!ae.value.trim()},{default:a(()=>[y(L(Y.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",fn,[s[78]||(s[78]=e("h3",null,"已保存作用域",-1)),T.value.length===0?(f(),I(mt,{key:0,description:"暂无保存的作用域"})):A("",!0),(f(!0),w(Se,null,Be(T.value,(_,Pe)=>(f(),I(Ut,{key:Pe,class:"template-item"},{default:a(()=>[t(qt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",pn,L(_),1),e("div",vn,[t(x,{type:"primary",size:"small",onClick:at=>ue(_)},{default:a(()=>s[75]||(s[75]=[y("使用")])),_:2},1032,["onClick"]),t(x,{type:"warning",size:"small",icon:o(St),onClick:at=>i(_,Pe)},{default:a(()=>s[76]||(s[76]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(x,{type:"danger",size:"small",onClick:at=>$(_)},{default:a(()=>s[77]||(s[77]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),t(st,{title:"默认提交信息设置",modelValue:xe.value,"onUpdate:modelValue":s[18]||(s[18]=_=>xe.value=_),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:a(()=>[e("div",mn,[e("div",gn,[t(tt,{modelValue:G.value,"onUpdate:modelValue":s[17]||(s[17]=_=>G.value=_),placeholder:ge.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",hn,[ge.value?(f(),I(x,{key:0,onClick:Js},{default:a(()=>s[79]||(s[79]=[y("取消")])),_:1})):A("",!0),t(x,{type:"primary",onClick:Hs,disabled:!G.value.trim()},{default:a(()=>[y(L(ge.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),t(x,{type:"success",onClick:Ms,disabled:!G.value.trim()},{default:a(()=>s[80]||(s[80]=[y(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),e("div",yn,[e("div",_n,[s[84]||(s[84]=e("h3",null,"已保存模板",-1)),e("div",wn,[me.value.length===0?(f(),I(mt,{key:0,description:"暂无保存的模板"})):A("",!0),(f(!0),w(Se,null,Be(me.value,(_,Pe)=>(f(),I(Ut,{key:Pe,class:"template-item"},{default:a(()=>[t(qt,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",kn,L(_),1),e("div",$n,[t(x,{type:"primary",size:"small",onClick:at=>qs(_)},{default:a(()=>s[81]||(s[81]=[y("使用")])),_:2},1032,["onClick"]),t(x,{type:"warning",size:"small",icon:o(St),onClick:at=>Ns(_,Pe)},{default:a(()=>s[82]||(s[82]=[y("编辑")])),_:2},1032,["icon","onClick"]),t(x,{type:"danger",size:"small",onClick:at=>Ws(_)},{default:a(()=>s[83]||(s[83]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),e("div",bn,[s[92]||(s[92]=e("h3",null,"当前默认提交信息",-1)),O.value?(f(),I(Ut,{key:0,class:"default-message-card"},{default:a(()=>[e("div",Cn,L(O.value),1)]),_:1})):(f(),I(mt,{key:1,description:"尚未设置默认提交信息","image-size":100})),e("div",Sn,[s[90]||(s[90]=e("h4",null,"关于默认提交信息",-1)),s[91]||(s[91]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[s[87]||(s[87]=y("你可以通过点击左侧模板的")),t(vs,{size:"small",type:"primary"},{default:a(()=>s[85]||(s[85]=[y("使用")])),_:1}),s[88]||(s[88]=y("按钮先选择喜欢的模板，然后点击上方")),t(vs,{size:"small",type:"success"},{default:a(()=>s[86]||(s[86]=[y("设为默认提交信息")])),_:1}),s[89]||(s[89]=y("按钮保存。"))])])])])])]),_:1},8,["modelValue"]),t(st,{title:"合并分支",modelValue:we.value,"onUpdate:modelValue":s[26]||(s[26]=_=>we.value=_),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:a(()=>[e("div",Ln,[t(x,{onClick:s[25]||(s[25]=_=>we.value=!1)},{default:a(()=>s[99]||(s[99]=[y("取消")])),_:1}),t(x,{type:"primary",onClick:Ks,loading:o(d).isGitMerging,disabled:!ce.value,class:"merge-confirm-btn"},{default:a(()=>s[100]||(s[100]=[y(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:a(()=>[e("div",Tn,[e("p",xn,"选择要合并到当前分支 ("+L(o(d).currentBranch)+") 的分支:",1),t(ms,{"label-position":"top"},{default:a(()=>[t(ut,{label:"分支类型"},{default:a(()=>[t(na,{modelValue:vt.value,"onUpdate:modelValue":s[19]||(s[19]=_=>vt.value=_),size:"small"},{default:a(()=>[t(Yt,{label:"all"},{default:a(()=>s[93]||(s[93]=[y("所有分支")])),_:1}),t(Yt,{label:"local"},{default:a(()=>s[94]||(s[94]=[y("本地分支")])),_:1}),t(Yt,{label:"remote"},{default:a(()=>s[95]||(s[95]=[y("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t(ut,{label:"选择分支"},{default:a(()=>[t(ps,{modelValue:ce.value,"onUpdate:modelValue":s[20]||(s[20]=_=>ce.value=_),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:a(()=>[(f(!0),w(Se,null,Be(Xs.value,_=>(f(),I(fs,{key:_,label:_,value:_},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t(ut,{label:"合并选项"},{default:a(()=>[e("div",Vn,[t(Ct,{modelValue:V.value.noFf,"onUpdate:modelValue":s[21]||(s[21]=_=>V.value.noFf=_)},{default:a(()=>[t(Te,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:a(()=>s[96]||(s[96]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Ct,{modelValue:V.value.squash,"onUpdate:modelValue":s[22]||(s[22]=_=>V.value.squash=_)},{default:a(()=>[t(Te,{content:"将多个提交压缩为一个提交",placement:"top"},{default:a(()=>s[97]||(s[97]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t(Ct,{modelValue:V.value.noCommit,"onUpdate:modelValue":s[23]||(s[23]=_=>V.value.noCommit=_)},{default:a(()=>[t(Te,{content:"执行合并但不自动创建提交",placement:"top"},{default:a(()=>s[98]||(s[98]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),V.value.noFf&&!V.value.noCommit?(f(),I(ut,{key:0,label:"合并提交信息 (可选)"},{default:a(()=>[t(tt,{modelValue:V.value.message,"onUpdate:modelValue":s[24]||(s[24]=_=>V.value.message=_),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):A("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(st,{title:"储藏列表 (Git Stash)",modelValue:P.value,"onUpdate:modelValue":s[27]||(s[27]=_=>P.value=_),width:"600px","close-on-click-modal":!1},{default:a(()=>[e("div",zn,[Ee((f(),I(ia,{data:o(d).stashes,stripe:"",style:{width:"100%"},"empty-text":"暂无储藏记录"},{default:a(()=>[t(Xt,{prop:"id",label:"ID",width:"100"}),t(Xt,{prop:"description",label:"描述"}),t(Xt,{label:"操作",width:"280"},{default:a(_=>[t(x,{size:"small",type:"info",onClick:Pe=>ze(_.row),loading:Re.value},{default:a(()=>s[101]||(s[101]=[y(" 查看 ")])),_:2},1032,["onClick","loading"]),t(x,{size:"small",onClick:Pe=>q(_.row.id,!1),loading:o(d).isApplyingStash},{default:a(()=>s[102]||(s[102]=[y(" 应用 ")])),_:2},1032,["onClick","loading"]),t(x,{size:"small",type:"primary",onClick:Pe=>q(_.row.id,!0),loading:o(d).isApplyingStash},{default:a(()=>s[103]||(s[103]=[y(" 应用并删除 ")])),_:2},1032,["onClick","loading"]),t(x,{size:"small",type:"danger",onClick:Pe=>H(_.row.id),loading:o(d).isDroppingStash},{default:a(()=>s[104]||(s[104]=[y(" 删除 ")])),_:2},1032,["onClick","loading"])]),_:1})]),_:1},8,["data"])),[[Kt,o(d).isLoadingStashes]]),o(d).stashes.length>0?(f(),w("div",Bn,[t(x,{type:"danger",onClick:Ve,loading:o(d).isDroppingStash},{default:a(()=>s[105]||(s[105]=[y(" 清空所有储藏 ")])),_:1},8,["loading"])])):A("",!0)])]),_:1},8,["modelValue"]),t(st,{title:"储藏更改 (Git Stash)",modelValue:D.value,"onUpdate:modelValue":s[32]||(s[32]=_=>D.value=_),width:"500px","close-on-click-modal":!1},{footer:a(()=>[e("div",Fn,[t(x,{onClick:s[31]||(s[31]=_=>D.value=!1)},{default:a(()=>s[109]||(s[109]=[y("取消")])),_:1}),t(x,{type:"primary",onClick:c,loading:o(d).isSavingStash},{default:a(()=>s[110]||(s[110]=[y(" 储藏 ")])),_:1},8,["loading"])])]),default:a(()=>[e("div",Dn,[s[108]||(s[108]=e("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),t(ms,{"label-position":"top"},{default:a(()=>[t(ut,{label:"储藏说明 (可选)"},{default:a(()=>[t(tt,{modelValue:te.value,"onUpdate:modelValue":s[28]||(s[28]=_=>te.value=_),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),t(ut,null,{default:a(()=>[t(Ct,{modelValue:De.value,"onUpdate:modelValue":s[29]||(s[29]=_=>De.value=_)},{default:a(()=>s[106]||(s[106]=[y(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1}),t(ut,null,{default:a(()=>[t(Ct,{modelValue:Ge.value,"onUpdate:modelValue":s[30]||(s[30]=_=>Ge.value=_)},{default:a(()=>s[107]||(s[107]=[y(" 排除锁定文件 ")])),_:1},8,["modelValue"])]),_:1})]),_:1})])]),_:1},8,["modelValue"]),t(st,{title:"储藏详情",modelValue:je.value,"onUpdate:modelValue":s[34]||(s[34]=_=>je.value=_),width:"90%",top:"5vh","close-on-click-modal":!1,class:"stash-detail-dialog"},{footer:a(()=>[e("div",Yn,[t(x,{onClick:s[33]||(s[33]=_=>je.value=!1)},{default:a(()=>s[112]||(s[112]=[y("关闭")])),_:1})])]),default:a(()=>[be.value?(f(),w("div",Rn,[e("div",Gn,[e("div",jn,[e("h3",null,L(be.value.id),1),e("p",An,L(be.value.description),1)])]),e("div",Un,[e("div",On,[e("div",En,[e("h4",null,"变更文件 ("+L(g.value.length)+")",1)]),Ee((f(),w("div",Mn,[t(gs,{height:"400px"},{default:a(()=>[(f(!0),w(Se,null,Be(g.value,_=>(f(),I(Te,{key:_,content:_,placement:"right",effect:"dark",disabled:_.length<=35},{default:a(()=>[e("div",{class:he(["file-item",{active:_===Oe.value}]),onClick:Pe=>de(be.value.id,_)},[t(se,{class:"file-icon"},{default:a(()=>[t(ra)]),_:1}),e("span",Hn,L(_),1)],10,Pn)]),_:2},1032,["content","disabled"]))),128)),!Re.value&&g.value.length===0?(f(),I(mt,{key:0,description:"没有找到变更文件","image-size":80})):A("",!0)]),_:1})])),[[Kt,Re.value&&g.value.length===0]])]),e("div",In,[e("div",Nn,[s[111]||(s[111]=e("h4",null,"文件差异",-1)),Oe.value?(f(),w("span",Jn,L(Oe.value),1)):A("",!0)]),Ee((f(),w("div",Wn,[t(gs,{height:"400px"},{default:a(()=>[oe.value?(f(),w("div",{key:0,class:"diff-text",innerHTML:Ce(oe.value)},null,8,qn)):Re.value?A("",!0):(f(),I(mt,{key:1,description:"请选择文件查看差异","image-size":80}))]),_:1})])),[[Kt,Re.value]])])])])):A("",!0)]),_:1},8,["modelValue"])])],2)}}}),Kn=Rt(Xn,[["__scopeId","data-v-a4f01d6c"]]),Zn={class:"log-header"},Qn={class:"log-actions"},ei={key:0,class:"filter-panel-header"},ti={class:"filter-form"},si={class:"filter-item"},ai={class:"filter-item"},li={class:"filter-item"},oi={class:"filter-item"},ni={class:"filter-actions"},ii={key:0},ri={key:1,class:"content-area-content"},ci={key:0,class:"graph-view"},ui={key:0,class:"commit-count"},di={class:"graph-controls"},fi={class:"zoom-controls"},pi={class:"scale-info"},vi={key:1,class:"table-view-container"},mi=["onClick"],gi={class:"commit-message-cell"},hi={class:"message-content"},yi={key:0,class:"branch-container"},_i={class:"message-text"},wi={class:"author-name"};const ki={class:"commit-detail-container"},$i={key:0,class:"commit-info"},bi={class:"commit-info-header"},Ci={class:"info-item"},Si={class:"item-value"},Ti={class:"info-item"},xi={class:"item-value"},Vi={class:"info-item"},Li={class:"item-value"},zi={class:"commit-message-container"},Bi=["innerHTML"],Di={class:"commit-files-diff"},Fi={class:"files-list"},Ri={key:1},Gi=["onClick"],ji={class:"file-diff"},Ai={key:0},Ui={key:1},Oi=["innerHTML"],Tt=.5,Et=1.5,ts=.1,Ei=zt({__name:"LogList",setup(ye,{expose:d}){const k=yt();let p=[];const h=u(p),E=u(""),R=u(!1),O=Fe(()=>k.isLoadingLog||R.value),M=u(!1),ve=u(0),U=u(!1),Z=u(null),Q=u(1),ie=u(!0),re=u(!1),_e=u(null),pe=u(!1),S=u(null),z=u([]),B=u(""),J=u(!1),F=u(""),N=u(1),we=u(!1),ce=u(!1),V=u([]),T=u(""),W=u(null),ae=u([]),Y=u([]),ne=u([]),ee=u(!1),xe=u(0),G=u(0),b=u(null),v=Fe(()=>h.value);async function X(i=!1,l=1){if(!yt().isGitRepo){E.value="当前目录不是Git仓库";return}try{l>1?re.value=!0:R.value=!0;const $=new URLSearchParams;$.append("page",l.toString()),$.append("all",i.toString()),$.append("with_parents","true"),V.value.length>0&&$.append("author",V.value.join(",")),Y.value.length>0&&$.append("branch",Y.value.join(",")),T.value&&$.append("message",T.value),W.value&&Array.isArray(W.value)&&W.value.length===2&&($.append("dateFrom",W.value[0]),$.append("dateTo",W.value[1])),$.append("_t",Date.now().toString());const ue=await(await fetch(`/api/log?${$.toString()}`)).json();if(!ue||!ue.data||!Array.isArray(ue.data)){E.value="加载提交历史失败: 服务器返回数据格式不正确";return}const Le=l>1;Le?ue.data.forEach(j=>p.push(j)):(p.length=0,ue.data.forEach(j=>p.push(j))),h.value=[...p],Q.value=l,ve.value=ue.total||p.length,ie.value=ue.hasMore===!0,Le||(we.value=!0,setTimeout(()=>{we.value=!1},2e3)),!Le&&U.value?setTimeout(D,0):!Le&&!U.value&&!i&&dt(()=>{oe(),setTimeout(it,200)}),E.value=""}catch($){E.value="加载提交历史失败: "+($ instanceof Error?$.message:String($)),l>1&&(ie.value=!1)}finally{l>1?re.value=!1:R.value=!1}}async function D(){if(Z.value&&p.length!==0)try{Z.value.innerHTML="";const i=Ra(Z.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),l={},m=i.branch(k.currentBranch||"main");l[k.currentBranch||"main"]=m,p.forEach($=>{let le=m;if($.branch){const ue=De($.branch.split(",")[0]);l[ue]||(l[ue]=i.branch(ue)),le=l[ue]}le.commit({hash:$.hash,subject:$.message,author:`${$.author} <${$.email}>`})}),setTimeout(()=>{c()},100)}catch(i){E.value="渲染图表失败: "+(i instanceof Error?i.message:String(i))}}function P(){U.value=!U.value,U.value&&p.length>0&&setTimeout(D,0)}function te(){M.value=!M.value,M.value||(ie.value=!0),Q.value=1,X(M.value),dt(()=>{setTimeout(()=>{!U.value&&!M.value&&(oe(),it())},300)})}function De(i){return i.includes("HEAD -> ")?i.replace("HEAD -> ",""):i.includes("origin/")?i:i.trim()}function Ge(i){return i.includes("HEAD")?"success":i.includes("origin/")?"warning":"info"}const je=u(null),be=u(null);function g(i){if(U.value||!ie.value||re.value||O.value)return;const l=i.target,{scrollTop:m,scrollHeight:$,clientHeight:le}=l;$-m-le<=20&&me()}function oe(){if(!je.value)return;const i=je.value.$el.querySelector(".el-table__body-wrapper");i&&(be.value=i,be.value&&(be.value.removeEventListener("scroll",g,!0),be.value.addEventListener("scroll",g,!0)))}function Re(){be.value&&(be.value.removeEventListener("scroll",g,!0),be.value=null)}function Oe(i){i.key==="Escape"&&He.value&&(He.value=!1)}_t(()=>{k.isGitRepo?(k.log.length>0?(p.length=0,k.log.forEach(i=>p.push(i)),ve.value=k.log.length,U.value&&setTimeout(()=>{D()},100)):X(),We()):E.value="当前目录不是Git仓库",dt(()=>{setTimeout(()=>{oe()},500)}),Ke(()=>je.value,i=>{i&&!U.value&&!M.value&&dt(()=>{oe()})}),window.addEventListener("keydown",Oe)}),Ke(()=>k.allBranches,i=>{i&&i.length>0?ne.value=[...i].sort():ne.value=[]},{immediate:!0}),ba(()=>{Re(),_e.value!==null&&(window.clearInterval(_e.value),_e.value=null),window.removeEventListener("keydown",Oe)});async function Ne(){await k.fetchLog(!0),p.length=0,k.log.forEach(i=>p.push(i)),h.value=[...p],ve.value=k.log.length,Q.value=1,ie.value=!1,we.value=!0,setTimeout(()=>{we.value=!1},2e3),U.value&&(await dt(),D())}Ke(()=>k.log,i=>{try{p.length=0,Array.isArray(i)&&i.forEach(l=>l&&p.push(l)),ve.value=p.length,Q.value=1,h.value=[...p],we.value=!0,setTimeout(()=>{we.value=!1},2e3),U.value&&p.length>0&&setTimeout(D,0)}catch{}},{immediate:!0}),d({refreshLog:Ne});function Xe(){N.value<Et&&(N.value=Math.min(Et,N.value+ts),C())}function Je(){N.value>Tt&&(N.value=Math.max(Tt,N.value-ts),C())}function C(){if(!Z.value)return;const i=Z.value.querySelector("svg");i&&(i.style.transform=`scale(${N.value})`,i.style.transformOrigin="top left")}function c(){if(!Z.value)return;const i=Z.value.querySelector("svg");if(!i)return;const l=i.getBoundingClientRect().width/N.value,m=Z.value.clientWidth;l>m?N.value=Math.max(Tt,m/l):N.value=1,C()}async function q(i){if(i){S.value=i,pe.value=!0,J.value=!0,z.value=[],B.value="",F.value="";try{if(!i.hash||i.hash.length<7){B.value="无效的提交哈希值",J.value=!1;return}const m=await(await fetch(`/api/commit-files?hash=${i.hash}`)).json();m.success&&Array.isArray(m.files)?(z.value=m.files,z.value.length>0?await H(i.hash,z.value[0]):B.value="该提交没有变更文件"):B.value=`获取文件列表失败: ${m.error||"未知错误"}`}catch(l){B.value=`获取提交详情失败: ${l.message}`}finally{J.value=!1}}}async function H(i,l){J.value=!0,F.value=l;try{const $=await(await fetch(`/api/commit-file-diff?hash=${i}&file=${encodeURIComponent(l)}`)).json();$.success?B.value=$.diff||"没有变更内容":B.value=`获取差异失败: ${$.error||"未知错误"}`}catch(m){B.value=`获取差异失败: ${m.message}`}finally{J.value=!1}}function Ve(i){if(!i)return"";const l=i.split(`
`);function m($){return $.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}return l.map($=>{const le=m($);return $.startsWith("diff --git")?`<div class="diff-header">${le}</div>`:$.startsWith("---")?`<div class="diff-old-file">${le}</div>`:$.startsWith("+++")?`<div class="diff-new-file">${le}</div>`:$.startsWith("@@")?`<div class="diff-hunk-header">${le}</div>`:$.startsWith("+")?`<div class="diff-added">${le}</div>`:$.startsWith("-")?`<div class="diff-removed">${le}</div>`:`<div class="diff-context">${le}</div>`}).join("")}function ze(i){return i?i.trim():"(无提交信息)"}function de(i){if(!i)return"";const l=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,m=i.match(l);return m?m[3].trim():i.trim()}async function Ce(i){try{const l=de(i);await navigator.clipboard.writeText(l),n.success("提交信息已复制到剪贴板")}catch{n.error("复制失败")}}function me(){!ie.value||re.value||O.value||X(M.value,Q.value+1)}function ge(){V.value=[],Y.value=[],T.value="",W.value=null,Q.value=1,X(M.value,1)}function $e(){Q.value=1,X(M.value,1)}async function We(){try{const l=await(await fetch("/api/authors")).json();l.success&&Array.isArray(l.authors)?ae.value=l.authors.sort():ke()}catch{ke()}}function ke(){const i=new Set;h.value.forEach(l=>{l.author&&i.add(l.author)}),ae.value=Array.from(i).sort()}Ke(()=>h.value,()=>{},{deep:!0});function K(i,l,m){m.preventDefault(),xe.value=m.clientY,G.value=m.clientX,b.value=i,ee.value=!0;const $=()=>{ee.value=!1,document.removeEventListener("click",$)};setTimeout(()=>{document.addEventListener("click",$)},0)}async function ot(i){if(i)try{await Me.confirm(`确定要撤销提交 ${i.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const m=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:i.hash})})).json();m.success?(n.success(m.message||"已成功撤销提交"),Ne(),k.fetchStatus(),k.getBranchStatus()):n.error(m.error||"撤销提交失败")}catch(l){l!=="cancel"&&n.error("撤销提交失败: "+(l.message||l))}}async function nt(i){if(i)try{await Me.confirm(`确定要将提交 ${i.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const m=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:i.hash})})).json();m.success?(n.success(m.message||"已成功Cherry-Pick提交"),Ne(),k.fetchStatus(),k.getBranchStatus()):n.error(m.error||"Cherry-Pick提交失败")}catch(l){l!=="cancel"&&n.error("Cherry-Pick提交失败: "+(l.message||l))}}async function Ze(i){if(i)try{await navigator.clipboard.writeText(i.hash),n.success(`已复制提交哈希: ${i.hash.substring(0,7)}`)}catch(l){n.error(`复制提交哈希失败: ${l.message}`)}}async function wt(i){if(i)try{await Me.confirm(`确定要将当前分支重置(hard)到提交 ${i.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const m=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:i.hash})})).json();m.success?(n.success(m.message||"已成功重置到指定提交"),Ne(),k.fetchStatus(),k.getBranchStatus()):n.error(m.error||"重置到指定提交失败")}catch(l){l!=="cancel"&&n.error("重置到指定提交失败: "+(l.message||l))}}function it(){if(U.value||!ie.value||re.value||O.value||M.value)return;if(!be.value){oe();return}const{scrollTop:i,scrollHeight:l,clientHeight:m}=be.value;l-i-m<=50&&me()}Ke(()=>U.value,i=>{!i&&!M.value&&dt(()=>{oe(),setTimeout(it,200)})});const He=u(!1);function kt(){He.value=!He.value,dt(()=>{U.value&&Z.value&&D()})}return(i,l)=>{var Le;const m=Bt,$=as,le=rs,ue=ls;return f(),w(Se,null,[e("div",{class:he(["card",{"fullscreen-mode":He.value}])},[e("div",Zn,[l[13]||(l[13]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",Qn,[U.value?A("",!0):(f(),I(o(Ue),{key:0,type:ce.value?"primary":"default",size:"small",onClick:l[0]||(l[0]=j=>ce.value=!ce.value),class:he(["action-button filter-button icon-only-button",{"active-filter":ce.value}])},{icon:a(()=>[t(m,null,{default:a(()=>[t(o(Ca))]),_:1})]),_:1},8,["type","class"])),t(o(Ue),{type:"primary",size:"small",onClick:P,class:he(["action-button view-mode-button icon-only-button",{"active-view":U.value}])},{icon:a(()=>[t(m,null,{default:a(()=>[(f(),I(ht(U.value?o(Ls):o(Sa))))]),_:1})]),_:1},8,["class"]),Ee(t(o(Ue),{type:"success",size:"small",onClick:te,loading:O.value,class:he(["action-button commit-display-button",{"active-commits":M.value}])},{icon:a(()=>[t(m,null,{default:a(()=>[(f(),I(ht(M.value?o(Ta):o(xa))))]),_:1})]),default:a(()=>[y(" "+L(M.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[ft,!1]]),t(o(Ue),{type:"info",size:"small",onClick:kt,class:he(["action-button fullscreen-button icon-only-button",{"active-fullscreen":He.value}])},{icon:a(()=>[t(m,null,{default:a(()=>[(f(),I(ht(He.value?o(ss):o(Va))))]),_:1})]),_:1},8,["class"]),t(o(Ue),{circle:"",size:"small",onClick:l[1]||(l[1]=j=>Ne()),class:he([{"refresh-button-animated":we.value},"action-button refresh-button"])},{default:a(()=>[O.value?(f(),I(m,{key:1},{default:a(()=>[t(o(La))]),_:1})):(f(),I(m,{key:0},{default:a(()=>[t(o(os))]),_:1}))]),_:1},8,["class"])])]),ce.value&&!U.value?(f(),w("div",ei,[e("div",ti,[e("div",si,[t(o(Pt),{modelValue:V.value,"onUpdate:modelValue":l[2]||(l[2]=j=>V.value=j),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[14]||(l[14]=[e("span",{class:"compact-label"},"作者",-1)])),default:a(()=>[(f(!0),w(Se,null,Be(ae.value,j=>(f(),I(o(Mt),{key:j,label:j,value:j},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",ai,[t(o(Pt),{modelValue:Y.value,"onUpdate:modelValue":l[3]||(l[3]=j=>Y.value=j),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[15]||(l[15]=[e("span",{class:"compact-label"},"分支",-1)])),default:a(()=>[(f(!0),w(Se,null,Be(ne.value,j=>(f(),I(o(Mt),{key:j,label:j,value:j},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",li,[t(o(is),{modelValue:T.value,"onUpdate:modelValue":l[4]||(l[4]=j=>T.value=j),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:a(()=>l[16]||(l[16]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",oi,[t(o(za),{modelValue:W.value,"onUpdate:modelValue":l[5]||(l[5]=j=>W.value=j),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:a(()=>l[17]||(l[17]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",ni,[t(o(Ue),{type:"primary",size:"small",onClick:$e,class:"filter-action-button"},{default:a(()=>l[18]||(l[18]=[y("应用")])),_:1}),t(o(Ue),{type:"info",size:"small",onClick:ge,class:"filter-action-button"},{default:a(()=>l[19]||(l[19]=[y("重置")])),_:1})])])])):A("",!0),e("div",{class:he(["content-area",{"with-filter":ce.value&&!U.value}])},[E.value?(f(),w("div",ii,L(E.value),1)):(f(),w("div",ri,[U.value?(f(),w("div",ci,[o(p).length>0?(f(),w("div",ui," 显示 "+L(o(p).length)+" 条提交记录 "+L(M.value?"(全部)":"(分页加载，每页20条)"),1)):A("",!0),e("div",di,[e("div",fi,[t(o(Ue),{type:"primary",circle:"",size:"small",onClick:Je,disabled:N.value<=Tt},{default:a(()=>[t(m,null,{default:a(()=>[t(o(Ba))]),_:1})]),_:1},8,["disabled"]),t(o(Da),{modelValue:N.value,"onUpdate:modelValue":l[6]||(l[6]=j=>N.value=j),min:Tt,max:Et,step:ts,onChange:C,class:"zoom-slider"},null,8,["modelValue"]),t(o(Ue),{type:"primary",circle:"",size:"small",onClick:Xe,disabled:N.value>=Et},{default:a(()=>[t(m,null,{default:a(()=>[t(o(Fa))]),_:1})]),_:1},8,["disabled"]),t(o(Ue),{type:"primary",size:"small",onClick:c},{default:a(()=>l[20]||(l[20]=[y(" 自适应大小 ")])),_:1})]),e("div",pi," 缩放: "+L(Math.round(N.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:Z,class:"graph-container"},null,512)])):(f(),w("div",vi,[Ee((f(),I(o(Rs),{ref_key:"tableRef",ref:je,data:v.value,stripe:"",border:"",class:"log-table","empty-text":O.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:K},{default:a(()=>[t(o(Vt),{label:"哈希",width:"80",resizable:""},{default:a(j=>[e("span",{class:"commit-hash",onClick:Ie=>q(j.row)},L(j.row.hash.substring(0,6)),9,mi)]),_:1}),t(o(Vt),{label:"提交信息","min-width":"300"},{default:a(j=>[e("div",gi,[e("div",hi,[j.row.branch?(f(),w("div",yi,[(f(!0),w(Se,null,Be(j.row.branch.split(","),(Ie,$t)=>(f(),I(o(Dt),{key:$t,size:"small",type:Ge(Ie),class:"branch-tag"},{default:a(()=>[y(L(De(Ie)),1)]),_:2},1032,["type"]))),128))])):A("",!0),e("span",_i,L(j.row.message),1),t(o(Ue),{type:"text",icon:o(Lt),size:"small",onClick:Ye(Ie=>Ce(j.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(o(Vt),{prop:"date",label:"日期",width:"150",resizable:""}),t(o(Vt),{label:"作者",width:"100",resizable:""},{default:a(j=>[t($,{content:j.row.email,placement:"top","hide-after":1e3},{default:a(()=>[e("span",wi,L(j.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[ue,O.value]]),(M.value,A("",!0))]))]))],2),t(o(Ft),{modelValue:pe.value,"onUpdate:modelValue":l[7]||(l[7]=j=>pe.value=j),title:`提交详情: ${(Le=S.value)!=null&&Le.hash?S.value.hash.substring(0,7):"未知"}`,width:"80%","destroy-on-close":"",class:"commit-detail-dialog"},{default:a(()=>[Ee((f(),w("div",ki,[S.value?(f(),w("div",$i,[e("div",bi,[e("div",Ci,[l[24]||(l[24]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Si,L(S.value.hash),1)]),e("div",Ti,[l[25]||(l[25]=e("span",{class:"item-label"},"作者:",-1)),e("span",xi,L(S.value.author)+" <"+L(S.value.email)+">",1)]),e("div",Vi,[l[26]||(l[26]=e("span",{class:"item-label"},"日期:",-1)),e("span",Li,L(S.value.date),1)])]),e("div",zi,[l[27]||(l[27]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:ze(S.value.message).replace(/\n/g,"<br>")},null,8,Bi)])])):A("",!0),e("div",Di,[e("div",Fi,[l[28]||(l[28]=e("h3",null,"变更文件",-1)),z.value.length===0?(f(),I(le,{key:0,description:"没有找到变更文件"})):(f(),w("ul",Ri,[(f(!0),w(Se,null,Be(z.value,j=>(f(),w("li",{key:j,class:he({"active-file":j===F.value}),onClick:Ie=>H(S.value.hash,j)},[t($,{content:j,placement:"top",disabled:j.length<=35,"hide-after":1e3},{default:a(()=>[y(L(j),1)]),_:2},1032,["content","disabled"])],10,Gi))),128))]))]),e("div",ji,[F.value?(f(),w("h3",Ai," 文件差异: "+L(F.value),1)):(f(),w("h3",Ui,"文件差异")),!B.value&&!J.value?(f(),I(le,{key:2,description:"选择文件查看差异"})):B.value?(f(),w("div",{key:3,innerHTML:Ve(B.value),class:"diff-content"},null,8,Oi)):A("",!0)])])])),[[ue,J.value]])]),_:1},8,["modelValue","title"])],2),Ee(e("div",{class:he(["context-menu",{"fullscreen-context-menu":He.value}]),style:xt({top:xe.value+"px",left:G.value+"px"})},[e("div",{class:"context-menu-item",onClick:l[8]||(l[8]=j=>q(b.value))},l[29]||(l[29]=[e("i",{class:"el-icon-view"},null,-1),y(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:l[9]||(l[9]=j=>Ze(b.value))},l[30]||(l[30]=[e("i",{class:"el-icon-document-copy"},null,-1),y(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:l[10]||(l[10]=j=>wt(b.value))},l[31]||(l[31]=[e("i",{class:"el-icon-refresh-right"},null,-1),y(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:l[11]||(l[11]=j=>ot(b.value))},l[32]||(l[32]=[e("i",{class:"el-icon-delete"},null,-1),y(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:l[12]||(l[12]=j=>nt(b.value))},l[33]||(l[33]=[e("i",{class:"el-icon-edit"},null,-1),y(" Cherry-Pick 到当前分支 ")]))],6),[[ft,ee.value]])],64)}}}),Mi=Rt(Ei,[["__scopeId","data-v-99dfdbfc"]]),Pi={class:"dialog-header"},Hi={class:"header-actions"},Ii={class:"dialog-content"},Ni={key:0,class:"loading-state"},Ji={key:2,class:"history-list"},Wi=["onClick"],qi={class:"command-info"},Yi={class:"command-text"},Xi={class:"command-meta"},Ki={class:"timestamp"},Zi={class:"duration"},Qi={class:"item-actions"},er={key:0,class:"item-details"},tr={key:0,class:"output-section"},sr={class:"output-header"},ar={class:"output-content"},lr={key:0,class:"truncation-notice"},or={class:"output-header"},nr={class:"output-content"},ir={key:0,class:"truncation-notice"},rr={key:2,class:"output-section error"},cr={class:"output-content"},ur=zt({__name:"CommandHistory",setup(ye){const d=yt(),k=u([]),p=u(!1),h=u(!1),E=u(!1),R=u(!1),O=u(new Set),M=u(!1),ve=u(!1);function U(){ve.value=!0,k.value.length===0&&Z()}async function Z(){try{if(p.value=!0,d.socket&&d.socket.connected)d.socket.emit("request_full_history");else{const T=await(await fetch("/api/command-history")).json();T.success?k.value=T.history:n.error(`加载命令历史失败: ${T.error}`)}}catch(V){n.error(`加载命令历史失败: ${V.message}`)}finally{p.value=!1}}async function Q(){if(k.value.length===0){n.warning("没有可复制的命令历史");return}try{E.value=!0;const V=k.value.map(T=>{let W=`# ${_e(T.timestamp)} (耗时: ${pe(T.executionTime)}) - ${T.success?"成功":"失败"}
`;if(W+=`${T.command}
`,T.stdout&&(W+=`
# 输出:
${T.stdout}
`),T.stderr){const ae=F(T.command)?"输出信息":"错误输出";W+=`
# ${ae}:
${T.stderr}
`}return T.error&&(W+=`
# 错误信息:
${T.error}
`),W}).join(`
---

`);await navigator.clipboard.writeText(V),n.success("命令历史已复制到剪贴板")}catch(V){n.error(`复制失败: ${V.message}`)}finally{E.value=!1}}async function ie(){if(k.value.length===0){n.warning("没有可复制的命令");return}try{M.value=!0;const V=k.value.map(T=>T.command).join(`
`);await navigator.clipboard.writeText(V),n.success("命令列表已复制到剪贴板")}catch(V){n.error(`复制失败: ${V.message}`)}finally{M.value=!1}}async function re(){try{if(await Me.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),h.value=!0,d.socket&&d.socket.connected)d.socket.emit("clear_command_history");else{const T=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();T.success?(k.value=[],n.success("命令历史已清空")):n.error(`清空命令历史失败: ${T.error}`)}}catch(V){V!=="cancel"&&V.toString()!=="Error: cancel"&&n.error(`清空命令历史失败: ${V.message}`)}finally{h.value=!1}}function _e(V){return new Date(V).toLocaleString()}function pe(V){return V<1e3?`${V}ms`:`${(V/1e3).toFixed(2)}s`}function S(V){O.value.has(V)?O.value.delete(V):O.value.add(V)}function z(V){return O.value.has(V)}async function B(V){try{await navigator.clipboard.writeText(V),n.success("命令已复制到剪贴板")}catch(T){n.error(`复制失败: ${T.message}`)}}function J(V){return V.includes("git push")||V.includes("git-push")}function F(V){return!!J(V)}async function N(V){try{let T="";if(V.stdout&&(T+=`标准输出:
${V.stdout}

`),V.stderr){const W=F(V.command)?"输出信息":"错误输出";T+=`${W}:
${V.stderr}

`}V.error&&(T+=`错误信息:
${V.error}`),await navigator.clipboard.writeText(T.trim()),n.success("输出已复制到剪贴板")}catch(T){n.error(`复制失败: ${T.message}`)}}function we(){if(!d.socket){console.error("Socket实例不可用");return}d.socket.on("initial_command_history",V=>{k.value=V.history,R.value=!0}),d.socket.on("command_history_update",V=>{k.value.unshift(V.newCommand),k.value.length>100&&k.value.pop(),R.value=!0}),d.socket.on("full_command_history",V=>{k.value=V.history,p.value=!1,R.value=!0}),d.socket.on("command_history_cleared",V=>{V.success&&(k.value=[],n.success("命令历史已清空")),h.value=!1}),d.socket.on("connect",()=>{R.value=!0,n.success("已连接到实时命令历史")}),d.socket.on("disconnect",()=>{R.value=!1,n.warning("实时命令历史连接已断开")})}function ce(){d.socket&&(d.socket.off("initial_command_history"),d.socket.off("command_history_update"),d.socket.off("full_command_history"),d.socket.off("command_history_cleared"))}return _t(()=>{we(),d.socket||(console.log("尝试初始化Socket连接"),d.initSocketConnection())}),bs(()=>{ce()}),(V,T)=>{const W=Ue,ae=Dt,Y=Bt,ne=rs,ee=ns,xe=Ft;return f(),w(Se,null,[t(W,{type:"primary",icon:o(Ga),onClick:U,class:"command-history-button",title:"查看Git命令历史"},{default:a(()=>T[1]||(T[1]=[y(" 命令历史 ")])),_:1},8,["icon"]),(f(),I(ja,{to:"body"},[t(xe,{modelValue:ve.value,"onUpdate:modelValue":T[0]||(T[0]=G=>ve.value=G),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"",class:"command-history-dialog","z-index":99999,"append-to-body":"",modal:""},{header:a(()=>[e("div",Pi,[T[2]||(T[2]=e("h2",null,"Git 命令历史",-1)),e("div",Hi,[t(ae,{type:R.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:a(()=>[y(L(R.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(W,{type:"success",icon:o(Lt),circle:"",size:"small",onClick:ie,loading:M.value,class:"copy-commands-button",title:"只复制命令列表（不含输出）",disabled:k.value.length===0},null,8,["icon","loading","disabled"]),t(W,{type:"primary",icon:o(Lt),circle:"",size:"small",onClick:Q,loading:E.value,class:"copy-all-button",title:"复制完整命令历史（含输出）",disabled:k.value.length===0},null,8,["icon","loading","disabled"]),t(W,{type:"danger",icon:o(zs),circle:"",size:"small",onClick:re,loading:h.value,class:"clear-button",title:"清空命令历史",disabled:k.value.length===0},null,8,["icon","loading","disabled"])])])]),default:a(()=>[e("div",Ii,[p.value&&k.value.length===0?(f(),w("div",Ni,[t(Y,{class:"loading-icon is-loading"},{default:a(()=>T[3]||(T[3]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),T[4]||(T[4]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):k.value.length===0?(f(),I(ne,{key:1,description:"暂无命令历史"})):(f(),w("div",Ji,[(f(!0),w(Se,null,Be(k.value,(G,b)=>(f(),w("div",{key:b,class:he(["history-item",{"is-error":!G.success}])},[e("div",{class:"item-header",onClick:v=>S(b)},[e("div",qi,[e("div",Yi,[t(ae,{size:"small",type:G.success?"success":"danger",effect:"dark",class:"status-tag"},{default:a(()=>[y(L(G.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,L(G.command),1)]),e("div",Xi,[e("span",Ki,L(_e(G.timestamp)),1),e("span",Zi,"耗时: "+L(pe(G.executionTime)),1)])]),e("div",Qi,[t(W,{type:"primary",icon:o(Lt),circle:"",size:"small",onClick:Ye(v=>B(G.command),["stop"]),title:"复制命令"},null,8,["icon","onClick"]),t(W,{type:z(b)?"primary":"default",icon:z(b)?o(Vs):o(gt),circle:"",size:"small",onClick:Ye(v=>S(b),["stop"]),title:"展开/收起"},null,8,["type","icon","onClick"])])],8,Wi),z(b)?(f(),w("div",er,[G.stdout?(f(),w("div",tr,[e("div",sr,[T[5]||(T[5]=e("h4",null,"标准输出",-1)),t(W,{type:"primary",icon:o(Lt),circle:"",size:"small",onClick:v=>N(G),title:"复制输出"},null,8,["icon","onClick"])]),e("pre",ar,L(G.stdout),1),G.isStdoutTruncated?(f(),w("div",lr,[t(ee,{type:"info",closable:!1,"show-icon":""},{default:a(()=>T[6]||(T[6]=[y(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):A("",!0)])):A("",!0),G.stderr?(f(),w("div",{key:1,class:he(["output-section",F(G.command)?"":"error"])},[e("div",or,[e("h4",null,L(F(G.command)?"输出信息":"错误输出"),1)]),e("pre",nr,L(G.stderr),1),G.isStderrTruncated?(f(),w("div",ir,[t(ee,{type:"info",closable:!1,"show-icon":""},{default:a(()=>[y(L(F(G.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):A("",!0)],2)):A("",!0),G.error?(f(),w("div",rr,[T[7]||(T[7]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",cr,L(G.error),1)])):A("",!0)])):A("",!0)],2))),128))]))])]),_:1},8,["modelValue"])]))],64)}}}),dr=Rt(ur,[["__scopeId","data-v-3e9f6472"]]),fr="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",pr={class:"main-header"},vr={class:"header-left"},mr=["src"],gr={class:"header-info"},hr={key:0,id:"user-info"},yr={class:"user-name"},_r={class:"user-email"},wr={key:1,id:"user-info"},kr={class:"directory-selector"},$r={class:"directory-display"},br={class:"directory-icon"},Cr=["title"],Sr={class:"directory-actions"},Tr={key:2,class:"command-history-section"},xr={class:"main-container"},Vr={key:0,class:"loading-container"},Lr={class:"loading-spinner"},zr={key:1,class:"grid-layout"},Br={class:"git-status-panel"},Dr={key:0,class:"commit-form-panel"},Fr={key:0,class:"card"},Rr={class:"tips"},Gr={key:1,class:"commit-form-panel"},jr={key:2,class:"log-list-panel"},Ar={class:"dialog-footer"},Ur={class:"main-footer"},Or={key:0,class:"branch-info"},Er={class:"branch-wrapper"},Mr={key:1,class:"footer-right"},Pr={class:"repo-url"},Hr={class:"dialog-footer"},Ir={class:"directory-input-group"},Nr={class:"recent-directories"},Jr={class:"dialog-footer"},Wr=zt({__name:"App",setup(ye){const d=u(""),k=u(null),p=u(null),h=yt(),E=cs(),R=u(!1),O=u("");function M(){E.config&&(d.value=`默认提交信息: ${E.config.defaultCommitMessage}`)}async function ve(){try{const c=await(await fetch("/api/current_directory")).json();return O.value=c.directory||"未知目录",c}catch(C){return console.error("获取当前目录失败:",C),{directory:"未知目录",isGitRepo:!1}}}_t(async()=>{console.log("---------- 页面初始化开始 ----------");try{const C=await ve();E.isLoaded||await E.loadConfig(),M(),h.isGitRepo=C.isGitRepo===!0,h.lastCheckedTime=Date.now(),h.isGitRepo?await Promise.all([h.getCurrentBranch(!0),h.getAllBranches(),h.getUserInfo(),h.getRemoteUrl(),h.getBranchStatus(!0)]):n.warning("当前目录不是Git仓库，部分功能将不可用")}catch(C){console.error("初始化失败:",C)}finally{R.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{ee()},100)}});const U=u(!1),Z=u(""),Q=u("");async function ie(){await h.createBranch(Z.value,Q.value)&&(U.value=!1,Z.value="",p.value&&p.value.refreshStatus(),k.value&&k.value.refreshLog())}function re(){Q.value=h.currentBranch,U.value=!0}async function _e(C){await h.changeBranch(C)&&(p.value&&p.value.refreshStatus(),k.value&&k.value.refreshLog())}const pe=u(!1),S=u(""),z=u("");function B(){S.value=h.userName,z.value=h.userEmail,pe.value=!0}async function J(){if(!S.value||!z.value){n.warning("用户名和邮箱不能为空");return}await h.restoreUserConfig(S.value,z.value)&&(pe.value=!1)}async function F(){await h.clearUserConfig()&&(S.value="",z.value="")}let N=!1,we=!1,ce=!1,V=0,T=0,W="",ae="",Y=null;function ne(){const C=document.querySelector(".grid-layout");if(!C)return;const c=getComputedStyle(C).gridTemplateColumns.split(" "),q=getComputedStyle(C).gridTemplateRows.split(" ");if(c.length>=3&&q.length>=3){const H=parseFloat(c[0]),Ve=parseFloat(c[2]),ze=H+Ve,de=H/ze,Ce=parseFloat(q[0]),me=parseFloat(q[2]),ge=Ce+me,$e=Ce/ge;localStorage.setItem("zen-gitsync-layout-left-ratio",de.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",$e.toString()),console.log(`布局比例已保存 - 左侧: ${(de*100).toFixed(0)}%, 上方: ${($e*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",de.toString()),console.log(`底部布局比例已保存 - 左侧: ${(de*100).toFixed(0)}%`)}}function ee(){const C=document.querySelector(".grid-layout");if(!C)return;const c=localStorage.getItem("zen-gitsync-layout-left-ratio"),q=localStorage.getItem("zen-gitsync-layout-top-ratio");if(c){const H=parseFloat(c),Ve=1-H;C.style.gridTemplateColumns=`${H}fr 8px ${Ve}fr`,console.log(`已恢复左侧比例: ${(H*100).toFixed(0)}%`)}else C.style.gridTemplateColumns="1fr 8px 3fr";if(q){const H=parseFloat(q),Ve=1-H;C.style.gridTemplateRows=`${H}fr 8px ${Ve}fr`,console.log(`已恢复上方比例: ${(H*100).toFixed(0)}%`)}}function xe(C){var H;const c=C.currentTarget;if(!c||!c.id)return;Y=c.id,Y==="v-resizer"?N=!0:Y==="v-resizer-bottom"&&(we=!0),V=C.clientX;const q=document.querySelector(".grid-layout");W=getComputedStyle(q).gridTemplateColumns,(H=document.getElementById(Y))==null||H.classList.add("active"),document.addEventListener("mousemove",G),document.addEventListener("mouseup",b),C.preventDefault()}function G(C){if(!N&&!we)return;const c=document.querySelector(".grid-layout"),q=C.clientX-V,H=W.split(" ");if(H.length>=3){const Ve=parseFloat(H[0]),ze=parseFloat(H[2]),de=Ve+ze,Ce=(Ve+q/c.clientWidth*de)/de,me=1-Ce,ge=.1,$e=.5;Ce<ge?c.style.gridTemplateColumns=`${ge}fr 8px ${1-ge}fr`:Ce>$e?c.style.gridTemplateColumns=`${$e}fr 8px ${1-$e}fr`:c.style.gridTemplateColumns=`${Ce}fr 8px ${me}fr`}}function b(){var C,c;N=!1,we=!1,(C=document.getElementById("v-resizer"))==null||C.classList.remove("active"),(c=document.getElementById("v-resizer-bottom"))==null||c.classList.remove("active"),document.removeEventListener("mousemove",G),document.removeEventListener("mouseup",b),ne()}function v(C){var q;ce=!0,T=C.clientY;const c=document.querySelector(".grid-layout");ae=getComputedStyle(c).gridTemplateRows,(q=document.getElementById("h-resizer"))==null||q.classList.add("active"),document.addEventListener("mousemove",X),document.addEventListener("mouseup",D),C.preventDefault()}function X(C){if(!ce)return;const c=document.querySelector(".grid-layout"),q=C.clientY-T,H=ae.split(" ");if(H.length>=3){const Ve=parseFloat(H[0]),ze=parseFloat(H[2]),de=Ve+ze,Ce=(Ve+q/c.clientHeight*de)/de,me=1-Ce,ge=.2,$e=.8;Ce<ge?c.style.gridTemplateRows=`${ge}fr 8px ${1-ge}fr`:Ce>$e?c.style.gridTemplateRows=`${$e}fr 8px ${1-$e}fr`:c.style.gridTemplateRows=`${Ce}fr 8px ${me}fr`}}function D(){var C;ce=!1,(C=document.getElementById("h-resizer"))==null||C.classList.remove("active"),document.removeEventListener("mousemove",X),document.removeEventListener("mouseup",D),ne()}const P=u(!1),te=u(""),De=u(!1),Ge=u([]);async function je(){if(!O.value){n.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(O.value),n.success("已复制目录路径")}catch(C){console.error("复制目录路径失败:",C),n.error(`复制失败: ${C.message}`)}}function be(){te.value=O.value,P.value=!0,g()}async function g(){try{const c=await(await fetch("/api/recent_directories")).json();c.success&&Array.isArray(c.directories)&&(Ge.value=c.directories)}catch(C){console.error("获取最近目录失败:",C)}}async function oe(){if(!te.value){n.warning("目录路径不能为空");return}try{De.value=!0;const c=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:te.value})})).json();c.success?(n.success("已切换工作目录"),O.value=c.directory,P.value=!1,await Re(c.directory),await g(),h.isGitRepo=c.isGitRepo,await E.loadConfig(!0),c.isGitRepo?(await Promise.all([h.getCurrentBranch(),h.getAllBranches(),h.getUserInfo(),h.getRemoteUrl()]),p.value&&p.value.refreshStatus(),k.value&&k.value.refreshLog()):(n.warning("当前目录不是Git仓库，部分功能将不可用"),h.$reset())):n.error(c.error||"切换目录失败")}catch(C){n.error(`切换目录失败: ${C.message}`)}finally{De.value=!1}}async function Re(C){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:C})})}catch(c){console.error("保存最近目录失败:",c)}}async function Oe(){try{if(!O.value){n.warning("当前目录路径为空");return}const c=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:O.value})})).json();c.success?n.success("已在文件管理器中打开目录"):c.error&&n.error(c.error)}catch(C){console.error("打开目录失败:",C),n.error(`打开目录失败: ${C.message}`)}}async function Ne(){try{const c=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:te.value||O.value})})).json();c.success?Xe(c):c.error&&n.error(c.error)}catch(C){console.error("浏览目录失败:",C),n.error(`浏览目录失败: ${C.message}`)}}function Xe(C){!C||!C.items||Me.alert(Ae("div",{class:"directory-browser"},[Ae("div",{class:"current-path"},[Ae("span",{class:"path-label"},"当前路径: "),Ae("span",{class:"path-value"},C.path)]),Ae("div",{class:"directory-list"},[C.parentPath?Ae("div",{class:"directory-item parent-dir",onClick:()=>{Je(C.parentPath)}},[Ae("span",{class:"dir-icon"},Ae("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Ae("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ae("span",{class:"dir-name"},"返回上级目录")]):null,...C.items.map(c=>Ae("div",{class:"directory-item",onClick:()=>{Je(c.path)}},[Ae("span",{class:"dir-icon"},Ae("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Ae("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ae("span",{class:"dir-name"},c.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:c=>{c==="confirm"&&(te.value=C.path)}})}async function Je(C){try{Me.close(),setTimeout(async()=>{try{const q=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:C})})).json();q.success?Xe(q):q.error&&n.error(q.error)}catch(c){console.error("浏览目录失败:",c),n.error(`浏览目录失败: ${c.message}`)}},100)}catch(c){console.error("处理目录选择时出错:",c),n.error(`处理目录选择时出错: ${c.message}`)}}return(C,c)=>{const q=Bt,H=Ue,Ve=Bs,ze=is,de=Fs,Ce=Mt,me=Pt,ge=Ds,$e=Ft,We=ns,ke=Dt;return f(),w(Se,null,[e("header",pr,[e("div",vr,[e("img",{src:o(fr),alt:"Zen GitSync Logo",class:"logo"},null,8,mr),c[14]||(c[14]=e("h1",null,"Zen GitSync UI",-1))]),e("div",gr,[o(h).userName&&o(h).userEmail?(f(),w("div",hr,[c[15]||(c[15]=e("span",{class:"user-label"},"用户:",-1)),e("span",yr,L(o(h).userName),1),e("span",_r,"<"+L(o(h).userEmail)+">",1),t(H,{type:"primary",size:"small",onClick:B,class:"user-settings-btn",circle:""},{default:a(()=>[t(q,null,{default:a(()=>[t(o(ws))]),_:1})]),_:1})])):(f(),w("div",wr,[c[16]||(c[16]=e("span",{class:"user-label"},"用户: ",-1)),c[17]||(c[17]=e("span",{class:"user-warning"},"未配置",-1)),t(H,{type:"primary",size:"small",onClick:B,class:"user-settings-btn",circle:""},{default:a(()=>[t(q,null,{default:a(()=>[t(o(ws))]),_:1})]),_:1})])),e("div",kr,[e("div",$r,[e("div",br,[t(q,null,{default:a(()=>[t(o(ks))]),_:1})]),e("div",{class:"directory-path",title:O.value},L(O.value),9,Cr)]),e("div",Sr,[t(H,{type:"primary",size:"small",onClick:be,class:"dir-button",circle:"",title:"切换目录"},{default:a(()=>[t(q,null,{default:a(()=>c[18]||(c[18]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),t(H,{type:"success",size:"small",onClick:Oe,class:"dir-button",circle:"",title:"在资源管理器中打开"},{default:a(()=>[t(q,null,{default:a(()=>c[19]||(c[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})]),_:1}),t(H,{type:"info",size:"small",onClick:je,class:"dir-button",circle:"",title:"复制路径"},{default:a(()=>[t(q,null,{default:a(()=>c[20]||(c[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])]),o(h).isGitRepo?(f(),w("div",Tr,[t(dr)])):A("",!0)])]),e("main",xr,[R.value?(f(),w("div",zr,[e("div",Br,[t(Jl,{ref_key:"gitStatusRef",ref:p,"initial-directory":O.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:xe},null,32),o(h).isGitRepo?(f(),w("div",Dr,[!o(h).userName||!o(h).userEmail?(f(),w("div",Fr,[c[26]||(c[26]=e("h2",null,"Git用户未配置",-1)),c[27]||(c[27]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Rr,[c[24]||(c[24]=e("h3",null,"您可以通过以下方式配置：",-1)),c[25]||(c[25]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[y(' git config --global user.name "您的用户名"'),e("br"),y(' git config --global user.email "您的邮箱" ')])],-1)),t(H,{type:"primary",onClick:B},{default:a(()=>c[23]||(c[23]=[y(" 立即配置 ")])),_:1})])])):(f(),I(Kn,{key:1}))])):(f(),w("div",Gr,c[28]||(c[28]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:v},null,32),o(h).isGitRepo?(f(),w("div",jr,[t(Mi,{ref_key:"logListRef",ref:k},null,512)])):A("",!0),t($e,{modelValue:U.value,"onUpdate:modelValue":c[3]||(c[3]=K=>U.value=K),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Ar,[t(H,{onClick:c[2]||(c[2]=K=>U.value=!1)},{default:a(()=>c[29]||(c[29]=[y("取消")])),_:1}),t(H,{type:"primary",onClick:ie,loading:o(h).isCreatingBranch},{default:a(()=>c[30]||(c[30]=[y(" 创建 ")])),_:1},8,["loading"])])]),default:a(()=>[t(ge,{model:{newBranchName:Z.value,selectedBaseBranch:Q.value}},{default:a(()=>[t(de,{label:"新分支名称"},{default:a(()=>[t(ze,{modelValue:Z.value,"onUpdate:modelValue":c[0]||(c[0]=K=>Z.value=K),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),t(de,{label:"基于分支"},{default:a(()=>[t(me,{modelValue:Q.value,"onUpdate:modelValue":c[1]||(c[1]=K=>Q.value=K),placeholder:"选择基础分支",style:{width:"100%"}},{default:a(()=>[(f(!0),w(Se,null,Be(o(h).allBranches,K=>(f(),I(Ce,{key:K,label:K,value:K},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(f(),w("div",Vr,[t(Ve,{class:"loading-card"},{default:a(()=>[e("div",Lr,[t(q,{class:"is-loading"},{default:a(()=>c[21]||(c[21]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),c[22]||(c[22]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Ur,[o(h).currentBranch?(f(),w("div",Or,[e("div",Er,[c[32]||(c[32]=e("span",{class:"branch-label"},"当前分支:",-1)),t(me,{modelValue:o(h).currentBranch,"onUpdate:modelValue":c[4]||(c[4]=K=>o(h).currentBranch=K),size:"small",onChange:_e,loading:o(h).isChangingBranch,class:"branch-select"},{default:a(()=>[(f(!0),w(Se,null,Be(o(h).allBranches,K=>(f(),I(Ce,{key:K,label:K,value:K},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),t(H,{type:"primary",size:"small",onClick:re,class:"create-branch-btn"},{default:a(()=>[t(q,null,{default:a(()=>[t(o(Aa))]),_:1}),c[31]||(c[31]=y(" 新建分支 "))]),_:1})])])):A("",!0),o(h).remoteUrl?(f(),w("div",Mr,[c[34]||(c[34]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Pr,L(o(h).remoteUrl),1),t(H,{type:"primary",circle:"",size:"small",onClick:c[5]||(c[5]=K=>o(h).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:a(()=>[t(q,null,{default:a(()=>c[33]||(c[33]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):A("",!0)]),t($e,{modelValue:pe.value,"onUpdate:modelValue":c[9]||(c[9]=K=>pe.value=K),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Hr,[t(H,{type:"danger",onClick:F},{default:a(()=>c[36]||(c[36]=[y(" 清除配置 ")])),_:1}),t(H,{onClick:c[8]||(c[8]=K=>pe.value=!1)},{default:a(()=>c[37]||(c[37]=[y("取消")])),_:1}),t(H,{type:"primary",onClick:J},{default:a(()=>c[38]||(c[38]=[y(" 保存 ")])),_:1})])]),default:a(()=>[t(ge,null,{default:a(()=>[t(de,{label:"用户名"},{default:a(()=>[t(ze,{modelValue:S.value,"onUpdate:modelValue":c[6]||(c[6]=K=>S.value=K),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),t(de,{label:"邮箱"},{default:a(()=>[t(ze,{modelValue:z.value,"onUpdate:modelValue":c[7]||(c[7]=K=>z.value=K),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),t(de,null,{default:a(()=>[t(We,{type:"info",closable:!1,"show-icon":""},{default:a(()=>c[35]||(c[35]=[y(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),t($e,{modelValue:P.value,"onUpdate:modelValue":c[13]||(c[13]=K=>P.value=K),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:a(()=>[e("span",Jr,[t(H,{onClick:c[11]||(c[11]=K=>P.value=!1)},{default:a(()=>c[40]||(c[40]=[y("取消")])),_:1}),t(H,{type:"primary",onClick:c[12]||(c[12]=K=>oe()),loading:De.value},{default:a(()=>c[41]||(c[41]=[y(" 切换 ")])),_:1},8,["loading"])])]),default:a(()=>[t(ge,null,{default:a(()=>[t(de,{label:"目录路径"},{default:a(()=>[e("div",Ir,[t(ze,{modelValue:te.value,"onUpdate:modelValue":c[10]||(c[10]=K=>te.value=K),placeholder:"请输入目录路径"},null,8,["modelValue"]),t(H,{type:"primary",onClick:Ne},{default:a(()=>[t(q,null,{default:a(()=>[t(o(ks))]),_:1}),c[39]||(c[39]=y(" 浏览 "))]),_:1})])]),_:1}),Ge.value.length>0?(f(),I(de,{key:0,label:"常用目录"},{default:a(()=>[e("div",Nr,[(f(!0),w(Se,null,Be(Ge.value,(K,ot)=>(f(),I(ke,{key:ot,class:"recent-dir-tag",onClick:nt=>te.value=K,effect:"plain"},{default:a(()=>[y(L(K),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):A("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),qr=Rt(Wr,[["__scopeId","data-v-a5d01110"]]),Gs=Ua(qr);Gs.use(Oa());Gs.mount("#app");

import{d as bs,r as d,c as I,E as n,o as gt,a as ks,l as no,b as je,w as Re,e as b,f as u,n as ht,g as J,h as e,t as M,i as t,u as l,j as io,k as s,m as E,p as Vt,F as xe,q as Me,s as ye,v as Ge,x as ke,y as ro,z as tt,A as Zt,B as Lt,C as co,D as vs,G as R,H as es,I as at,J as Ut,K as xt,L as Tt,M as $s,N as ts,O as ss,P as Cs,Q as dt,R as Qt,S as mt,T as uo,U as os,V as zt,W as Ss,X as Xt,Y as fo,Z as Ye,_ as Ts,$ as as,a0 as Bt,a1 as Fs,a2 as Et,a3 as po,a4 as Vs,a5 as mo,a6 as ut,a7 as vt,a8 as vo,a9 as go,aa as Ls,ab as gs,ac as ho,ad as Mt,ae as At,af as Ft,ag as yo,ah as _o,ai as xs,aj as Bs,ak as wo,al as bo,am as ko,an as zs,ao as ct,ap as $o,aq as Co,ar as So,as as To,at as Fo,au as Vo,av as Lo,aw as xo,ax as Bo,ay as zo,az as Dt,aA as Po,aB as jo,aC as Ps,aD as hs,aE as Rt,aF as ys,aG as _s,aH as Oo,aI as Do,aJ as Ne,aK as Ro,aL as Go}from"./vendor-BUQyBUSU.js";(function(){const C=document.createElement("link").relList;if(C&&C.supports&&C.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))i(y);new MutationObserver(y=>{for(const f of y)if(f.type==="childList")for(const O of f.addedNodes)O.tagName==="LINK"&&O.rel==="modulepreload"&&i(O)}).observe(document,{childList:!0,subtree:!0});function o(y){const f={};return y.integrity&&(f.integrity=y.integrity),y.referrerPolicy&&(f.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?f.credentials="include":y.crossOrigin==="anonymous"?f.credentials="omit":f.credentials="same-origin",f}function i(y){if(y.ep)return;y.ep=!0;const f=o(y);fetch(y.href,f)}})();const it=bs("config",()=>{const W=d(""),C=d([]),o=d([]),i=d([]),y=d([]),f=d(!1),O=d(!1),_=I(()=>({defaultCommitMessage:W.value,descriptionTemplates:C.value,scopeTemplates:o.value,messageTemplates:i.value,lockedFiles:y.value}));async function G(V=!1){if(!V&&O.value&&!f.value)return console.log("使用缓存的配置信息"),_.value;try{f.value=!0,console.log("加载配置信息...");const B=await(await fetch("/api/config/getConfig")).json();return W.value=B.defaultCommitMessage||"",C.value=B.descriptionTemplates||[],o.value=B.scopeTemplates||[],i.value=B.messageTemplates||[],y.value=B.lockedFiles||[],O.value=!0,console.log("配置信息加载完成"),_.value}catch(w){return console.error("加载配置失败:",w),n.error(`加载配置失败: ${w.message}`),null}finally{f.value=!1}}async function ee(V){try{const B=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:V})})).json();return B.success?(W.value=V,n.success("默认提交信息已保存"),!0):(n.error(`保存失败: ${B.error}`),!1)}catch(w){return n.error(`保存失败: ${w.message}`),!1}}async function N(V,w){try{const ae=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:w})})).json();return ae.success?(w==="description"?C.value.includes(V)||C.value.push(V):w==="scope"?o.value.includes(V)||o.value.push(V):w==="message"&&(i.value.includes(V)||i.value.push(V)),n.success("模板已保存"),!0):(n.error(`保存模板失败: ${ae.error}`),!1)}catch(B){return n.error(`保存模板失败: ${B.message}`),!1}}async function A(V,w){try{const ae=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:V,type:w})})).json();return ae.success?(w==="description"?C.value=C.value.filter(ne=>ne!==V):w==="scope"?o.value=o.value.filter(ne=>ne!==V):w==="message"&&(i.value=i.value.filter(ne=>ne!==V)),n.success("模板已删除"),!0):(n.error(`删除模板失败: ${ae.error}`),!1)}catch(B){return n.error(`删除模板失败: ${B.message}`),!1}}async function h(V,w,B){try{const ne=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:V,newTemplate:w,type:B})})).json();if(ne.success){if(B==="description"){const j=C.value.indexOf(V);j!==-1&&(C.value[j]=w)}else if(B==="scope"){const j=o.value.indexOf(V);j!==-1&&(o.value[j]=w)}else if(B==="message"){const j=i.value.indexOf(V);j!==-1&&(i.value[j]=w)}return n.success("模板已更新"),!0}else return n.error(`更新模板失败: ${ne.error}`),!1}catch(ae){return n.error(`更新模板失败: ${ae.message}`),!1}}async function D(){try{const w=await(await fetch("/api/locked-files")).json();return w.success?(y.value=w.lockedFiles||[],w.lockedFiles):(n.error(`加载锁定文件列表失败: ${w.error}`),[])}catch(V){return console.error("加载锁定文件列表失败:",V),n.error(`加载锁定文件列表失败: ${V.message}`),[]}}async function F(V){try{const B=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return B.success?(await D(),n.success(`文件已锁定: ${V}`),!0):(n.error(`锁定文件失败: ${B.error}`),!1)}catch(w){return console.error("锁定文件失败:",w),n.error(`锁定文件失败: ${w.message}`),!1}}async function K(V){try{const B=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return B.success?(await D(),n.success(`文件已解锁: ${V}`),!0):(n.error(`解锁文件失败: ${B.error}`),!1)}catch(w){return console.error("解锁文件失败:",w),n.error(`解锁文件失败: ${w.message}`),!1}}async function Q(V){try{const B=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:V})})).json();return B.success?B.isLocked:(console.error("检查文件锁定状态失败:",B.error),!1)}catch(w){return console.error("检查文件锁定状态失败:",w),!1}}return{defaultCommitMessage:W,descriptionTemplates:C,scopeTemplates:o,messageTemplates:i,lockedFiles:y,isLoading:f,isLoaded:O,config:_,loadConfig:G,saveDefaultMessage:ee,saveTemplate:N,deleteTemplate:A,updateTemplate:h,loadLockedFiles:D,lockFile:F,unlockFile:K,isFileLocked:Q}}),Wt=800;function Mo(){const W=window.location.port||"80";if(W==="5173"||W==="4173"||W==="5544"){const o="3001";return console.log(`开发环境：从环境变量读取后端端口 ${o}`),parseInt(o,10)}const C=parseInt(W,10);return console.log(`生产环境：使用当前页面端口 ${C}`),C}const Ao=Mo(),st=bs("git",()=>{const W=it(),C=d(""),o=d([]),i=d(""),y=d(""),f=d(!1),O=d(!1),_=d(!1),G=d(0),ee=d(""),N=d(!1),A=d(!1),h=d(!1),D=d(!1),F=d(!1),K=d(0),Q=d(0),V=d(!1),w=d(""),B=d(0),ae=d(0),ne=d(!0),j=d(null),ve=d(""),Y=d(""),g=d([]),z=d({staged:[],unstaged:[],untracked:[]}),U=d([]),fe=d(!1),pe=d(!1),me=d(!1),he=d(!1),Z=d(!1),te=d([]),ue=d(!1),we=d(!1),x=d(!1),S=d(!1);function ie(){C.value="",o.value=[],i.value="",y.value="",f.value=!1,O.value=!1,_.value=!1,G.value=0,K.value=0,Q.value=0,V.value=!1,w.value="",B.value=0,ae.value=0,A.value=!1,h.value=!1,D.value=!1,F.value=!1,ee.value="",N.value=!1,g.value=[],z.value={staged:[],unstaged:[],untracked:[]},U.value=[],fe.value=!1,pe.value=!1,me.value=!1,he.value=!1,Z.value=!1}async function X(c=!1,m=!1){if(!_.value)return;const L=Date.now();if(!c&&!m&&L-B.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let $="/api/branch-status";const ce=[];c&&ce.push("force=true"),m&&ce.push("countOnly=true"),ce.length>0&&($+="?"+ce.join("&"));const He=await(await fetch($)).json();He&&(K.value=He.ahead||0,Q.value=He.behind||0,V.value=He.hasUpstream||!1,w.value=He.upstreamBranch||"",B.value=L,console.log(`分支状态更新：领先 ${K.value} 个提交，落后 ${Q.value} 个提交，上游分支：${V.value?w.value:"无"}`))}catch($){console.error("获取分支状态失败:",$),K.value=0,Q.value=0,V.value=!1,w.value=""}}async function ge(){const c=Date.now();if(c-G.value<1e3)return console.log("使用缓存的Git仓库状态:",_.value?"是":"不是"),_.value;try{const L=await(await fetch("/api/current_directory")).json();return _.value=L.isGitRepo===!0,G.value=c,console.log(`当前目录${_.value?"是":"不是"}Git仓库`),_.value}catch(m){return console.error("检查Git仓库状态失败:",m),_.value=!1,G.value=c,!1}}async function be(c=!1){try{const $=await(await fetch(c?"/api/branch?force=true":"/api/branch")).json();$.branch&&(C.value=$.branch,console.log(`当前分支更新为: ${$.branch}${c?" (强制刷新)":""}`))}catch(m){console.error("获取分支信息失败:",m)}}async function Ae(){if(_.value)try{console.log("获取所有分支...");const m=await(await fetch("/api/branches")).json();m.branches&&Array.isArray(m.branches)&&(o.value=m.branches,ae.value=Date.now(),console.log(`获取到${m.branches.length}个分支`))}catch(c){console.error("获取所有分支信息失败:",c)}}async function Pe(c){console.log("切换到分支:",c);try{f.value=!0;const L=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:c})})).json();return L.success?(n({message:`已切换到分支: ${c}`,type:"success"}),await be(!0),await X(!0),!0):(n({message:`切换分支失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`切换分支失败: ${m.message}`,type:"error"}),!1}finally{f.value=!1}}async function $e(){try{const m=await(await fetch("/api/user-info")).json();m.name&&m.email&&(i.value=m.name,y.value=m.email)}catch(c){console.error("获取用户信息失败:",c)}}async function re(c,m){if(!c.trim())return n({message:"分支名称不能为空",type:"warning"}),!1;try{O.value=!0;const $=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:c,baseBranch:m||C.value})})).json();return $.success?(n({message:`已创建并切换到分支: ${c}`,type:"success"}),await be(!0),await X(!0),await Ae(),!0):(n({message:`创建分支失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`创建分支失败: ${L.message}`,type:"error"}),!1}finally{O.value=!1}}async function Be(){try{const m=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return m.success?(i.value="",y.value="",n({message:"已清除Git用户配置",type:"success"}),!0):(n({message:`清除配置失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`清除配置失败: ${c.message}`,type:"error"}),!1}}async function ot(c,m){try{const $=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:c,email:m})})).json();return $.success?(i.value=c,y.value=m,n({message:"已恢复Git用户配置",type:"success"}),!0):(n({message:`恢复配置失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`恢复配置失败: ${L.message}`,type:"error"}),!1}}async function lt(){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{h.value=!0;const m=await(await fetch("/api/pull",{method:"POST"})).json();return m.success?(n({message:"拉取成功",type:"success"}),await X(),!0):(m.needsMerge?n({message:`需要合并更改: ${m.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):n({message:`拉取失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`拉取失败: ${c.message}`,type:"error"}),!1}finally{h.value=!1}}async function We(){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;try{D.value=!0;const m=await(await fetch("/api/fetch-all",{method:"POST"})).json();return m.success?(n({message:"获取所有远程分支信息成功",type:"success"}),await X(),!0):(n({message:`获取远程分支信息失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`获取远程分支信息失败: ${c.message}`,type:"error"}),!1}finally{D.value=!1}}async function Xe(){j.value&&j.value.disconnect();try{const c=`http://localhost:${Ao}`;if(console.log("尝试连接Socket.IO服务器:",c),j.value=no(c,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!j.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO客户端已创建，开始注册事件监听器..."),j.value.on("connect",()=>{var m;console.log("✅ Socket.IO连接成功，事件监听器已生效，Socket ID:",(m=j.value)==null?void 0:m.id),ne.value&&j.value&&j.value.emit("start_monitoring")}),j.value.on("project_info",m=>{ve.value=m.projectPath,Y.value=m.projectRoomId,console.log(`当前项目: ${m.projectPath}`),console.log(`房间ID: ${m.projectRoomId}`)}),j.value.on("project_changed",m=>{console.log(`项目已切换: ${m.oldProjectPath} -> ${m.newProjectPath}`),ve.value=m.newProjectPath,Y.value=m.newProjectRoomId,j.value&&j.value.emit("join_room",m.newProjectRoomId),console.log(`已加入新项目房间: ${m.newProjectRoomId}`)}),j.value.on("disconnect",m=>{console.log("与Socket.IO服务器断开连接:",m)}),j.value.on("git_status_update",m=>{if(ne.value){if(console.log("✅ 成功监听到 git_status_update 事件:",new Date().toLocaleTimeString()),console.log("git_status_update data ==>",m),console.log("currentProjectPath.value ==>",ve.value),console.log("data.projectPath ==>",m.projectPath),m.projectPath&&ve.value&&m.projectPath!==ve.value){console.log(`忽略不同项目的状态更新: ${m.projectPath}`);return}console.log("正在更新 Git 文件状态..."),m.porcelain!==void 0&&r(m.porcelain)}}),j.value.on("monitoring_status",m=>{console.log("文件监控状态:",m.active?"已启动":"已停止")}),j.value.on("connect_error",m=>{console.error("Socket连接错误:",m.message)}),j.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),j.value.on("reconnect",m=>{var L;console.log(`Socket重连成功，尝试次数: ${m}`),ne.value&&(console.log("重连后重新发送start_monitoring请求"),(L=j.value)==null||L.emit("start_monitoring"))}),j.value.on("reconnect_attempt",m=>{console.log(`Socket尝试重连，第 ${m} 次尝试`)}),j.value.on("reconnect_error",m=>{console.error("Socket重连错误:",m.message)}),j.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),console.log("Socket.IO事件监听器注册完成：connect, project_info, project_changed, git_status_update, monitoring_status"),j.value&&!j.value.connected&&(console.log("Socket未连接，尝试手动连接..."),j.value.connect())}catch(c){console.error("Socket.IO连接初始化失败:",c)}}function P(){if(console.log("toggleAutoUpdate调用，当前值:",ne.value),!j.value){console.error("无法切换自动更新状态: socket连接不存在"),n.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),Xe(),localStorage.setItem("zen-gitsync-auto-update",ne.value.toString());return}try{ne.value?(console.log("发送start_monitoring命令..."),j.value.emit("start_monitoring"),n.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),j.value.emit("stop_monitoring"),n.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",ne.value.toString()),console.log("已保存自动更新设置到本地存储:",ne.value)}catch(c){console.error("切换自动更新状态时出错:",c),n.error(`切换自动更新失败: ${c.message}`)}}function r(c){if(c===void 0||c===""){U.value=[];return}const m=c.split(`
`),L=[];for(const $ of m){const ce=$.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(ce){let ze="";const He=ce[1],qe=He.charAt(0),Pt=He.charAt(1);qe==="A"||qe==="M"||qe==="D"||qe==="R"?ze="added":qe===" "&&Pt==="M"?ze="modified":qe===" "&&Pt==="D"?ze="deleted":He==="??"?ze="untracked":ze="other",L.push({path:ce[2],type:ze})}}U.value=L}async function H(c=!0){if(!_.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{fe.value=!0,console.log("开始加载提交历史...");const m=new Date().getTime(),$=await(await fetch(`/api/log?page=1&_t=${m}`)).json();$&&$.data&&Array.isArray($.data)?(g.value=[...$.data],console.log(`提交历史加载完成，共 ${g.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",$),g.value=[])}catch(m){console.error("获取提交历史失败:",m),c&&n({message:`获取提交历史失败: ${m.message}`,type:"error"})}finally{fe.value=!1}}async function se(){if(!_.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{pe.value=!0,await Ce()}catch(c){console.error("获取Git状态失败:",c),n({message:`获取Git状态失败: ${c.message}`,type:"error"})}finally{pe.value=!1}}async function Ce(){if(console.log("开始获取Git状态(porcelain格式)..."),!_.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const m=await(await fetch("/api/status_porcelain")).json();m.status!==void 0?r(m.status):U.value=[]}catch(c){console.error("获取Git状态(porcelain)失败:",c),n({message:`获取Git状态(porcelain)失败: ${c.message}`,type:"error"}),U.value=[]}}async function Ue(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const c=U.value.filter(m=>{const L=m.path.replace(/\\/g,"/");return!W.lockedFiles.some(ce=>{const ze=ce.replace(/\\/g,"/");return L===ze})});if(c.length===0)return n({message:"没有需要暂存的文件（所有文件都被锁定）",type:"warning"}),!1;if(c.length===U.value.length){const L=await(await fetch("/api/add",{method:"POST"})).json();return L.success?(n({message:"文件已添加到暂存区",type:"success"}),!0):(n({message:`添加文件失败: ${L.error}`,type:"error"}),!1)}else{const L=await(await fetch("/api/add-filtered",{method:"POST"})).json();if(L.success){const $=U.value.length-c.length;let ce=`已添加 ${c.length} 个文件到暂存区`;return $>0&&(ce+=`，跳过 ${$} 个锁定文件`),n({message:ce,type:"success"}),!0}else return n({message:`添加文件失败: ${L.error}`,type:"error"}),!1}}catch(c){return n({message:`添加文件失败: ${c.message}`,type:"error"}),!1}finally{me.value=!1}}async function Te(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const m=await(await fetch("/api/add-all",{method:"POST"})).json();return m.success?(n({message:"所有文件已添加到暂存区",type:"success"}),!0):(n({message:`添加文件失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`添加文件失败: ${c.message}`,type:"error"}),!1}finally{me.value=!1}}async function _e(c){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{me.value=!0;const L=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:c})})).json();return L.success?(n({message:"文件已暂存",type:"success"}),se(),!0):(n({message:`暂存文件失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`暂存文件失败: ${m.message}`,type:"error"}),!1}finally{me.value=!1}}async function Ee(c){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{Z.value=!0;const L=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:c})})).json();return L.success?(n({message:"已取消暂存文件",type:"success"}),se(),!0):(n({message:`取消暂存失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`取消暂存失败: ${m.message}`,type:"error"}),!1}finally{Z.value=!1}}function Fe(c){return new Promise(m=>setTimeout(m,c))}async function Se(c,m=!1){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{he.value=!0;const $=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:c,hasNewlines:c.includes(`
`),noVerify:m})})).json();return $.success?(n({message:"提交成功",type:"success"}),!0):(n({message:`commitChanges 提交失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`提交失败: ${L.message}`,type:"error"}),!1}finally{he.value=!1}}async function le(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{A.value=!0;const m=await(await fetch("/api/push",{method:"POST"})).json();return m.success?(K.value=0,Q.value=0,await Promise.all([se(),H()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(n({message:`推送失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`推送失败: ${c.message}`,type:"error"}),!1}finally{A.value=!1}}async function De(c,m={}){if(!_.value)return n({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!c)return n({message:"请选择要合并的分支",type:"warning"}),!1;if(c===C.value)return n({message:"不能合并当前分支到自身",type:"warning"}),!1;try{F.value=!0;const L=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:c,...m})}),$=await L.json();return L.status===409?(n({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):$.success?(n({message:`成功合并分支 ${c} 到 ${C.value}`,type:"success"}),await se(),await X(),!0):(n({message:`合并分支失败: ${$.error}`,type:"error"}),!1)}catch(L){return n({message:`合并分支失败: ${L.message}`,type:"error"}),!1}finally{F.value=!1}}async function Je(c,m=!1){if(console.log("开始暂存并提交操作..."),!await Ue())return!1;console.log("暂存完成，等待Git操作完成..."),await Fe(Wt),console.log("开始提交更改...");const $=await Se(c,m);return console.log("暂存并提交操作完成"),$}async function Ze(c,m=!1){try{if(console.log("开始暂存文件..."),!await Ue()||(console.log("暂存完成，等待Git操作完成..."),await Fe(Wt),console.log("开始提交更改..."),!await Se(c,m)))return!1;console.log("提交完成，等待Git操作完成..."),await Fe(Wt),console.log("开始推送到远程...");const ce=await le();return console.log("一键推送操作完成，状态已统一刷新"),ce}catch(L){console.error("一键推送操作失败:",L);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&n({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch($){console.error("清理锁定文件失败:",$)}n({message:`操作失败: ${L.message}`,type:"error"});try{await Promise.all([se(),H(),X()])}catch($){console.error("刷新状态失败:",$)}return!1}}async function yt(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{Z.value=!0;const m=await(await fetch("/api/reset-head",{method:"POST"})).json();return m.success?(n({message:"已重置暂存区",type:"success"}),se(),!0):(n({message:`重置暂存区失败: ${m.error}`,type:"error"}),!1)}catch(c){return n({message:`重置暂存区失败: ${c.message}`,type:"error"}),!1}finally{Z.value=!1}}async function _t(c){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{Z.value=!0;const L=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:c})})).json();return L.success?(n({message:`已重置分支 ${c} 到远程状态`,type:"success"}),se(),H(),!0):(n({message:`重置分支失败: ${L.error}`,type:"error"}),!1)}catch(m){return n({message:`重置分支失败: ${m.message}`,type:"error"}),!1}finally{Z.value=!1}}async function wt(){if(_.value)try{N.value=!0,console.log("获取远程仓库地址...");const m=await(await fetch("/api/remote-url")).json();m.success?(ee.value=m.url||"",console.log(`获取到远程仓库地址: ${ee.value}`)):(console.warn("获取远程仓库地址失败:",m.error),ee.value="")}catch(c){console.error("获取远程仓库地址失败:",c),ee.value=""}finally{N.value=!1}}async function ft(){if(!ee.value)return n({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(ee.value),n({message:"已复制远程仓库地址",type:"success"}),!0}catch(c){return console.error("复制远程仓库地址失败:",c),n({message:`复制失败: ${c.message}`,type:"error"}),!1}}gt(()=>{const c=localStorage.getItem("zen-gitsync-auto-update");c!==null&&(ne.value=c==="true"),Xe()});function nt(){j.value&&(j.value.disconnect(),j.value=null)}ks(()=>{nt()});async function Ie(){if(!_.value)return n.warning("当前目录不是Git仓库"),[];try{ue.value=!0;const m=await(await fetch("/api/stash-list")).json();return m.success?(te.value=m.stashes,m.stashes):(n.error(`获取stash列表失败: ${m.error}`),[])}catch(c){return console.error("获取stash列表失败:",c),n.error(`获取stash列表失败: ${c.message}`),[]}finally{ue.value=!1}}async function bt(c,m=!1,L=!0){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{S.value=!0;const ce=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:c,includeUntracked:m,excludeLocked:L})})).json();return ce.success?(n.success(ce.message),await Ie(),await se(),!0):(n.warning(ce.message),!1)}catch($){return console.error("保存stash失败:",$),n.error(`保存stash失败: ${$.message}`),!1}finally{S.value=!1}}async function k(c,m=!1){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{we.value=!0;const L=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:c,pop:m})}),$=await L.json();return L.status===409?(n.warning("应用stash时发生冲突，请手动解决"),!1):$.success?(n.success($.message),await Ie(),await se(),!0):(n.error(`应用stash失败: ${$.error}`),!1)}catch(L){return console.error("应用stash失败:",L),n.error(`应用stash失败: ${L.message}`),!1}finally{we.value=!1}}async function v(c){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{x.value=!0;const L=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:c})})).json();return L.success?(n.success(L.message),await Ie(),!0):(n.error(`删除stash失败: ${L.error}`),!1)}catch(m){return console.error("删除stash失败:",m),n.error(`删除stash失败: ${m.message}`),!1}finally{x.value=!1}}async function q(){if(!_.value)return n.warning("当前目录不是Git仓库"),!1;try{x.value=!0;const m=await(await fetch("/api/stash-clear",{method:"POST"})).json();return m.success?(n.success(m.message),te.value=[],!0):(n.error(`清空stash失败: ${m.error}`),!1)}catch(c){return console.error("清空stash失败:",c),n.error(`清空stash失败: ${c.message}`),!1}finally{x.value=!1}}return{currentBranch:C,allBranches:o,userName:i,userEmail:y,isChangingBranch:f,isCreatingBranch:O,isGitRepo:_,lastCheckedTime:G,branchAhead:K,branchBehind:Q,hasUpstream:V,upstreamBranch:w,lastBranchStatusTime:B,lastBranchesTime:ae,remoteUrl:ee,isLoadingRemoteUrl:N,stashes:te,isLoadingStashes:ue,isApplyingStash:we,isDroppingStash:x,isSavingStash:S,log:g,status:z,fileList:U,isLoadingLog:fe,isLoadingStatus:pe,isAddingFiles:me,isCommiting:he,isResetting:Z,autoUpdateEnabled:ne,isPushing:A,isGitPulling:h,isGitFetching:D,isGitMerging:F,$reset:ie,checkGitRepo:ge,getCurrentBranch:be,getAllBranches:Ae,changeBranch:Pe,getUserInfo:$e,createBranch:re,clearUserConfig:Be,restoreUserConfig:ot,getBranchStatus:X,gitPull:lt,gitFetchAll:We,initSocketConnection:Xe,toggleAutoUpdate:P,parseStatusPorcelain:r,fetchLog:H,fetchStatus:se,fetchStatusPorcelain:Ce,addToStage:Ue,addAllToStage:Te,addFileToStage:_e,unstageFile:Ee,commitChanges:Se,pushToRemote:le,addAndCommit:Je,addCommitAndPush:Ze,resetHead:yt,resetToRemote:_t,getRemoteUrl:wt,copyRemoteUrl:ft,mergeBranch:De,getStashList:Ie,saveStash:bt,applyStash:k,dropStash:v,clearAllStashes:q,socket:j,disconnectSocket:nt}});function Uo(W){return W.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function Eo(W){return W?W.split(`
`).map(o=>{const i=Uo(o);return o.startsWith("diff --git")||o.startsWith("diff --cc")||o.startsWith("diff --combined")?`<div class="diff-header">${i}</div>`:o.startsWith("---")?`<div class="diff-old-file">${i}</div>`:o.startsWith("+++")?`<div class="diff-new-file">${i}</div>`:o.startsWith("@@")?`<div class="diff-hunk-header">${i}</div>`:o.startsWith("+")?`<div class="diff-added">${i}</div>`:o.startsWith("-")?`<div class="diff-removed">${i}</div>`:`<div class="diff-context">${i}</div>`}).join(""):""}function Io(W){return W?W.trim():"(无提交信息)"}function No(W){if(!W)return"";const C=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,o=W.match(C);return o?o[3].trim():W.trim()}const Ho="/assets/vscode-twqwGmNt.webp",Jo={key:0,class:"files-panel"},Wo={class:"panel-header"},qo={key:0,class:"file-count"},Yo={class:"files-list"},Ko=["onClick"],Qo={class:"file-name"},Xo={class:"panel-header"},Zo={class:"header-right"},ea={class:"selected-file"},ta={class:"path-dir"},sa={class:"path-name"},oa={key:1,class:"action-buttons"},aa=["src"],la={class:"diff-content"},na=["innerHTML"],ia=je({__name:"FileDiffViewer",props:{files:{},emptyText:{default:"没有找到变更文件"},diffContent:{default:""},selectedFile:{default:""},height:{default:"100%"},showFileList:{type:Boolean,default:!0},context:{default:"git-status"},showOpenButton:{type:Boolean,default:!0}},emits:["file-select","open-file","open-with-vscode"],setup(W,{emit:C}){const o=W,i=C,y=d(""),f=I(()=>o.selectedFile||y.value),O=I(()=>o.files.map(F=>({...F,displayName:F.name||F.path.split("/").pop()||F.path}))),_=I(()=>o.diffContent&&o.diffContent.trim()!==""),G=I(()=>{if(!f.value)return"";const F=f.value.split("/");return F.slice(0,-1).join("/")+(F.length>1?"/":"")}),ee=I(()=>{if(!f.value)return"";const F=f.value.split("/");return F[F.length-1]||f.value});function N(F){y.value=F,i("file-select",F)}function A(){if(!f.value){n.warning("请先选择一个文件");return}i("open-file",f.value,o.context)}function h(){if(!f.value){n.warning("请先选择一个文件");return}i("open-with-vscode",f.value,o.context)}const D=I(()=>{switch(o.context){case"git-status":return"在系统默认编辑器中打开文件";case"commit-detail":return"打开该提交时的文件版本";case"stash-detail":return"打开该stash中的文件版本";default:return"打开文件"}});return Re(()=>o.selectedFile,F=>{F!==void 0&&(y.value=F)}),Re(()=>o.files,F=>{if(F.length>0&&!f.value){const K=F[0];N(K.path)}},{immediate:!0}),(F,K)=>(u(),b("div",{class:"file-diff-viewer",style:ht({height:F.height})},[F.showFileList?(u(),b("div",Jo,[e("div",Wo,[K[0]||(K[0]=e("h4",null,"变更文件",-1)),F.files.length>0?(u(),b("span",qo,"("+M(F.files.length)+")",1)):J("",!0)]),e("div",Yo,[t(l(io),{height:"100%"},{default:s(()=>[F.files.length===0?(u(),E(l(Vt),{key:0,description:F.emptyText,"image-size":60},null,8,["description"])):J("",!0),(u(!0),b(xe,null,Me(O.value,Q=>(u(),b("div",{key:Q.path,class:ye(["file-item",{active:Q.path===f.value,[`file-type-${Q.type}`]:Q.type,"is-locked":Q.locked}]),onClick:V=>N(Q.path)},[t(l(tt),{class:"file-icon"},{default:s(()=>[t(l(Zt))]),_:1}),t(l(Ge),{content:Q.path,placement:"top",disabled:Q.displayName.length<=35,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",Qo,M(Q.displayName),1)]),_:2},1032,["content","disabled"]),Q.locked?(u(),E(l(Ge),{key:0,content:"该文件已被锁定，提交时会被跳过",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(l(tt),{class:"lock-icon",color:"#E6A23C"},{default:s(()=>[t(l(Lt))]),_:1})]),_:1})):J("",!0)],10,Ko))),128))]),_:1})])])):J("",!0),e("div",{class:ye(["diff-panel",{"full-width":!F.showFileList}])},[e("div",Xo,[K[1]||(K[1]=e("h4",null,"文件差异",-1)),e("div",Zo,[f.value?(u(),E(l(Ge),{key:0,content:f.value,placement:"top",effect:"light","hide-after":1e3,"show-after":200},{default:s(()=>[e("span",ea,[e("span",ta,M(G.value),1),e("span",sa,M(ee.value),1)])]),_:1},8,["content"])):J("",!0),F.showOpenButton&&f.value?(u(),b("div",oa,[t(l(Ge),{content:D.value,placement:"top",effect:"light"},{default:s(()=>[t(l(ke),{type:"primary",size:"small",icon:l(ro),onClick:A,class:"open-file-btn"},null,8,["icon"])]),_:1},8,["content"]),t(l(Ge),{content:"用VSCode打开文件",placement:"top",effect:"light"},{default:s(()=>[t(l(ke),{type:"success",size:"small",onClick:h,class:"vscode-btn"},{default:s(()=>[e("img",{src:l(Ho),alt:"VSCode",class:"vscode-icon"},null,8,aa)]),_:1})]),_:1})])):J("",!0)])]),e("div",la,[_.value?(u(),b("div",{key:1,class:"diff-text",innerHTML:l(Eo)(F.diffContent)},null,8,na)):(u(),E(l(Vt),{key:0,description:f.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])],2)],4))}}),Oe=(W,C)=>{const o=W.__vccOpts||W;for(const[i,y]of C)o[i]=y;return o},ls=Oe(ia,[["__scopeId","data-v-5053ef5f"]]),ra={class:"common-dialog__footer"},ca=je({__name:"CommonDialog",props:{modelValue:{type:Boolean},title:{},size:{default:"medium"},type:{default:"default"},width:{},height:{},top:{default:"80px"},closeOnClickModal:{type:Boolean,default:!1},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},customClass:{},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},heightMode:{default:"max"},heightOffset:{default:"160px"},showFooter:{type:Boolean,default:!1},confirmText:{default:"确定"},cancelText:{default:"取消"},showCancel:{type:Boolean,default:!0},confirmLoading:{type:Boolean,default:!1}},emits:["update:modelValue","confirm","cancel","close","opened","closed"],setup(W,{emit:C}){const o=W,i=C,y=I(()=>{if(o.width)return o.width;switch(o.size){case"small":return"30%";case"medium":return"50%";case"large":return"80%";case"extra-large":return"90%";default:return"50%"}}),f=I(()=>{const h=[];return o.customClass&&h.push(o.customClass),o.type==="flex"&&h.push("common-dialog--flex"),o.type==="full-height"&&h.push("common-dialog--full-height"),h.join(" ")}),O=I(()=>{const h=`calc(100% - ${o.heightOffset})`;return o.heightMode==="fixed"?{height:h}:{maxHeight:h}});function _(){i("update:modelValue",!1),i("close")}function G(){i("confirm")}function ee(){i("cancel"),_()}function N(){i("opened")}function A(){i("closed")}return(h,D)=>{const F=ke;return u(),E(l(es),{"model-value":h.modelValue,title:h.title,width:y.value,top:h.top,style:ht(O.value),"close-on-click-modal":h.closeOnClickModal,"close-on-press-escape":h.closeOnPressEscape,"destroy-on-close":h.destroyOnClose,draggable:h.draggable,class:ye(f.value),"append-to-body":h.appendToBody,"lock-scroll":h.lockScroll,onClose:_,onOpened:N,onClosed:A},co({default:s(()=>[vs(h.$slots,"default",{},void 0,!0)]),_:2},[h.showFooter||h.$slots.footer?{name:"footer",fn:s(()=>[vs(h.$slots,"footer",{},()=>[e("div",ra,[h.showCancel?(u(),E(F,{key:0,onClick:ee},{default:s(()=>[R(M(h.cancelText),1)]),_:1})):J("",!0),t(F,{type:"primary",loading:h.confirmLoading,onClick:G},{default:s(()=>[R(M(h.confirmText),1)]),_:1},8,["loading"])])],!0)]),key:"0"}:void 0]),1032,["model-value","title","width","top","style","close-on-click-modal","close-on-press-escape","destroy-on-close","draggable","class","append-to-body","lock-scroll"])}}}),Qe=Oe(ca,[["__scopeId","data-v-e76f4ba1"]]),ua={key:0,class:"file-group"},da={class:"file-list"},fa=["onClick"],pa={class:"file-info"},ma={class:"file-name-section"},va=["title"],ga={class:"file-directory"},ha={class:"file-actions"},ya={key:1,style:{"font-size":"16px","font-weight":"bold"}},_a=je({__name:"FileGroup",props:{files:{},title:{},groupKey:{},collapsedGroups:{},isFileLocked:{type:Function},isLocking:{type:Function},getFileName:{type:Function},getFileDirectory:{type:Function}},emits:["toggleCollapse","fileClick","toggleFileLock","stageFile","unstageFile","revertFileChanges"],setup(W,{emit:C}){const o=W,i=C,y=I(()=>o.files.length>0),f=I(()=>o.collapsedGroups[o.groupKey]);function O(){i("toggleCollapse",o.groupKey)}function _(D){i("fileClick",D)}function G(D,F){F.stopPropagation(),i("toggleFileLock",D)}function ee(D,F){F.stopPropagation(),i("stageFile",D)}function N(D,F){F.stopPropagation(),i("unstageFile",D)}function A(D,F){F.stopPropagation(),i("revertFileChanges",D)}function h(D){switch(D){case"added":return[{type:"unstage",tooltip:"取消暂存",buttonType:"warning",icon:"-",handler:N}];case"modified":case"deleted":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:ee},{type:"revert",tooltip:"撤回修改",buttonType:"danger",icon:ss,handler:A}];case"untracked":return[{type:"stage",tooltip:"添加到暂存区",buttonType:"success",icon:"+",handler:ee},{type:"delete",tooltip:"删除文件",buttonType:"danger",icon:ts,handler:A}];default:return[]}}return(D,F)=>{const K=tt,Q=Ge,V=ke;return y.value?(u(),b("div",ua,[e("div",{class:"file-group-header",onClick:O},[t(K,{class:ye(["collapse-icon",{collapsed:f.value}])},{default:s(()=>[t(l(Ut))]),_:1},8,["class"]),e("span",null,M(D.title),1)]),at(e("div",da,[(u(!0),b(xe,null,Me(D.files,w=>(u(),b("div",{key:w.path,class:ye(["file-item",{"is-loading":o.isLocking(w.path)}]),onClick:B=>_(w)},[e("div",pa,[e("div",{class:ye(["file-status-indicator",[w.type,{locked:o.isFileLocked(w.path)}]])},null,2),e("div",ma,[t(Q,{content:o.getFileName(w.path),placement:"top",disabled:o.getFileName(w.path).length<=25,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",{class:ye(["file-name",{"locked-file-name":o.isFileLocked(w.path)}])},[R(M(o.getFileName(w.path))+" ",1),o.isFileLocked(w.path)?(u(),E(K,{key:0,class:"lock-indicator"},{default:s(()=>[t(l(Lt))]),_:1})):J("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:o.getFileDirectory(w.path)},[t(Q,{content:o.getFileDirectory(w.path),placement:"top",disabled:o.getFileDirectory(w.path).length<=30,"hide-after":1e3,"show-after":200},{default:s(()=>[e("span",ga,M(o.getFileDirectory(w.path)),1)]),_:2},1032,["content","disabled"])],8,va)]),e("div",ha,[t(Q,{content:o.isLocking(w.path)?"处理中...":o.isFileLocked(w.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(V,{type:o.isFileLocked(w.path)?"danger":"info",size:"small",text:"",loading:o.isLocking(w.path),disabled:o.isLocking(w.path),onClick:B=>G(w.path,B),class:"file-action-btn"},{default:s(()=>[o.isLocking(w.path)?J("",!0):(u(),E(K,{key:0,size:"16"},{default:s(()=>[(u(),E(Tt(o.isFileLocked(w.path)?l(Lt):l($s))))]),_:2},1024))]),_:2},1032,["type","loading","disabled","onClick"])]),_:2},1032,["content"]),o.isFileLocked(w.path)?J("",!0):(u(!0),b(xe,{key:0},Me(h(w.type),B=>(u(),E(Q,{key:B.type,content:B.tooltip,placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(V,{type:B.buttonType,size:"small",text:"",onClick:ae=>B.handler(w.path,ae),class:"file-action-btn"},{default:s(()=>[typeof B.icon!="string"?(u(),E(K,{key:0,size:"16"},{default:s(()=>[(u(),E(Tt(B.icon)))]),_:2},1024)):(u(),b("span",ya,M(B.icon),1))]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]))),128))])],10,fa))),128))],512),[[xt,!f.value]])])):J("",!0)}}}),qt=Oe(_a,[["__scopeId","data-v-8552fcd6"]]),wa={class:"card"},ba={class:"status-header"},ka={class:"header-actions"},$a=["element-loading-text"],Ca={key:0,class:"status-box"},Sa={key:1,class:"status-box-wrap"},Ta={key:0,class:"branch-status-info"},Fa={class:"branch-sync-status"},Va={class:"sync-status-content"},La={class:"status-badges"},xa={class:"badge-content"},Ba={class:"badge-content"},za={key:1,class:"file-list-container"},Pa={key:2,class:"empty-status"},ja={class:"empty-icon"},Oa={class:"lock-feature-description"},Da={class:"description-header"},Ra={key:0,class:"empty-locked-files"},Ga={class:"empty-icon"},Ma={key:1,class:"locked-files-list"},Aa={class:"locked-files-header"},Ua={class:"locked-file-items"},Ea={class:"file-info"},Ia={class:"file-path-container"},Na={class:"file-name"},Ha={class:"file-directory"},Ja={class:"file-actions"},Wa={class:"dialog-footer"},qa=je({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(W,{expose:C}){const o=W,i=st(),y=it(),f=I(()=>i.isLoadingStatus),O=d(""),_=d(""),G=d(!1),ee=d(!1),N=d(-1),A=d({});function h(x){return!!A.value[x]}const D=I(()=>i.fileList.map(x=>({path:x.path,name:x.path.split("/").pop()||x.path,type:x.type,locked:te(x.path)})));async function F(x){await ve(x)}async function K(x,S){try{const X=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:x,context:S})})).json();X.success?n.success(X.message):n.error(X.error||"打开文件失败")}catch(ie){n.error(`打开文件失败: ${ie.message}`)}}async function Q(x,S){try{const X=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:x,context:S})})).json();X.success?n.success(X.message):n.error(X.error||"用VSCode打开文件失败")}catch(ie){n.error(`用VSCode打开文件失败: ${ie.message}`)}}const V=d(!1),w=d({staged:!1,unstaged:!1,untracked:!1}),B=d(o.initialDirectory||"");async function ae(){try{if(!B.value){const S=await(await fetch("/api/current_directory")).json();B.value=S.directory||"未知目录"}if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(),n({message:"Git 状态已刷新",type:"success"})}catch(x){n({message:"刷新失败: "+x.message,type:"error"})}}async function ne(x){try{await Ye.confirm(`确认解锁该文件？
${x}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await y.unlockFile(x)}catch{}}async function j(){if(y.lockedFiles.length)try{await Ye.confirm(`确认解锁所有已锁定文件？共 ${y.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const x=[...y.lockedFiles];await Promise.all(x.map(S=>y.unlockFile(S))),await y.loadLockedFiles(),n.success("已清空所有文件锁定")}catch{}}async function ve(x){try{ee.value=!0,O.value=x,N.value=i.fileList.findIndex(ie=>ie.path===x);const S=i.fileList[N.value];if(S&&S.type==="untracked")try{const X=await(await fetch(`/api/file-content?file=${encodeURIComponent(x)}`)).json();X.success&&X.content?_.value=`diff --git a/${x} b/${x}
新文件: ${x}
--- /dev/null
+++ b/${x}
@@ -0,0 +1,${X.content.split(`
`).length} @@
`+X.content.split(`
`).map(ge=>`+${ge}`).join(`
`):_.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(ie){console.error("获取未跟踪文件内容失败:",ie),_.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}else if(S&&S.type==="added"){const X=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(x)}`)).json();_.value=X.diff||"没有变更"}else{const X=await(await fetch(`/api/diff?file=${encodeURIComponent(x)}`)).json();_.value=X.diff||"没有变更"}}catch(S){n({message:"获取文件差异失败: "+S.message,type:"error"}),_.value="获取差异失败: "+S.message}finally{ee.value=!1}}function Y(x){if(G.value=!0,i.fileList.length>0){const S=i.fileList.find(ie=>ie.path===x.path)||i.fileList[0];ve(S.path)}}async function g(x){await i.addFileToStage(x)}async function z(x){await i.unstageFile(x)}async function U(){try{if(!i.isGitRepo)return;await i.fetchStatus(),await i.getBranchStatus(!0),n.success("Git 状态已刷新")}catch(x){n.error("刷新失败: "+x.message)}}async function fe(){try{await i.gitPull(),await ae()}catch(x){console.error("拉取操作发生错误:",x)}}async function pe(){try{await i.gitFetchAll(),await ae()}catch(x){console.error("获取远程分支信息操作发生错误:",x)}}async function me(x){try{await Ye.confirm(`确定要撤回文件 "${x}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const ie=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:x})})).json();ie.success?(n.success("已撤回文件修改"),await ae()):n.error(ie.error?`撤回失败: ${ie.error}`:"撤回文件修改失败，请重试")}catch(S){if(S==="cancel"||S.message==="cancel")return;const ie=S.message||"未知错误";ie!=="undefined"?n.error(`撤回文件修改失败: ${ie}`):n.error("撤回文件修改失败，请重试")}}function he(x){const S=x.split("/");return S[S.length-1]}function Z(x){const S=x.split("/");return S.length<=1?"":S.slice(0,-1).join("/")}function te(x){const S=x.replace(/\\/g,"/");return y.lockedFiles.some(X=>{const ge=X.replace(/\\/g,"/");return S===ge})}async function ue(x){if(!A.value[x]){A.value[x]=!0;try{te(x)?await y.unlockFile(x):await y.lockFile(x)}finally{delete A.value[x]}}}function we(x){w.value[x]=!w.value[x]}return gt(()=>{ae(),y.loadConfig(),y.loadLockedFiles()}),Re(()=>i.autoUpdateEnabled,(x,S)=>{console.log(`自动更新状态变更: ${S} -> ${x}`),i.toggleAutoUpdate()},{immediate:!1}),C({refreshStatus:U}),(x,S)=>{const ie=Cs,X=Ge,ge=ke,be=tt,Ae=zt,Pe=fo,$e=os;return u(),b(xe,null,[e("div",wa,[e("div",ba,[S[5]||(S[5]=e("h2",null,"Git 状态",-1)),e("div",ka,[t(X,{content:l(i).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ie,{modelValue:l(i).autoUpdateEnabled,"onUpdate:modelValue":S[0]||(S[0]=re=>l(i).autoUpdateEnabled=re),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":l(dt),"inactive-icon":l(ts),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),t(X,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"primary",icon:l(Qt),circle:"",size:"small",onClick:fe,loading:l(i).isGitPulling,disabled:!l(i).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),t(X,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[at(t(ge,{type:"primary",icon:l(mt),circle:"",size:"small",onClick:pe,loading:l(i).isGitFetching},null,8,["icon","loading"]),[[xt,!1]])]),_:1}),l(y).lockedFiles.length>0?(u(),E(X,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"warning",circle:"",size:"small",onClick:S[1]||(S[1]=re=>V.value=!0)},{default:s(()=>[t(be,null,{default:s(()=>[t(l(Lt))]),_:1})]),_:1})]),_:1})):J("",!0),t(X,{content:"刷新状态",placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[t(ge,{type:"primary",icon:l(uo),circle:"",size:"small",onClick:U,loading:f.value},null,8,["icon","loading"])]),_:1})])]),at((u(),b("div",{class:"card-content","element-loading-text":l(i).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[l(i).isGitRepo?(u(),b("div",Sa,[l(i).hasUpstream&&(l(i).branchAhead>0||l(i).branchBehind>0)?(u(),b("div",Ta,[e("div",Fa,[e("div",Va,[t(X,{content:"本地分支与远程分支的状态对比",placement:"top","show-after":200},{default:s(()=>[e("div",La,[l(i).branchAhead>0?(u(),E(Ae,{key:0,size:"small",type:"warning",class:"status-badge"},{default:s(()=>[e("span",xa,[t(be,null,{default:s(()=>[t(l(Ss))]),_:1}),R(" 你的分支领先 'origin/"+M(l(i).currentBranch)+"' "+M(l(i).branchAhead)+" 个提交 ",1)])]),_:1})):J("",!0),l(i).branchBehind>0?(u(),E(Ae,{key:1,size:"small",type:"info",class:"status-badge"},{default:s(()=>[e("span",Ba,[t(be,null,{default:s(()=>[t(l(Ut))]),_:1}),R(" 你的分支落后 'origin/"+M(l(i).currentBranch)+"' "+M(l(i).branchBehind)+" 个提交 ",1)])]),_:1})):J("",!0)])]),_:1})])])])):J("",!0),l(i).fileList.length?(u(),b("div",za,[t(qt,{files:l(i).fileList.filter(re=>re.type==="added"),title:"已暂存的更改","group-key":"staged","collapsed-groups":w.value,"is-file-locked":te,"is-locking":h,"get-file-name":he,"get-file-directory":Z,onToggleCollapse:we,onFileClick:Y,onToggleFileLock:ue,onUnstageFile:z},null,8,["files","collapsed-groups"]),t(qt,{files:l(i).fileList.filter(re=>re.type==="modified"||re.type==="deleted"),title:"未暂存的更改","group-key":"unstaged","collapsed-groups":w.value,"is-file-locked":te,"is-locking":h,"get-file-name":he,"get-file-directory":Z,onToggleCollapse:we,onFileClick:Y,onToggleFileLock:ue,onStageFile:g,onRevertFileChanges:me},null,8,["files","collapsed-groups"]),t(qt,{files:l(i).fileList.filter(re=>re.type==="untracked"),title:"未跟踪的文件","group-key":"untracked","collapsed-groups":w.value,"is-file-locked":te,"is-locking":h,"get-file-name":he,"get-file-directory":Z,onToggleCollapse:we,onFileClick:Y,onToggleFileLock:ue,onStageFile:g,onRevertFileChanges:me},null,8,["files","collapsed-groups"])])):l(i).isGitRepo?(u(),b("div",Pa,[e("div",ja,[t(be,null,{default:s(()=>[t(l(Zt))]),_:1})]),S[7]||(S[7]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),S[8]||(S[8]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):J("",!0)])):(u(),b("div",Ca,S[6]||(S[6]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,$a)),[[$e,l(i).isGitPulling||l(i).isGitFetching]])]),t(Qe,{modelValue:G.value,"onUpdate:modelValue":S[2]||(S[2]=re=>G.value=re),title:"文件差异","custom-class":"file-diff-dialog",size:"extra-large",type:"flex","destroy-on-close":""},{default:s(()=>[t(ls,{files:D.value,diffContent:_.value,selectedFile:O.value,context:"git-status",emptyText:"选择文件查看差异",onFileSelect:F,onOpenFile:K,onOpenWithVscode:Q},null,8,["files","diffContent","selectedFile"])]),_:1},8,["modelValue"]),t(Qe,{modelValue:V.value,"onUpdate:modelValue":S[4]||(S[4]=re=>V.value=re),title:"锁定文件管理",size:"large","destroy-on-close":""},{footer:s(()=>[e("span",Wa,[t(ge,{onClick:S[3]||(S[3]=re=>V.value=!1)},{default:s(()=>S[16]||(S[16]=[R("关闭")])),_:1})])]),default:s(()=>[e("div",Oa,[e("div",Da,[t(be,{class:"description-icon"},{default:s(()=>[t(l(Xt))]),_:1}),S[9]||(S[9]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),S[10]||(S[10]=e("div",{class:"description-content"},[e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区")])],-1))]),t(Pe),l(y).lockedFiles.length===0?(u(),b("div",Ra,[e("div",Ga,[t(be,null,{default:s(()=>[t(l(Lt))]),_:1})]),S[11]||(S[11]=e("p",null,"当前没有锁定的文件",-1)),S[12]||(S[12]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(u(),b("div",Ma,[e("div",Aa,[e("span",null,"🔒 已锁定 "+M(l(y).lockedFiles.length)+" 个文件",1),t(X,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:s(()=>[t(be,{class:"info-icon"},{default:s(()=>[t(l(Xt))]),_:1})]),_:1}),S[14]||(S[14]=e("div",{style:{flex:"1"}},null,-1)),t(ge,{type:"danger",size:"small",plain:"",disabled:!l(y).lockedFiles.length,onClick:j},{default:s(()=>S[13]||(S[13]=[R(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",Ua,[(u(!0),b(xe,null,Me(l(y).lockedFiles,re=>(u(),b("div",{key:re,class:"locked-file-item"},[e("div",Ea,[S[15]||(S[15]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",Ia,[e("span",Na,M(he(re)),1),e("span",Ha,M(Z(re)),1)])]),e("div",Ja,[t(X,{content:"解锁文件",placement:"top","hide-after":1e3},{default:s(()=>[t(ge,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:l($s),"aria-label":"解锁",onClick:Be=>ne(re)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),Ya=Oe(qa,[["__scopeId","data-v-c496cc2b"]]),Ka={class:"loading-container"},Qa={class:"loading-text"},Xa={key:0,class:"loading-progress"},Za=je({__name:"GlobalLoading",props:{visible:{type:Boolean,default:!1},text:{default:"加载中..."},showProgress:{type:Boolean,default:!1},progress:{default:0}},setup(W){return(C,o)=>(u(),E(Ts,{to:"body"},[t(as,{name:"loading-fade"},{default:s(()=>[C.visible?(u(),b("div",{key:0,class:"global-loading-overlay",onClick:o[0]||(o[0]=Bt(()=>{},["stop"]))},[e("div",Ka,[o[1]||(o[1]=e("div",{class:"loading-spinner"},[e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"}),e("div",{class:"spinner-ring"})],-1)),e("div",Qa,M(C.text),1),C.showProgress?(u(),b("div",Xa,[e("div",{class:"progress-bar",style:ht({width:C.progress+"%"})},null,4)])):J("",!0)])])):J("",!0)]),_:1})]))}}),el=Oe(Za,[["__scopeId","data-v-12e53b20"]]),tl={class:"success-container"},sl={class:"success-text"},ol={key:0,class:"success-description"},al=je({__name:"SuccessModal",props:{visible:{type:Boolean,default:!1},text:{default:"操作成功！"},description:{default:""}},setup(W){return(C,o)=>(u(),E(Ts,{to:"body"},[t(as,{name:"success-fade"},{default:s(()=>[C.visible?(u(),b("div",{key:0,class:"success-overlay",onClick:o[0]||(o[0]=Bt(()=>{},["stop"]))},[e("div",tl,[o[1]||(o[1]=e("div",{class:"success-icon"},[e("svg",{viewBox:"0 0 52 52",class:"success-svg"},[e("circle",{class:"success-circle",cx:"26",cy:"26",r:"25",fill:"none"}),e("path",{class:"success-check",fill:"none",d:"m14.1 27.2l7.1 7.2 16.7-16.8"})])],-1)),e("div",sl,M(C.text),1),C.description?(u(),b("div",ol,M(C.description),1)):J("",!0)])])):J("",!0)]),_:1})]))}}),ll=Oe(al,[["__scopeId","data-v-c64a7b5e"]]),et=Fs({visible:!1,text:"加载中...",showProgress:!1,progress:0});function nl(){return{loadingState:et,show:f=>{et.visible=!0,et.text=(f==null?void 0:f.text)||"加载中...",et.showProgress=(f==null?void 0:f.showProgress)||!1,et.progress=(f==null?void 0:f.progress)||0},hide:()=>{et.visible=!1},updateProgress:f=>{et.progress=Math.max(0,Math.min(100,f))},updateText:f=>{et.text=f},setText:f=>{et.visible&&(et.text=f)}}}const Ct=Fs({visible:!1,text:"操作成功！",description:""});function il(){const W=o=>{Ct.visible=!0,Ct.text=(o==null?void 0:o.text)||"操作成功！",Ct.description=(o==null?void 0:o.description)||"";const i=(o==null?void 0:o.duration)||2e3;setTimeout(()=>{C()},i)},C=()=>{Ct.visible=!1};return{successState:Ct,show:W,hide:C}}const rl={class:"template-form"},cl={class:"template-form-buttons"},ul={key:0,class:"template-list"},dl={key:1,class:"template-list-scroll"},fl={class:"template-content"},pl={class:"template-actions"},ml={key:1,class:"templates-container"},vl={class:"message-templates-list"},gl={class:"templates-scroll-area"},hl={class:"template-content"},yl={class:"template-actions"},_l={key:0,class:"current-default-message"},wl={class:"default-message-content"},bl={key:2,class:"message-help-text"},kl=je({__name:"TemplateManager",props:{visible:{type:Boolean},type:{},title:{},placeholder:{default:"输入新模板内容"},editPlaceholder:{default:"编辑模板内容"},emptyDescription:{default:"暂无保存的模板"},showDefaultSection:{type:Boolean,default:!1},showHelpText:{type:Boolean,default:!1}},emits:["update:visible","use-template","set-default"],setup(W,{expose:C,emit:o}){const i=W,y=o,f=it(),O=d(""),_=d(!1),G=d(""),ee=d(-1),N=d(!1),A=d(!1),h=I(()=>{switch(i.type){case"description":return f.descriptionTemplates||[];case"scope":return f.scopeTemplates||[];case"message":return f.messageTemplates||[];default:return[]}}),D=I(()=>i.type==="message"?f.defaultCommitMessage:""),F=I(()=>_.value?i.editPlaceholder:i.placeholder),K=I(()=>_.value?"更新模板":"添加模板"),Q=I({get:()=>i.visible,set:Y=>y("update:visible",Y)});Re(Q,Y=>{Y||V()});function V(){O.value="",_.value=!1,G.value="",ee.value=-1}async function w(){if(!O.value.trim()){n.warning("模板内容不能为空");return}try{N.value=!0,_.value?await f.updateTemplate(G.value,O.value,i.type)&&V():await f.saveTemplate(O.value,i.type)&&(O.value="")}catch(Y){n.error(`模板保存失败: ${Y.message}`)}finally{N.value=!1}}function B(Y){y("use-template",Y),i.type!=="message"&&(Q.value=!1)}function ae(Y,g){_.value=!0,G.value=Y,O.value=Y,ee.value=g}function ne(){V()}async function j(Y){try{const g=await f.deleteTemplate(Y,i.type)}catch(g){n.error(`模板删除失败: ${g.message}`)}}async function ve(){if(!(i.type!=="message"||!O.value.trim()))try{A.value=!0,await f.saveDefaultMessage(O.value)&&y("set-default",O.value)}catch(Y){n.error(`设置默认提交信息失败: ${Y.message}`)}finally{A.value=!1}}return C({resetForm:V}),(Y,g)=>{const z=Et,U=ke,fe=Vt,pe=mo,me=Vs,he=zt,Z=es;return u(),E(Z,{modelValue:Q.value,"onUpdate:modelValue":g[1]||(g[1]=te=>Q.value=te),title:Y.title,width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:ye(Y.type==="message"?"message-template-dialog":"template-dialog")},{default:s(()=>[e("div",{class:ye(["template-container",{"message-template-container":Y.type==="message"}])},[e("div",rl,[t(z,{modelValue:O.value,"onUpdate:modelValue":g[0]||(g[0]=te=>O.value=te),placeholder:F.value,class:"template-input",clearable:"",onKeyup:po(w,["enter"])},null,8,["modelValue","placeholder"]),e("div",cl,[_.value?(u(),E(U,{key:0,onClick:ne},{default:s(()=>g[2]||(g[2]=[R("取消")])),_:1})):J("",!0),t(U,{type:"primary",onClick:w,disabled:!O.value.trim()||N.value,loading:N.value},{default:s(()=>[R(M(K.value),1)]),_:1},8,["disabled","loading"]),Y.type==="message"?(u(),E(U,{key:1,type:"success",onClick:ve,disabled:!O.value.trim()||A.value,loading:A.value,plain:""},{default:s(()=>g[3]||(g[3]=[R(" 设为默认提交信息 ")])),_:1},8,["disabled","loading"])):J("",!0)])]),Y.type!=="message"?(u(),b("div",ul,[e("h3",null,"已保存"+M(Y.type==="description"?"模板":"作用域"),1),h.value.length===0?(u(),E(fe,{key:0,description:Y.emptyDescription},null,8,["description"])):(u(),b("div",dl,[(u(!0),b(xe,null,Me(h.value,(te,ue)=>(u(),E(me,{key:ue,class:"template-item"},{default:s(()=>[t(pe,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",fl,M(te),1),e("div",pl,[t(U,{type:"primary",size:"small",onClick:we=>B(te)},{default:s(()=>g[4]||(g[4]=[R("使用")])),_:2},1032,["onClick"]),t(U,{type:"warning",size:"small",icon:l(ut),onClick:we=>ae(te,ue)},{default:s(()=>g[5]||(g[5]=[R(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(U,{type:"danger",size:"small",onClick:we=>j(te)},{default:s(()=>g[6]||(g[6]=[R("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))]))])):(u(),b("div",ml,[e("div",vl,[g[10]||(g[10]=e("h3",null,"已保存模板",-1)),e("div",gl,[h.value.length===0?(u(),E(fe,{key:0,description:Y.emptyDescription},null,8,["description"])):J("",!0),(u(!0),b(xe,null,Me(h.value,(te,ue)=>(u(),E(me,{key:ue,class:"template-item"},{default:s(()=>[t(pe,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:s(()=>[e("div",hl,M(te),1),e("div",yl,[t(U,{type:"primary",size:"small",onClick:we=>B(te)},{default:s(()=>g[7]||(g[7]=[R("使用")])),_:2},1032,["onClick"]),t(U,{type:"warning",size:"small",icon:l(ut),onClick:we=>ae(te,ue)},{default:s(()=>g[8]||(g[8]=[R(" 编辑 ")])),_:2},1032,["icon","onClick"]),t(U,{type:"danger",size:"small",onClick:we=>j(te)},{default:s(()=>g[9]||(g[9]=[R("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),Y.showDefaultSection?(u(),b("div",_l,[g[18]||(g[18]=e("h3",null,"当前默认提交信息",-1)),D.value?(u(),E(me,{key:0,class:"default-message-card"},{default:s(()=>[e("div",wl,M(D.value),1)]),_:1})):(u(),E(fe,{key:1,description:"尚未设置默认提交信息","image-size":100})),Y.showHelpText?(u(),b("div",bl,[g[16]||(g[16]=e("h4",null,"关于默认提交信息",-1)),g[17]||(g[17]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[g[13]||(g[13]=R("你可以通过点击左侧模板的")),t(he,{size:"small",type:"primary"},{default:s(()=>g[11]||(g[11]=[R("使用")])),_:1}),g[14]||(g[14]=R("按钮先选择喜欢的模板，然后点击上方")),t(he,{size:"small",type:"success"},{default:s(()=>g[12]||(g[12]=[R("设为默认提交信息")])),_:1}),g[15]||(g[15]=R("按钮保存。"))])])):J("",!0)])):J("",!0)]))],2)]),_:1},8,["modelValue","title","class"])}}}),Yt=Oe(kl,[["__scopeId","data-v-9593b134"]]),$l={class:"git-command-preview"},Cl={class:"preview-container"},Sl={class:"preview-title"},Tl={class:"preview-content code-command"},Fl=je({__name:"GitCommandPreview",props:{command:{},title:{default:"Git命令预览："},copyButtonText:{default:"复制命令"},placeholder:{default:"<命令内容>"}},setup(W){const C=W,o=I(()=>C.command||C.placeholder);async function i(){if(!C.command){n.warning("没有可复制的命令内容");return}try{await navigator.clipboard.writeText(C.command),n.success("命令已复制到剪贴板")}catch(y){n.error(`复制失败: ${y.message}`)}}return(y,f)=>{const O=tt,_=Ge;return u(),b("div",$l,[e("div",Cl,[e("div",Sl,M(y.title),1),e("div",Tl,M(o.value),1),t(_,{content:y.copyButtonText,placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-command-btn",onClick:i},[t(O,{class:"btn-icon"},{default:s(()=>[t(l(vt))]),_:1})])]),_:1},8,["content"])])])}}}),ws=Oe(Fl,[["__scopeId","data-v-b85a1860"]]),Vl={class:"one-push-content"},Ll={class:"one-push-text"},xl={key:0,class:"one-push-desc"},Bl=je({__name:"QuickPushButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["beforePush","afterPush","clearFields"],setup(W,{emit:C}){const o=st(),i=it(),y=W,f=C;function O(h){const D=h.replace(/\\/g,"/");return i.lockedFiles.some(F=>{const K=F.replace(/\\/g,"/");return D===K})}const _=I(()=>o.fileList.some(h=>!O(h.path))),G=I(()=>!_.value||!y.hasUserCommitMessage||!o.hasUpstream),ee=I(()=>o.isAddingFiles||o.isCommiting||o.isPushing),N=I(()=>_.value?y.hasUserCommitMessage?o.hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改");async function A(){f("beforePush");try{const h=await o.addCommitAndPush(y.finalCommitMessage,y.skipHooks);h&&f("clearFields"),f("afterPush",h)}catch(h){console.error("一键推送失败:",h),f("afterPush",!1)}}return(h,D)=>{const F=tt,K=ke;return u(),E(l(Ge),{content:N.value,placement:"top","show-after":200},{default:s(()=>[t(K,{type:"success",onClick:A,loading:ee.value,disabled:G.value,class:ye([h.from,"one-push-button"])},{default:s(()=>[e("div",Vl,[t(F,{class:"one-push-icon"},{default:s(()=>[t(l(vo))]),_:1}),e("div",Ll,[D[0]||(D[0]=e("span",{class:"one-push-title"},"一键推送所有",-1)),h.from==="form"?(u(),b("span",xl,"暂存 + 提交 + 推送")):J("",!0)])])]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),js=Oe(Bl,[["__scopeId","data-v-58e155b2"]]),zl={key:0},Pl=je({__name:"StageButton",props:{from:{default:"form"}},emits:["click"],setup(W,{emit:C}){const o=C,i=st(),y=it();function f(h){const D=h.replace(/\\/g,"/");return y.lockedFiles.some(F=>{const K=F.replace(/\\/g,"/");return D===K})}function O(){return y.lockedFiles.length===0?!1:i.fileList.some(h=>["modified","deleted","untracked"].includes(h.type)?f(h.path):!1)}const _=I(()=>i.fileList.filter(h=>["modified","deleted","untracked"].includes(h.type)&&!f(h.path)).length),G=I(()=>i.fileList.some(h=>["modified","deleted","untracked"].includes(h.type)&&!f(h.path))),ee=I(()=>!G.value),N=I(()=>G.value?O()?`暂存${_.value}个未暂存文件（逐个添加）`:"暂存所有更改（git add .）":"没有需要暂存的更改");async function A(){o("click");try{let h;O()?h=await i.addToStage():h=await i.addAllToStage(),h&&i.fetchStatus()}catch(h){console.error("添加文件失败:",h)}}return(h,D)=>{const F=ke,K=Ge;return u(),E(K,{content:N.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(F,{type:"primary",onClick:A,loading:l(i).isAddingFiles,disabled:ee.value,class:ye(["stage-button",`from-${h.from}`])},{default:s(()=>[D[0]||(D[0]=R(" 暂存更改 ")),_.value>0?(u(),b("span",zl,"("+M(_.value)+")",1)):J("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Os=Oe(Pl,[["__scopeId","data-v-67a3259e"]]),jl={key:0},Ol=je({__name:"CommitButton",props:{from:{default:"form"},hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1}},emits:["click","beforeCommit","afterCommit"],setup(W,{emit:C}){const o=W,i=C,y=st(),f=it();function O(h){const D=h.replace(/\\/g,"/");return f.lockedFiles.some(F=>{const K=F.replace(/\\/g,"/");return D===K})}const _=I(()=>y.fileList.filter(h=>h.type==="added"&&!O(h.path)).length),G=I(()=>_.value>0),ee=I(()=>!G.value||!o.hasUserCommitMessage),N=I(()=>G.value?o.hasUserCommitMessage?`提交${_.value}个已暂存文件`:"请输入提交信息":"没有已暂存的更改");async function A(){if(o.finalCommitMessage.trim()){i("beforeCommit"),i("click");try{const h=await y.commitChanges(o.finalCommitMessage,o.skipHooks);h&&(y.fetchStatus(),y.fetchLog(),y.getBranchStatus(!0)),i("afterCommit",h)}catch(h){console.error("提交失败:",h),i("afterCommit",!1)}}}return(h,D)=>{const F=ke,K=Ge;return u(),E(K,{content:N.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(F,{type:"primary",onClick:A,loading:l(y).isLoadingStatus,disabled:ee.value,class:ye(["commit-button",`from-${h.from}`])},{default:s(()=>[D[0]||(D[0]=R(" 提交 ")),_.value>0?(u(),b("span",jl,"("+M(_.value)+")",1)):J("",!0)]),_:1},8,["loading","disabled","class"])]),_:1},8,["content"])}}}),Ds=Oe(Ol,[["__scopeId","data-v-5a88b7bc"]]),Dl={key:0},Rl=je({__name:"PushButton",props:{from:{default:"form"}},emits:["click","beforePush","afterPush"],setup(W,{emit:C}){const o=C,i=st(),y=I(()=>i.branchAhead>0),f=I(()=>i.fileList.some(A=>A.type==="added")),O=I(()=>i.hasUpstream&&y.value&&!f.value),_=I(()=>!O.value),G=I(()=>i.hasUpstream?y.value?f.value?"有未提交的暂存更改，请先提交":`推送${i.branchAhead}个本地提交`:"没有需要推送的提交":"当前分支没有上游分支"),ee=I(()=>O.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{});async function N(){o("beforePush"),o("click");try{const A=await i.pushToRemote();A&&await new Promise(h=>setTimeout(h,200)),o("afterPush",A)}catch(A){console.error("推送失败:",A),o("afterPush",!1)}}return(A,h)=>{const D=ke,F=Ge;return u(),E(F,{content:G.value,placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(D,{type:"primary",icon:l(go),onClick:N,loading:l(i).isPushing,disabled:_.value,style:ht(ee.value),class:ye(["push-button",`from-${A.from}`])},{default:s(()=>[h[0]||(h[0]=R(" 推送 ")),y.value?(u(),b("span",Dl,"("+M(l(i).branchAhead)+")",1)):J("",!0)]),_:1},8,["icon","loading","disabled","style","class"])]),_:1},8,["content"])}}}),Rs=Oe(Rl,[["__scopeId","data-v-3c2392d6"]]),Gl={class:"form-bottom-actions"},Ml={class:"actions-flex-container"},Al={class:"left-actions"},Ul={class:"button-grid"},El={class:"right-actions"},Il=je({__name:"GitActionButtons",props:{hasUserCommitMessage:{type:Boolean,default:!1},finalCommitMessage:{default:""},skipHooks:{type:Boolean,default:!1},from:{default:"form"}},emits:["afterCommit","afterPush","beforePush","clearFields"],setup(W,{emit:C}){const o=C;function i(_){o("afterCommit",_)}function y(_){o("afterPush",_)}function f(){o("beforePush")}function O(){o("clearFields")}return(_,G)=>(u(),b("div",Gl,[e("div",Ml,[e("div",Al,[e("div",Ul,[t(Os,{onClick:()=>{},from:_.from},null,8,["from"]),t(Ds,{"has-user-commit-message":_.hasUserCommitMessage,"final-commit-message":_.finalCommitMessage,"skip-hooks":_.skipHooks,onBeforeCommit:()=>{},onAfterCommit:i,onClick:()=>{},from:_.from},null,8,["has-user-commit-message","final-commit-message","skip-hooks","from"]),t(Rs,{onBeforePush:()=>{},onAfterPush:y,onClick:()=>{},from:_.from},null,8,["from"])])]),e("div",El,[t(js,{from:_.from,"has-user-commit-message":_.hasUserCommitMessage,"final-commit-message":_.finalCommitMessage,"skip-hooks":_.skipHooks,onBeforePush:f,onAfterPush:y,onClearFields:O},null,8,["from","has-user-commit-message","final-commit-message","skip-hooks"])])])]))}}),Nl=Oe(Il,[["__scopeId","data-v-6cf9ea2c"]]),Hl={class:"card-header"},Jl={key:0,class:"header-actions"},Wl={class:"card-content"},ql={class:"layout-container"},Yl={key:0,class:"git-config-warning"},Kl={key:1,class:"commit-section"},Ql={class:"commit-options"},Xl={class:"option-card"},Zl={class:"option-header"},en={class:"option-icon"},tn={class:"option-card"},sn={class:"option-header"},on={class:"option-icon warning"},an={class:"option-card"},ln={class:"option-header"},nn={class:"option-icon success"},rn={key:0,class:"commit-form"},cn={class:"description-container"},un={key:1,class:"standard-commit-form"},dn={class:"standard-commit-header"},fn={class:"type-scope-container"},pn={class:"scope-wrapper"},mn={class:"description-container"},vn={class:"advanced-fields"},gn={class:"actions-section"},hn={class:"action-groups"},yn={class:"operations-wrapper"},_n={class:"action-group"},wn={class:"group-buttons"},bn={key:0},kn={class:"action-group"},$n={class:"group-buttons"},Cn={class:"action-group reset-group"},Sn={class:"group-buttons"},Tn={key:0},Fn={class:"action-group branch-group"},Vn={class:"group-buttons"},Ln={class:"action-group"},xn={class:"group-buttons"},Bn={class:"editor-header"},zn={class:"editor-info"},Pn={class:"editor-tips"},jn={class:"json-editor-wrapper"},On={class:"editor-footer"},Dn={class:"footer-left"},Rn={class:"footer-right"},Gn={class:"config-warning-content"},Mn={class:"warning-message"},An={class:"dialog-footer"},Un={class:"stash-dialog-content"},En={class:"merge-dialog-content"},In={class:"merge-intro"},Nn={class:"merge-options"},Hn={class:"dialog-footer"},Jn={class:"stash-list-content"},Wn={key:0,class:"stash-header"},qn={class:"stash-stats"},Yn={class:"stat-item"},Kn={class:"stat-number"},Qn={key:0,class:"stash-actions-header"},Xn={class:"stash-list-container"},Zn={key:0,class:"empty-state"},ei={key:1,class:"stash-cards"},ti={class:"stash-card-content"},si={class:"stash-info"},oi={class:"stash-main-info"},ai={class:"stash-id-badge"},li={class:"stash-id-text"},ni={class:"stash-description"},ii={class:"description-text"},ri={class:"stash-card-actions"},ci={class:"stash-content"},ui={key:0,class:"stash-info-row"},di={class:"stash-id"},fi={class:"stash-id-value"},pi={class:"stash-description"},mi={class:"stash-description-value"},vi={class:"stash-main-content"},gi={key:0,class:"status-updating-indicator"},hi=je({__name:"CommitForm",setup(W,{expose:C}){const o=st(),i=it(),y=d(""),{loadingState:f,show:O,hide:_,setText:G}=nl(),{successState:ee,show:N}=il(),A=d(!1),h=d("输入提交信息..."),D=d(""),F=d(!1),K=d("feat"),Q=d(""),V=d(""),w=d(""),B=d(""),ae=d(!1),ne=d(""),j=d(!1),ve=d(!1),Y=d(""),g=d([]),z=d(!1),U=d(!1),fe=d(""),pe=d({noFf:!1,squash:!1,noCommit:!1,message:""}),me=d([]),he=d(!1),Z=d(!1),te=d(!1),ue=d(!1),we=d(!1),x=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],S=d(!1),ie=d(!1),X=d(""),ge=d(!1),be=d(!0),Ae=d(!1),Pe=d(null),$e=d([]),re=d(""),Be=d(!1),ot=d("");function lt(){X.value="",ge.value=!1,be.value=!ns.value,S.value=!0}async function We(){try{const a=await(await fetch("/api/config/check-file-format")).json();let oe="";a.success&&(a.exists?a.isValidJson||(oe=`系统配置文件格式有误：${a.error}
编辑后保存可能会覆盖原文件内容。`):oe="系统配置文件不存在，将使用默认配置。");const de=i.config;if(ne.value=JSON.stringify(de,null,2),oe){Y.value=oe,ve.value=!0;return}ae.value=!0}catch{n.error("加载配置失败")}}async function Xe(){try{j.value=!0;let p;try{p=JSON.parse(ne.value)}catch(de){n.error(`JSON 解析失败: ${de.message||de}`);return}const oe=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:p})})).json();if(!oe.success)throw new Error(oe.error||"保存失败");await i.loadConfig(!0);try{await i.loadLockedFiles()}catch{}try{Array.isArray(i.descriptionTemplates)&&(g.value=[...i.descriptionTemplates])}catch{}try{Array.isArray(i.scopeTemplates)&&(me.value=[...i.scopeTemplates])}catch{}try{Array.isArray(i.messageTemplates)&&(De.value=[...i.messageTemplates])}catch{}n.success("配置已保存"),ae.value=!1}catch(p){n.error(`保存配置失败: ${p.message||p}`)}finally{j.value=!1}}async function P(){try{const p=await fetch("/api/config/open-file",{method:"POST"}),a=await p.json();if(!p.ok||!(a!=null&&a.success))throw new Error((a==null?void 0:a.error)||"打开失败");n.success("已用系统程序打开配置文件")}catch(p){n.error(`打开配置文件失败: ${(p==null?void 0:p.message)||p}`)}}function r(p){ve.value=!1,p==="continue"?ae.value=!0:p==="open"&&P()}function H(){o.getStashList(),ie.value=!0}async function se(){try{await o.saveStash(X.value,ge.value,be.value),S.value=!1}catch(p){console.error("储藏失败:",p)}}async function Ce(p,a=!1){try{await o.applyStash(p,a),a&&await o.getStashList()}catch(oe){console.error("应用储藏失败:",oe)}}async function Ue(p){Ye.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.dropStash(p),await o.getStashList()}).catch(()=>{})}async function Te(){Ye.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await o.clearAllStashes(),await o.getStashList()}).catch(()=>{})}async function _e(p){if(p){Pe.value=p,Ae.value=!0,Be.value=!0,$e.value=[],re.value="",ot.value="";try{if(!p.id||p.id.length<7){re.value="无效的stash ID",Be.value=!1;return}const oe=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(p.id)}`)).json();oe.success&&Array.isArray(oe.files)?($e.value=oe.files,$e.value.length>0?await Ee(p.id,$e.value[0]):re.value="该stash没有变更文件"):re.value=`获取文件列表失败: ${oe.error||"未知错误"}`}catch(a){re.value=`获取stash详情失败: ${a.message}`}finally{Be.value=!1}}}async function Ee(p,a){Be.value=!0,ot.value=a;try{const de=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(p)}&file=${encodeURIComponent(a)}`)).json();de.success?re.value=de.diff||"没有变更内容":re.value=`获取差异失败: ${de.error||"未知错误"}`}catch(oe){re.value=`获取差异失败: ${oe.message}`}finally{Be.value=!1}}function Fe(p){Pe.value&&Ee(Pe.value.id,p)}async function Se(p,a){try{const de=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p,context:a})})).json();de.success?n.success(de.message):n.error(de.error||"打开文件失败")}catch(oe){n.error(`打开文件失败: ${oe.message}`)}}async function le(p,a){try{const de=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:p,context:a})})).json();de.success?n.success(de.message):n.error(de.error||"用VSCode打开文件失败")}catch(oe){n.error(`用VSCode打开文件失败: ${oe.message}`)}}const De=d([]);Re(F,p=>{localStorage.setItem("zen-gitsync-standard-commit",p.toString())}),Re(te,p=>{localStorage.setItem("zen-gitsync-skip-hooks",p.toString())}),Re(ue,p=>{localStorage.setItem("zen-gitsync-auto-quick-push",p.toString())});const Je=I(()=>{if(!F.value)return y.value||D.value;let p=`${K.value||""}`;return Q.value&&(p+=`(${Q.value})`),p+=`: ${V.value}`,w.value&&(p+=`

${w.value}`),B.value&&(p+=`

${B.value}`),p}),Ze=I(()=>F.value?K.value.trim()!==""&&V.value.trim()!=="":y.value.trim()!==""),yt=I(()=>{const p=`输入提交信息 (默认: ${D.value})`;return ue.value?`${p}（按回车一键推送）`:p}),_t=I(()=>ue.value?"简短描述（必填，按回车一键推送）":"简短描述（必填）"),wt=I(()=>$e.value.map(p=>({path:p,name:p.split("/").pop()||p}))),ft=I(()=>{let p=`git commit -m "${Je.value}"`;return te.value&&(p+=" --no-verify"),p});function nt(){const p=i.config;p&&(h.value=`输入提交信息 (默认: ${p.defaultCommitMessage})`,D.value=p.defaultCommitMessage||"",p.descriptionTemplates&&Array.isArray(p.descriptionTemplates)&&(g.value=p.descriptionTemplates),p.scopeTemplates&&Array.isArray(p.scopeTemplates)&&(me.value=p.scopeTemplates),p.messageTemplates&&Array.isArray(p.messageTemplates)&&(De.value=p.messageTemplates))}function Ie(p){V.value=p,z.value=!1}function bt(p){Q.value=p,he.value=!1}function k(){z.value=!0}function v(){he.value=!0}function q(){N({text:"操作成功！",description:"已完成操作",duration:2e3})}async function c(){try{await o.gitPull(),await o.fetchStatus(),await o.fetchLog(!1)}catch(p){console.error("拉取操作发生错误:",p)}}async function m(){try{await o.gitFetchAll(),await o.fetchStatus(),await o.fetchLog(!1)}catch(p){console.error("获取远程分支信息操作发生错误:",p)}}async function L(){if(!Je.value.trim()){n({message:"提交信息不能为空",type:"warning"});return}try{await o.addAndCommit(Je.value,te.value),ce(),o.fetchStatus(),o.fetchLog()}catch(p){n({message:`暂存并提交失败: ${p.message}`,type:"error"})}}async function $(){try{await Ye.confirm(`确定要重置当前分支 "${o.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await o.resetToRemote(o.currentBranch)&&(o.fetchStatus(),o.fetchLog())}catch(p){p!=="cancel"&&n({message:`重置到远程分支失败: ${p.message}`,type:"error"})}}function ce(){y.value="",V.value="",w.value="",B.value=""}function ze(){O({text:"正在暂存文件...",showProgress:!1})}function He(p){if(_(),p){A.value=!0;try{setTimeout(async()=>{try{console.log("推送成功，状态已更新")}catch(a){console.error("一键推送后处理失败:",a)}finally{A.value=!1}},1e3)}catch(a){console.error("一键推送后处理失败:",a),A.value=!1}}}function qe(p){const a=p.replace(/\\/g,"/");return i.lockedFiles.some(oe=>{const de=oe.replace(/\\/g,"/");return a===de})}const Pt=I(()=>o.fileList.some(p=>["modified","deleted","untracked"].includes(p.type)&&!qe(p.path))),jt=I(()=>o.fileList.filter(p=>p.type==="added"&&!qe(p.path)).length),Ms=I(()=>jt.value>0),As=I(()=>o.fileList.some(p=>!qe(p.path))),Us=I(()=>o.fileList.length>0),ns=I(()=>o.fileList.length>0&&o.fileList.every(p=>qe(p.path))),Es=I(()=>o.branchAhead>0),It=I(()=>o.branchBehind>0),is=I(()=>Ms.value),Is=I(()=>o.hasUpstream&&(Es.value||It.value||As.value));function Ns(p){y.value=p,Z.value=!1}async function rs(p){if(!(!ue.value||!Ze.value||!o.fileList.some(oe=>!qe(oe.path))||!Ze.value||!o.hasUpstream)&&p.key==="Enter"&&!p.shiftKey){p.preventDefault();try{ze();const oe=await o.addCommitAndPush(Je.value,te.value);oe&&ce(),He(oe)}catch(oe){console.error("回车自动一键提交失败:",oe),He(!1)}}}async function Hs(p){try{await i.saveDefaultMessage(p)&&n.success("默认提交信息设置成功")}catch(a){n.error(`设置默认提交信息失败: ${a.message}`)}}Re(()=>o.isAddingFiles,p=>{p&&f.visible&&G("正在暂存文件...")}),Re(()=>o.isCommiting,p=>{p&&f.visible&&G("正在提交更改...")}),Re(()=>o.isPushing,p=>{p&&f.visible&&G("正在推送到远程仓库...")}),gt(async()=>{const p=localStorage.getItem("zen-gitsync-standard-commit");p!==null&&(F.value=p==="true");const a=localStorage.getItem("zen-gitsync-skip-hooks");a!==null&&(te.value=a==="true");const oe=localStorage.getItem("zen-gitsync-auto-quick-push");oe!==null&&(ue.value=oe==="true"),Re(()=>i.config,nt,{immediate:!0}),i.config||await i.loadConfig()});function Js(){fe.value="",pe.value={noFf:!1,squash:!1,noCommit:!1,message:""},pt.value="all",U.value=!0,o.allBranches.length===0&&o.getAllBranches()}const pt=d("all"),Ws=I(()=>{const p=o.allBranches.filter(a=>a!==o.currentBranch);if(console.log("筛选分支列表:",{allBranches:o.allBranches,currentBranch:o.currentBranch,branchTypeFilter:pt.value,filteredBranches:p}),pt.value==="local"){const a=p.filter(oe=>!oe.includes("origin/"));return console.log("本地分支:",a),a}else if(pt.value==="remote"){const a=p.filter(oe=>oe.includes("origin/"));return console.log("远程分支:",a),a}else return console.log("所有分支:",p),p});async function qs(){if(!fe.value){n({message:"请选择要合并的分支",type:"warning"});return}try{await o.mergeBranch(fe.value,pe.value)&&(U.value=!1,await o.fetchStatus(),await o.fetchLog(!1))}catch(p){console.error("合并分支操作发生错误:",p)}}const Ot=d(!1);function Ys(){Ot.value=!Ot.value}C({openConfigEditor:We,toggleGitOperationsDrawer:Ys});function Ks(p,a){const de=[...p?g.value.filter(Ve=>Ve.toLowerCase().includes(p.toLowerCase())).map(Ve=>({value:Ve})):g.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];a(de)}function Qs(p,a){const de=[...p?me.value.filter(Ve=>Ve.toLowerCase().includes(p.toLowerCase())).map(Ve=>({value:Ve})):me.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];a(de)}function Xs(p){p.isSettings?(k(),V.value=""):V.value=p.value}function Zs(p){p.isSettings?(v(),Q.value=""):Q.value=p.value}function eo(p,a){const de=[...p?De.value.filter(Ve=>Ve.toLowerCase().includes(p.toLowerCase())).map(Ve=>({value:Ve})):De.value.map(Ve=>({value:Ve})),{value:"⚙️ 管理模板...",isSettings:!0}];a(de)}function to(p){p.isSettings?(Z.value=!0,y.value=""):y.value=p.value}return(p,a)=>{const oe=Ls,de=tt,Ve=Cs,Nt=ho,cs=Mt,us=At,kt=Et,Le=ke,Ke=Ge,so=_o,ds=zt,fs=es,rt=Bs,$t=wo,ps=xs,Ht=ko,oo=bo,ao=Vt,lo=os;return u(),b(xe,null,[e("div",{class:ye(["card",{"is-pushing":l(o).isPushing}])},[e("div",Hl,[a[38]||(a[38]=e("h2",null,"提交更改",-1)),l(o).userName!==""&&l(o).userEmail!==""?(u(),b("div",Jl,[t(Nl,{"has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":te.value,from:"form",onAfterCommit:a[0]||(a[0]=T=>{T&&ce()}),onAfterPush:He,onBeforePush:ze,onClearFields:ce},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])):J("",!0)]),e("div",Wl,[e("div",ql,[l(o).userName===""||l(o).userEmail===""?(u(),b("div",Yl,[t(oe,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:s(()=>a[39]||(a[39]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(u(),b("div",Kl,[e("div",Ql,[e("div",Xl,[e("div",Zl,[e("div",en,[t(de,null,{default:s(()=>[t(l(ut))]),_:1})]),a[40]||(a[40]=e("div",{class:"option-info"},[e("h4",{class:"option-title"},"提交模式"),e("p",{class:"option-desc"},"选择传统或标准化提交格式")],-1)),t(Ve,{modelValue:F.value,"onUpdate:modelValue":a[1]||(a[1]=T=>F.value=T),"active-text":"标准化","inactive-text":"普通","active-color":"#409eff",class:"option-switch"},null,8,["modelValue"])])]),e("div",tn,[e("div",sn,[e("div",on,[t(de,null,{default:s(()=>[t(l(gs))]),_:1})]),a[41]||(a[41]=e("div",{class:"option-info"},[e("h4",{class:"option-title"},"跳过钩子检查"),e("p",{class:"option-desc"},"添加--no-verify参数")],-1)),t(Ve,{modelValue:te.value,"onUpdate:modelValue":a[2]||(a[2]=T=>te.value=T),"active-color":"#f56c6c",class:"option-switch"},null,8,["modelValue"])])]),e("div",an,[e("div",ln,[e("div",nn,[t(de,null,{default:s(()=>[t(l(dt))]),_:1})]),a[42]||(a[42]=e("div",{class:"option-info"},[e("h4",{class:"option-title"},"回车自动提交"),e("p",{class:"option-desc"},"输入提交信息后按回车直接执行一键推送")],-1)),t(Ve,{modelValue:ue.value,"onUpdate:modelValue":a[3]||(a[3]=T=>ue.value=T),"active-color":"#67c23a",class:"option-switch"},null,8,["modelValue"])])])]),F.value?(u(),b("div",un,[e("div",dn,[e("div",fn,[t(us,{modelValue:K.value,"onUpdate:modelValue":a[5]||(a[5]=T=>K.value=T),placeholder:"提交类型",class:"type-select",clearable:""},{default:s(()=>[(u(),b(xe,null,Me(x,T=>t(cs,{key:T.value,label:T.label,value:T.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",pn,[t(Nt,{modelValue:Q.value,"onUpdate:modelValue":a[6]||(a[6]=T=>Q.value=T),"fetch-suggestions":Qs,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:Zs},null,8,["modelValue"])])]),e("div",mn,[t(Nt,{modelValue:V.value,"onUpdate:modelValue":a[7]||(a[7]=T=>V.value=T),"fetch-suggestions":Ks,placeholder:_t.value,class:"description-input",clearable:"",onSelect:Xs,onKeydown:rs},null,8,["modelValue","placeholder"])])]),e("div",{class:"advanced-options-toggle",onClick:a[8]||(a[8]=T=>we.value=!we.value)},[e("span",null,M(we.value?"收起":"正文及页脚"),1),t(de,{class:ye(["toggle-icon",{"is-active":we.value}])},{default:s(()=>[t(l(Ut))]),_:1},8,["class"])]),at(e("div",vn,[t(kt,{modelValue:w.value,"onUpdate:modelValue":a[9]||(a[9]=T=>w.value=T),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),t(kt,{modelValue:B.value,"onUpdate:modelValue":a[10]||(a[10]=T=>B.value=T),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[xt,we.value]]),t(ws,{command:ft.value,title:"提交命令预览：",placeholder:'git commit -m "<提交信息>"'},null,8,["command"])])):(u(),b("div",rn,[e("div",cn,[t(Nt,{modelValue:y.value,"onUpdate:modelValue":a[4]||(a[4]=T=>y.value=T),"fetch-suggestions":eo,placeholder:yt.value,type:"textarea",rows:4,resize:"none",class:"commit-message-input",onSelect:to,onKeydown:rs},null,8,["modelValue","placeholder"])]),t(ws,{command:ft.value,title:"提交命令预览：",placeholder:'git commit -m "<提交信息>"'},null,8,["command"])]))]))])])],2),t(so,{modelValue:Ot.value,"onUpdate:modelValue":a[13]||(a[13]=T=>Ot.value=T),title:"Git 操作",direction:"rtl",size:"360px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:s(()=>[e("div",gn,[e("div",hn,[e("div",yn,[e("div",_n,[a[45]||(a[45]=e("div",{class:"group-title"},"基础操作",-1)),e("div",wn,[t(Os,{onClick:()=>{},from:"drawer"}),t(Ds,{"has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":te.value,onBeforeCommit:()=>{},onAfterCommit:a[11]||(a[11]=T=>{T&&ce()}),onClick:()=>{},from:"drawer"},null,8,["has-user-commit-message","final-commit-message","skip-hooks"]),t(Rs,{onBeforePush:()=>{},onAfterPush:a[12]||(a[12]=T=>{T&&q()}),onClick:()=>{},from:"drawer"}),t(Ke,{content:It.value?`拉取${l(o).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:l(Qt),onClick:c,loading:l(o).isGitPulling,disabled:!l(o).hasUpstream,class:"action-button",style:ht(l(o).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:s(()=>[a[43]||(a[43]=R(" 拉取 ")),It.value?(u(),b("span",bn,"("+M(l(o).branchBehind)+")",1)):J("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),t(Ke,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"info",icon:l(mt),onClick:m,loading:l(o).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:s(()=>a[44]||(a[44]=[R(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",kn,[a[47]||(a[47]=e("div",{class:"group-title"},"组合操作",-1)),e("div",$n,[t(Ke,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:l(ut),onClick:L,loading:l(o).isAddingFiles||l(o).isCommiting,disabled:!Pt.value||!Ze.value,class:"action-button"},{default:s(()=>a[46]||(a[46]=[R(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),t(js,{from:"drawer","has-user-commit-message":Ze.value,"final-commit-message":Je.value,"skip-hooks":te.value,onBeforePush:ze,onAfterPush:He,onClearFields:ce},null,8,["has-user-commit-message","final-commit-message","skip-hooks"])])])]),e("div",Cn,[a[50]||(a[50]=e("div",{class:"group-title"},"重置操作",-1)),e("div",Sn,[t(Ke,{content:is.value?`撤销${jt.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"warning",icon:l(ss),onClick:l(o).resetHead,loading:l(o).isResetting,disabled:!is.value,class:"action-button reset-button"},{default:s(()=>[a[48]||(a[48]=R(" 重置暂存区 ")),jt.value>0?(u(),b("span",Tn,"("+M(jt.value)+")",1)):J("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),t(Ke,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"danger",icon:l(Ft),onClick:$,loading:l(o).isResetting,disabled:!Is.value,class:"action-button danger-button"},{default:s(()=>a[49]||(a[49]=[R(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",Fn,[a[52]||(a[52]=e("div",{class:"group-title"},"分支操作",-1)),e("div",Vn,[t(Ke,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"primary",icon:l(yo),onClick:Js,loading:l(o).isGitMerging,class:"action-button merge-button"},{default:s(()=>a[51]||(a[51]=[R(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",Ln,[a[55]||(a[55]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",xn,[t(Ke,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"warning",onClick:lt,loading:l(o).isSavingStash,disabled:!Us.value,class:"action-button"},{default:s(()=>a[53]||(a[53]=[R(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),t(Ke,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:s(()=>[t(Le,{type:"info",onClick:H,class:"action-button"},{default:s(()=>a[54]||(a[54]=[R(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:ae.value,"onUpdate:modelValue":a[16]||(a[16]=T=>ae.value=T),title:"编辑配置 JSON",size:"large","height-mode":"fixed","custom-class":"config-editor-dialog","show-footer":!1},{default:s(()=>[e("div",Bn,[e("div",zn,[t(de,{class:"info-icon"},{default:s(()=>[t(l(ut))]),_:1}),a[56]||(a[56]=e("span",{class:"info-text"},"编辑当前项目的配置文件",-1))]),e("div",Pn,[t(ds,{size:"small",type:"info"},{default:s(()=>a[57]||(a[57]=[R("支持JSON格式")])),_:1})])]),e("div",jn,[t(kt,{modelValue:ne.value,"onUpdate:modelValue":a[14]||(a[14]=T=>ne.value=T),type:"textarea",spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON...",class:"json-editor"},null,8,["modelValue"])]),e("div",On,[e("div",Dn,[t(Le,{icon:l(mt),onClick:P,class:"system-config-btn"},{default:s(()=>a[58]||(a[58]=[R(" 打开系统配置文件 ")])),_:1},8,["icon"])]),e("div",Rn,[t(Le,{onClick:a[15]||(a[15]=T=>ae.value=!1)},{default:s(()=>a[59]||(a[59]=[R("取消")])),_:1}),t(Le,{type:"primary",loading:j.value,icon:l(dt),onClick:Xe,class:"save-btn"},{default:s(()=>a[60]||(a[60]=[R(" 保存配置 ")])),_:1},8,["loading","icon"])])])]),_:1},8,["modelValue"]),t(fs,{modelValue:ve.value,"onUpdate:modelValue":a[20]||(a[20]=T=>ve.value=T),title:"配置文件格式提示",width:"500px","close-on-click-modal":!1,"close-on-press-escape":!1,"show-close":!1},{footer:s(()=>[e("span",An,[t(Le,{onClick:a[17]||(a[17]=T=>r("cancel"))},{default:s(()=>a[61]||(a[61]=[R("取消")])),_:1}),t(Le,{type:"info",onClick:a[18]||(a[18]=T=>r("open"))},{default:s(()=>a[62]||(a[62]=[R("打开系统配置文件")])),_:1}),t(Le,{type:"primary",onClick:a[19]||(a[19]=T=>r("continue"))},{default:s(()=>a[63]||(a[63]=[R("继续编辑")])),_:1})])]),default:s(()=>[e("div",Gn,[t(de,{class:"warning-icon",color:"#f56c6c",size:"24"},{default:s(()=>[t(l(gs))]),_:1}),e("p",Mn,M(Y.value),1)])]),_:1},8,["modelValue"]),t(Yt,{visible:z.value,"onUpdate:visible":a[21]||(a[21]=T=>z.value=T),type:"description",title:"简短描述模板设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板",onUseTemplate:Ie},null,8,["visible"]),t(Yt,{visible:he.value,"onUpdate:visible":a[22]||(a[22]=T=>he.value=T),type:"scope",title:"作用域模板设置",placeholder:"输入新作用域模板","edit-placeholder":"编辑作用域模板内容","empty-description":"暂无保存的作用域",onUseTemplate:bt},null,8,["visible"]),t(Yt,{visible:Z.value,"onUpdate:visible":a[23]||(a[23]=T=>Z.value=T),type:"message",title:"默认提交信息设置",placeholder:"输入新模板内容","edit-placeholder":"编辑模板内容","empty-description":"暂无保存的模板","show-default-section":!0,"show-help-text":!0,onUseTemplate:Ns,onSetDefault:Hs},null,8,["visible"]),t(Qe,{modelValue:S.value,"onUpdate:modelValue":a[27]||(a[27]=T=>S.value=T),title:"储藏更改 (Git Stash)",size:"medium","close-on-click-modal":!1,"show-footer":"","confirm-text":"储藏","confirm-loading":l(o).isSavingStash,onConfirm:se},{default:s(()=>[e("div",Un,[a[66]||(a[66]=e("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),t(ps,{"label-position":"top"},{default:s(()=>[t(rt,{label:"储藏说明 (可选)"},{default:s(()=>[t(kt,{modelValue:X.value,"onUpdate:modelValue":a[24]||(a[24]=T=>X.value=T),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),t(rt,null,{default:s(()=>[t($t,{modelValue:ge.value,"onUpdate:modelValue":a[25]||(a[25]=T=>ge.value=T)},{default:s(()=>a[64]||(a[64]=[R(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1}),t(rt,null,{default:s(()=>[t($t,{modelValue:be.value,"onUpdate:modelValue":a[26]||(a[26]=T=>be.value=T),disabled:ns.value},{default:s(()=>a[65]||(a[65]=[R(" 排除锁定文件 ")])),_:1},8,["modelValue","disabled"])]),_:1})]),_:1})])]),_:1},8,["modelValue","confirm-loading"]),t(fs,{title:"合并分支",modelValue:U.value,"onUpdate:modelValue":a[35]||(a[35]=T=>U.value=T),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:s(()=>[e("div",Hn,[t(Le,{onClick:a[34]||(a[34]=T=>U.value=!1)},{default:s(()=>a[73]||(a[73]=[R("取消")])),_:1}),t(Le,{type:"primary",onClick:qs,loading:l(o).isGitMerging,disabled:!fe.value,class:"merge-confirm-btn"},{default:s(()=>a[74]||(a[74]=[R(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:s(()=>[e("div",En,[e("p",In,"选择要合并到当前分支 ("+M(l(o).currentBranch)+") 的分支:",1),t(ps,{"label-position":"top"},{default:s(()=>[t(rt,{label:"分支类型"},{default:s(()=>[t(oo,{modelValue:pt.value,"onUpdate:modelValue":a[28]||(a[28]=T=>pt.value=T),size:"small"},{default:s(()=>[t(Ht,{label:"all"},{default:s(()=>a[67]||(a[67]=[R("所有分支")])),_:1}),t(Ht,{label:"local"},{default:s(()=>a[68]||(a[68]=[R("本地分支")])),_:1}),t(Ht,{label:"remote"},{default:s(()=>a[69]||(a[69]=[R("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),t(rt,{label:"选择分支"},{default:s(()=>[t(us,{modelValue:fe.value,"onUpdate:modelValue":a[29]||(a[29]=T=>fe.value=T),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:s(()=>[(u(!0),b(xe,null,Me(Ws.value,T=>(u(),E(cs,{key:T,label:T,value:T},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),t(rt,{label:"合并选项"},{default:s(()=>[e("div",Nn,[t($t,{modelValue:pe.value.noFf,"onUpdate:modelValue":a[30]||(a[30]=T=>pe.value.noFf=T)},{default:s(()=>[t(Ke,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:s(()=>a[70]||(a[70]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),t($t,{modelValue:pe.value.squash,"onUpdate:modelValue":a[31]||(a[31]=T=>pe.value.squash=T)},{default:s(()=>[t(Ke,{content:"将多个提交压缩为一个提交",placement:"top"},{default:s(()=>a[71]||(a[71]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),t($t,{modelValue:pe.value.noCommit,"onUpdate:modelValue":a[32]||(a[32]=T=>pe.value.noCommit=T)},{default:s(()=>[t(Ke,{content:"执行合并但不自动创建提交",placement:"top"},{default:s(()=>a[72]||(a[72]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),pe.value.noFf&&!pe.value.noCommit?(u(),E(rt,{key:0,label:"合并提交信息 (可选)"},{default:s(()=>[t(kt,{modelValue:pe.value.message,"onUpdate:modelValue":a[33]||(a[33]=T=>pe.value.message=T),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):J("",!0)]),_:1})])]),_:1},8,["modelValue"]),t(Qe,{modelValue:ie.value,"onUpdate:modelValue":a[36]||(a[36]=T=>ie.value=T),title:"储藏列表 (Git Stash)",size:"large","show-footer":!1,"custom-class":"stash-list-dialog"},{default:s(()=>[e("div",Jn,[l(o).isLoadingStashes?J("",!0):(u(),b("div",Wn,[e("div",qn,[e("div",Yn,[t(de,{class:"stat-icon"},{default:s(()=>[t(l(mt))]),_:1}),e("span",Kn,M(l(o).stashes.length),1),a[75]||(a[75]=e("span",{class:"stat-label"},"个储藏",-1))])]),l(o).stashes.length>0?(u(),b("div",Qn,[t(Le,{type:"danger",size:"small",icon:l(Ft),onClick:Te,loading:l(o).isDroppingStash,class:"clear-all-btn"},{default:s(()=>a[76]||(a[76]=[R(" 清空所有储藏 ")])),_:1},8,["icon","loading"])])):J("",!0)])),at((u(),b("div",Xn,[l(o).stashes.length===0&&!l(o).isLoadingStashes?(u(),b("div",Zn,[t(ao,{description:"暂无储藏记录","image-size":120},{image:s(()=>[t(de,{class:"empty-icon"},{default:s(()=>[t(l(mt))]),_:1})]),description:s(()=>a[77]||(a[77]=[e("p",{class:"empty-text"},"还没有任何储藏记录",-1),e("p",{class:"empty-hint"},"使用 git stash 可以临时保存工作进度",-1)])),_:1})])):(u(),b("div",ei,[(u(!0),b(xe,null,Me(l(o).stashes,(T,ms)=>(u(),b("div",{key:T.id,class:ye(["stash-card",{"stash-card-latest":ms===0}])},[e("div",ti,[e("div",si,[e("div",oi,[e("div",ai,[t(de,{class:"badge-icon"},{default:s(()=>[t(l(mt))]),_:1}),e("span",li,M(T.id),1),ms===0?(u(),E(ds,{key:0,size:"small",type:"success",class:"latest-tag"},{default:s(()=>a[78]||(a[78]=[R("最新")])),_:1})):J("",!0)]),e("div",ni,[e("span",ii,M(T.description),1)])])]),e("div",ri,[t(Le,{size:"small",type:"info",icon:l(ut),onClick:Jt=>_e(T),loading:Be.value,class:"action-btn view-btn"},{default:s(()=>a[79]||(a[79]=[R(" 查看 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"success",icon:l(Qt),onClick:Jt=>Ce(T.id,!1),loading:l(o).isApplyingStash,class:"action-btn apply-btn"},{default:s(()=>a[80]||(a[80]=[R(" 应用 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"primary",icon:l(dt),onClick:Jt=>Ce(T.id,!0),loading:l(o).isApplyingStash,class:"action-btn apply-pop-btn"},{default:s(()=>a[81]||(a[81]=[R(" 应用并删除 ")])),_:2},1032,["icon","onClick","loading"]),t(Le,{size:"small",type:"danger",icon:l(Ft),onClick:Jt=>Ue(T.id),loading:l(o).isDroppingStash,class:"action-btn delete-btn"},{default:s(()=>a[82]||(a[82]=[R(" 删除 ")])),_:2},1032,["icon","onClick","loading"])])])],2))),128))]))])),[[lo,l(o).isLoadingStashes]])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:Ae.value,"onUpdate:modelValue":a[37]||(a[37]=T=>Ae.value=T),title:"储藏详情","custom-class":"stash-detail-dialog",size:"extra-large",type:"flex","close-on-click-modal":!1},{default:s(()=>[e("div",ci,[Pe.value?(u(),b("div",ui,[e("div",di,[a[83]||(a[83]=e("span",{class:"info-label"},"Stash ID:",-1)),e("code",fi,M(Pe.value.id),1)]),e("div",pi,[a[84]||(a[84]=e("span",{class:"info-label"},"描述:",-1)),e("span",mi,M(Pe.value.description),1)])])):J("",!0),e("div",vi,[t(ls,{files:wt.value,diffContent:re.value,selectedFile:ot.value,context:"stash-detail",emptyText:"该stash没有变更文件",onFileSelect:Fe,onOpenFile:Se,onOpenWithVscode:le},null,8,["files","diffContent","selectedFile"])])])]),_:1},8,["modelValue"]),t(as,{name:"el-fade-in-linear"},{default:s(()=>[A.value?(u(),b("div",gi,[t(de,{class:"is-loading"},{default:s(()=>[t(l(zs))]),_:1}),a[85]||(a[85]=e("span",null,"更新状态中...",-1))])):J("",!0)]),_:1}),t(el,{visible:l(f).visible,text:l(f).text,"show-progress":l(f).showProgress,progress:l(f).progress},null,8,["visible","text","show-progress","progress"]),t(ll,{visible:l(ee).visible,text:l(ee).text,description:l(ee).description},null,8,["visible","text","description"])],64)}}}),yi=Oe(hi,[["__scopeId","data-v-7546fbec"]]),_i={class:"log-header"},wi={class:"log-actions"},bi={key:0,class:"filter-panel-header"},ki={class:"filter-form"},$i={class:"filter-item"},Ci={class:"filter-item"},Si={class:"filter-item"},Ti={class:"filter-item"},Fi={class:"filter-actions"},Vi={key:0},Li={key:1,class:"content-area-content"},xi={key:0,class:"graph-view"},Bi={key:0,class:"commit-count"},zi={class:"graph-controls"},Pi={class:"zoom-controls"},ji={class:"scale-info"},Oi={key:1,class:"table-view-container"},Di=["onClick"],Ri={class:"commit-message-cell"},Gi={class:"message-content"},Mi={key:0,class:"branch-container"},Ai={class:"message-text"},Ui={class:"author-name"};const Ei={class:"commit-detail-container"},Ii={key:0,class:"commit-info"},Ni={class:"commit-info-header"},Hi={class:"info-item"},Ji={class:"item-value"},Wi={class:"info-item"},qi={class:"item-value"},Yi={class:"info-item"},Ki={class:"item-value"},Qi={class:"commit-message-container"},Xi=["innerHTML"],St=.5,Gt=1.5,Kt=.1,Zi=je({__name:"LogList",setup(W,{expose:C}){const o=st();let i=[];const y=d(i),f=d(""),O=d(!1),_=I(()=>o.isLoadingLog||O.value),G=d(!1),ee=d(0),N=d(!1),A=d(null),h=d(1),D=d(!0),F=d(!1),K=d(null),Q=d(!1),V=d(null),w=d([]),B=d(""),ae=d(!1),ne=d(""),j=d(1),ve=d(!1),Y=d(!1),g=d([]),z=d(""),U=d(null),fe=d([]),pe=d([]),me=d([]),he=d(!1),Z=d(0),te=d(0),ue=d(null),we=I(()=>y.value),x=I(()=>w.value.map(k=>({path:k,name:k.split("/").pop()||k})));async function S(k=!1,v=1){if(!st().isGitRepo){f.value="当前目录不是Git仓库";return}try{v>1?F.value=!0:O.value=!0;const c=new URLSearchParams;c.append("page",v.toString()),c.append("all",k.toString()),c.append("with_parents","true"),g.value.length>0&&c.append("author",g.value.join(",")),pe.value.length>0&&c.append("branch",pe.value.join(",")),z.value&&c.append("message",z.value),U.value&&Array.isArray(U.value)&&U.value.length===2&&(c.append("dateFrom",U.value[0]),c.append("dateTo",U.value[1])),c.append("_t",Date.now().toString());const L=await(await fetch(`/api/log?${c.toString()}`)).json();if(!L||!L.data||!Array.isArray(L.data)){f.value="加载提交历史失败: 服务器返回数据格式不正确";return}const $=v>1;$?L.data.forEach(ce=>i.push(ce)):(i.length=0,L.data.forEach(ce=>i.push(ce))),y.value=[...i],h.value=v,ee.value=L.total||i.length,D.value=L.hasMore===!0,$||(ve.value=!0,setTimeout(()=>{ve.value=!1},2e3)),!$&&N.value?setTimeout(ie,0):!$&&!N.value&&!k&&ct(()=>{Be(),setTimeout(nt,200)}),f.value=""}catch(c){f.value="加载提交历史失败: "+(c instanceof Error?c.message:String(c)),v>1&&(D.value=!1)}finally{v>1?F.value=!1:O.value=!1}}async function ie(){if(A.value&&i.length!==0)try{A.value.innerHTML="";const k=jo(A.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),v={},q=k.branch(o.currentBranch||"main");v[o.currentBranch||"main"]=q,i.forEach(c=>{let m=q;if(c.branch){const L=be(c.branch.split(",")[0]);v[L]||(v[L]=k.branch(L)),m=v[L]}m.commit({hash:c.hash,subject:c.message,author:`${c.author} <${c.email}>`})}),setTimeout(()=>{H()},100)}catch(k){f.value="渲染图表失败: "+(k instanceof Error?k.message:String(k))}}function X(){N.value=!N.value,N.value&&i.length>0&&setTimeout(ie,0)}function ge(){G.value=!G.value,G.value||(D.value=!0),h.value=1,S(G.value),ct(()=>{setTimeout(()=>{!N.value&&!G.value&&(Be(),nt())},300)})}function be(k){return k.includes("HEAD -> ")?k.replace("HEAD -> ",""):k.includes("origin/")?k:k.trim()}function Ae(k){return k.includes("HEAD")?"success":k.includes("origin/")?"warning":"info"}const Pe=d(null),$e=d(null);function re(k){if(N.value||!D.value||F.value||_.value)return;const v=k.target,{scrollTop:q,scrollHeight:c,clientHeight:m}=v;c-q-m<=20&&Fe()}function Be(){if(!Pe.value)return;const k=Pe.value.$el.querySelector(".el-table__body-wrapper");k&&($e.value=k,$e.value&&($e.value.removeEventListener("scroll",re,!0),$e.value.addEventListener("scroll",re,!0)))}function ot(){$e.value&&($e.value.removeEventListener("scroll",re,!0),$e.value=null)}function lt(k){k.key==="Escape"&&Ie.value&&(Ie.value=!1)}gt(()=>{o.isGitRepo?(o.log.length>0?(i.length=0,o.log.forEach(k=>i.push(k)),ee.value=o.log.length,N.value&&setTimeout(()=>{ie()},100)):S(),De()):f.value="当前目录不是Git仓库",ct(()=>{setTimeout(()=>{Be()},500)}),Re(()=>Pe.value,k=>{k&&!N.value&&!G.value&&ct(()=>{Be()})}),window.addEventListener("keydown",lt)}),Re(()=>o.allBranches,k=>{k&&k.length>0?me.value=[...k].sort():me.value=[]},{immediate:!0}),$o(()=>{ot(),K.value!==null&&(window.clearInterval(K.value),K.value=null),window.removeEventListener("keydown",lt)});async function We(){await o.fetchLog(!0),i.length=0,o.log.forEach(k=>i.push(k)),y.value=[...i],ee.value=o.log.length,h.value=1,D.value=!1,ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),N.value&&(await ct(),ie())}Re(()=>o.log,k=>{try{i.length=0,Array.isArray(k)&&k.forEach(v=>v&&i.push(v)),ee.value=i.length,h.value=1,y.value=[...i],ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),N.value&&i.length>0&&setTimeout(ie,0)}catch{}},{immediate:!0}),C({refreshLog:We});function Xe(){j.value<Gt&&(j.value=Math.min(Gt,j.value+Kt),r())}function P(){j.value>St&&(j.value=Math.max(St,j.value-Kt),r())}function r(){if(!A.value)return;const k=A.value.querySelector("svg");k&&(k.style.transform=`scale(${j.value})`,k.style.transformOrigin="top left")}function H(){if(!A.value)return;const k=A.value.querySelector("svg");if(!k)return;const v=k.getBoundingClientRect().width/j.value,q=A.value.clientWidth;v>q?j.value=Math.max(St,q/v):j.value=1,r()}async function se(k){if(k){V.value=k,Q.value=!0,ae.value=!0,w.value=[],B.value="",ne.value="";try{if(!k.hash||k.hash.length<7){B.value="无效的提交哈希值",ae.value=!1;return}const q=await(await fetch(`/api/commit-files?hash=${k.hash}`)).json();q.success&&Array.isArray(q.files)?(w.value=q.files,w.value.length>0?await Ce(k.hash,w.value[0]):B.value="该提交没有变更文件"):B.value=`获取文件列表失败: ${q.error||"未知错误"}`}catch(v){B.value=`获取提交详情失败: ${v.message}`}finally{ae.value=!1}}}async function Ce(k,v){ae.value=!0,ne.value=v;try{const c=await(await fetch(`/api/commit-file-diff?hash=${k}&file=${encodeURIComponent(v)}`)).json();c.success?B.value=c.diff||"没有变更内容":B.value=`获取差异失败: ${c.error||"未知错误"}`}catch(q){B.value=`获取差异失败: ${q.message}`}finally{ae.value=!1}}function Ue(k){V.value&&Ce(V.value.hash,k)}async function Te(k,v){try{const c=await(await fetch("/api/open-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:k,context:v})})).json();c.success?n.success(c.message):n.error(c.error||"打开文件失败")}catch(q){n.error(`打开文件失败: ${q.message}`)}}async function _e(k,v){try{const c=await(await fetch("/api/open-with-vscode",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:k,context:v})})).json();c.success?n.success(c.message):n.error(c.error||"用VSCode打开文件失败")}catch(q){n.error(`用VSCode打开文件失败: ${q.message}`)}}async function Ee(k){try{const v=No(k);await navigator.clipboard.writeText(v),n.success("提交信息已复制到剪贴板")}catch{n.error("复制失败")}}function Fe(){!D.value||F.value||_.value||S(G.value,h.value+1)}function Se(){g.value=[],pe.value=[],z.value="",U.value=null,h.value=1,S(G.value,1)}function le(){h.value=1,S(G.value,1)}async function De(){try{const v=await(await fetch("/api/authors")).json();v.success&&Array.isArray(v.authors)?fe.value=v.authors.sort():Je()}catch{Je()}}function Je(){const k=new Set;y.value.forEach(v=>{v.author&&k.add(v.author)}),fe.value=Array.from(k).sort()}Re(()=>y.value,()=>{},{deep:!0});function Ze(k,v,q){q.preventDefault(),Z.value=q.clientY,te.value=q.clientX,ue.value=k,he.value=!0;const c=()=>{he.value=!1,document.removeEventListener("click",c)};setTimeout(()=>{document.addEventListener("click",c)},0)}async function yt(k){if(k)try{await Ye.confirm(`确定要撤销提交 ${k.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const q=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();q.success?(n.success(q.message||"已成功撤销提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(q.error||"撤销提交失败")}catch(v){v!=="cancel"&&n.error("撤销提交失败: "+(v.message||v))}}async function _t(k){if(k)try{await Ye.confirm(`确定要将提交 ${k.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const q=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();q.success?(n.success(q.message||"已成功Cherry-Pick提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(q.error||"Cherry-Pick提交失败")}catch(v){v!=="cancel"&&n.error("Cherry-Pick提交失败: "+(v.message||v))}}async function wt(k){if(k)try{await navigator.clipboard.writeText(k.hash),n.success(`已复制提交哈希: ${k.hash.substring(0,7)}`)}catch(v){n.error(`复制提交哈希失败: ${v.message}`)}}async function ft(k){if(k)try{await Ye.confirm(`确定要将当前分支重置(hard)到提交 ${k.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const q=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:k.hash})})).json();q.success?(n.success(q.message||"已成功重置到指定提交"),We(),o.fetchStatus(),o.getBranchStatus()):n.error(q.error||"重置到指定提交失败")}catch(v){v!=="cancel"&&n.error("重置到指定提交失败: "+(v.message||v))}}function nt(){if(N.value||!D.value||F.value||_.value||G.value)return;if(!$e.value){Be();return}const{scrollTop:k,scrollHeight:v,clientHeight:q}=$e.value;v-k-q<=50&&Fe()}Re(()=>N.value,k=>{!k&&!G.value&&ct(()=>{Be(),setTimeout(nt,200)})});const Ie=d(!1);function bt(){Ie.value=!Ie.value,ct(()=>{N.value&&A.value&&ie()})}return(k,v)=>{var L;const q=tt,c=Ge,m=os;return u(),b(xe,null,[e("div",{class:ye(["card",{"fullscreen-mode":Ie.value}])},[e("div",_i,[v[14]||(v[14]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",wi,[N.value?J("",!0):(u(),E(l(ke),{key:0,type:Y.value?"primary":"default",size:"small",onClick:v[0]||(v[0]=$=>Y.value=!Y.value),class:ye(["action-button filter-button icon-only-button",{"active-filter":Y.value}])},{icon:s(()=>[t(q,null,{default:s(()=>[t(l(Co))]),_:1})]),_:1},8,["type","class"])),t(l(ke),{type:"primary",size:"small",onClick:X,class:ye(["action-button view-mode-button icon-only-button",{"active-view":N.value}])},{icon:s(()=>[t(q,null,{default:s(()=>[(u(),E(Tt(N.value?l(Zt):l(So))))]),_:1})]),_:1},8,["class"]),at(t(l(ke),{type:"success",size:"small",onClick:ge,loading:_.value,class:ye(["action-button commit-display-button",{"active-commits":G.value}])},{icon:s(()=>[t(q,null,{default:s(()=>[(u(),E(Tt(G.value?l(To):l(Fo))))]),_:1})]),default:s(()=>[R(" "+M(G.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[xt,!1]]),t(l(ke),{type:"info",size:"small",onClick:bt,class:ye(["action-button fullscreen-button icon-only-button",{"active-fullscreen":Ie.value}])},{icon:s(()=>[t(q,null,{default:s(()=>[(u(),E(Tt(Ie.value?l(ts):l(Vo))))]),_:1})]),_:1},8,["class"]),t(l(ke),{circle:"",size:"small",onClick:v[1]||(v[1]=$=>We()),class:ye([{"refresh-button-animated":ve.value},"action-button refresh-button"])},{default:s(()=>[_.value?(u(),E(q,{key:1},{default:s(()=>[t(l(zs))]),_:1})):(u(),E(q,{key:0},{default:s(()=>[t(l(ss))]),_:1}))]),_:1},8,["class"])])]),Y.value&&!N.value?(u(),b("div",bi,[e("div",ki,[e("div",$i,[t(l(At),{modelValue:g.value,"onUpdate:modelValue":v[2]||(v[2]=$=>g.value=$),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[15]||(v[15]=[e("span",{class:"compact-label"},"作者",-1)])),default:s(()=>[(u(!0),b(xe,null,Me(fe.value,$=>(u(),E(l(Mt),{key:$,label:$,value:$},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Ci,[t(l(At),{modelValue:pe.value,"onUpdate:modelValue":v[3]||(v[3]=$=>pe.value=$),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[16]||(v[16]=[e("span",{class:"compact-label"},"分支",-1)])),default:s(()=>[(u(!0),b(xe,null,Me(me.value,$=>(u(),E(l(Mt),{key:$,label:$,value:$},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",Si,[t(l(Et),{modelValue:z.value,"onUpdate:modelValue":v[4]||(v[4]=$=>z.value=$),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:s(()=>v[17]||(v[17]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",Ti,[t(l(Lo),{modelValue:U.value,"onUpdate:modelValue":v[5]||(v[5]=$=>U.value=$),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:s(()=>v[18]||(v[18]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",Fi,[t(l(ke),{type:"primary",size:"small",onClick:le,class:"filter-action-button"},{default:s(()=>v[19]||(v[19]=[R("应用")])),_:1}),t(l(ke),{type:"info",size:"small",onClick:Se,class:"filter-action-button"},{default:s(()=>v[20]||(v[20]=[R("重置")])),_:1})])])])):J("",!0),e("div",{class:ye(["content-area",{"with-filter":Y.value&&!N.value}])},[f.value?(u(),b("div",Vi,M(f.value),1)):(u(),b("div",Li,[N.value?(u(),b("div",xi,[l(i).length>0?(u(),b("div",Bi," 显示 "+M(l(i).length)+" 条提交记录 "+M(G.value?"(全部)":"(分页加载，每页20条)"),1)):J("",!0),e("div",zi,[e("div",Pi,[t(l(ke),{type:"primary",circle:"",size:"small",onClick:P,disabled:j.value<=St},{default:s(()=>[t(q,null,{default:s(()=>[t(l(xo))]),_:1})]),_:1},8,["disabled"]),t(l(Bo),{modelValue:j.value,"onUpdate:modelValue":v[6]||(v[6]=$=>j.value=$),min:St,max:Gt,step:Kt,onChange:r,class:"zoom-slider"},null,8,["modelValue"]),t(l(ke),{type:"primary",circle:"",size:"small",onClick:Xe,disabled:j.value>=Gt},{default:s(()=>[t(q,null,{default:s(()=>[t(l(zo))]),_:1})]),_:1},8,["disabled"]),t(l(ke),{type:"primary",size:"small",onClick:H},{default:s(()=>v[21]||(v[21]=[R(" 自适应大小 ")])),_:1})]),e("div",ji," 缩放: "+M(Math.round(j.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:A,class:"graph-container"},null,512)])):(u(),b("div",Oi,[at((u(),E(l(Po),{ref_key:"tableRef",ref:Pe,data:we.value,stripe:"",border:"",class:"log-table","empty-text":_.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:Ze,onRowClick:v[7]||(v[7]=$=>se($))},{default:s(()=>[t(l(Dt),{label:"哈希",width:"80",resizable:""},{default:s($=>[e("span",{class:"commit-hash",onClick:ce=>se($.row)},M($.row.hash.substring(0,6)),9,Di)]),_:1}),t(l(Dt),{label:"提交信息","min-width":"300"},{default:s($=>[e("div",Ri,[e("div",Gi,[$.row.branch?(u(),b("div",Mi,[(u(!0),b(xe,null,Me($.row.branch.split(","),(ce,ze)=>(u(),E(l(zt),{key:ze,size:"small",type:Ae(ce),class:"branch-tag"},{default:s(()=>[R(M(be(ce)),1)]),_:2},1032,["type"]))),128))])):J("",!0),e("span",Ai,M($.row.message),1),t(l(ke),{type:"text",icon:l(vt),size:"small",onClick:Bt(ce=>Ee($.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),t(l(Dt),{prop:"date",label:"日期",width:"150",resizable:""}),t(l(Dt),{label:"作者",width:"100",resizable:""},{default:s($=>[t(c,{content:$.row.email,placement:"top","hide-after":1e3,"show-after":200},{default:s(()=>[e("span",Ui,M($.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[m,_.value]]),(G.value,J("",!0))]))]))],2),t(Qe,{modelValue:Q.value,"onUpdate:modelValue":v[8]||(v[8]=$=>Q.value=$),title:`提交详情: ${(L=V.value)!=null&&L.hash?V.value.hash.substring(0,7):"未知"}`,size:"extra-large",type:"flex","destroy-on-close":"","custom-class":"commit-detail-dialog"},{default:s(()=>[at((u(),b("div",Ei,[V.value?(u(),b("div",Ii,[e("div",Ni,[e("div",Hi,[v[25]||(v[25]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Ji,M(V.value.hash),1)]),e("div",Wi,[v[26]||(v[26]=e("span",{class:"item-label"},"作者:",-1)),e("span",qi,M(V.value.author)+" <"+M(V.value.email)+">",1)]),e("div",Yi,[v[27]||(v[27]=e("span",{class:"item-label"},"日期:",-1)),e("span",Ki,M(V.value.date),1)])]),e("div",Qi,[v[28]||(v[28]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:l(Io)(V.value.message).replace(/\n/g,"<br>")},null,8,Xi)])])):J("",!0),t(ls,{files:x.value,loading:ae.value,diffContent:B.value,selectedFile:ne.value,context:"commit-detail",emptyText:"没有找到变更文件",onFileSelect:Ue,onOpenFile:Te,onOpenWithVscode:_e},null,8,["files","loading","diffContent","selectedFile"])])),[[m,ae.value]])]),_:1},8,["modelValue","title"])],2),at(e("div",{class:ye(["context-menu",{"fullscreen-context-menu":Ie.value}]),style:ht({top:Z.value+"px",left:te.value+"px"})},[e("div",{class:"context-menu-item",onClick:v[9]||(v[9]=$=>se(ue.value))},v[29]||(v[29]=[e("i",{class:"el-icon-view"},null,-1),R(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:v[10]||(v[10]=$=>wt(ue.value))},v[30]||(v[30]=[e("i",{class:"el-icon-document-copy"},null,-1),R(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:v[11]||(v[11]=$=>ft(ue.value))},v[31]||(v[31]=[e("i",{class:"el-icon-refresh-right"},null,-1),R(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:v[12]||(v[12]=$=>yt(ue.value))},v[32]||(v[32]=[e("i",{class:"el-icon-delete"},null,-1),R(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:v[13]||(v[13]=$=>_t(ue.value))},v[33]||(v[33]=[e("i",{class:"el-icon-edit"},null,-1),R(" Cherry-Pick 到当前分支 ")]))],6),[[xt,he.value]])],64)}}}),er=Oe(Zi,[["__scopeId","data-v-88d20996"]]),tr={class:"dialog-toolbar"},sr=["disabled"],or=["disabled"],ar=["disabled"],lr={class:"history-scroll"},nr={key:0,class:"loading-state"},ir={key:2,class:"history-list"},rr=["onClick"],cr={class:"command-info"},ur={class:"command-text"},dr={class:"command-meta"},fr={class:"timestamp"},pr={class:"duration"},mr={class:"item-actions"},vr=["onClick"],gr=["onClick"],hr={key:0,class:"item-details"},yr={key:0,class:"output-section"},_r={class:"output-header"},wr=["onClick"],br={class:"output-content"},kr={key:0,class:"truncation-notice"},$r={class:"output-header"},Cr={class:"output-content"},Sr={key:0,class:"truncation-notice"},Tr={key:2,class:"output-section error"},Fr={class:"output-content"},Vr=je({__name:"CommandHistory",setup(W){const C=st(),o=d([]),i=d(!1),y=d(!1),f=d(!1),O=d(!1),_=d(new Set),G=d(!1),ee=d(!1);function N(){ee.value=!0,o.value.length===0&&A()}async function A(){try{if(i.value=!0,C.socket&&C.socket.connected)C.socket.emit("request_full_history");else{const z=await(await fetch("/api/command-history")).json();z.success?o.value=z.history:n.error(`加载命令历史失败: ${z.error}`)}}catch(g){n.error(`加载命令历史失败: ${g.message}`)}finally{i.value=!1}}async function h(){if(o.value.length===0){n.warning("没有可复制的命令历史");return}try{f.value=!0;const g=o.value.map(z=>{let U=`# ${K(z.timestamp)} (耗时: ${Q(z.executionTime)}) - ${z.success?"成功":"失败"}
`;if(U+=`${z.command}
`,z.stdout&&(U+=`
# 输出:
${z.stdout}
`),z.stderr){const fe=ne(z.command)?"输出信息":"错误输出";U+=`
# ${fe}:
${z.stderr}
`}return z.error&&(U+=`
# 错误信息:
${z.error}
`),U}).join(`
---

`);await navigator.clipboard.writeText(g),n({message:"命令历史已复制到剪贴板",type:"success",zIndex:1e5})}catch(g){n.error(`复制失败: ${g.message}`)}finally{f.value=!1}}async function D(){if(o.value.length===0){n.warning("没有可复制的命令");return}try{G.value=!0;const g=o.value.map(z=>z.command).join(`
`);await navigator.clipboard.writeText(g),n({message:"命令列表已复制到剪贴板",type:"success",zIndex:1e5})}catch(g){n.error(`复制失败: ${g.message}`)}finally{G.value=!1}}async function F(){try{if(await Ye.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),y.value=!0,C.socket&&C.socket.connected)C.socket.emit("clear_command_history");else{const z=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();z.success?(o.value=[],n.success("命令历史已清空")):n.error(`清空命令历史失败: ${z.error}`)}}catch(g){g!=="cancel"&&g.toString()!=="Error: cancel"&&n.error(`清空命令历史失败: ${g.message}`)}finally{y.value=!1}}function K(g){return new Date(g).toLocaleString()}function Q(g){return g<1e3?`${g}ms`:`${(g/1e3).toFixed(2)}s`}function V(g){_.value.has(g)?_.value.delete(g):_.value.add(g)}function w(g){return _.value.has(g)}async function B(g){try{await navigator.clipboard.writeText(g),n({message:"命令已复制到剪贴板",type:"success",zIndex:1e5})}catch(z){n.error(`复制失败: ${z.message}`)}}function ae(g){return g.includes("git push")||g.includes("git-push")}function ne(g){return!!ae(g)}async function j(g){try{let z="";if(g.stdout&&(z+=`标准输出:
${g.stdout}

`),g.stderr){const U=ne(g.command)?"输出信息":"错误输出";z+=`${U}:
${g.stderr}

`}g.error&&(z+=`错误信息:
${g.error}`),await navigator.clipboard.writeText(z.trim()),n({message:"输出已复制到剪贴板",type:"success",zIndex:1e5})}catch(z){n.error(`复制失败: ${z.message}`)}}function ve(){if(!C.socket){console.error("Socket实例不可用");return}C.socket.on("initial_command_history",g=>{o.value=g.history,O.value=!0}),C.socket.on("command_history_update",g=>{o.value.unshift(g.newCommand),o.value.length>100&&o.value.pop(),O.value=!0}),C.socket.on("full_command_history",g=>{o.value=g.history,i.value=!1,O.value=!0}),C.socket.on("command_history_cleared",g=>{g.success&&(o.value=[],n.success("命令历史已清空")),y.value=!1}),C.socket.on("connect",()=>{O.value=!0,n.success("已连接到实时命令历史")}),C.socket.on("disconnect",()=>{O.value=!1,n.warning("实时命令历史连接已断开")})}function Y(){C.socket&&(C.socket.off("initial_command_history"),C.socket.off("command_history_update"),C.socket.off("full_command_history"),C.socket.off("command_history_cleared"))}return gt(()=>{ve(),C.socket||(console.log("尝试初始化Socket连接"),C.initSocketConnection())}),ks(()=>{Y()}),(g,z)=>{const U=tt,fe=Ge,pe=zt,me=Vt,he=Ls;return u(),b(xe,null,[t(fe,{content:"查看Git命令历史",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn command-history-button",onClick:N},[t(U,{class:"btn-icon"},{default:s(()=>[t(l(Ps))]),_:1})])]),_:1}),t(Qe,{modelValue:ee.value,"onUpdate:modelValue":z[0]||(z[0]=Z=>ee.value=Z),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"","custom-class":"command-history-dialog","append-to-body":!0},{default:s(()=>[e("div",tr,[t(pe,{type:O.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:s(()=>[R(M(O.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),t(fe,{content:"只复制命令列表（不含输出）",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-commands-button enhanced-btn",onClick:D,disabled:o.value.length===0||G.value},[G.value?(u(),E(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[1]||(z[1]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(u(),E(U,{key:0,class:"btn-icon"},{default:s(()=>[t(l(vt))]),_:1})),z[2]||(z[2]=e("span",{class:"btn-text"},"命令",-1))],8,sr)]),_:1}),t(fe,{content:"复制完整命令历史（含输出）",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn copy-all-button enhanced-btn",onClick:h,disabled:o.value.length===0||f.value},[f.value?(u(),E(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[3]||(z[3]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(u(),E(U,{key:0,class:"btn-icon"},{default:s(()=>[t(l(vt))]),_:1})),z[4]||(z[4]=e("span",{class:"btn-text"},"全部",-1))],8,or)]),_:1}),t(fe,{content:"清空命令历史",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn clear-button enhanced-btn danger-btn",onClick:F,disabled:o.value.length===0||y.value},[y.value?(u(),E(U,{key:1,class:"btn-icon is-loading"},{default:s(()=>z[5]||(z[5]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(u(),E(U,{key:0,class:"btn-icon"},{default:s(()=>[t(l(Ft))]),_:1})),z[6]||(z[6]=e("span",{class:"btn-text"},"清空",-1))],8,ar)]),_:1})]),e("div",lr,[i.value&&o.value.length===0?(u(),b("div",nr,[t(U,{class:"loading-icon is-loading"},{default:s(()=>z[7]||(z[7]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),z[8]||(z[8]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):o.value.length===0?(u(),E(me,{key:1,description:"暂无命令历史"})):(u(),b("div",ir,[(u(!0),b(xe,null,Me(o.value,(Z,te)=>(u(),b("div",{key:te,class:ye(["history-item",{"is-error":!Z.success}])},[e("div",{class:"item-header",onClick:ue=>V(te)},[e("div",cr,[e("div",ur,[t(pe,{size:"small",type:Z.success?"success":"danger",effect:"dark",class:"status-tag"},{default:s(()=>[R(M(Z.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,M(Z.command),1)]),e("div",dr,[e("span",fr,M(K(Z.timestamp)),1),e("span",pr,"耗时: "+M(Q(Z.executionTime)),1)])]),e("div",mr,[t(fe,{content:"复制命令",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn item-copy-button enhanced-btn",onClick:Bt(ue=>B(Z.command),["stop"])},[t(U,{class:"btn-icon"},{default:s(()=>[t(l(vt))]),_:1})],8,vr)]),_:2},1024),t(fe,{content:"展开/收起",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:ye(["modern-btn expand-button enhanced-btn",{"is-expanded":w(te)}]),onClick:Bt(ue=>V(te),["stop"])},[t(U,{class:"btn-icon"},{default:s(()=>[w(te)?(u(),E(l(Ss),{key:0})):(u(),E(l(Ut),{key:1}))]),_:2},1024)],10,gr)]),_:2},1024)])],8,rr),w(te)?(u(),b("div",hr,[Z.stdout?(u(),b("div",yr,[e("div",_r,[z[9]||(z[9]=e("h4",null,"标准输出",-1)),t(fe,{content:"复制输出",placement:"bottom",effect:"dark","open-delay":300},{default:s(()=>[e("button",{class:"modern-btn output-copy-button enhanced-btn",onClick:ue=>j(Z)},[t(U,{class:"btn-icon"},{default:s(()=>[t(l(vt))]),_:1})],8,wr)]),_:2},1024)]),e("pre",br,M(Z.stdout),1),Z.isStdoutTruncated?(u(),b("div",kr,[t(he,{type:"info",closable:!1,"show-icon":""},{default:s(()=>z[10]||(z[10]=[R(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):J("",!0)])):J("",!0),Z.stderr?(u(),b("div",{key:1,class:ye(["output-section",ne(Z.command)?"":"error"])},[e("div",$r,[e("h4",null,M(ne(Z.command)?"输出信息":"错误输出"),1)]),e("pre",Cr,M(Z.stderr),1),Z.isStderrTruncated?(u(),b("div",Sr,[t(he,{type:"info",closable:!1,"show-icon":""},{default:s(()=>[R(M(ne(Z.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):J("",!0)],2)):J("",!0),Z.error?(u(),b("div",Tr,[z[11]||(z[11]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",Fr,M(Z.error),1)])):J("",!0)])):J("",!0)],2))),128))]))])]),_:1},8,["modelValue"])],64)}}}),Lr=Oe(Vr,[["__scopeId","data-v-1880e2cb"]]),xr="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",Br={class:"main-header"},zr={class:"header-left"},Pr=["src"],jr={class:"header-info"},Or={key:0,id:"user-info"},Dr={class:"user-name"},Rr={class:"user-email"},Gr={key:1,id:"user-info"},Mr={class:"directory-selector"},Ar={class:"directory-display"},Ur={class:"directory-icon"},Er=["title"],Ir={class:"directory-actions"},Nr={key:2,class:"header-actions-right"},Hr={key:0,class:"command-history-section"},Jr={class:"main-container"},Wr={key:0,class:"loading-container"},qr={class:"loading-spinner"},Yr={key:1,class:"grid-layout"},Kr={class:"git-status-panel"},Qr={key:0,class:"commit-form-panel"},Xr={key:0,class:"card"},Zr={class:"tips"},ec={key:1,class:"commit-form-panel"},tc={key:2,class:"log-list-panel"},sc={class:"create-branch-content"},oc={class:"form-label"},ac={class:"form-label"},lc={class:"create-branch-footer"},nc={class:"footer-actions"},ic=["disabled"],rc={class:"main-footer"},cc={key:0,class:"branch-info"},uc={class:"branch-wrapper"},dc={key:1,class:"footer-right"},fc={class:"repo-url"},pc={class:"user-settings-content"},mc={class:"form-group"},vc={class:"form-label"},gc={class:"form-group"},hc={class:"form-label"},yc={class:"info-section"},_c={class:"info-card"},wc={class:"info-icon"},bc={class:"user-settings-footer"},kc={class:"footer-actions"},$c={class:"directory-content"},Cc={class:"form-label"},Sc={class:"directory-input-group"},Tc={class:"form-label"},Fc={class:"recent-directories"},Vc=["onClick"],Lc={class:"dir-path"},xc={class:"directory-footer"},Bc={class:"footer-actions"},zc=["disabled"],Pc=je({__name:"App",setup(W){const C=d(""),o=d(null),i=d(null),y=d(null),f=st(),O=it(),_=d(!1),G=d("");function ee(){O.config&&(C.value=`默认提交信息: ${O.config.defaultCommitMessage}`)}async function N(){try{const r=await(await fetch("/api/current_directory")).json();return G.value=r.directory||"未知目录",r}catch(P){return console.error("获取当前目录失败:",P),{directory:"未知目录",isGitRepo:!1}}}gt(async()=>{console.log("---------- 页面初始化开始 ----------");try{const P=await N();O.isLoaded||await O.loadConfig(),ee(),f.isGitRepo=P.isGitRepo===!0,f.lastCheckedTime=Date.now(),f.isGitRepo?await Promise.all([f.getCurrentBranch(!0),f.getAllBranches(),f.getUserInfo(),f.getRemoteUrl(),f.getBranchStatus(!0)]):n.warning("当前目录不是Git仓库，部分功能将不可用")}catch(P){console.error("初始化失败:",P)}finally{_.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{Z()},100)}});const A=d(!1),h=d(""),D=d("");async function F(){await f.createBranch(h.value,D.value)&&(A.value=!1,h.value="",i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog())}function K(){D.value=f.currentBranch,A.value=!0}async function Q(P){await f.changeBranch(P)&&(i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog())}const V=d(!1),w=d(""),B=d("");function ae(){w.value=f.userName,B.value=f.userEmail,V.value=!0}async function ne(){if(!w.value||!B.value){n.warning("用户名和邮箱不能为空");return}await f.restoreUserConfig(w.value,B.value)&&(V.value=!1)}async function j(){await f.clearUserConfig()&&(w.value="",B.value="")}let ve=!1,Y=!1,g=!1,z=0,U=0,fe="",pe="",me=null;function he(){const P=document.querySelector(".grid-layout");if(!P)return;const r=getComputedStyle(P).gridTemplateColumns.split(" "),H=getComputedStyle(P).gridTemplateRows.split(" ");if(r.length>=3&&H.length>=3){const se=parseFloat(r[0]),Ce=parseFloat(r[2]),Ue=se+Ce,Te=se/Ue,_e=parseFloat(H[0]),Ee=parseFloat(H[2]),Fe=_e+Ee,Se=_e/Fe;localStorage.setItem("zen-gitsync-layout-left-ratio",Te.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",Se.toString()),console.log(`布局比例已保存 - 左侧: ${(Te*100).toFixed(0)}%, 上方: ${(Se*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",Te.toString()),console.log(`底部布局比例已保存 - 左侧: ${(Te*100).toFixed(0)}%`)}}function Z(){const P=document.querySelector(".grid-layout");if(!P)return;const r=localStorage.getItem("zen-gitsync-layout-left-ratio"),H=localStorage.getItem("zen-gitsync-layout-top-ratio");if(r){const se=parseFloat(r),Ce=1-se;P.style.gridTemplateColumns=`${se}fr 8px ${Ce}fr`,console.log(`已恢复左侧比例: ${(se*100).toFixed(0)}%`)}else P.style.gridTemplateColumns="1fr 8px 3fr";if(H){const se=parseFloat(H),Ce=1-se;P.style.gridTemplateRows=`${se}fr 8px ${Ce}fr`,console.log(`已恢复上方比例: ${(se*100).toFixed(0)}%`)}}function te(P){var se;const r=P.currentTarget;if(!r||!r.id)return;me=r.id,me==="v-resizer"?ve=!0:me==="v-resizer-bottom"&&(Y=!0),z=P.clientX;const H=document.querySelector(".grid-layout");fe=getComputedStyle(H).gridTemplateColumns,(se=document.getElementById(me))==null||se.classList.add("active"),document.addEventListener("mousemove",ue),document.addEventListener("mouseup",we),P.preventDefault()}function ue(P){if(!ve&&!Y)return;const r=document.querySelector(".grid-layout"),H=P.clientX-z,se=fe.split(" ");if(se.length>=3){const Ce=parseFloat(se[0]),Ue=parseFloat(se[2]),Te=Ce+Ue,_e=(Ce+H/r.clientWidth*Te)/Te,Ee=1-_e,Fe=.1,Se=.5;_e<Fe?r.style.gridTemplateColumns=`${Fe}fr 8px ${1-Fe}fr`:_e>Se?r.style.gridTemplateColumns=`${Se}fr 8px ${1-Se}fr`:r.style.gridTemplateColumns=`${_e}fr 8px ${Ee}fr`}}function we(){var P,r;ve=!1,Y=!1,(P=document.getElementById("v-resizer"))==null||P.classList.remove("active"),(r=document.getElementById("v-resizer-bottom"))==null||r.classList.remove("active"),document.removeEventListener("mousemove",ue),document.removeEventListener("mouseup",we),he()}function x(P){var H;g=!0,U=P.clientY;const r=document.querySelector(".grid-layout");pe=getComputedStyle(r).gridTemplateRows,(H=document.getElementById("h-resizer"))==null||H.classList.add("active"),document.addEventListener("mousemove",S),document.addEventListener("mouseup",ie),P.preventDefault()}function S(P){if(!g)return;const r=document.querySelector(".grid-layout"),H=P.clientY-U,se=pe.split(" ");if(se.length>=3){const Ce=parseFloat(se[0]),Ue=parseFloat(se[2]),Te=Ce+Ue,_e=(Ce+H/r.clientHeight*Te)/Te,Ee=1-_e,Fe=.2,Se=.8;_e<Fe?r.style.gridTemplateRows=`${Fe}fr 8px ${1-Fe}fr`:_e>Se?r.style.gridTemplateRows=`${Se}fr 8px ${1-Se}fr`:r.style.gridTemplateRows=`${_e}fr 8px ${Ee}fr`}}function ie(){var P;g=!1,(P=document.getElementById("h-resizer"))==null||P.classList.remove("active"),document.removeEventListener("mousemove",S),document.removeEventListener("mouseup",ie),he()}const X=d(!1),ge=d(""),be=d(!1),Ae=d([]);function Pe(){ge.value=G.value,X.value=!0,$e()}async function $e(){try{const r=await(await fetch("/api/recent_directories")).json();r.success&&Array.isArray(r.directories)&&(Ae.value=r.directories)}catch(P){console.error("获取最近目录失败:",P)}}async function re(){if(!ge.value){n.warning("目录路径不能为空");return}try{be.value=!0;const r=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:ge.value})})).json();r.success?(n.success("已切换工作目录"),G.value=r.directory,X.value=!1,await Be(r.directory),await $e(),f.isGitRepo=r.isGitRepo,await O.loadConfig(!0),r.isGitRepo?(await Promise.all([f.getCurrentBranch(),f.getAllBranches(),f.getUserInfo(),f.getRemoteUrl()]),i.value&&i.value.refreshStatus(),o.value&&o.value.refreshLog()):(n.warning("当前目录不是Git仓库，部分功能将不可用"),f.$reset())):n.error(r.error||"切换目录失败")}catch(P){n.error(`切换目录失败: ${P.message}`)}finally{be.value=!1}}async function Be(P){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:P})})}catch(r){console.error("保存最近目录失败:",r)}}async function ot(){try{if(!G.value){n.warning("当前目录路径为空");return}const r=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:G.value})})).json();r.success?n.success("已在文件管理器中打开目录"):r.error&&n.error(r.error)}catch(P){console.error("打开目录失败:",P),n.error(`打开目录失败: ${P.message}`)}}async function lt(){try{const r=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:ge.value||G.value})})).json();r.success?We(r):r.error&&n.error(r.error)}catch(P){console.error("浏览目录失败:",P),n.error(`浏览目录失败: ${P.message}`)}}function We(P){!P||!P.items||Ye.alert(Ne("div",{class:"directory-browser"},[Ne("div",{class:"current-path"},[Ne("span",{class:"path-label"},"当前路径: "),Ne("span",{class:"path-value"},P.path)]),Ne("div",{class:"directory-list"},[P.parentPath?Ne("div",{class:"directory-item parent-dir",onClick:()=>{Xe(P.parentPath)}},[Ne("span",{class:"dir-icon"},Ne("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Ne("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ne("span",{class:"dir-name"},"返回上级目录")]):null,...P.items.map(r=>Ne("div",{class:"directory-item",onClick:()=>{Xe(r.path)}},[Ne("span",{class:"dir-icon"},Ne("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Ne("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ne("span",{class:"dir-name"},r.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:r=>{r==="confirm"&&(ge.value=P.path)}})}async function Xe(P){try{Ye.close(),setTimeout(async()=>{try{const H=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:P})})).json();H.success?We(H):H.error&&n.error(H.error)}catch(r){console.error("浏览目录失败:",r),n.error(`浏览目录失败: ${r.message}`)}},100)}catch(r){console.error("处理目录选择时出错:",r),n.error(`处理目录选择时出错: ${r.message}`)}}return(P,r)=>{const H=tt,se=Ge,Ce=Vs,Ue=ke,Te=Et,_e=Bs,Ee=Mt,Fe=At,Se=xs;return u(),b(xe,null,[e("header",Br,[e("div",zr,[e("img",{src:l(xr),alt:"Zen GitSync Logo",class:"logo"},null,8,Pr),r[16]||(r[16]=e("h1",null,"Zen GitSync",-1))]),e("div",jr,[l(f).userName&&l(f).userEmail?(u(),b("div",Or,[e("span",Dr,M(l(f).userName),1),e("span",Rr,"<"+M(l(f).userEmail)+">",1),t(se,{content:"用户设置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn user-settings-btn",onClick:ae},[t(H,{class:"btn-icon"},{default:s(()=>[t(l(hs))]),_:1})])]),_:1})])):(u(),b("div",Gr,[r[17]||(r[17]=e("span",{class:"user-label"},"用户: ",-1)),r[18]||(r[18]=e("span",{class:"user-warning"},"未配置",-1)),t(se,{content:"用户设置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn user-settings-btn",onClick:ae},[t(H,{class:"btn-icon"},{default:s(()=>[t(l(hs))]),_:1})])]),_:1})])),e("div",Mr,[e("div",Ar,[e("div",Ur,[t(H,null,{default:s(()=>[t(l(Rt))]),_:1})]),e("div",{class:"directory-path",title:G.value},M(G.value),9,Er)]),e("div",Ir,[t(se,{content:"切换目录",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn dir-btn",onClick:Pe},[t(H,{class:"btn-icon"},{default:s(()=>r[19]||(r[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})])]),_:1}),t(se,{content:"在资源管理器中打开",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn dir-btn",onClick:ot},[t(H,{class:"btn-icon"},{default:s(()=>r[20]||(r[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})])]),_:1})])]),l(f).isGitRepo?(u(),b("div",Nr,[l(f).isGitRepo?(u(),b("div",Hr,[t(Lr)])):J("",!0),t(se,{content:"编辑项目配置",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn config-btn",onClick:r[0]||(r[0]=le=>{var De;return(De=y.value)==null?void 0:De.openConfigEditor()})},[t(H,{class:"btn-icon"},{default:s(()=>[t(l(ut))]),_:1})])]),_:1}),t(se,{content:"Git 操作",placement:"bottom",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn drawer-btn",onClick:r[1]||(r[1]=le=>{var De;return(De=y.value)==null?void 0:De.toggleGitOperationsDrawer()})},[t(H,{class:"btn-icon"},{default:s(()=>[t(l(ys))]),_:1})])]),_:1})])):J("",!0)])]),e("main",Jr,[_.value?(u(),b("div",Yr,[e("div",Kr,[t(Ya,{ref_key:"gitStatusRef",ref:i,"initial-directory":G.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:te},null,32),l(f).isGitRepo?(u(),b("div",Qr,[!l(f).userName||!l(f).userEmail?(u(),b("div",Xr,[r[26]||(r[26]=e("h2",null,"Git用户未配置",-1)),r[27]||(r[27]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Zr,[r[24]||(r[24]=e("h3",null,"您可以通过以下方式配置：",-1)),r[25]||(r[25]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[R(' git config --global user.name "您的用户名"'),e("br"),R(' git config --global user.email "您的邮箱" ')])],-1)),t(Ue,{type:"primary",onClick:ae},{default:s(()=>r[23]||(r[23]=[R(" 立即配置 ")])),_:1})])])):(u(),E(yi,{key:1,ref_key:"commitFormRef",ref:y},null,512))])):(u(),b("div",ec,r[28]||(r[28]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:x},null,32),l(f).isGitRepo?(u(),b("div",tc,[t(er,{ref_key:"logListRef",ref:o},null,512)])):J("",!0),t(Qe,{modelValue:A.value,"onUpdate:modelValue":r[5]||(r[5]=le=>A.value=le),title:"创建新分支",size:"small","destroy-on-close":!0,"custom-class":"create-branch-dialog"},{footer:s(()=>[e("div",lc,[e("div",nc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[4]||(r[4]=le=>A.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:F,disabled:l(f).isCreatingBranch},[l(f).isCreatingBranch?(u(),E(H,{key:1,class:"is-loading"},{default:s(()=>r[31]||(r[31]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(u(),E(H,{key:0},{default:s(()=>[t(l(dt))]),_:1})),r[32]||(r[32]=e("span",null,"创建",-1))],8,ic)])])]),default:s(()=>[e("div",sc,[t(Se,{model:{newBranchName:h.value,selectedBaseBranch:D.value},"label-position":"top"},{default:s(()=>[t(_e,null,{label:s(()=>[e("div",oc,[t(H,{class:"label-icon"},{default:s(()=>[t(l(_s))]),_:1}),r[29]||(r[29]=e("span",null,"新分支名称",-1))])]),default:s(()=>[t(Te,{modelValue:h.value,"onUpdate:modelValue":r[2]||(r[2]=le=>h.value=le),placeholder:"请输入新分支名称",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1}),t(_e,null,{label:s(()=>[e("div",ac,[t(H,{class:"label-icon"},{default:s(()=>[t(l(ys))]),_:1}),r[30]||(r[30]=e("span",null,"基于分支",-1))])]),default:s(()=>[t(Fe,{modelValue:D.value,"onUpdate:modelValue":r[3]||(r[3]=le=>D.value=le),placeholder:"选择基础分支",class:"modern-select",size:"large",style:{width:"100%"}},{default:s(()=>[(u(!0),b(xe,null,Me(l(f).allBranches,le=>(u(),E(Ee,{key:le,label:le,value:le},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])])]),_:1},8,["modelValue"])])):(u(),b("div",Wr,[t(Ce,{class:"loading-card"},{default:s(()=>[e("div",qr,[t(H,{class:"is-loading"},{default:s(()=>r[21]||(r[21]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),r[22]||(r[22]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",rc,[l(f).currentBranch?(u(),b("div",cc,[e("div",uc,[r[34]||(r[34]=e("span",{class:"branch-label"},"当前分支:",-1)),t(Fe,{modelValue:l(f).currentBranch,"onUpdate:modelValue":r[6]||(r[6]=le=>l(f).currentBranch=le),size:"small",onChange:Q,loading:l(f).isChangingBranch,class:"branch-select"},{default:s(()=>[(u(!0),b(xe,null,Me(l(f).allBranches,le=>(u(),E(Ee,{key:le,label:le,value:le},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),e("button",{class:"modern-btn create-branch-btn",onClick:K},[t(H,{class:"btn-icon"},{default:s(()=>[t(l(_s))]),_:1}),r[33]||(r[33]=e("span",{class:"btn-text"},"新建分支",-1))])])])):J("",!0),l(f).remoteUrl?(u(),b("div",dc,[r[36]||(r[36]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",fc,M(l(f).remoteUrl),1),t(se,{content:"复制仓库地址",placement:"top",effect:"dark","open-delay":500},{default:s(()=>[e("button",{class:"modern-btn copy-url-btn",onClick:r[7]||(r[7]=le=>l(f).copyRemoteUrl())},[t(H,{class:"btn-icon"},{default:s(()=>r[35]||(r[35]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})])]),_:1})])):J("",!0)]),t(Qe,{modelValue:V.value,"onUpdate:modelValue":r[11]||(r[11]=le=>V.value=le),title:"Git 用户设置",size:"small","destroy-on-close":!0,"custom-class":"user-settings-dialog"},{footer:s(()=>[e("div",bc,[e("button",{type:"button",class:"footer-btn danger-btn",onClick:j},[t(H,null,{default:s(()=>[t(l(Ft))]),_:1}),r[40]||(r[40]=e("span",null,"清除配置",-1))]),e("div",kc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[10]||(r[10]=le=>V.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:ne},[t(H,null,{default:s(()=>[t(l(dt))]),_:1}),r[41]||(r[41]=e("span",null,"保存设置",-1))])])])]),default:s(()=>[e("div",pc,[t(Se,{class:"user-form",model:{tempUserName:w.value,tempUserEmail:B.value},"label-position":"top"},{default:s(()=>[e("div",mc,[t(_e,{class:"form-item"},{label:s(()=>[e("div",vc,[t(H,{class:"label-icon"},{default:s(()=>[t(l(Oo))]),_:1}),r[37]||(r[37]=e("span",null,"用户名",-1))])]),default:s(()=>[t(Te,{modelValue:w.value,"onUpdate:modelValue":r[8]||(r[8]=le=>w.value=le),placeholder:"请输入 Git 用户名",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1})]),e("div",gc,[t(_e,{class:"form-item"},{label:s(()=>[e("div",hc,[t(H,{class:"label-icon"},{default:s(()=>[t(l(Do))]),_:1}),r[38]||(r[38]=e("span",null,"邮箱地址",-1))])]),default:s(()=>[t(Te,{modelValue:B.value,"onUpdate:modelValue":r[9]||(r[9]=le=>B.value=le),placeholder:"请输入 Git 邮箱地址",class:"modern-input",size:"large"},null,8,["modelValue"])]),_:1})]),e("div",yc,[e("div",_c,[e("div",wc,[t(H,null,{default:s(()=>[t(l(Xt))]),_:1})]),r[39]||(r[39]=e("div",{class:"info-content"},[e("p",{class:"info-title"},"全局配置"),e("p",{class:"info-desc"},"这些设置将影响全局 Git 配置，对所有 Git 仓库生效")],-1))])])]),_:1},8,["model"])])]),_:1},8,["modelValue"]),t(Qe,{modelValue:X.value,"onUpdate:modelValue":r[15]||(r[15]=le=>X.value=le),title:"切换工作目录",size:"medium","destroy-on-close":!0,"custom-class":"directory-dialog"},{footer:s(()=>[e("div",xc,[e("div",Bc,[e("button",{type:"button",class:"footer-btn cancel-btn",onClick:r[13]||(r[13]=le=>X.value=!1)}," 取消 "),e("button",{type:"button",class:"footer-btn primary-btn",onClick:r[14]||(r[14]=le=>re()),disabled:be.value},[be.value?(u(),E(H,{key:1,class:"is-loading"},{default:s(()=>r[45]||(r[45]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32z"})],-1)])),_:1})):(u(),E(H,{key:0},{default:s(()=>[t(l(dt))]),_:1})),r[46]||(r[46]=e("span",null,"切换",-1))],8,zc)])])]),default:s(()=>[e("div",$c,[t(Se,{"label-position":"top"},{default:s(()=>[t(_e,null,{label:s(()=>[e("div",Cc,[t(H,{class:"label-icon"},{default:s(()=>[t(l(Rt))]),_:1}),r[42]||(r[42]=e("span",null,"目录路径",-1))])]),default:s(()=>[e("div",Sc,[t(Te,{modelValue:ge.value,"onUpdate:modelValue":r[12]||(r[12]=le=>ge.value=le),placeholder:"请输入目录路径",class:"modern-input",size:"large"},null,8,["modelValue"]),e("button",{type:"button",class:"browse-btn",onClick:lt},[t(H,null,{default:s(()=>[t(l(Rt))]),_:1}),r[43]||(r[43]=e("span",null,"浏览",-1))])])]),_:1}),Ae.value.length>0?(u(),E(_e,{key:0},{label:s(()=>[e("div",Tc,[t(H,{class:"label-icon"},{default:s(()=>[t(l(Ps))]),_:1}),r[44]||(r[44]=e("span",null,"常用目录",-1))])]),default:s(()=>[e("div",Fc,[(u(!0),b(xe,null,Me(Ae.value,(le,De)=>(u(),b("div",{key:De,class:"recent-dir-item",onClick:Je=>ge.value=le},[t(H,{class:"dir-icon"},{default:s(()=>[t(l(Rt))]),_:1}),e("span",Lc,M(le),1)],8,Vc))),128))])]),_:1})):J("",!0)]),_:1})])]),_:1},8,["modelValue"])],64)}}}),jc=Oe(Pc,[["__scopeId","data-v-0fc192c6"]]),Gs=Ro(jc);Gs.use(Go());Gs.mount("#app");

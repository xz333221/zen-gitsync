import{d as Vs,r,o as St,a as xs,E as o,l as ga,c as fe,b as ht,w as Ke,e as b,f,n as mt,g as U,h as e,t as x,i as s,u as l,j as ha,k as a,m as ee,p as Mt,F as ke,q as ze,s as me,v as Tt,x as rs,y as Ht,z as ya,A as $s,B as Oe,C as y,D as Jt,G as Ze,H as Ls,I as is,J as zs,K as Bs,L as Fs,M as vt,N as rt,O as _a,P as cs,Q as jt,R as js,S as $t,T as bs,U as wa,V as At,W as Ne,X as Xe,Y as bt,Z as us,_ as Lt,$ as ka,a0 as Cs,a1 as ds,a2 as $a,a3 as gt,a4 as as,a5 as ls,a6 as It,a7 as Nt,a8 as fs,a9 as Rs,aa as ba,ab as Ca,ac as Sa,ad as Ds,ae as Ta,af as Gs,ag as Os,ah as Va,ai as xa,aj as La,ak as Ps,al as Bt,am as pt,an as za,ao as Ba,ap as Fa,aq as ja,ar as Ra,as as Da,at as Ga,au as Oa,av as Pa,aw as Ua,ax as Aa,ay as Ea,az as Ma,aA as Ia,aB as Ss,aC as Ts,aD as Na,aE as Ee,aF as Ha,aG as Ja}from"./vendor-BuYXfTwU.js";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const h of document.querySelectorAll('link[rel="modulepreload"]'))m(h);new MutationObserver(h=>{for(const G of h)if(G.type==="childList")for(const D of G.addedNodes)D.tagName==="LINK"&&D.rel==="modulepreload"&&m(D)}).observe(document,{childList:!0,subtree:!0});function p(h){const G={};return h.integrity&&(G.integrity=h.integrity),h.referrerPolicy&&(G.referrerPolicy=h.referrerPolicy),h.crossOrigin==="use-credentials"?G.credentials="include":h.crossOrigin==="anonymous"?G.credentials="omit":G.credentials="same-origin",G}function m(h){if(h.ep)return;h.ep=!0;const G=p(h);fetch(h.href,G)}})();const os=800;function Wa(){const te=window.location.port||"80";if(te==="5173"||te==="4173"||te==="5544"){const p="3002";return console.log(`开发环境：从环境变量读取后端端口 ${p}`),parseInt(p,10)}const i=parseInt(te,10);return console.log(`生产环境：使用当前页面端口 ${i}`),i}const qa=Wa(),Ct=Vs("git",()=>{const te=r(""),i=r([]),p=r(""),m=r(""),h=r(!1),G=r(!1),D=r(!1),M=r(0),I=r(""),N=r(!1),P=r(!1),Y=r(!1),ie=r(!1),O=r(!1),ne=r(0),ue=r(0),re=r(!1),F=r(""),R=r(0),L=r(0),se=r(!0),z=r(null),Z=r(""),ve=r(""),ye=r([]),B=r({staged:[],unstaged:[],untracked:[]}),j=r([]),J=r(!1),X=r(!1),le=r(!1),H=r(!1),ce=r(!1),be=r([]),w=r(!1),g=r(!1),A=r(!1),E=r(!1);function oe(){te.value="",i.value=[],p.value="",m.value="",h.value=!1,G.value=!1,D.value=!1,M.value=0,ne.value=0,ue.value=0,re.value=!1,F.value="",R.value=0,L.value=0,P.value=!1,Y.value=!1,ie.value=!1,O.value=!1,I.value="",N.value=!1,ye.value=[],B.value={staged:[],unstaged:[],untracked:[]},j.value=[],J.value=!1,X.value=!1,le.value=!1,H.value=!1,ce.value=!1}async function ae(u=!1,d=!1){if(!D.value)return;const V=Date.now();if(!u&&!d&&V-R.value<3e4){console.log("使用缓存的分支状态");return}try{console.log("获取分支状态...");let C="/api/branch-status";const pe=[];u&&pe.push("force=true"),d&&pe.push("countOnly=true"),pe.length>0&&(C+="?"+pe.join("&"));const qe=await(await fetch(C)).json();qe&&(ne.value=qe.ahead||0,ue.value=qe.behind||0,re.value=qe.hasUpstream||!1,F.value=qe.upstreamBranch||"",R.value=V,console.log(`分支状态更新：领先 ${ne.value} 个提交，落后 ${ue.value} 个提交，上游分支：${re.value?F.value:"无"}`))}catch(C){console.error("获取分支状态失败:",C),ne.value=0,ue.value=0,re.value=!1,F.value=""}}async function Ce(){const u=Date.now();if(u-M.value<1e3)return console.log("使用缓存的Git仓库状态:",D.value?"是":"不是"),D.value;try{const V=await(await fetch("/api/current_directory")).json();return D.value=V.isGitRepo===!0,M.value=u,console.log(`当前目录${D.value?"是":"不是"}Git仓库`),D.value}catch(d){return console.error("检查Git仓库状态失败:",d),D.value=!1,M.value=u,!1}}async function Pe(u=!1){try{const C=await(await fetch(u?"/api/branch?force=true":"/api/branch")).json();C.branch&&(te.value=C.branch,console.log(`当前分支更新为: ${C.branch}${u?" (强制刷新)":""}`))}catch(d){console.error("获取分支信息失败:",d)}}async function Be(){if(D.value)try{console.log("获取所有分支...");const d=await(await fetch("/api/branches")).json();d.branches&&Array.isArray(d.branches)&&(i.value=d.branches,L.value=Date.now(),console.log(`获取到${d.branches.length}个分支`))}catch(u){console.error("获取所有分支信息失败:",u)}}async function _(u){console.log("切换到分支:",u);try{h.value=!0;const V=await(await fetch("/api/checkout",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return V.success?(o({message:`已切换到分支: ${u}`,type:"success"}),await Pe(!0),await ae(!0),!0):(o({message:`切换分支失败: ${V.error}`,type:"error"}),!1)}catch(d){return o({message:`切换分支失败: ${d.message}`,type:"error"}),!1}finally{h.value=!1}}async function ge(){try{const d=await(await fetch("/api/user-info")).json();d.name&&d.email&&(p.value=d.name,m.value=d.email)}catch(u){console.error("获取用户信息失败:",u)}}async function xe(u,d){if(!u.trim())return o({message:"分支名称不能为空",type:"warning"}),!1;try{G.value=!0;const C=await(await fetch("/api/create-branch",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newBranchName:u,baseBranch:d||te.value})})).json();return C.success?(o({message:`已创建并切换到分支: ${u}`,type:"success"}),await Pe(!0),await ae(!0),await Be(),!0):(o({message:`创建分支失败: ${C.error}`,type:"error"}),!1)}catch(V){return o({message:`创建分支失败: ${V.message}`,type:"error"}),!1}finally{G.value=!1}}async function Me(){try{const d=await(await fetch("/api/clear-user-config",{method:"POST"})).json();return d.success?(p.value="",m.value="",o({message:"已清除Git用户配置",type:"success"}),!0):(o({message:`清除配置失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`清除配置失败: ${u.message}`,type:"error"}),!1}}async function Fe(u,d){try{const C=await(await fetch("/api/restore-user-config",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:u,email:d})})).json();return C.success?(p.value=u,m.value=d,o({message:"已恢复Git用户配置",type:"success"}),!0):(o({message:`恢复配置失败: ${C.error}`,type:"error"}),!1)}catch(V){return o({message:`恢复配置失败: ${V.message}`,type:"error"}),!1}}async function Ue(){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{Y.value=!0;const d=await(await fetch("/api/pull",{method:"POST"})).json();return d.success?(o({message:"拉取成功",type:"success"}),await ae(),!0):(d.needsMerge?o({message:`需要合并更改: ${d.pullOutput||"存在冲突需要手动解决"}`,type:"warning",duration:5e3}):o({message:`拉取失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`拉取失败: ${u.message}`,type:"error"}),!1}finally{Y.value=!1}}async function He(){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;try{ie.value=!0;const d=await(await fetch("/api/fetch-all",{method:"POST"})).json();return d.success?(o({message:"获取所有远程分支信息成功",type:"success"}),await ae(),!0):(o({message:`获取远程分支信息失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`获取远程分支信息失败: ${u.message}`,type:"error"}),!1}finally{ie.value=!1}}async function je(){z.value&&z.value.disconnect();try{const u=`http://localhost:${qa}`;if(console.log("尝试连接Socket.IO服务器:",u),z.value=ga(u,{reconnectionDelayMax:1e4,reconnection:!0,reconnectionAttempts:10,reconnectionDelay:1e3,timeout:2e4,autoConnect:!0,forceNew:!0,transports:["websocket","polling"]}),!z.value){console.error("Socket.IO初始化失败: socket为null");return}console.log("Socket.IO客户端已创建，开始注册事件监听器..."),z.value.on("connect",()=>{var d;console.log("✅ Socket.IO连接成功，事件监听器已生效，Socket ID:",(d=z.value)==null?void 0:d.id),se.value&&z.value&&z.value.emit("start_monitoring")}),z.value.on("project_info",d=>{Z.value=d.projectPath,ve.value=d.projectRoomId,console.log(`当前项目: ${d.projectPath}`),console.log(`房间ID: ${d.projectRoomId}`)}),z.value.on("project_changed",d=>{console.log(`项目已切换: ${d.oldProjectPath} -> ${d.newProjectPath}`),Z.value=d.newProjectPath,ve.value=d.newProjectRoomId,z.value&&z.value.emit("join_room",d.newProjectRoomId),console.log(`已加入新项目房间: ${d.newProjectRoomId}`)}),z.value.on("disconnect",d=>{console.log("与Socket.IO服务器断开连接:",d)}),z.value.on("git_status_update",d=>{if(se.value){if(console.log("✅ 成功监听到 git_status_update 事件:",new Date().toLocaleTimeString()),console.log("git_status_update data ==>",d),console.log("currentProjectPath.value ==>",Z.value),console.log("data.projectPath ==>",d.projectPath),d.projectPath&&Z.value&&d.projectPath!==Z.value){console.log(`忽略不同项目的状态更新: ${d.projectPath}`);return}console.log("正在更新 Git 文件状态..."),d.porcelain!==void 0&&T(d.porcelain)}}),z.value.on("monitoring_status",d=>{console.log("文件监控状态:",d.active?"已启动":"已停止")}),z.value.on("connect_error",d=>{console.error("Socket连接错误:",d.message)}),z.value.on("connect_timeout",()=>{console.error("Socket连接超时")}),z.value.on("reconnect",d=>{var V;console.log(`Socket重连成功，尝试次数: ${d}`),se.value&&(console.log("重连后重新发送start_monitoring请求"),(V=z.value)==null||V.emit("start_monitoring"))}),z.value.on("reconnect_attempt",d=>{console.log(`Socket尝试重连，第 ${d} 次尝试`)}),z.value.on("reconnect_error",d=>{console.error("Socket重连错误:",d.message)}),z.value.on("reconnect_failed",()=>{console.error("Socket重连失败，已达到最大重试次数")}),console.log("Socket.IO事件监听器注册完成：connect, project_info, project_changed, git_status_update, monitoring_status"),z.value&&!z.value.connected&&(console.log("Socket未连接，尝试手动连接..."),z.value.connect())}catch(u){console.error("Socket.IO连接初始化失败:",u)}}function tt(){if(console.log("toggleAutoUpdate调用，当前值:",se.value),!z.value){console.error("无法切换自动更新状态: socket连接不存在"),o.error("无法连接到服务器，自动更新可能不会生效"),console.log("尝试重新建立socket连接..."),je(),localStorage.setItem("zen-gitsync-auto-update",se.value.toString());return}try{se.value?(console.log("发送start_monitoring命令..."),z.value.emit("start_monitoring"),o.success("自动更新已启用")):(console.log("发送stop_monitoring命令..."),z.value.emit("stop_monitoring"),o.info("自动更新已禁用")),localStorage.setItem("zen-gitsync-auto-update",se.value.toString()),console.log("已保存自动更新设置到本地存储:",se.value)}catch(u){console.error("切换自动更新状态时出错:",u),o.error(`切换自动更新失败: ${u.message}`)}}function T(u){if(u===void 0||u===""){j.value=[];return}const d=u.split(`
`),V=[];for(const C of d){const pe=C.match(/^([ MADRCU\?]{2})\s+(.+)$/);if(pe){let Ie="";const qe=pe[1],at=qe.charAt(0),Rt=qe.charAt(1);at==="A"||at==="M"||at==="D"||at==="R"?Ie="added":at===" "&&Rt==="M"?Ie="modified":at===" "&&Rt==="D"?Ie="deleted":qe==="??"?Ie="untracked":Ie="other",V.push({path:pe[2],type:Ie})}}j.value=V}async function c(u=!0){if(!D.value){console.log("当前目录不是Git仓库，跳过加载提交历史");return}try{J.value=!0,console.log("开始加载提交历史...");const d=new Date().getTime(),C=await(await fetch(`/api/log?page=1&_t=${d}`)).json();C&&C.data&&Array.isArray(C.data)?(ye.value=[...C.data],console.log(`提交历史加载完成，共 ${ye.value.length} 条记录`)):(console.warn("API返回的提交历史格式不正确:",C),ye.value=[])}catch(d){console.error("获取提交历史失败:",d),u&&o({message:`获取提交历史失败: ${d.message}`,type:"error"})}finally{J.value=!1}}async function W(){if(!D.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{X.value=!0,await q()}catch(u){console.error("获取Git状态失败:",u),o({message:`获取Git状态失败: ${u.message}`,type:"error"})}finally{X.value=!1}}async function q(){if(console.log("开始获取Git状态(porcelain格式)..."),!D.value){console.log("当前目录不是Git仓库，跳过加载Git状态");return}try{const d=await(await fetch("/api/status_porcelain")).json();d.status!==void 0?T(d.status):j.value=[]}catch(u){console.error("获取Git状态(porcelain)失败:",u),o({message:`获取Git状态(porcelain)失败: ${u.message}`,type:"error"}),j.value=[]}}async function we(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const d=await(await fetch("/api/add",{method:"POST"})).json();return d.success?(o({message:"文件已添加到暂存区",type:"success"}),!0):(o({message:`添加文件失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`添加文件失败: ${u.message}`,type:"error"}),!1}finally{le.value=!1}}async function Re(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{le.value=!0;const V=await(await fetch("/api/add-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return V.success?(o({message:"文件已暂存",type:"success"}),W(),!0):(o({message:`暂存文件失败: ${V.error}`,type:"error"}),!1)}catch(d){return o({message:`暂存文件失败: ${d.message}`,type:"error"}),!1}finally{le.value=!1}}async function he(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ce.value=!0;const V=await(await fetch("/api/unstage-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:u})})).json();return V.success?(o({message:"已取消暂存文件",type:"success"}),W(),!0):(o({message:`取消暂存失败: ${V.error}`,type:"error"}),!1)}catch(d){return o({message:`取消暂存失败: ${d.message}`,type:"error"}),!1}finally{ce.value=!1}}function _e(u){return new Promise(d=>setTimeout(d,u))}async function De(u,d=!1){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{H.value=!0;const C=await(await fetch("/api/commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,hasNewlines:u.includes(`
`),noVerify:d})})).json();return C.success?(o({message:"提交成功",type:"success"}),!0):(o({message:`commitChanges 提交失败: ${C.error}`,type:"error"}),!1)}catch(V){return o({message:`提交失败: ${V.message}`,type:"error"}),!1}finally{H.value=!1}}async function Se(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{P.value=!0;const d=await(await fetch("/api/push",{method:"POST"})).json();return d.success?(o({message:"推送成功",type:"success"}),ne.value=0,ue.value=0,await Promise.all([W(),c()]),console.log("推送成功，分支状态已设置为同步 (ahead=0, behind=0)"),!0):(o({message:`推送失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`推送失败: ${u.message}`,type:"error"}),!1}finally{P.value=!1}}async function $e(u,d={}){if(!D.value)return o({message:"当前目录不是Git仓库",type:"warning"}),!1;if(!u)return o({message:"请选择要合并的分支",type:"warning"}),!1;if(u===te.value)return o({message:"不能合并当前分支到自身",type:"warning"}),!1;try{O.value=!0;const V=await fetch("/api/merge",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u,...d})}),C=await V.json();return V.status===409?(o({message:"合并分支时发生冲突，请手动解决",type:"warning",duration:5e3}),!1):C.success?(o({message:`成功合并分支 ${u} 到 ${te.value}`,type:"success"}),await W(),await ae(),!0):(o({message:`合并分支失败: ${C.error}`,type:"error"}),!1)}catch(V){return o({message:`合并分支失败: ${V.message}`,type:"error"}),!1}finally{O.value=!1}}async function st(u,d=!1){if(console.log("开始暂存并提交操作..."),!await we())return!1;console.log("暂存完成，等待Git操作完成..."),await _e(os),console.log("开始提交更改...");const C=await De(u,d);return console.log("暂存并提交操作完成"),C}async function Le(u,d=!1){try{if(console.log("开始暂存文件..."),!await we()||(console.log("暂存完成，等待Git操作完成..."),await _e(os),console.log("开始提交更改..."),!await De(u,d)))return!1;console.log("提交完成，等待Git操作完成..."),await _e(os),console.log("开始推送到远程...");const pe=await Se();return console.log("一键推送操作完成，状态已统一刷新"),pe}catch(V){console.error("一键推送操作失败:",V);try{(await(await fetch("/api/remove-lock",{method:"POST"})).json()).success&&o({message:"检测到Git锁定文件冲突，已自动清理，请重试操作",type:"warning"})}catch(C){console.error("清理锁定文件失败:",C)}o({message:`操作失败: ${V.message}`,type:"error"});try{await Promise.all([W(),c(),ae()])}catch(C){console.error("刷新状态失败:",C)}return!1}}async function Q(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ce.value=!0;const d=await(await fetch("/api/reset-head",{method:"POST"})).json();return d.success?(o({message:"已重置暂存区",type:"success"}),W(),!0):(o({message:`重置暂存区失败: ${d.error}`,type:"error"}),!1)}catch(u){return o({message:`重置暂存区失败: ${u.message}`,type:"error"}),!1}finally{ce.value=!1}}async function Qe(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{ce.value=!0;const V=await(await fetch("/api/reset-to-remote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({branch:u})})).json();return V.success?(o({message:`已重置分支 ${u} 到远程状态`,type:"success"}),W(),c(),!0):(o({message:`重置分支失败: ${V.error}`,type:"error"}),!1)}catch(d){return o({message:`重置分支失败: ${d.message}`,type:"error"}),!1}finally{ce.value=!1}}async function et(){if(D.value)try{N.value=!0,console.log("获取远程仓库地址...");const d=await(await fetch("/api/remote-url")).json();d.success?(I.value=d.url||"",console.log(`获取到远程仓库地址: ${I.value}`)):(console.warn("获取远程仓库地址失败:",d.error),I.value="")}catch(u){console.error("获取远程仓库地址失败:",u),I.value=""}finally{N.value=!1}}async function Je(){if(!I.value)return o({message:"没有可复制的远程仓库地址",type:"warning"}),!1;try{return await navigator.clipboard.writeText(I.value),o({message:"已复制远程仓库地址",type:"success"}),!0}catch(u){return console.error("复制远程仓库地址失败:",u),o({message:`复制失败: ${u.message}`,type:"error"}),!1}}St(()=>{const u=localStorage.getItem("zen-gitsync-auto-update");u!==null&&(se.value=u==="true"),je()});function Ge(){z.value&&(z.value.disconnect(),z.value=null)}xs(()=>{Ge()});async function Ae(){if(!D.value)return o.warning("当前目录不是Git仓库"),[];try{w.value=!0;const d=await(await fetch("/api/stash-list")).json();return d.success?(be.value=d.stashes,d.stashes):(o.error(`获取stash列表失败: ${d.error}`),[])}catch(u){return console.error("获取stash列表失败:",u),o.error(`获取stash列表失败: ${u.message}`),[]}finally{w.value=!1}}async function _t(u,d=!1,V=!0){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{E.value=!0;const pe=await(await fetch("/api/stash-save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:u,includeUntracked:d,excludeLocked:V})})).json();return pe.success?(o.success(pe.message),await Ae(),await W(),!0):(o.warning(pe.message),!1)}catch(C){return console.error("保存stash失败:",C),o.error(`保存stash失败: ${C.message}`),!1}finally{E.value=!1}}async function $(u,d=!1){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{g.value=!0;const V=await fetch("/api/stash-apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u,pop:d})}),C=await V.json();return V.status===409?(o.warning("应用stash时发生冲突，请手动解决"),!1):C.success?(o.success(C.message),await Ae(),await W(),!0):(o.error(`应用stash失败: ${C.error}`),!1)}catch(V){return console.error("应用stash失败:",V),o.error(`应用stash失败: ${V.message}`),!1}finally{g.value=!1}}async function v(u){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{A.value=!0;const V=await(await fetch("/api/stash-drop",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stashId:u})})).json();return V.success?(o.success(V.message),await Ae(),!0):(o.error(`删除stash失败: ${V.error}`),!1)}catch(d){return console.error("删除stash失败:",d),o.error(`删除stash失败: ${d.message}`),!1}finally{A.value=!1}}async function K(){if(!D.value)return o.warning("当前目录不是Git仓库"),!1;try{A.value=!0;const d=await(await fetch("/api/stash-clear",{method:"POST"})).json();return d.success?(o.success(d.message),be.value=[],!0):(o.error(`清空stash失败: ${d.error}`),!1)}catch(u){return console.error("清空stash失败:",u),o.error(`清空stash失败: ${u.message}`),!1}finally{A.value=!1}}return{currentBranch:te,allBranches:i,userName:p,userEmail:m,isChangingBranch:h,isCreatingBranch:G,isGitRepo:D,lastCheckedTime:M,branchAhead:ne,branchBehind:ue,hasUpstream:re,upstreamBranch:F,lastBranchStatusTime:R,lastBranchesTime:L,remoteUrl:I,isLoadingRemoteUrl:N,stashes:be,isLoadingStashes:w,isApplyingStash:g,isDroppingStash:A,isSavingStash:E,log:ye,status:B,fileList:j,isLoadingLog:J,isLoadingStatus:X,isAddingFiles:le,isCommiting:H,isResetting:ce,autoUpdateEnabled:se,isPushing:P,isGitPulling:Y,isGitFetching:ie,isGitMerging:O,$reset:oe,checkGitRepo:Ce,getCurrentBranch:Pe,getAllBranches:Be,changeBranch:_,getUserInfo:ge,createBranch:xe,clearUserConfig:Me,restoreUserConfig:Fe,getBranchStatus:ae,gitPull:Ue,gitFetchAll:He,initSocketConnection:je,toggleAutoUpdate:tt,parseStatusPorcelain:T,fetchLog:c,fetchStatus:W,fetchStatusPorcelain:q,addToStage:we,addFileToStage:Re,unstageFile:he,commitChanges:De,pushToRemote:Se,addAndCommit:st,addCommitAndPush:Le,resetHead:Q,resetToRemote:Qe,getRemoteUrl:et,copyRemoteUrl:Je,mergeBranch:$e,getStashList:Ae,saveStash:_t,applyStash:$,dropStash:v,clearAllStashes:K,socket:z,disconnectSocket:Ge}}),ps=Vs("config",()=>{const te=r(""),i=r([]),p=r([]),m=r([]),h=r([]),G=r(!1),D=r(!1),M=fe(()=>({defaultCommitMessage:te.value,descriptionTemplates:i.value,scopeTemplates:p.value,messageTemplates:m.value,lockedFiles:h.value}));async function I(F=!1){if(!F&&D.value&&!G.value)return console.log("使用缓存的配置信息"),M.value;try{G.value=!0,console.log("加载配置信息...");const L=await(await fetch("/api/config/getConfig")).json();return te.value=L.defaultCommitMessage||"",i.value=L.descriptionTemplates||[],p.value=L.scopeTemplates||[],m.value=L.messageTemplates||[],h.value=L.lockedFiles||[],D.value=!0,console.log("配置信息加载完成"),M.value}catch(R){return console.error("加载配置失败:",R),o.error(`加载配置失败: ${R.message}`),null}finally{G.value=!1}}async function N(F){try{const L=await(await fetch("/api/config/saveDefaultMessage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({defaultCommitMessage:F})})).json();return L.success?(te.value=F,o.success("默认提交信息已保存"),!0):(o.error(`保存失败: ${L.error}`),!1)}catch(R){return o.error(`保存失败: ${R.message}`),!1}}async function P(F,R){try{const se=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:F,type:R})})).json();return se.success?(R==="description"?i.value.includes(F)||i.value.push(F):R==="scope"?p.value.includes(F)||p.value.push(F):R==="message"&&(m.value.includes(F)||m.value.push(F)),o.success("模板已保存"),!0):(o.error(`保存模板失败: ${se.error}`),!1)}catch(L){return o.error(`保存模板失败: ${L.message}`),!1}}async function Y(F,R){try{const se=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:F,type:R})})).json();return se.success?(R==="description"?i.value=i.value.filter(z=>z!==F):R==="scope"?p.value=p.value.filter(z=>z!==F):R==="message"&&(m.value=m.value.filter(z=>z!==F)),o.success("模板已删除"),!0):(o.error(`删除模板失败: ${se.error}`),!1)}catch(L){return o.error(`删除模板失败: ${L.message}`),!1}}async function ie(F,R,L){try{const z=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:F,newTemplate:R,type:L})})).json();if(z.success){if(L==="description"){const Z=i.value.indexOf(F);Z!==-1&&(i.value[Z]=R)}else if(L==="scope"){const Z=p.value.indexOf(F);Z!==-1&&(p.value[Z]=R)}else if(L==="message"){const Z=m.value.indexOf(F);Z!==-1&&(m.value[Z]=R)}return o.success("模板已更新"),!0}else return o.error(`更新模板失败: ${z.error}`),!1}catch(se){return o.error(`更新模板失败: ${se.message}`),!1}}async function O(){try{const R=await(await fetch("/api/locked-files")).json();return R.success?(h.value=R.lockedFiles||[],R.lockedFiles):(o.error(`加载锁定文件列表失败: ${R.error}`),[])}catch(F){return console.error("加载锁定文件列表失败:",F),o.error(`加载锁定文件列表失败: ${F.message}`),[]}}async function ne(F){try{const L=await(await fetch("/api/lock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:F})})).json();return L.success?(await O(),o.success(`文件已锁定: ${F}`),!0):(o.error(`锁定文件失败: ${L.error}`),!1)}catch(R){return console.error("锁定文件失败:",R),o.error(`锁定文件失败: ${R.message}`),!1}}async function ue(F){try{const L=await(await fetch("/api/unlock-file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:F})})).json();return L.success?(await O(),o.success(`文件已解锁: ${F}`),!0):(o.error(`解锁文件失败: ${L.error}`),!1)}catch(R){return console.error("解锁文件失败:",R),o.error(`解锁文件失败: ${R.message}`),!1}}async function re(F){try{const L=await(await fetch("/api/check-file-lock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:F})})).json();return L.success?L.isLocked:(console.error("检查文件锁定状态失败:",L.error),!1)}catch(R){return console.error("检查文件锁定状态失败:",R),!1}}return{defaultCommitMessage:te,descriptionTemplates:i,scopeTemplates:p,messageTemplates:m,lockedFiles:h,isLoading:G,isLoaded:D,config:M,loadConfig:I,saveDefaultMessage:N,saveTemplate:P,deleteTemplate:Y,updateTemplate:ie,loadLockedFiles:O,lockFile:ne,unlockFile:ue,isFileLocked:re}});function Ya(te){return te.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function Xa(te){return te?te.split(`
`).map(p=>{const m=Ya(p);return p.startsWith("diff --git")||p.startsWith("diff --cc")||p.startsWith("diff --combined")?`<div class="diff-header">${m}</div>`:p.startsWith("---")?`<div class="diff-old-file">${m}</div>`:p.startsWith("+++")?`<div class="diff-new-file">${m}</div>`:p.startsWith("@@")?`<div class="diff-hunk-header">${m}</div>`:p.startsWith("+")?`<div class="diff-added">${m}</div>`:p.startsWith("-")?`<div class="diff-removed">${m}</div>`:`<div class="diff-context">${m}</div>`}).join(""):""}function Ka(te){return te?te.trim():"(无提交信息)"}function Za(te){if(!te)return"";const i=/^(feat|fix|docs|style|refactor|perf|test|chore|build|ci|revert)(\([^)]+\))?\s*:\s*(.+)$/s,p=te.match(i);return p?p[3].trim():te.trim()}const Qa={key:0,class:"files-panel"},el={class:"panel-header"},tl={key:0,class:"file-count"},sl={class:"files-list"},al=["onClick"],ll={class:"file-name"},ol={class:"panel-header"},nl={key:0,class:"selected-file"},il={class:"diff-content"},rl=["innerHTML"],cl=ht({__name:"FileDiffViewer",props:{files:{},emptyText:{default:"没有找到变更文件"},diffContent:{default:""},selectedFile:{default:""},height:{default:"100%"},showFileList:{type:Boolean,default:!0}},emits:["file-select"],setup(te,{emit:i}){const p=te,m=i,h=r(""),G=fe(()=>p.selectedFile||h.value),D=fe(()=>p.files.map(N=>({...N,displayName:N.name||N.path.split("/").pop()||N.path}))),M=fe(()=>p.diffContent&&p.diffContent.trim()!=="");function I(N){h.value=N,m("file-select",N)}return Ke(()=>p.selectedFile,N=>{N!==void 0&&(h.value=N)}),Ke(()=>p.files,N=>{if(N.length>0&&!G.value){const P=N[0];I(P.path)}},{immediate:!0}),(N,P)=>(f(),b("div",{class:"file-diff-viewer",style:mt({height:N.height})},[N.showFileList?(f(),b("div",Qa,[e("div",el,[P[0]||(P[0]=e("h4",null,"变更文件",-1)),N.files.length>0?(f(),b("span",tl,"("+x(N.files.length)+")",1)):U("",!0)]),e("div",sl,[s(l(ha),{height:"100%"},{default:a(()=>[N.files.length===0?(f(),ee(l(Mt),{key:0,description:N.emptyText,"image-size":60},null,8,["description"])):U("",!0),(f(!0),b(ke,null,ze(D.value,Y=>(f(),b("div",{key:Y.path,class:me(["file-item",{active:Y.path===G.value,[`file-type-${Y.type}`]:Y.type}]),onClick:ie=>I(Y.path)},[s(l(Tt),{class:"file-icon"},{default:a(()=>[s(l(rs))]),_:1}),s(l(Ht),{content:Y.path,placement:"top",disabled:Y.displayName.length<=35,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",ll,x(Y.displayName),1)]),_:2},1032,["content","disabled"])],10,al))),128))]),_:1})])])):U("",!0),e("div",{class:me(["diff-panel",{"full-width":!N.showFileList}])},[e("div",ol,[P[1]||(P[1]=e("h4",null,"文件差异",-1)),G.value?(f(),b("span",nl,x(G.value.split("/").pop()),1)):U("",!0)]),e("div",il,[M.value?(f(),b("div",{key:1,class:"diff-text",innerHTML:l(Xa)(N.diffContent)},null,8,rl)):(f(),ee(l(Mt),{key:0,description:G.value?"该文件没有差异内容":"请选择文件查看差异","image-size":80},null,8,["description"]))])],2)],4))}}),yt=(te,i)=>{const p=te.__vccOpts||te;for(const[m,h]of i)p[m]=h;return p},ms=yt(cl,[["__scopeId","data-v-a936d0d7"]]),ul={class:"common-dialog__footer"},dl=ht({__name:"CommonDialog",props:{modelValue:{type:Boolean},title:{},size:{default:"medium"},type:{default:"default"},width:{},height:{},top:{default:"8vh"},closeOnClickModal:{type:Boolean,default:!1},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},customClass:{},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},showFooter:{type:Boolean,default:!1},confirmText:{default:"确定"},cancelText:{default:"取消"},showCancel:{type:Boolean,default:!0},confirmLoading:{type:Boolean,default:!1}},emits:["update:modelValue","confirm","cancel","close","opened","closed"],setup(te,{emit:i}){const p=te,m=i,h=fe(()=>{if(p.width)return p.width;switch(p.size){case"small":return"30%";case"medium":return"50%";case"large":return"80%";case"extra-large":return"90%";default:return"50%"}}),G=fe(()=>{if(p.height)return p.height;switch(p.type){case"full-height":return"calc(100vh - 100px)";case"flex":return"calc(100vh - 160px)";default:return"auto"}}),D=fe(()=>{const O={};return(p.type==="full-height"||p.type==="flex")&&(O["--dialog-height"]=G.value),O}),M=fe(()=>{const O=[];return p.customClass&&O.push(p.customClass),p.type==="flex"&&O.push("common-dialog--flex"),p.type==="full-height"&&O.push("common-dialog--full-height"),O.join(" ")});function I(){m("update:modelValue",!1),m("close")}function N(){m("confirm")}function P(){m("cancel"),I()}function Y(){m("opened")}function ie(){m("closed")}return(O,ne)=>{const ue=Oe;return f(),ee(l(Jt),{"model-value":O.modelValue,title:O.title,width:h.value,top:O.top,style:mt(D.value),"close-on-click-modal":O.closeOnClickModal,"close-on-press-escape":O.closeOnPressEscape,"destroy-on-close":O.destroyOnClose,draggable:O.draggable,class:me(M.value),"append-to-body":O.appendToBody,"lock-scroll":O.lockScroll,onClose:I,onOpened:Y,onClosed:ie},ya({default:a(()=>[$s(O.$slots,"default",{},void 0,!0)]),_:2},[O.showFooter||O.$slots.footer?{name:"footer",fn:a(()=>[$s(O.$slots,"footer",{},()=>[e("div",ul,[O.showCancel?(f(),ee(ue,{key:0,onClick:P},{default:a(()=>[y(x(O.cancelText),1)]),_:1})):U("",!0),s(ue,{type:"primary",loading:O.confirmLoading,onClick:N},{default:a(()=>[y(x(O.confirmText),1)]),_:1},8,["loading"])])],!0)]),key:"0"}:void 0]),1032,["model-value","title","width","top","style","close-on-click-modal","close-on-press-escape","destroy-on-close","draggable","class","append-to-body","lock-scroll"])}}}),Ft=yt(dl,[["__scopeId","data-v-c1505473"]]),fl={class:"card"},pl={class:"status-header"},ml={class:"header-actions"},vl=["element-loading-text"],gl={key:0,class:"status-box"},hl={key:1,class:"status-box-wrap"},yl={key:0,class:"branch-status-info"},_l={class:"branch-sync-status"},wl={class:"sync-status-content"},kl={class:"status-badges"},$l={class:"badge-content"},bl={class:"badge-content"},Cl={key:1,class:"file-list-container"},Sl={key:0,class:"file-group"},Tl={class:"file-list"},Vl=["onClick"],xl={class:"file-info"},Ll={class:"file-name-section"},zl=["title"],Bl={class:"file-directory"},Fl={class:"file-actions"},jl={key:1,class:"file-group"},Rl={class:"file-list"},Dl=["onClick"],Gl={class:"file-info"},Ol={class:"file-name-section"},Pl=["title"],Ul={class:"file-directory"},Al={class:"file-actions"},El={key:2,class:"file-group"},Ml={class:"file-list"},Il=["onClick"],Nl={class:"file-info"},Hl={class:"file-name-section"},Jl=["title"],Wl={class:"file-directory"},ql={class:"file-actions"},Yl={key:2,class:"empty-status"},Xl={class:"empty-icon"},Kl={class:"lock-feature-description"},Zl={class:"description-header"},Ql={key:0,class:"empty-locked-files"},eo={class:"empty-icon"},to={key:1,class:"locked-files-list"},so={class:"locked-files-header"},ao={class:"locked-file-items"},lo={class:"file-info"},oo={class:"file-path-container"},no={class:"file-name"},io={class:"file-directory"},ro={class:"file-actions"},co={class:"dialog-footer"},uo=ht({__name:"GitStatus",props:{initialDirectory:{type:String,default:""}},setup(te,{expose:i}){const p=te,m=Ct(),h=ps(),G=fe(()=>m.isLoadingStatus),D=r(""),M=r(""),I=r(!1),N=r(!1),P=r(-1),Y=fe(()=>m.fileList.map(w=>({path:w.path,name:w.path.split("/").pop()||w.path,type:w.type})));async function ie(w){await L(w)}const O=r(!1),ne=r({staged:!1,unstaged:!1,untracked:!1}),ue=r(p.initialDirectory||"");async function re(){try{if(!ue.value){const g=await(await fetch("/api/current_directory")).json();ue.value=g.directory||"未知目录"}if(!m.isGitRepo)return;await m.fetchStatus(),await m.getBranchStatus(),o({message:"Git 状态已刷新",type:"success"})}catch(w){o({message:"刷新失败: "+w.message,type:"error"})}}async function F(w){try{await Ne.confirm(`确认解锁该文件？
${w}`,"确认解锁",{type:"warning",confirmButtonText:"解锁",cancelButtonText:"取消"}),await h.unlockFile(w)}catch{}}async function R(){if(h.lockedFiles.length)try{await Ne.confirm(`确认解锁所有已锁定文件？共 ${h.lockedFiles.length} 个。`,"清空全部锁定",{type:"warning",confirmButtonText:"全部解锁",cancelButtonText:"取消"});const w=[...h.lockedFiles];await Promise.all(w.map(g=>h.unlockFile(g))),await h.loadLockedFiles(),o.success("已清空所有文件锁定")}catch{}}async function L(w){try{N.value=!0,D.value=w,P.value=m.fileList.findIndex(A=>A.path===w);const g=m.fileList[P.value];if(g&&g.type==="untracked")try{const E=await(await fetch(`/api/file-content?file=${encodeURIComponent(w)}`)).json();E.success&&E.content?M.value=`diff --git a/${w} b/${w}
新文件: ${w}
--- /dev/null
+++ b/${w}
@@ -0,0 +1,${E.content.split(`
`).length} @@
`+E.content.split(`
`).map(oe=>`+${oe}`).join(`
`):M.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}catch(A){console.error("获取未跟踪文件内容失败:",A),M.value=`这是一个新文件，尚未被Git跟踪。
添加到暂存区后可以提交该文件。`}else if(g&&g.type==="added"){const E=await(await fetch(`/api/diff-cached?file=${encodeURIComponent(w)}`)).json();M.value=E.diff||"没有变更"}else{const E=await(await fetch(`/api/diff?file=${encodeURIComponent(w)}`)).json();M.value=E.diff||"没有变更"}}catch(g){o({message:"获取文件差异失败: "+g.message,type:"error"}),M.value="获取差异失败: "+g.message}finally{N.value=!1}}function se(w){if(I.value=!0,m.fileList.length>0){const g=m.fileList.find(A=>A.path===w.path)||m.fileList[0];L(g.path)}}async function z(w){await m.addFileToStage(w)}async function Z(w){await m.unstageFile(w)}async function ve(){await ye()}async function ye(){try{if(!m.isGitRepo)return;await m.fetchStatus(),o({message:"Git 文件状态已刷新",type:"success"})}catch(w){o({message:"刷新失败: "+w.message,type:"error"})}}async function B(){try{await m.gitPull(),await re()}catch(w){console.error("拉取操作发生错误:",w)}}async function j(){try{await m.gitFetchAll(),await re()}catch(w){console.error("获取远程分支信息操作发生错误:",w)}}async function J(w){try{await Ne.confirm(`确定要撤回文件 "${w}" 的所有修改吗？此操作无法撤销。`,"撤回修改",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const A=await(await fetch("/api/revert_file",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filePath:w})})).json();A.success?(o.success("已撤回文件修改"),await re()):o.error(A.error?`撤回失败: ${A.error}`:"撤回文件修改失败，请重试")}catch(g){if(g==="cancel"||g.message==="cancel")return;const A=g.message||"未知错误";A!=="undefined"?o.error(`撤回文件修改失败: ${A}`):o.error("撤回文件修改失败，请重试")}}function X(w){const g=w.split("/");return g[g.length-1]}function le(w){const g=w.split("/");return g.length<=1?"":g.slice(0,-1).join("/")}function H(w){const g=w.replace(/\\/g,"/"),A=h.lockedFiles.some(E=>{const oe=E.replace(/\\/g,"/");return g===oe});return(w==="test/2.txt"||w==="2.txt")&&console.log("检查文件锁定状态:",{filePath:w,normalizedPath:g,lockedFiles:h.lockedFiles,normalizedLockedFiles:h.lockedFiles.map(E=>E.replace(/\\/g,"/")),isLocked:A}),A}function ce(w){H(w)?h.unlockFile(w):h.lockFile(w)}function be(w){ne.value[w]=!ne.value[w]}return St(()=>{re(),h.loadConfig(),h.loadLockedFiles()}),Ke(()=>m.autoUpdateEnabled,(w,g)=>{console.log(`自动更新状态变更: ${g} -> ${w}`),m.toggleAutoUpdate()},{immediate:!1}),i({refreshStatus:ve}),(w,g)=>{const A=Ls,E=Ht,oe=Oe,ae=Tt,Ce=jt,Pe=wa,Be=cs;return f(),b(ke,null,[e("div",fl,[e("div",pl,[g[8]||(g[8]=e("h2",null,"Git 状态",-1)),e("div",ml,[s(E,{content:l(m).autoUpdateEnabled?"禁用自动更新文件状态":"启用自动更新文件状态",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(A,{modelValue:l(m).autoUpdateEnabled,"onUpdate:modelValue":g[0]||(g[0]=_=>l(m).autoUpdateEnabled=_),style:{"--el-switch-on-color":"#67C23A","--el-switch-off-color":"#909399","margin-right":"10px"},"inline-prompt":"","active-icon":l(zs),"inactive-icon":l(is),class:"auto-update-switch"},null,8,["modelValue","active-icon","inactive-icon"])]),_:1},8,["content"]),s(E,{content:"Git Pull (拉取远程更新)",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"primary",icon:l(Bs),circle:"",size:"small",onClick:B,loading:l(m).isGitPulling,disabled:!l(m).hasUpstream},null,8,["icon","loading","disabled"])]),_:1}),s(E,{content:"Git Fetch All (获取所有远程分支)",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[Ze(s(oe,{type:"primary",icon:l(Fs),circle:"",size:"small",onClick:j,loading:l(m).isGitFetching},null,8,["icon","loading"]),[[vt,!1]])]),_:1}),l(h).lockedFiles.length>0?(f(),ee(E,{key:0,content:"管理锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"warning",circle:"",size:"small",onClick:g[1]||(g[1]=_=>O.value=!0)},{default:a(()=>[s(ae,null,{default:a(()=>[s(l(rt))]),_:1})]),_:1})]),_:1})):U("",!0),s(E,{content:"刷新状态",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"primary",icon:l(_a),circle:"",size:"small",onClick:ve,loading:G.value},null,8,["icon","loading"])]),_:1})])]),Ze((f(),b("div",{class:"card-content","element-loading-text":l(m).isGitPulling?"正在拉取代码...":"正在获取远程分支信息..."},[l(m).isGitRepo?(f(),b("div",hl,[l(m).hasUpstream&&(l(m).branchAhead>0||l(m).branchBehind>0)?(f(),b("div",yl,[e("div",_l,[e("div",wl,[s(E,{content:"本地分支与远程分支的状态对比",placement:"top","show-after":200},{default:a(()=>[e("div",kl,[l(m).branchAhead>0?(f(),ee(Ce,{key:0,size:"small",type:"warning",class:"status-badge"},{default:a(()=>[e("span",$l,[s(ae,null,{default:a(()=>[s(l(js))]),_:1}),y(" 你的分支领先 'origin/"+x(l(m).currentBranch)+"' "+x(l(m).branchAhead)+" 个提交 ",1)])]),_:1})):U("",!0),l(m).branchBehind>0?(f(),ee(Ce,{key:1,size:"small",type:"info",class:"status-badge"},{default:a(()=>[e("span",bl,[s(ae,null,{default:a(()=>[s(l($t))]),_:1}),y(" 你的分支落后 'origin/"+x(l(m).currentBranch)+"' "+x(l(m).branchBehind)+" 个提交 ",1)])]),_:1})):U("",!0)])]),_:1})])])])):U("",!0),l(m).fileList.length?(f(),b("div",Cl,[l(m).fileList.some(_=>_.type==="added")?(f(),b("div",Sl,[e("div",{class:"file-group-header",onClick:g[2]||(g[2]=_=>be("staged"))},[s(ae,{class:me(["collapse-icon",{collapsed:ne.value.staged}])},{default:a(()=>[s(l($t))]),_:1},8,["class"]),g[10]||(g[10]=e("span",null,"已暂存的更改",-1))]),Ze(e("div",Tl,[(f(!0),b(ke,null,ze(l(m).fileList.filter(_=>_.type==="added"),_=>(f(),b("div",{key:_.path,class:"file-item",onClick:ge=>se(_)},[e("div",xl,[e("div",{class:me(["file-status-indicator",["added",{locked:H(_.path)}]])},null,2),e("div",Ll,[s(E,{content:X(_.path),placement:"top",disabled:X(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:me(["file-name",{"locked-file-name":H(_.path)}])},[y(x(X(_.path))+" ",1),H(_.path)?(f(),ee(ae,{key:0,class:"lock-indicator"},{default:a(()=>[s(l(rt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:le(_.path)},[s(E,{content:le(_.path),placement:"top",disabled:le(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Bl,x(le(_.path)),1)]),_:2},1032,["content","disabled"])],8,zl)]),e("div",Fl,[s(E,{content:H(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:H(_.path)?"danger":"info",size:"small",circle:"",onClick:Xe(ge=>ce(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[s(ae,{size:"12"},{default:a(()=>[(f(),ee(bt(H(_.path)?l(rt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),s(E,{content:"取消暂存",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"warning",size:"small",circle:"",onClick:Xe(ge=>Z(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[11]||(g[11]=[y("-")])),_:2},1032,["onClick"])]),_:2},1024)])],8,Vl))),128))],512),[[vt,!ne.value.staged]])])):U("",!0),l(m).fileList.some(_=>_.type==="modified"||_.type==="deleted")?(f(),b("div",jl,[e("div",{class:"file-group-header",onClick:g[3]||(g[3]=_=>be("unstaged"))},[s(ae,{class:me(["collapse-icon",{collapsed:ne.value.unstaged}])},{default:a(()=>[s(l($t))]),_:1},8,["class"]),g[12]||(g[12]=e("span",null,"未暂存的更改",-1))]),Ze(e("div",Rl,[(f(!0),b(ke,null,ze(l(m).fileList.filter(_=>_.type==="modified"||_.type==="deleted"),_=>(f(),b("div",{key:_.path,class:"file-item",onClick:ge=>se(_)},[e("div",Gl,[e("div",{class:me(["file-status-indicator",[_.type,{locked:H(_.path)}]])},null,2),e("div",Ol,[s(E,{content:X(_.path),placement:"top",disabled:X(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:me(["file-name",{"locked-file-name":H(_.path)}])},[y(x(X(_.path))+" ",1),H(_.path)?(f(),ee(ae,{key:0,class:"lock-indicator"},{default:a(()=>[s(l(rt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:le(_.path)},[s(E,{content:le(_.path),placement:"top",disabled:le(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Ul,x(le(_.path)),1)]),_:2},1032,["content","disabled"])],8,Pl)]),e("div",Al,[s(E,{content:H(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:H(_.path)?"danger":"info",size:"small",circle:"",onClick:Xe(ge=>ce(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[s(ae,{size:"12"},{default:a(()=>[(f(),ee(bt(H(_.path)?l(rt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),s(E,{content:"添加到暂存区",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"success",size:"small",circle:"",onClick:Xe(ge=>z(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[13]||(g[13]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),s(E,{content:"撤回修改",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"danger",size:"small",icon:l(us),circle:"",onClick:Xe(ge=>J(_.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,Dl))),128))],512),[[vt,!ne.value.unstaged]])])):U("",!0),l(m).fileList.some(_=>_.type==="untracked")?(f(),b("div",El,[e("div",{class:"file-group-header",onClick:g[4]||(g[4]=_=>be("untracked"))},[s(ae,{class:me(["collapse-icon",{collapsed:ne.value.untracked}])},{default:a(()=>[s(l($t))]),_:1},8,["class"]),g[14]||(g[14]=e("span",null,"未跟踪的文件",-1))]),Ze(e("div",Ml,[(f(!0),b(ke,null,ze(l(m).fileList.filter(_=>_.type==="untracked"),_=>(f(),b("div",{key:_.path,class:"file-item",onClick:ge=>se(_)},[e("div",Nl,[e("div",{class:me(["file-status-indicator",["untracked",{locked:H(_.path)}]])},null,2),e("div",Hl,[s(E,{content:X(_.path),placement:"top",disabled:X(_.path).length<=25,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",{class:me(["file-name",{"locked-file-name":H(_.path)}])},[y(x(X(_.path))+" ",1),H(_.path)?(f(),ee(ae,{key:0,class:"lock-indicator"},{default:a(()=>[s(l(rt))]),_:1})):U("",!0)],2)]),_:2},1032,["content","disabled"])]),e("div",{class:"file-path-section",title:le(_.path)},[s(E,{content:le(_.path),placement:"top",disabled:le(_.path).length<=30,"hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Wl,x(le(_.path)),1)]),_:2},1032,["content","disabled"])],8,Jl)]),e("div",ql,[s(E,{content:H(_.path)?"解锁文件":"锁定文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:H(_.path)?"danger":"info",size:"small",circle:"",onClick:Xe(ge=>ce(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>[s(ae,{size:"12"},{default:a(()=>[(f(),ee(bt(H(_.path)?l(rt):l(At))))]),_:2},1024)]),_:2},1032,["type","onClick"])]),_:2},1032,["content"]),s(E,{content:"添加到暂存区",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"success",size:"small",circle:"",onClick:Xe(ge=>z(_.path),["stop"]),class:"file-action-btn"},{default:a(()=>g[15]||(g[15]=[y("+")])),_:2},1032,["onClick"])]),_:2},1024),s(E,{content:"删除文件",placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[s(oe,{type:"danger",size:"small",icon:l(is),circle:"",onClick:Xe(ge=>J(_.path),["stop"]),class:"file-action-btn"},null,8,["icon","onClick"])]),_:2},1024)])],8,Il))),128))],512),[[vt,!ne.value.untracked]])])):U("",!0)])):l(m).isGitRepo?(f(),b("div",Yl,[e("div",Xl,[s(ae,null,{default:a(()=>[s(l(rs))]),_:1})]),g[16]||(g[16]=e("div",{class:"empty-text"},"没有检测到任何更改",-1)),g[17]||(g[17]=e("div",{class:"empty-subtext"},"工作区是干净的",-1))])):U("",!0)])):(f(),b("div",gl,g[9]||(g[9]=[e("div",{class:"empty-status"},[e("p",null,"当前目录不是Git仓库")],-1)])))],8,vl)),[[Be,l(m).isGitPulling||l(m).isGitFetching]])]),s(Ft,{modelValue:I.value,"onUpdate:modelValue":g[5]||(g[5]=_=>I.value=_),title:"文件差异","custom-class":"file-diff-dialog",size:"extra-large",type:"flex","destroy-on-close":""},{default:a(()=>[s(ms,{files:Y.value,diffContent:M.value,selectedFile:D.value,emptyText:"选择文件查看差异",onFileSelect:ie},null,8,["files","diffContent","selectedFile"])]),_:1},8,["modelValue"]),s(Ft,{modelValue:O.value,"onUpdate:modelValue":g[7]||(g[7]=_=>O.value=_),title:"锁定文件管理",size:"large","destroy-on-close":""},{footer:a(()=>[e("span",co,[s(oe,{onClick:g[6]||(g[6]=_=>O.value=!1)},{default:a(()=>g[25]||(g[25]=[y("关闭")])),_:1})])]),default:a(()=>[e("div",Kl,[e("div",Zl,[s(ae,{class:"description-icon"},{default:a(()=>[s(l(bs))]),_:1}),g[18]||(g[18]=e("span",{class:"description-title"},"文件锁定功能说明",-1))]),g[19]||(g[19]=e("div",{class:"description-content"},[e("p",null,[e("strong",null,"🔒 锁定文件的作用：")]),e("ul",null,[e("li",null,"锁定的文件在执行 Git 提交时会被自动跳过，不会被添加到暂存区"),e("li",null,"适用于临时文件、配置文件、或不想提交的开发中文件"),e("li",null,"锁定状态会持久保存，直到手动解锁")]),e("p",null,[e("strong",null,"💡 使用场景：")]),e("ul",null,[e("li",null,"开发过程中的临时测试文件"),e("li",null,"本地配置文件（如数据库连接、API密钥等）"),e("li",null,"正在开发但还不想提交的功能文件")])],-1))]),s(Pe),l(h).lockedFiles.length===0?(f(),b("div",Ql,[e("div",eo,[s(ae,null,{default:a(()=>[s(l(rt))]),_:1})]),g[20]||(g[20]=e("p",null,"当前没有锁定的文件",-1)),g[21]||(g[21]=e("p",{class:"empty-tip"},"您可以在文件列表中点击锁定按钮来锁定文件",-1))])):(f(),b("div",to,[e("div",so,[e("span",null,"🔒 已锁定 "+x(l(h).lockedFiles.length)+" 个文件",1),s(E,{content:"这些文件在提交时会被自动跳过",placement:"top"},{default:a(()=>[s(ae,{class:"info-icon"},{default:a(()=>[s(l(bs))]),_:1})]),_:1}),g[23]||(g[23]=e("div",{style:{flex:"1"}},null,-1)),s(oe,{type:"danger",size:"small",plain:"",disabled:!l(h).lockedFiles.length,onClick:R},{default:a(()=>g[22]||(g[22]=[y(" 清空全部锁定 ")])),_:1},8,["disabled"])]),e("div",ao,[(f(!0),b(ke,null,ze(l(h).lockedFiles,_=>(f(),b("div",{key:_,class:"locked-file-item"},[e("div",lo,[g[24]||(g[24]=e("div",{class:"file-status-indicator locked"},null,-1)),e("div",oo,[e("span",no,x(X(_)),1),e("span",io,x(le(_)),1)])]),e("div",ro,[s(E,{content:"解锁文件",placement:"top","hide-after":1e3},{default:a(()=>[s(oe,{type:"danger",size:"small",circle:"",class:"file-action-btn",icon:l(At),"aria-label":"解锁",onClick:ge=>F(_)},null,8,["icon","onClick"])]),_:2},1024)])]))),128))])]))]),_:1},8,["modelValue"])],64)}}}),fo=yt(uo,[["__scopeId","data-v-403b96e4"]]),po={class:"card-header"},mo={class:"header-actions"},vo={key:0,class:"pushing-indicator"},go={class:"pushing-text"},ho={key:0,class:"push-success-indicator"},yo={class:"card-content"},_o={class:"layout-container"},wo={key:0,class:"git-config-warning"},ko={key:1,class:"commit-section"},$o={class:"commit-options"},bo={class:"options-row"},Co={class:"commit-mode-toggle"},So={class:"no-verify-toggle"},To={key:0,class:"commit-form"},Vo={class:"description-container"},xo={class:"preview-section"},Lo={class:"preview-header"},zo={class:"preview-content code-command"},Bo={class:"form-bottom-actions"},Fo={class:"actions-flex-container"},jo={class:"left-actions"},Ro={class:"button-grid"},Do={key:0},Go={key:0},Oo={key:0},Po={class:"right-actions"},Uo={class:"one-push-content"},Ao={key:1,class:"standard-commit-form"},Eo={class:"standard-commit-header"},Mo={class:"type-scope-container"},Io={class:"scope-wrapper"},No={class:"description-container"},Ho={class:"advanced-fields"},Jo={class:"preview-section"},Wo={class:"preview-header"},qo={class:"preview-content code-command"},Yo={class:"form-bottom-actions"},Xo={class:"actions-flex-container"},Ko={class:"left-actions"},Zo={class:"button-grid"},Qo={key:0},en={key:0},tn={key:0},sn={class:"right-actions"},an={class:"one-push-content"},ln={class:"actions-section"},on={class:"action-groups"},nn={class:"operations-wrapper"},rn={class:"action-group"},cn={class:"group-buttons"},un={key:0},dn={key:0},fn={key:0},pn={key:0},mn={class:"action-group"},vn={class:"group-buttons"},gn={class:"action-group reset-group"},hn={class:"group-buttons"},yn={key:0},_n={class:"action-group branch-group"},wn={class:"group-buttons"},kn={class:"action-group"},$n={class:"group-buttons"},bn={class:"dialog-footer"},Cn={class:"config-warning-content"},Sn={class:"warning-message"},Tn={class:"dialog-footer"},Vn={class:"template-container"},xn={class:"template-form"},Ln={class:"template-form-buttons"},zn={class:"template-list"},Bn={class:"template-content"},Fn={class:"template-actions"},jn={class:"template-container"},Rn={class:"template-form"},Dn={class:"template-form-buttons"},Gn={class:"template-list"},On={class:"template-content"},Pn={class:"template-actions"},Un={class:"template-container message-template-container"},An={class:"template-form"},En={class:"template-form-buttons"},Mn={class:"templates-container"},In={class:"message-templates-list"},Nn={class:"templates-scroll-area"},Hn={class:"template-content"},Jn={class:"template-actions"},Wn={class:"current-default-message"},qn={class:"default-message-content"},Yn={class:"message-help-text"},Xn={class:"stash-dialog-content"},Kn={class:"merge-dialog-content"},Zn={class:"merge-intro"},Qn={class:"merge-options"},ei={class:"dialog-footer"},ti={class:"stash-list-content"},si={class:"stash-action-buttons"},ai={key:0,class:"stash-list-actions"},li={class:"stash-content"},oi={key:0,class:"stash-info-row"},ni={class:"stash-id"},ii={class:"stash-id-value"},ri={class:"stash-description"},ci={class:"stash-description-value"},ui={class:"stash-main-content"},di=ht({__name:"CommitForm",setup(te){const i=Ct(),p=ps(),m=r(""),h=r(!1),G=r(!1),D=r("输入提交信息..."),M=r(""),I=r(!1),N=r("feat"),P=r(""),Y=r(""),ie=r(""),O=r(""),ne=r(!1),ue=r(""),re=r(!1),F=r(!1),R=r(""),L=r([]),se=r(!1),z=r(""),Z=r(!1),ve=r(""),ye=r(-1),B=r(!1),j=r(""),J=r({noFf:!1,squash:!1,noCommit:!1,message:""}),X=r([]),le=r(!1),H=r(""),ce=r(!1),be=r(""),w=r(-1),g=r(!1),A=r(""),E=r(!1),oe=r(!1),ae=[{value:"feat",label:"feat: 新功能"},{value:"fix",label:"fix: 修复bug"},{value:"docs",label:"docs: 文档修改"},{value:"style",label:"style: 样式修改"},{value:"refactor",label:"refactor: 代码重构"},{value:"test",label:"test: 测试代码"},{value:"chore",label:"chore: 构建/工具修改"}],Ce=r(!1),Pe=r(!1),Be=r(""),_=r(!1),ge=r(!0),xe=r(!1),Me=r(null),Fe=r([]),Ue=r(""),He=r(!1),je=r("");function tt(){Be.value="",_.value=!1,ge.value=!0,Ce.value=!0}async function T(){try{const t=await(await fetch("/api/config/check-file-format")).json();let S="";t.success&&(t.exists?t.isValidJson||(S=`系统配置文件格式有误：${t.error}
编辑后保存可能会覆盖原文件内容。`):S="系统配置文件不存在，将使用默认配置。");const de=p.config;if(ue.value=JSON.stringify(de,null,2),S){R.value=S,F.value=!0;return}ne.value=!0}catch{o.error("加载配置失败")}}async function c(){try{re.value=!0;let n;try{n=JSON.parse(ue.value)}catch(de){o.error(`JSON 解析失败: ${de.message||de}`);return}const S=await(await fetch("/api/config/saveAll",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:n})})).json();if(!S.success)throw new Error(S.error||"保存失败");await p.loadConfig(!0);try{await p.loadLockedFiles()}catch{}try{Array.isArray(p.descriptionTemplates)&&(L.value=[...p.descriptionTemplates])}catch{}try{Array.isArray(p.scopeTemplates)&&(X.value=[...p.scopeTemplates])}catch{}try{Array.isArray(p.messageTemplates)&&(Le.value=[...p.messageTemplates])}catch{}o.success("配置已保存"),ne.value=!1}catch(n){o.error(`保存配置失败: ${n.message||n}`)}finally{re.value=!1}}async function W(){try{const n=await fetch("/api/config/open-file",{method:"POST"}),t=await n.json();if(!n.ok||!(t!=null&&t.success))throw new Error((t==null?void 0:t.error)||"打开失败");o.success("已用系统程序打开配置文件")}catch(n){o.error(`打开配置文件失败: ${(n==null?void 0:n.message)||n}`)}}function q(n){F.value=!1,n==="continue"?ne.value=!0:n==="open"&&W()}function we(){i.getStashList(),Pe.value=!0}async function Re(){try{await i.saveStash(Be.value,_.value,ge.value),Ce.value=!1}catch(n){console.error("储藏失败:",n)}}async function he(n,t=!1){try{await i.applyStash(n,t),t&&await i.getStashList()}catch(S){console.error("应用储藏失败:",S)}}async function _e(n){Ne.confirm("确定要删除此储藏吗？此操作不可恢复。","删除储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await i.dropStash(n),await i.getStashList()}).catch(()=>{})}async function De(){Ne.confirm("确定要清空所有储藏吗？此操作不可恢复。","清空所有储藏",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(async()=>{await i.clearAllStashes(),await i.getStashList()}).catch(()=>{})}async function Se(n){if(n){Me.value=n,xe.value=!0,He.value=!0,Fe.value=[],Ue.value="",je.value="";try{if(!n.id||n.id.length<7){Ue.value="无效的stash ID",He.value=!1;return}const S=await(await fetch(`/api/stash-files?stashId=${encodeURIComponent(n.id)}`)).json();S.success&&Array.isArray(S.files)?(Fe.value=S.files,Fe.value.length>0?await $e(n.id,Fe.value[0]):Ue.value="该stash没有变更文件"):Ue.value=`获取文件列表失败: ${S.error||"未知错误"}`}catch(t){Ue.value=`获取stash详情失败: ${t.message}`}finally{He.value=!1}}}async function $e(n,t){He.value=!0,je.value=t;try{const de=await(await fetch(`/api/stash-file-diff?stashId=${encodeURIComponent(n)}&file=${encodeURIComponent(t)}`)).json();de.success?Ue.value=de.diff||"没有变更内容":Ue.value=`获取差异失败: ${de.error||"未知错误"}`}catch(S){Ue.value=`获取差异失败: ${S.message}`}finally{He.value=!1}}function st(n){Me.value&&$e(Me.value.id,n)}const Le=r([]),Q=r(!1),Qe=r(""),et=r(-1);Ke(I,n=>{localStorage.setItem("zen-gitsync-standard-commit",n.toString())}),Ke(E,n=>{localStorage.setItem("zen-gitsync-skip-hooks",n.toString())});const Je=fe(()=>{if(!I.value)return m.value||M.value;let n=`${N.value||""}`;return P.value&&(n+=`(${P.value})`),n+=`: ${Y.value}`,ie.value&&(n+=`

${ie.value}`),O.value&&(n+=`

${O.value}`),n}),Ge=fe(()=>I.value?N.value.trim()!==""&&Y.value.trim()!=="":m.value.trim()!==""),Ae=fe(()=>Fe.value.map(n=>({path:n,name:n.split("/").pop()||n}))),_t=fe(()=>{let n=`git commit -m "${Je.value}"`;return E.value&&(n+=" --no-verify"),n});function $(){const n=p.config;n&&(D.value=`输入提交信息 (默认: ${n.defaultCommitMessage})`,M.value=n.defaultCommitMessage||"",n.descriptionTemplates&&Array.isArray(n.descriptionTemplates)&&(L.value=n.descriptionTemplates),n.scopeTemplates&&Array.isArray(n.scopeTemplates)&&(X.value=n.scopeTemplates),n.messageTemplates&&Array.isArray(n.messageTemplates)&&(Le.value=n.messageTemplates))}async function v(){if(!z.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(Z.value)await K();else{if(L.value.includes(z.value)){o({message:"该模板已存在",type:"warning"});return}await p.saveTemplate(z.value,"description")&&(L.value.includes(z.value)||L.value.push(z.value),L.value=[...L.value],z.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function K(){if(!z.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await p.updateTemplate(ve.value,z.value,"description")){const t=L.value.indexOf(ve.value);t!==-1&&(L.value[t]=z.value),L.value=[...L.value],Z.value=!1,ve.value="",ye.value=-1,z.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function u(n,t){Z.value=!0,ve.value=n,ye.value=t,z.value=n}function d(){Z.value=!1,ve.value="",ye.value=-1,z.value=""}async function V(){if(!H.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(ce.value)await C();else{if(X.value.includes(H.value)){o({message:"该模板已存在",type:"warning"});return}await p.saveTemplate(H.value,"scope")&&(X.value.includes(H.value)||X.value.push(H.value),X.value=[...X.value],H.value="")}}catch(n){o({message:`保存模板失败: ${n.message}`,type:"error"})}}async function C(){if(!H.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(await p.updateTemplate(be.value,H.value,"scope")){const t=X.value.indexOf(be.value);t!==-1&&(X.value[t]=H.value),X.value=[...X.value],ce.value=!1,be.value="",w.value=-1,H.value=""}}catch(n){o({message:`更新模板失败: ${n.message}`,type:"error"})}}function pe(n,t){ce.value=!0,be.value=n,w.value=t,H.value=n}function Ie(){ce.value=!1,be.value="",w.value=-1,H.value=""}async function qe(n){try{if(await Ne.confirm(`确定要删除描述模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await p.deleteTemplate(n,"description")){const S=L.value.indexOf(n);S!==-1&&L.value.splice(S,1),L.value=[...L.value]}}catch(t){if(t==="cancel")return;o({message:`删除模板失败: ${t.message}`,type:"error"})}}async function at(n){try{if(await Ne.confirm(`确定要删除作用域模板 "${n}" 吗？`,"删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await p.deleteTemplate(n,"scope")){const S=X.value.indexOf(n);S!==-1&&X.value.splice(S,1),X.value=[...X.value]}}catch(t){if(t==="cancel")return;o({message:`删除模板失败: ${t.message}`,type:"error"})}}function Rt(n){Y.value=n,se.value=!1}function As(n){P.value=n,le.value=!1}function Es(){se.value=!0}function Ms(){le.value=!0}async function Wt(){try{await i.addToStage()&&i.fetchStatus()}catch(n){o({message:`添加文件失败: ${n.message}`,type:"error"})}}async function qt(){if(!Je.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await i.commitChanges(Je.value,E.value)&&(Kt(),i.fetchStatus(),i.fetchLog(),i.getBranchStatus(!0))}catch(n){o({message:`提交失败: ${n.message}`,type:"error"})}}function Dt(){h.value=!0,setTimeout(()=>{h.value=!1},2e3)}async function Yt(){try{await i.pushToRemote(),G.value=!0;try{await new Promise(n=>setTimeout(n,200)),Dt()}catch(n){console.error("推送后处理失败:",n),Dt()}finally{G.value=!1}}catch(n){G.value=!1,o({message:`推送失败: ${n.message}`,type:"error"})}}async function Is(){try{await i.gitPull(),await i.fetchStatus(),await i.fetchLog(!1)}catch(n){console.error("拉取操作发生错误:",n)}}async function Ns(){try{await i.gitFetchAll(),await i.fetchStatus(),await i.fetchLog(!1)}catch(n){console.error("获取远程分支信息操作发生错误:",n)}}async function Hs(){if(!Je.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{await i.addAndCommit(Je.value,E.value),Kt(),i.fetchStatus(),i.fetchLog()}catch(n){o({message:`暂存并提交失败: ${n.message}`,type:"error"})}}async function Xt(){if(!Je.value.trim()){o({message:"提交信息不能为空",type:"warning"});return}try{if(await i.addCommitAndPush(Je.value,E.value)){Kt(),G.value=!0;try{await new Promise(t=>setTimeout(t,1e3)),console.log("一键推送完成，状态已在pushToRemote中刷新"),Dt()}catch(t){console.error("一键推送后处理失败:",t),Dt()}finally{G.value=!1}}}catch(n){o({message:`暂存、提交并推送失败: ${n.message}`,type:"error"})}}async function Js(){try{await Ne.confirm(`确定要重置当前分支 "${i.currentBranch}" 到远程状态吗？这将丢失所有未推送的提交和本地更改。`,"重置到远程分支",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await i.resetToRemote(i.currentBranch)&&(i.fetchStatus(),i.fetchLog())}catch(n){n!=="cancel"&&o({message:`重置到远程分支失败: ${n.message}`,type:"error"})}}function Kt(){m.value="",Y.value="",ie.value="",O.value=""}function Ws(){A.value=M.value,g.value=!0}async function qs(){if(!A.value.trim()){o({message:"请输入默认提交信息",type:"warning"});return}try{await p.saveDefaultMessage(A.value)&&(M.value=A.value,D.value=`输入提交信息 (默认: ${A.value})`,g.value=!1)}catch(n){o({message:`保存默认提交信息失败: ${n.message}`,type:"error"})}}function Gt(n){const t=n.replace(/\\/g,"/");return p.lockedFiles.some(S=>{const de=S.replace(/\\/g,"/");return t===de})}const Vt=fe(()=>i.fileList.some(n=>["modified","deleted","untracked"].includes(n.type)&&!Gt(n.path))),ct=fe(()=>i.fileList.filter(n=>["modified","deleted","untracked"].includes(n.type)&&!Gt(n.path)).length),Ye=fe(()=>i.fileList.filter(n=>n.type==="added"&&!Gt(n.path)).length),wt=fe(()=>Ye.value>0),ut=fe(()=>i.fileList.some(n=>!Gt(n.path))),lt=fe(()=>i.branchAhead>0),Zt=fe(()=>i.branchBehind>0),ot=fe(()=>i.hasUpstream&&lt.value&&!wt.value),vs=fe(()=>wt.value),Ys=fe(()=>i.hasUpstream&&(lt.value||Zt.value||ut.value));async function Xs(){if(!A.value.trim()){o({message:"请输入模板内容",type:"warning"});return}try{if(Q.value)await Ks();else{if(Le.value.includes(A.value)){o({message:"该模板已存在",type:"warning"});return}Le.value.push(A.value);const t=await(await fetch("/api/config/save-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:A.value,type:"message"})})).json();t.success?(o({message:"提交信息模板保存成功!",type:"success"}),A.value=""):o({message:"模板保存失败: "+t.error,type:"error"})}}catch(n){o({message:"模板保存失败: "+n.message,type:"error"})}}async function Ks(){try{if(et.value>=0){const n=Qe.value,t=A.value;Le.value[et.value]=t;const de=await(await fetch("/api/config/update-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldTemplate:n,newTemplate:t,type:"message"})})).json();de.success?(o({message:"提交信息模板更新成功!",type:"success"}),Q.value=!1,Qe.value="",et.value=-1,A.value=""):o({message:"模板更新失败: "+de.error,type:"error"})}}catch(n){o({message:"模板更新失败: "+n.message,type:"error"})}}function Zs(n,t){Q.value=!0,Qe.value=n,et.value=t,A.value=n}function Qs(){Q.value=!1,Qe.value="",et.value=-1,A.value=""}async function ea(n){try{const t=Le.value.indexOf(n);t!==-1&&Le.value.splice(t,1);const de=await(await fetch("/api/config/delete-template",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({template:n,type:"message"})})).json();de.success?o({message:"提交信息模板删除成功!",type:"success"}):o({message:"模板删除失败: "+de.error,type:"error"})}catch(t){o({message:"模板删除失败: "+t.message,type:"error"})}}function ta(n){m.value=n,A.value=n}St(async()=>{const n=localStorage.getItem("zen-gitsync-standard-commit");n!==null&&(I.value=n==="true");const t=localStorage.getItem("zen-gitsync-skip-hooks");t!==null&&(E.value=t==="true"),Ke(()=>p.config,$,{immediate:!0}),p.config||await p.loadConfig()});function sa(){j.value="",J.value={noFf:!1,squash:!1,noCommit:!1,message:""},kt.value="all",B.value=!0,i.allBranches.length===0&&i.getAllBranches()}const kt=r("all"),aa=fe(()=>{const n=i.allBranches.filter(t=>t!==i.currentBranch);if(console.log("筛选分支列表:",{allBranches:i.allBranches,currentBranch:i.currentBranch,branchTypeFilter:kt.value,filteredBranches:n}),kt.value==="local"){const t=n.filter(S=>!S.includes("origin/"));return console.log("本地分支:",t),t}else if(kt.value==="remote"){const t=n.filter(S=>S.includes("origin/"));return console.log("远程分支:",t),t}else return console.log("所有分支:",n),n});async function la(){if(!j.value){o({message:"请选择要合并的分支",type:"warning"});return}try{await i.mergeBranch(j.value,J.value)&&(B.value=!1,await i.fetchStatus(),await i.fetchLog(!1))}catch(n){console.error("合并分支操作发生错误:",n)}}const Ot=r(!1);function oa(){Ot.value=!Ot.value}function na(n,t){const de=[...n?L.value.filter(Te=>Te.toLowerCase().includes(n.toLowerCase())).map(Te=>({value:Te})):L.value.map(Te=>({value:Te})),{value:"⚙️ 管理模板...",isSettings:!0}];t(de)}function ia(n,t){const de=[...n?X.value.filter(Te=>Te.toLowerCase().includes(n.toLowerCase())).map(Te=>({value:Te})):X.value.map(Te=>({value:Te})),{value:"⚙️ 管理模板...",isSettings:!0}];t(de)}function ra(n){n.isSettings?(Es(),Y.value=""):Y.value=n.value}function ca(n){n.isSettings?(Ms(),P.value=""):P.value=n.value}function ua(n,t){const de=[...n?Le.value.filter(Te=>Te.toLowerCase().includes(n.toLowerCase())).map(Te=>({value:Te})):Le.value.map(Te=>({value:Te})),{value:"⚙️ 管理模板...",isSettings:!0}];t(de)}function da(n){n.isSettings?(Ws(),m.value=""):m.value=n.value}async function gs(){try{await navigator.clipboard.writeText(_t.value),o.success("Git命令已复制到剪贴板")}catch(n){o.error(`复制失败: ${n.message}`)}}return(n,t)=>{const S=Oe,de=Tt,Te=ds,hs=Ls,Qt=$a,Ve=Ht,ys=It,_s=Nt,nt=fs,fa=Ca,dt=Jt,Pt=Mt,es=Ta,Ut=Ds,ws=jt,ft=Os,xt=Va,ks=Gs,ts=La,pa=xa,ss=Bt,ma=Ps,va=cs;return f(),b(ke,null,[e("div",{class:me(["card",{"is-pushing":l(i).isPushing}])},[e("div",po,[t[38]||(t[38]=e("h2",null,"提交更改",-1)),e("div",mo,[s(S,{size:"small",type:"primary",icon:l(Lt),onClick:T},{default:a(()=>t[37]||(t[37]=[y("配置")])),_:1},8,["icon"]),s(S,{type:"primary",icon:l(ka),size:"small",circle:"",onClick:oa,class:"git-tools-button"},null,8,["icon"])])]),s(Cs,{name:"el-fade-in-linear"},{default:a(()=>[l(i).isPushing||G.value?(f(),b("div",vo,[t[39]||(t[39]=e("div",{class:"pushing-spinner"},[e("svg",{viewBox:"0 0 50 50",class:"circular"},[e("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})])],-1)),e("div",go,x(l(i).isPushing?"正在推送...":"更新状态中..."),1)])):U("",!0)]),_:1}),s(Cs,{name:"el-fade-in-linear"},{default:a(()=>[h.value?(f(),b("div",ho,[s(de,{class:"push-success-icon"},{default:a(()=>[s(l(zs))]),_:1}),t[40]||(t[40]=e("div",{class:"push-success-text"},"已完成!",-1))])):U("",!0)]),_:1}),e("div",yo,[e("div",_o,[l(i).userName===""||l(i).userEmail===""?(f(),b("div",wo,[s(Te,{title:"Git用户信息未配置",type:"warning",closable:!1,"show-icon":""},{default:a(()=>t[41]||(t[41]=[e("p",null,"您需要配置Git用户名和邮箱才能提交代码。请使用以下命令配置：",-1),e("pre",{class:"config-command"},`git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"`,-1)])),_:1})])):(f(),b("div",ko,[e("div",$o,[e("div",bo,[e("div",Co,[s(hs,{modelValue:I.value,"onUpdate:modelValue":t[0]||(t[0]=k=>I.value=k),"active-text":"标准化提交","inactive-text":"普通提交"},null,8,["modelValue"])]),e("div",So,[s(hs,{modelValue:E.value,"onUpdate:modelValue":t[1]||(t[1]=k=>E.value=k),"active-text":"跳过 Git 钩子检查 (--no-verify)"},null,8,["modelValue"])])])]),I.value?(f(),b("div",Ao,[e("div",Eo,[e("div",Mo,[s(_s,{modelValue:N.value,"onUpdate:modelValue":t[3]||(t[3]=k=>N.value=k),placeholder:"提交类型",class:"type-select",clearable:""},{default:a(()=>[(f(),b(ke,null,ze(ae,k=>s(ys,{key:k.value,label:k.label,value:k.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"]),e("div",Io,[s(Qt,{modelValue:P.value,"onUpdate:modelValue":t[4]||(t[4]=k=>P.value=k),"fetch-suggestions":ia,placeholder:"作用域（可选）",class:"scope-input",clearable:"",onSelect:ca},null,8,["modelValue"])])]),e("div",No,[s(Qt,{modelValue:Y.value,"onUpdate:modelValue":t[5]||(t[5]=k=>Y.value=k),"fetch-suggestions":na,placeholder:"简短描述（必填）",class:"description-input",clearable:"",onSelect:ra},null,8,["modelValue"])])]),e("div",{class:"advanced-options-toggle",onClick:t[6]||(t[6]=k=>oe.value=!oe.value)},[e("span",null,x(oe.value?"收起":"正文及页脚"),1),s(de,{class:me(["toggle-icon",{"is-active":oe.value}])},{default:a(()=>[s(l($t))]),_:1},8,["class"])]),Ze(e("div",Ho,[s(nt,{modelValue:ie.value,"onUpdate:modelValue":t[7]||(t[7]=k=>ie.value=k),type:"textarea",rows:4,placeholder:"正文（可选）：详细描述本次提交的内容和原因",class:"body-input",clearable:""},null,8,["modelValue"]),s(nt,{modelValue:O.value,"onUpdate:modelValue":t[8]||(t[8]=k=>O.value=k),placeholder:"页脚（可选）：如 Closes #123",class:"footer-input",clearable:""},null,8,["modelValue"])],512),[[vt,oe.value]]),e("div",Jo,[e("div",Wo,[t[47]||(t[47]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),s(S,{type:"primary",icon:l(gt),size:"small",onClick:gs,title:"复制命令",class:"copy-command-btn"},null,8,["icon"])]),e("pre",qo,x(_t.value),1)]),e("div",Yo,[e("div",Xo,[e("div",Ko,[e("div",Zo,[s(S,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"stage-button"},{default:a(()=>[t[48]||(t[48]=y(" 暂存更改 ")),ct.value>0?(f(),b("span",Qo,"("+x(ct.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),s(S,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!wt.value||!Ge.value},{default:a(()=>[t[49]||(t[49]=y(" 提交 ")),Ye.value>0?(f(),b("span",en,"("+x(Ye.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),s(Ve,{content:ot.value?"推送已提交的更改到远程仓库":l(i).hasUpstream?lt.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top","show-after":200},{default:a(()=>[s(S,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!ot.value,style:mt(ot.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[t[50]||(t[50]=y(" 推送 ")),lt.value?(f(),b("span",tn,"("+x(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",sn,[s(Ve,{content:ut.value?Ge.value?l(i).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top","show-after":200},{default:a(()=>[s(S,{type:"success",onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!ut.value||!Ge.value||!l(i).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",an,[s(de,{class:"one-push-icon"},{default:a(()=>[s(l(ls))]),_:1}),t[51]||(t[51]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])])):(f(),b("div",To,[e("div",Vo,[s(Qt,{modelValue:m.value,"onUpdate:modelValue":t[2]||(t[2]=k=>m.value=k),"fetch-suggestions":ua,placeholder:D.value,type:"textarea",rows:6,resize:"none",class:"commit-message-input",onSelect:da},null,8,["modelValue","placeholder"])]),e("div",xo,[e("div",Lo,[t[42]||(t[42]=e("div",{class:"preview-title"},"Git提交命令预览：",-1)),s(S,{type:"primary",icon:l(gt),size:"small",onClick:gs,title:"复制命令",class:"copy-command-btn"},null,8,["icon"])]),e("pre",zo,'git commit -m "'+x(Je.value||"<提交信息>")+'"'+x(E.value?" --no-verify":""),1)]),e("div",Bo,[e("div",Fo,[e("div",jo,[e("div",Ro,[s(S,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"stage-button"},{default:a(()=>[t[43]||(t[43]=y(" 暂存更改 ")),ct.value>0?(f(),b("span",Do,"("+x(ct.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),s(S,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!wt.value||!Ge.value},{default:a(()=>[t[44]||(t[44]=y(" 提交 ")),Ye.value>0?(f(),b("span",Go,"("+x(Ye.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"]),s(Ve,{content:ot.value?"推送已提交的更改到远程仓库":l(i).hasUpstream?lt.value?"有未提交的暂存更改，请先提交":"没有需要推送的提交":"当前分支没有上游分支",placement:"top","show-after":200},{default:a(()=>[s(S,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!ot.value,style:mt(ot.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[t[45]||(t[45]=y(" 推送 ")),lt.value?(f(),b("span",Oo,"("+x(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"])])]),e("div",Po,[s(Ve,{content:ut.value?Ge.value?l(i).hasUpstream?"一键完成：暂存所有更改 → 提交 → 推送到远程仓库":"当前分支没有上游分支":"请输入提交信息":"没有需要提交的更改",placement:"top","show-after":200},{default:a(()=>[s(S,{type:"success",onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!ut.value||!Ge.value||!l(i).hasUpstream,class:"one-push-button"},{default:a(()=>[e("div",Uo,[s(de,{class:"one-push-icon"},{default:a(()=>[s(l(ls))]),_:1}),t[46]||(t[46]=e("div",{class:"one-push-text"},[e("span",{class:"one-push-title"},"一键推送所有"),e("span",{class:"one-push-desc"},"暂存 + 提交 + 推送")],-1))])]),_:1},8,["loading","disabled"])]),_:1},8,["content"])])])])]))]))])])],2),s(fa,{modelValue:Ot.value,"onUpdate:modelValue":t[9]||(t[9]=k=>Ot.value=k),title:"Git 操作",direction:"rtl",size:"340px","with-header":!0,"show-close":!0,"destroy-on-close":!1,class:"git-operations-drawer"},{default:a(()=>[e("div",ln,[e("div",on,[e("div",nn,[e("div",rn,[t[57]||(t[57]=e("div",{class:"group-title"},"基础操作",-1)),e("div",cn,[s(Ve,{content:Vt.value?`暂存${ct.value}个待更改文件`:"git add .",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",onClick:Wt,loading:l(i).isAddingFiles,disabled:!Vt.value,class:"action-button"},{default:a(()=>[t[52]||(t[52]=y(" 暂存更改 ")),ct.value>0?(f(),b("span",un,"("+x(ct.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),s(Ve,{content:wt.value?`提交${Ye.value}个已暂存文件`:"git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",onClick:qt,loading:l(i).isLoadingStatus,disabled:!wt.value||!Ge.value,class:"action-button"},{default:a(()=>[t[53]||(t[53]=y(" 提交 ")),Ye.value>0?(f(),b("span",dn,"("+x(Ye.value)+")",1)):U("",!0)]),_:1},8,["loading","disabled"])]),_:1},8,["content"]),s(Ve,{content:lt.value?`推送${l(i).branchAhead}个本地提交`:"git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",icon:l(as),onClick:Yt,loading:l(i).isPushing,disabled:!ot.value,class:me(["action-button","push-button",{"is-loading":l(i).isPushing}]),style:mt(ot.value?{backgroundColor:"#67c23a",borderColor:"#67c23a"}:{})},{default:a(()=>[t[54]||(t[54]=y(" 推送 ")),lt.value?(f(),b("span",fn,"("+x(l(i).branchAhead)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","class","style"])]),_:1},8,["content"]),s(Ve,{content:Zt.value?`拉取${l(i).branchBehind}个远程提交`:"git pull",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",icon:l(Bs),onClick:Is,loading:l(i).isGitPulling,disabled:!l(i).hasUpstream,class:"action-button",style:mt(l(i).hasUpstream?{color:"white",backgroundColor:"#1e90ff",borderColor:"#1e90ff"}:{})},{default:a(()=>[t[55]||(t[55]=y(" 拉取 ")),Zt.value?(f(),b("span",pn,"("+x(l(i).branchBehind)+")",1)):U("",!0)]),_:1},8,["icon","loading","disabled","style"])]),_:1},8,["content"]),s(Ve,{content:"git fetch --all",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"info",icon:l(Fs),onClick:Ns,loading:l(i).isGitFetching,class:"action-button",style:{color:"white","background-color":"#1e90ff","border-color":"#1e90ff"}},{default:a(()=>t[56]||(t[56]=[y(" 获取所有远程分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",mn,[t[60]||(t[60]=e("div",{class:"group-title"},"组合操作",-1)),e("div",vn,[s(Ve,{content:"git add + git commit",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",icon:l(Lt),onClick:Hs,loading:l(i).isAddingFiles||l(i).isCommiting,disabled:!Vt.value||!Ge.value,class:"action-button"},{default:a(()=>t[58]||(t[58]=[y(" 暂存并提交 ")])),_:1},8,["icon","loading","disabled"])]),_:1}),s(Ve,{content:"git add + git commit + git push",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"success",icon:l(ls),onClick:Xt,loading:l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing,disabled:!ut.value||!Ge.value||!l(i).hasUpstream,class:me(["action-button","one-click-push",{"is-loading":l(i).isAddingFiles||l(i).isCommiting||l(i).isPushing}])},{default:a(()=>t[59]||(t[59]=[y(" 一键推送所有 ")])),_:1},8,["icon","loading","disabled","class"])]),_:1})])])]),e("div",gn,[t[63]||(t[63]=e("div",{class:"group-title"},"重置操作",-1)),e("div",hn,[s(Ve,{content:vs.value?`撤销${Ye.value}个已暂存文件`:"git reset HEAD",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"warning",icon:l(us),onClick:l(i).resetHead,loading:l(i).isResetting,disabled:!vs.value,class:"action-button reset-button"},{default:a(()=>[t[61]||(t[61]=y(" 重置暂存区 ")),Ye.value>0?(f(),b("span",yn,"("+x(Ye.value)+")",1)):U("",!0)]),_:1},8,["icon","onClick","loading","disabled"])]),_:1},8,["content"]),s(Ve,{content:"git reset --hard origin/branch",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"danger",icon:l(Rs),onClick:Js,loading:l(i).isResetting,disabled:!Ys.value,class:"action-button danger-button"},{default:a(()=>t[62]||(t[62]=[y(" 重置到远程 ")])),_:1},8,["icon","loading","disabled"])]),_:1})])]),e("div",_n,[t[65]||(t[65]=e("div",{class:"group-title"},"分支操作",-1)),e("div",wn,[s(Ve,{content:"合并其他分支到当前分支",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"primary",icon:l(ba),onClick:sa,loading:l(i).isGitMerging,class:"action-button merge-button"},{default:a(()=>t[64]||(t[64]=[y(" 合并分支 ")])),_:1},8,["icon","loading"])]),_:1})])]),e("div",kn,[t[68]||(t[68]=e("div",{class:"group-title"},"储藏操作",-1)),e("div",$n,[s(Ve,{content:"将工作区更改储藏起来",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"warning",onClick:tt,loading:l(i).isSavingStash,disabled:!ut.value,class:"action-button"},{default:a(()=>t[66]||(t[66]=[y(" 储藏更改 ")])),_:1},8,["loading","disabled"])]),_:1}),s(Ve,{content:"查看和管理所有储藏记录",placement:"top",effect:"light","popper-class":"git-cmd-tooltip","open-delay":200},{default:a(()=>[s(S,{type:"info",onClick:we,class:"action-button"},{default:a(()=>t[67]||(t[67]=[y(" 储藏列表 ")])),_:1})]),_:1})])])])])]),_:1},8,["modelValue"]),s(dt,{class:"config-editor-dialog",title:"编辑配置 JSON",modelValue:ne.value,"onUpdate:modelValue":t[12]||(t[12]=k=>ne.value=k),width:"60%"},{footer:a(()=>[e("span",bn,[s(S,{onClick:W},{default:a(()=>t[69]||(t[69]=[y("打开系统配置文件")])),_:1}),s(S,{onClick:t[11]||(t[11]=k=>ne.value=!1)},{default:a(()=>t[70]||(t[70]=[y("取消")])),_:1}),s(S,{type:"primary",loading:re.value,onClick:c},{default:a(()=>t[71]||(t[71]=[y("保存")])),_:1},8,["loading"])])]),default:a(()=>[s(nt,{modelValue:ue.value,"onUpdate:modelValue":t[10]||(t[10]=k=>ue.value=k),type:"textarea",rows:18,spellcheck:"false",autocomplete:"off",placeholder:"在此编辑当前项目配置的 JSON"},null,8,["modelValue"])]),_:1},8,["modelValue"]),s(dt,{modelValue:F.value,"onUpdate:modelValue":t[16]||(t[16]=k=>F.value=k),title:"配置文件格式提示",width:"500px","close-on-click-modal":!1,"close-on-press-escape":!1,"show-close":!1},{footer:a(()=>[e("span",Tn,[s(S,{onClick:t[13]||(t[13]=k=>q("cancel"))},{default:a(()=>t[72]||(t[72]=[y("取消")])),_:1}),s(S,{type:"info",onClick:t[14]||(t[14]=k=>q("open"))},{default:a(()=>t[73]||(t[73]=[y("打开系统配置文件")])),_:1}),s(S,{type:"primary",onClick:t[15]||(t[15]=k=>q("continue"))},{default:a(()=>t[74]||(t[74]=[y("继续编辑")])),_:1})])]),default:a(()=>[e("div",Cn,[s(de,{class:"warning-icon",color:"#f56c6c",size:"24"},{default:a(()=>[s(l(Sa))]),_:1}),e("p",Sn,x(R.value),1)])]),_:1},8,["modelValue"]),s(dt,{title:"简短描述模板设置",modelValue:se.value,"onUpdate:modelValue":t[18]||(t[18]=k=>se.value=k),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",Vn,[e("div",xn,[s(nt,{modelValue:z.value,"onUpdate:modelValue":t[17]||(t[17]=k=>z.value=k),placeholder:Z.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",Ln,[Z.value?(f(),ee(S,{key:0,onClick:d},{default:a(()=>t[75]||(t[75]=[y("取消")])),_:1})):U("",!0),s(S,{type:"primary",onClick:v,disabled:!z.value.trim()},{default:a(()=>[y(x(Z.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",zn,[t[79]||(t[79]=e("h3",null,"已保存模板",-1)),L.value.length===0?(f(),ee(Pt,{key:0,description:"暂无保存的模板"})):U("",!0),(f(!0),b(ke,null,ze(L.value,(k,We)=>(f(),ee(Ut,{key:We,class:"template-item"},{default:a(()=>[s(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Bn,x(k),1),e("div",Fn,[s(S,{type:"primary",size:"small",onClick:it=>Rt(k)},{default:a(()=>t[76]||(t[76]=[y("使用")])),_:2},1032,["onClick"]),s(S,{type:"warning",size:"small",icon:l(Lt),onClick:it=>u(k,We)},{default:a(()=>t[77]||(t[77]=[y("编辑")])),_:2},1032,["icon","onClick"]),s(S,{type:"danger",size:"small",onClick:it=>qe(k)},{default:a(()=>t[78]||(t[78]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),s(dt,{title:"作用域模板设置",modelValue:le.value,"onUpdate:modelValue":t[20]||(t[20]=k=>le.value=k),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"template-dialog"},{default:a(()=>[e("div",jn,[e("div",Rn,[s(nt,{modelValue:H.value,"onUpdate:modelValue":t[19]||(t[19]=k=>H.value=k),placeholder:ce.value?"编辑作用域模板内容":"输入新作用域模板",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",Dn,[ce.value?(f(),ee(S,{key:0,onClick:Ie},{default:a(()=>t[80]||(t[80]=[y("取消")])),_:1})):U("",!0),s(S,{type:"primary",onClick:V,disabled:!H.value.trim()},{default:a(()=>[y(x(ce.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"])])]),e("div",Gn,[t[84]||(t[84]=e("h3",null,"已保存作用域",-1)),X.value.length===0?(f(),ee(Pt,{key:0,description:"暂无保存的作用域"})):U("",!0),(f(!0),b(ke,null,ze(X.value,(k,We)=>(f(),ee(Ut,{key:We,class:"template-item"},{default:a(()=>[s(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",On,x(k),1),e("div",Pn,[s(S,{type:"primary",size:"small",onClick:it=>As(k)},{default:a(()=>t[81]||(t[81]=[y("使用")])),_:2},1032,["onClick"]),s(S,{type:"warning",size:"small",icon:l(Lt),onClick:it=>pe(k,We)},{default:a(()=>t[82]||(t[82]=[y("编辑")])),_:2},1032,["icon","onClick"]),s(S,{type:"danger",size:"small",onClick:it=>at(k)},{default:a(()=>t[83]||(t[83]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])])]),_:1},8,["modelValue"]),s(dt,{title:"默认提交信息设置",modelValue:g.value,"onUpdate:modelValue":t[22]||(t[22]=k=>g.value=k),width:"80vw",top:"70px",style:{height:"calc(100vh - 140px)"},"close-on-click-modal":!1,class:"message-template-dialog"},{default:a(()=>[e("div",Un,[e("div",An,[s(nt,{modelValue:A.value,"onUpdate:modelValue":t[21]||(t[21]=k=>A.value=k),placeholder:Q.value?"编辑模板内容":"输入新模板内容",class:"template-input",clearable:""},null,8,["modelValue","placeholder"]),e("div",En,[Q.value?(f(),ee(S,{key:0,onClick:Qs},{default:a(()=>t[85]||(t[85]=[y("取消")])),_:1})):U("",!0),s(S,{type:"primary",onClick:Xs,disabled:!A.value.trim()},{default:a(()=>[y(x(Q.value?"更新模板":"添加模板"),1)]),_:1},8,["disabled"]),s(S,{type:"success",onClick:qs,disabled:!A.value.trim()},{default:a(()=>t[86]||(t[86]=[y(" 设为默认提交信息 ")])),_:1},8,["disabled"])])]),e("div",Mn,[e("div",In,[t[90]||(t[90]=e("h3",null,"已保存模板",-1)),e("div",Nn,[Le.value.length===0?(f(),ee(Pt,{key:0,description:"暂无保存的模板"})):U("",!0),(f(!0),b(ke,null,ze(Le.value,(k,We)=>(f(),ee(Ut,{key:We,class:"template-item"},{default:a(()=>[s(es,{justify:"space-between",align:"middle",style:{width:"100%"}},{default:a(()=>[e("div",Hn,x(k),1),e("div",Jn,[s(S,{type:"primary",size:"small",onClick:it=>ta(k)},{default:a(()=>t[87]||(t[87]=[y("使用")])),_:2},1032,["onClick"]),s(S,{type:"warning",size:"small",icon:l(Lt),onClick:it=>Zs(k,We)},{default:a(()=>t[88]||(t[88]=[y("编辑")])),_:2},1032,["icon","onClick"]),s(S,{type:"danger",size:"small",onClick:it=>ea(k)},{default:a(()=>t[89]||(t[89]=[y("删除")])),_:2},1032,["onClick"])])]),_:2},1024)]),_:2},1024))),128))])]),e("div",Wn,[t[98]||(t[98]=e("h3",null,"当前默认提交信息",-1)),M.value?(f(),ee(Ut,{key:0,class:"default-message-card"},{default:a(()=>[e("div",qn,x(M.value),1)]),_:1})):(f(),ee(Pt,{key:1,description:"尚未设置默认提交信息","image-size":100})),e("div",Yn,[t[96]||(t[96]=e("h4",null,"关于默认提交信息",-1)),t[97]||(t[97]=e("p",null,"默认提交信息将在未输入提交信息时自动使用。",-1)),e("p",null,[t[93]||(t[93]=y("你可以通过点击左侧模板的")),s(ws,{size:"small",type:"primary"},{default:a(()=>t[91]||(t[91]=[y("使用")])),_:1}),t[94]||(t[94]=y("按钮先选择喜欢的模板，然后点击上方")),s(ws,{size:"small",type:"success"},{default:a(()=>t[92]||(t[92]=[y("设为默认提交信息")])),_:1}),t[95]||(t[95]=y("按钮保存。"))])])])])])]),_:1},8,["modelValue"]),s(Ft,{modelValue:Ce.value,"onUpdate:modelValue":t[26]||(t[26]=k=>Ce.value=k),title:"储藏更改 (Git Stash)",size:"medium","close-on-click-modal":!1,"show-footer":"","confirm-text":"储藏","confirm-loading":l(i).isSavingStash,onConfirm:Re},{default:a(()=>[e("div",Xn,[t[101]||(t[101]=e("p",null,"将当前工作区的更改储藏起来，稍后可以再次应用。",-1)),s(ks,{"label-position":"top"},{default:a(()=>[s(ft,{label:"储藏说明 (可选)"},{default:a(()=>[s(nt,{modelValue:Be.value,"onUpdate:modelValue":t[23]||(t[23]=k=>Be.value=k),placeholder:"输入储藏说明（可选）",clearable:""},null,8,["modelValue"])]),_:1}),s(ft,null,{default:a(()=>[s(xt,{modelValue:_.value,"onUpdate:modelValue":t[24]||(t[24]=k=>_.value=k)},{default:a(()=>t[99]||(t[99]=[y(" 包含未跟踪文件 (--include-untracked) ")])),_:1},8,["modelValue"])]),_:1}),s(ft,null,{default:a(()=>[s(xt,{modelValue:ge.value,"onUpdate:modelValue":t[25]||(t[25]=k=>ge.value=k)},{default:a(()=>t[100]||(t[100]=[y(" 排除锁定文件 ")])),_:1},8,["modelValue"])]),_:1})]),_:1})])]),_:1},8,["modelValue","confirm-loading"]),s(dt,{title:"合并分支",modelValue:B.value,"onUpdate:modelValue":t[34]||(t[34]=k=>B.value=k),width:"500px","close-on-click-modal":!1,class:"merge-dialog"},{footer:a(()=>[e("div",ei,[s(S,{onClick:t[33]||(t[33]=k=>B.value=!1)},{default:a(()=>t[108]||(t[108]=[y("取消")])),_:1}),s(S,{type:"primary",onClick:la,loading:l(i).isGitMerging,disabled:!j.value,class:"merge-confirm-btn"},{default:a(()=>t[109]||(t[109]=[y(" 合并 ")])),_:1},8,["loading","disabled"])])]),default:a(()=>[e("div",Kn,[e("p",Zn,"选择要合并到当前分支 ("+x(l(i).currentBranch)+") 的分支:",1),s(ks,{"label-position":"top"},{default:a(()=>[s(ft,{label:"分支类型"},{default:a(()=>[s(pa,{modelValue:kt.value,"onUpdate:modelValue":t[27]||(t[27]=k=>kt.value=k),size:"small"},{default:a(()=>[s(ts,{label:"all"},{default:a(()=>t[102]||(t[102]=[y("所有分支")])),_:1}),s(ts,{label:"local"},{default:a(()=>t[103]||(t[103]=[y("本地分支")])),_:1}),s(ts,{label:"remote"},{default:a(()=>t[104]||(t[104]=[y("远程分支")])),_:1})]),_:1},8,["modelValue"])]),_:1}),s(ft,{label:"选择分支"},{default:a(()=>[s(_s,{modelValue:j.value,"onUpdate:modelValue":t[28]||(t[28]=k=>j.value=k),placeholder:"选择要合并的分支",style:{width:"100%"},filterable:""},{default:a(()=>[(f(!0),b(ke,null,ze(aa.value,k=>(f(),ee(ys,{key:k,label:k,value:k},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),s(ft,{label:"合并选项"},{default:a(()=>[e("div",Qn,[s(xt,{modelValue:J.value.noFf,"onUpdate:modelValue":t[29]||(t[29]=k=>J.value.noFf=k)},{default:a(()=>[s(Ve,{content:"创建合并提交，即使可以使用快进合并",placement:"top"},{default:a(()=>t[105]||(t[105]=[e("span",null,"禁用快进合并 (--no-ff)",-1)])),_:1})]),_:1},8,["modelValue"]),s(xt,{modelValue:J.value.squash,"onUpdate:modelValue":t[30]||(t[30]=k=>J.value.squash=k)},{default:a(()=>[s(Ve,{content:"将多个提交压缩为一个提交",placement:"top"},{default:a(()=>t[106]||(t[106]=[e("span",null,"压缩提交 (--squash)",-1)])),_:1})]),_:1},8,["modelValue"]),s(xt,{modelValue:J.value.noCommit,"onUpdate:modelValue":t[31]||(t[31]=k=>J.value.noCommit=k)},{default:a(()=>[s(Ve,{content:"执行合并但不自动创建提交",placement:"top"},{default:a(()=>t[107]||(t[107]=[e("span",null,"不自动提交 (--no-commit)",-1)])),_:1})]),_:1},8,["modelValue"])])]),_:1}),J.value.noFf&&!J.value.noCommit?(f(),ee(ft,{key:0,label:"合并提交信息 (可选)"},{default:a(()=>[s(nt,{modelValue:J.value.message,"onUpdate:modelValue":t[32]||(t[32]=k=>J.value.message=k),type:"textarea",rows:3,placeholder:"输入自定义合并提交信息"},null,8,["modelValue"])]),_:1})):U("",!0)]),_:1})])]),_:1},8,["modelValue"]),s(dt,{title:"储藏列表 (Git Stash)",modelValue:Pe.value,"onUpdate:modelValue":t[35]||(t[35]=k=>Pe.value=k),width:"600px","close-on-click-modal":!1},{default:a(()=>[e("div",ti,[Ze((f(),ee(ma,{data:l(i).stashes,stripe:"",style:{width:"100%"},"empty-text":"暂无储藏记录"},{default:a(()=>[s(ss,{prop:"id",label:"ID",width:"100"}),s(ss,{prop:"description",label:"描述"}),s(ss,{label:"操作",width:"280"},{default:a(k=>[e("div",si,[s(S,{size:"small",type:"info",onClick:We=>Se(k.row),loading:He.value},{default:a(()=>t[110]||(t[110]=[y(" 查看 ")])),_:2},1032,["onClick","loading"]),s(S,{size:"small",onClick:We=>he(k.row.id,!1),loading:l(i).isApplyingStash},{default:a(()=>t[111]||(t[111]=[y(" 应用 ")])),_:2},1032,["onClick","loading"]),s(S,{size:"small",type:"primary",onClick:We=>he(k.row.id,!0),loading:l(i).isApplyingStash},{default:a(()=>t[112]||(t[112]=[y(" 应用并删除 ")])),_:2},1032,["onClick","loading"]),s(S,{size:"small",type:"danger",onClick:We=>_e(k.row.id),loading:l(i).isDroppingStash},{default:a(()=>t[113]||(t[113]=[y(" 删除 ")])),_:2},1032,["onClick","loading"])])]),_:1})]),_:1},8,["data"])),[[va,l(i).isLoadingStashes]]),l(i).stashes.length>0?(f(),b("div",ai,[s(S,{type:"danger",onClick:De,loading:l(i).isDroppingStash},{default:a(()=>t[114]||(t[114]=[y(" 清空所有储藏 ")])),_:1},8,["loading"])])):U("",!0)])]),_:1},8,["modelValue"]),s(Ft,{modelValue:xe.value,"onUpdate:modelValue":t[36]||(t[36]=k=>xe.value=k),title:"储藏详情","custom-class":"stash-detail-dialog",size:"extra-large",type:"flex","close-on-click-modal":!1},{default:a(()=>[e("div",li,[Me.value?(f(),b("div",oi,[e("div",ni,[t[115]||(t[115]=e("span",{class:"info-label"},"Stash ID:",-1)),e("code",ii,x(Me.value.id),1)]),e("div",ri,[t[116]||(t[116]=e("span",{class:"info-label"},"描述:",-1)),e("span",ci,x(Me.value.description),1)])])):U("",!0),e("div",ui,[s(ms,{files:Ae.value,diffContent:Ue.value,selectedFile:je.value,emptyText:"该stash没有变更文件",onFileSelect:st},null,8,["files","diffContent","selectedFile"])])])]),_:1},8,["modelValue"])],64)}}}),fi=yt(di,[["__scopeId","data-v-e60f64ee"]]),pi={class:"log-header"},mi={class:"log-actions"},vi={key:0,class:"filter-panel-header"},gi={class:"filter-form"},hi={class:"filter-item"},yi={class:"filter-item"},_i={class:"filter-item"},wi={class:"filter-item"},ki={class:"filter-actions"},$i={key:0},bi={key:1,class:"content-area-content"},Ci={key:0,class:"graph-view"},Si={key:0,class:"commit-count"},Ti={class:"graph-controls"},Vi={class:"zoom-controls"},xi={class:"scale-info"},Li={key:1,class:"table-view-container"},zi=["onClick"],Bi={class:"commit-message-cell"},Fi={class:"message-content"},ji={key:0,class:"branch-container"},Ri={class:"message-text"},Di={class:"author-name"};const Gi={class:"commit-detail-container"},Oi={key:0,class:"commit-info"},Pi={class:"commit-info-header"},Ui={class:"info-item"},Ai={class:"item-value"},Ei={class:"info-item"},Mi={class:"item-value"},Ii={class:"info-item"},Ni={class:"item-value"},Hi={class:"commit-message-container"},Ji=["innerHTML"],zt=.5,Et=1.5,ns=.1,Wi=ht({__name:"LogList",setup(te,{expose:i}){const p=Ct();let m=[];const h=r(m),G=r(""),D=r(!1),M=fe(()=>p.isLoadingLog||D.value),I=r(!1),N=r(0),P=r(!1),Y=r(null),ie=r(1),O=r(!0),ne=r(!1),ue=r(null),re=r(!1),F=r(null),R=r([]),L=r(""),se=r(!1),z=r(""),Z=r(1),ve=r(!1),ye=r(!1),B=r([]),j=r(""),J=r(null),X=r([]),le=r([]),H=r([]),ce=r(!1),be=r(0),w=r(0),g=r(null),A=fe(()=>h.value),E=fe(()=>R.value.map($=>({path:$,name:$.split("/").pop()||$})));async function oe($=!1,v=1){if(!Ct().isGitRepo){G.value="当前目录不是Git仓库";return}try{v>1?ne.value=!0:D.value=!0;const u=new URLSearchParams;u.append("page",v.toString()),u.append("all",$.toString()),u.append("with_parents","true"),B.value.length>0&&u.append("author",B.value.join(",")),le.value.length>0&&u.append("branch",le.value.join(",")),j.value&&u.append("message",j.value),J.value&&Array.isArray(J.value)&&J.value.length===2&&(u.append("dateFrom",J.value[0]),u.append("dateTo",J.value[1])),u.append("_t",Date.now().toString());const V=await(await fetch(`/api/log?${u.toString()}`)).json();if(!V||!V.data||!Array.isArray(V.data)){G.value="加载提交历史失败: 服务器返回数据格式不正确";return}const C=v>1;C?V.data.forEach(pe=>m.push(pe)):(m.length=0,V.data.forEach(pe=>m.push(pe))),h.value=[...m],ie.value=v,N.value=V.total||m.length,O.value=V.hasMore===!0,C||(ve.value=!0,setTimeout(()=>{ve.value=!1},2e3)),!C&&P.value?setTimeout(ae,0):!C&&!P.value&&!$&&pt(()=>{Fe(),setTimeout(Ge,200)}),G.value=""}catch(u){G.value="加载提交历史失败: "+(u instanceof Error?u.message:String(u)),v>1&&(O.value=!1)}finally{v>1?ne.value=!1:D.value=!1}}async function ae(){if(Y.value&&m.length!==0)try{Y.value.innerHTML="";const $=Ea(Y.value,{orientation:"vertical-reverse",template:"metro",author:"提交者 <committer@example.com>"}),v={},K=$.branch(p.currentBranch||"main");v[p.currentBranch||"main"]=K,m.forEach(u=>{let d=K;if(u.branch){const V=Be(u.branch.split(",")[0]);v[V]||(v[V]=$.branch(V)),d=v[V]}d.commit({hash:u.hash,subject:u.message,author:`${u.author} <${u.email}>`})}),setTimeout(()=>{W()},100)}catch($){G.value="渲染图表失败: "+($ instanceof Error?$.message:String($))}}function Ce(){P.value=!P.value,P.value&&m.length>0&&setTimeout(ae,0)}function Pe(){I.value=!I.value,I.value||(O.value=!0),ie.value=1,oe(I.value),pt(()=>{setTimeout(()=>{!P.value&&!I.value&&(Fe(),Ge())},300)})}function Be($){return $.includes("HEAD -> ")?$.replace("HEAD -> ",""):$.includes("origin/")?$:$.trim()}function _($){return $.includes("HEAD")?"success":$.includes("origin/")?"warning":"info"}const ge=r(null),xe=r(null);function Me($){if(P.value||!O.value||ne.value||M.value)return;const v=$.target,{scrollTop:K,scrollHeight:u,clientHeight:d}=v;u-K-d<=20&&_e()}function Fe(){if(!ge.value)return;const $=ge.value.$el.querySelector(".el-table__body-wrapper");$&&(xe.value=$,xe.value&&(xe.value.removeEventListener("scroll",Me,!0),xe.value.addEventListener("scroll",Me,!0)))}function Ue(){xe.value&&(xe.value.removeEventListener("scroll",Me,!0),xe.value=null)}function He($){$.key==="Escape"&&Ae.value&&(Ae.value=!1)}St(()=>{p.isGitRepo?(p.log.length>0?(m.length=0,p.log.forEach($=>m.push($)),N.value=p.log.length,P.value&&setTimeout(()=>{ae()},100)):oe(),$e()):G.value="当前目录不是Git仓库",pt(()=>{setTimeout(()=>{Fe()},500)}),Ke(()=>ge.value,$=>{$&&!P.value&&!I.value&&pt(()=>{Fe()})}),window.addEventListener("keydown",He)}),Ke(()=>p.allBranches,$=>{$&&$.length>0?H.value=[...$].sort():H.value=[]},{immediate:!0}),za(()=>{Ue(),ue.value!==null&&(window.clearInterval(ue.value),ue.value=null),window.removeEventListener("keydown",He)});async function je(){await p.fetchLog(!0),m.length=0,p.log.forEach($=>m.push($)),h.value=[...m],N.value=p.log.length,ie.value=1,O.value=!1,ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),P.value&&(await pt(),ae())}Ke(()=>p.log,$=>{try{m.length=0,Array.isArray($)&&$.forEach(v=>v&&m.push(v)),N.value=m.length,ie.value=1,h.value=[...m],ve.value=!0,setTimeout(()=>{ve.value=!1},2e3),P.value&&m.length>0&&setTimeout(ae,0)}catch{}},{immediate:!0}),i({refreshLog:je});function tt(){Z.value<Et&&(Z.value=Math.min(Et,Z.value+ns),c())}function T(){Z.value>zt&&(Z.value=Math.max(zt,Z.value-ns),c())}function c(){if(!Y.value)return;const $=Y.value.querySelector("svg");$&&($.style.transform=`scale(${Z.value})`,$.style.transformOrigin="top left")}function W(){if(!Y.value)return;const $=Y.value.querySelector("svg");if(!$)return;const v=$.getBoundingClientRect().width/Z.value,K=Y.value.clientWidth;v>K?Z.value=Math.max(zt,K/v):Z.value=1,c()}async function q($){if($){F.value=$,re.value=!0,se.value=!0,R.value=[],L.value="",z.value="";try{if(!$.hash||$.hash.length<7){L.value="无效的提交哈希值",se.value=!1;return}const K=await(await fetch(`/api/commit-files?hash=${$.hash}`)).json();K.success&&Array.isArray(K.files)?(R.value=K.files,R.value.length>0?await we($.hash,R.value[0]):L.value="该提交没有变更文件"):L.value=`获取文件列表失败: ${K.error||"未知错误"}`}catch(v){L.value=`获取提交详情失败: ${v.message}`}finally{se.value=!1}}}async function we($,v){se.value=!0,z.value=v;try{const u=await(await fetch(`/api/commit-file-diff?hash=${$}&file=${encodeURIComponent(v)}`)).json();u.success?L.value=u.diff||"没有变更内容":L.value=`获取差异失败: ${u.error||"未知错误"}`}catch(K){L.value=`获取差异失败: ${K.message}`}finally{se.value=!1}}function Re($){F.value&&we(F.value.hash,$)}async function he($){try{const v=Za($);await navigator.clipboard.writeText(v),o.success("提交信息已复制到剪贴板")}catch{o.error("复制失败")}}function _e(){!O.value||ne.value||M.value||oe(I.value,ie.value+1)}function De(){B.value=[],le.value=[],j.value="",J.value=null,ie.value=1,oe(I.value,1)}function Se(){ie.value=1,oe(I.value,1)}async function $e(){try{const v=await(await fetch("/api/authors")).json();v.success&&Array.isArray(v.authors)?X.value=v.authors.sort():st()}catch{st()}}function st(){const $=new Set;h.value.forEach(v=>{v.author&&$.add(v.author)}),X.value=Array.from($).sort()}Ke(()=>h.value,()=>{},{deep:!0});function Le($,v,K){K.preventDefault(),be.value=K.clientY,w.value=K.clientX,g.value=$,ce.value=!0;const u=()=>{ce.value=!1,document.removeEventListener("click",u)};setTimeout(()=>{document.addEventListener("click",u)},0)}async function Q($){if($)try{await Ne.confirm(`确定要撤销提交 ${$.hash.substring(0,7)} 吗？这将创建一个新的提交来撤销这次提交的更改。`,"撤销提交确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const K=await(await fetch("/api/revert-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:$.hash})})).json();K.success?(o.success(K.message||"已成功撤销提交"),je(),p.fetchStatus(),p.getBranchStatus()):o.error(K.error||"撤销提交失败")}catch(v){v!=="cancel"&&o.error("撤销提交失败: "+(v.message||v))}}async function Qe($){if($)try{await Ne.confirm(`确定要将提交 ${$.hash.substring(0,7)} Cherry-Pick 到当前分支吗？`,"Cherry-Pick确认",{confirmButtonText:"确认",cancelButtonText:"取消",type:"warning"});const K=await(await fetch("/api/cherry-pick-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:$.hash})})).json();K.success?(o.success(K.message||"已成功Cherry-Pick提交"),je(),p.fetchStatus(),p.getBranchStatus()):o.error(K.error||"Cherry-Pick提交失败")}catch(v){v!=="cancel"&&o.error("Cherry-Pick提交失败: "+(v.message||v))}}async function et($){if($)try{await navigator.clipboard.writeText($.hash),o.success(`已复制提交哈希: ${$.hash.substring(0,7)}`)}catch(v){o.error(`复制提交哈希失败: ${v.message}`)}}async function Je($){if($)try{await Ne.confirm(`确定要将当前分支重置(hard)到提交 ${$.hash.substring(0,7)} 吗？
      
      警告：这将丢失该提交之后的所有更改！`,"重置确认",{confirmButtonText:"确认重置",cancelButtonText:"取消",type:"warning",dangerouslyUseHTMLString:!0});const K=await(await fetch("/api/reset-to-commit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hash:$.hash})})).json();K.success?(o.success(K.message||"已成功重置到指定提交"),je(),p.fetchStatus(),p.getBranchStatus()):o.error(K.error||"重置到指定提交失败")}catch(v){v!=="cancel"&&o.error("重置到指定提交失败: "+(v.message||v))}}function Ge(){if(P.value||!O.value||ne.value||M.value||I.value)return;if(!xe.value){Fe();return}const{scrollTop:$,scrollHeight:v,clientHeight:K}=xe.value;v-$-K<=50&&_e()}Ke(()=>P.value,$=>{!$&&!I.value&&pt(()=>{Fe(),setTimeout(Ge,200)})});const Ae=r(!1);function _t(){Ae.value=!Ae.value,pt(()=>{P.value&&Y.value&&ae()})}return($,v)=>{var V;const K=Tt,u=Ht,d=cs;return f(),b(ke,null,[e("div",{class:me(["card",{"fullscreen-mode":Ae.value}])},[e("div",pi,[v[13]||(v[13]=e("div",{class:"header-left"},[e("h2",null,"提交历史")],-1)),e("div",mi,[P.value?U("",!0):(f(),ee(l(Oe),{key:0,type:ye.value?"primary":"default",size:"small",onClick:v[0]||(v[0]=C=>ye.value=!ye.value),class:me(["action-button filter-button icon-only-button",{"active-filter":ye.value}])},{icon:a(()=>[s(K,null,{default:a(()=>[s(l(Ba))]),_:1})]),_:1},8,["type","class"])),s(l(Oe),{type:"primary",size:"small",onClick:Ce,class:me(["action-button view-mode-button icon-only-button",{"active-view":P.value}])},{icon:a(()=>[s(K,null,{default:a(()=>[(f(),ee(bt(P.value?l(rs):l(Fa))))]),_:1})]),_:1},8,["class"]),Ze(s(l(Oe),{type:"success",size:"small",onClick:Pe,loading:M.value,class:me(["action-button commit-display-button",{"active-commits":I.value}])},{icon:a(()=>[s(K,null,{default:a(()=>[(f(),ee(bt(I.value?l(ja):l(Ra))))]),_:1})]),default:a(()=>[y(" "+x(I.value?"显示分页加载":"显示所有提交"),1)]),_:1},8,["loading","class"]),[[vt,!1]]),s(l(Oe),{type:"info",size:"small",onClick:_t,class:me(["action-button fullscreen-button icon-only-button",{"active-fullscreen":Ae.value}])},{icon:a(()=>[s(K,null,{default:a(()=>[(f(),ee(bt(Ae.value?l(is):l(Da))))]),_:1})]),_:1},8,["class"]),s(l(Oe),{circle:"",size:"small",onClick:v[1]||(v[1]=C=>je()),class:me([{"refresh-button-animated":ve.value},"action-button refresh-button"])},{default:a(()=>[M.value?(f(),ee(K,{key:1},{default:a(()=>[s(l(Ga))]),_:1})):(f(),ee(K,{key:0},{default:a(()=>[s(l(us))]),_:1}))]),_:1},8,["class"])])]),ye.value&&!P.value?(f(),b("div",vi,[e("div",gi,[e("div",hi,[s(l(Nt),{modelValue:B.value,"onUpdate:modelValue":v[2]||(v[2]=C=>B.value=C),placeholder:"选择作者",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[14]||(v[14]=[e("span",{class:"compact-label"},"作者",-1)])),default:a(()=>[(f(!0),b(ke,null,ze(X.value,C=>(f(),ee(l(It),{key:C,label:C,value:C},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",yi,[s(l(Nt),{modelValue:le.value,"onUpdate:modelValue":v[3]||(v[3]=C=>le.value=C),placeholder:"选择分支",multiple:"",clearable:"",filterable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[15]||(v[15]=[e("span",{class:"compact-label"},"分支",-1)])),default:a(()=>[(f(!0),b(ke,null,ze(H.value,C=>(f(),ee(l(It),{key:C,label:C,value:C},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),e("div",_i,[s(l(fs),{modelValue:j.value,"onUpdate:modelValue":v[4]||(v[4]=C=>j.value=C),placeholder:"提交信息关键词",clearable:"",class:"filter-input",size:"small"},{prefix:a(()=>v[16]||(v[16]=[e("span",{class:"compact-label"},"信息",-1)])),_:1},8,["modelValue"])]),e("div",wi,[s(l(Oa),{modelValue:J.value,"onUpdate:modelValue":v[5]||(v[5]=C=>J.value=C),type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",format:"YYYY-MM-DD","value-format":"YYYY-MM-DD",class:"filter-input date-range",size:"small"},{prefix:a(()=>v[17]||(v[17]=[e("span",{class:"compact-label"},"日期",-1)])),_:1},8,["modelValue"])]),e("div",ki,[s(l(Oe),{type:"primary",size:"small",onClick:Se,class:"filter-action-button"},{default:a(()=>v[18]||(v[18]=[y("应用")])),_:1}),s(l(Oe),{type:"info",size:"small",onClick:De,class:"filter-action-button"},{default:a(()=>v[19]||(v[19]=[y("重置")])),_:1})])])])):U("",!0),e("div",{class:me(["content-area",{"with-filter":ye.value&&!P.value}])},[G.value?(f(),b("div",$i,x(G.value),1)):(f(),b("div",bi,[P.value?(f(),b("div",Ci,[l(m).length>0?(f(),b("div",Si," 显示 "+x(l(m).length)+" 条提交记录 "+x(I.value?"(全部)":"(分页加载，每页20条)"),1)):U("",!0),e("div",Ti,[e("div",Vi,[s(l(Oe),{type:"primary",circle:"",size:"small",onClick:T,disabled:Z.value<=zt},{default:a(()=>[s(K,null,{default:a(()=>[s(l(Pa))]),_:1})]),_:1},8,["disabled"]),s(l(Ua),{modelValue:Z.value,"onUpdate:modelValue":v[6]||(v[6]=C=>Z.value=C),min:zt,max:Et,step:ns,onChange:c,class:"zoom-slider"},null,8,["modelValue"]),s(l(Oe),{type:"primary",circle:"",size:"small",onClick:tt,disabled:Z.value>=Et},{default:a(()=>[s(K,null,{default:a(()=>[s(l(Aa))]),_:1})]),_:1},8,["disabled"]),s(l(Oe),{type:"primary",size:"small",onClick:W},{default:a(()=>v[20]||(v[20]=[y(" 自适应大小 ")])),_:1})]),e("div",xi," 缩放: "+x(Math.round(Z.value*100))+"% ",1)]),e("div",{ref_key:"graphContainer",ref:Y,class:"graph-container"},null,512)])):(f(),b("div",Li,[Ze((f(),ee(l(Ps),{ref_key:"tableRef",ref:ge,data:A.value,stripe:"",border:"",class:"log-table","empty-text":M.value?"加载中...":"没有匹配的提交记录",height:"450",onRowContextmenu:Le},{default:a(()=>[s(l(Bt),{label:"哈希",width:"80",resizable:""},{default:a(C=>[e("span",{class:"commit-hash",onClick:pe=>q(C.row)},x(C.row.hash.substring(0,6)),9,zi)]),_:1}),s(l(Bt),{label:"提交信息","min-width":"300"},{default:a(C=>[e("div",Bi,[e("div",Fi,[C.row.branch?(f(),b("div",ji,[(f(!0),b(ke,null,ze(C.row.branch.split(","),(pe,Ie)=>(f(),ee(l(jt),{key:Ie,size:"small",type:_(pe),class:"branch-tag"},{default:a(()=>[y(x(Be(pe)),1)]),_:2},1032,["type"]))),128))])):U("",!0),e("span",Ri,x(C.row.message),1),s(l(Oe),{type:"text",icon:l(gt),size:"small",onClick:Xe(pe=>he(C.row.message),["stop"]),class:"copy-message-btn",title:"复制纯净提交信息（不含类型前缀）"},null,8,["icon","onClick"])])])]),_:1}),s(l(Bt),{prop:"date",label:"日期",width:"150",resizable:""}),s(l(Bt),{label:"作者",width:"100",resizable:""},{default:a(C=>[s(u,{content:C.row.email,placement:"top","hide-after":1e3,"show-after":200},{default:a(()=>[e("span",Di,x(C.row.author),1)]),_:2},1032,["content"])]),_:1})]),_:1},8,["data","empty-text"])),[[d,M.value]]),(I.value,U("",!0))]))]))],2),s(Ft,{modelValue:re.value,"onUpdate:modelValue":v[7]||(v[7]=C=>re.value=C),title:`提交详情: ${(V=F.value)!=null&&V.hash?F.value.hash.substring(0,7):"未知"}`,size:"extra-large",type:"flex","destroy-on-close":"","custom-class":"commit-detail-dialog"},{default:a(()=>[Ze((f(),b("div",Gi,[F.value?(f(),b("div",Oi,[e("div",Pi,[e("div",Ui,[v[24]||(v[24]=e("span",{class:"item-label"},"哈希:",-1)),e("span",Ai,x(F.value.hash),1)]),e("div",Ei,[v[25]||(v[25]=e("span",{class:"item-label"},"作者:",-1)),e("span",Mi,x(F.value.author)+" <"+x(F.value.email)+">",1)]),e("div",Ii,[v[26]||(v[26]=e("span",{class:"item-label"},"日期:",-1)),e("span",Ni,x(F.value.date),1)])]),e("div",Hi,[v[27]||(v[27]=e("div",{class:"message-label"},"提交信息:",-1)),e("div",{class:"message-content",innerHTML:l(Ka)(F.value.message).replace(/\n/g,"<br>")},null,8,Ji)])])):U("",!0),s(ms,{files:E.value,loading:se.value,diffContent:L.value,selectedFile:z.value,emptyText:"没有找到变更文件",onFileSelect:Re},null,8,["files","loading","diffContent","selectedFile"])])),[[d,se.value]])]),_:1},8,["modelValue","title"])],2),Ze(e("div",{class:me(["context-menu",{"fullscreen-context-menu":Ae.value}]),style:mt({top:be.value+"px",left:w.value+"px"})},[e("div",{class:"context-menu-item",onClick:v[8]||(v[8]=C=>q(g.value))},v[28]||(v[28]=[e("i",{class:"el-icon-view"},null,-1),y(" 查看详情 ")])),e("div",{class:"context-menu-item",onClick:v[9]||(v[9]=C=>et(g.value))},v[29]||(v[29]=[e("i",{class:"el-icon-document-copy"},null,-1),y(" 复制提交哈希 ")])),e("div",{class:"context-menu-item",onClick:v[10]||(v[10]=C=>Je(g.value))},v[30]||(v[30]=[e("i",{class:"el-icon-refresh-right"},null,-1),y(" 重置到该提交(hard) ")])),e("div",{class:"context-menu-item",onClick:v[11]||(v[11]=C=>Q(g.value))},v[31]||(v[31]=[e("i",{class:"el-icon-delete"},null,-1),y(" 撤销提交 (Revert) ")])),e("div",{class:"context-menu-item",onClick:v[12]||(v[12]=C=>Qe(g.value))},v[32]||(v[32]=[e("i",{class:"el-icon-edit"},null,-1),y(" Cherry-Pick 到当前分支 ")]))],6),[[vt,ce.value]])],64)}}}),qi=yt(Wi,[["__scopeId","data-v-23fcbd9b"]]),Yi={class:"dialog-content"},Xi={class:"dialog-toolbar"},Ki={class:"history-scroll"},Zi={key:0,class:"loading-state"},Qi={key:2,class:"history-list"},er=["onClick"],tr={class:"command-info"},sr={class:"command-text"},ar={class:"command-meta"},lr={class:"timestamp"},or={class:"duration"},nr={class:"item-actions"},ir={key:0,class:"item-details"},rr={key:0,class:"output-section"},cr={class:"output-header"},ur={class:"output-content"},dr={key:0,class:"truncation-notice"},fr={class:"output-header"},pr={class:"output-content"},mr={key:0,class:"truncation-notice"},vr={key:2,class:"output-section error"},gr={class:"output-content"},hr=ht({__name:"CommandHistory",setup(te){const i=Ct(),p=r([]),m=r(!1),h=r(!1),G=r(!1),D=r(!1),M=r(new Set),I=r(!1),N=r(!1);function P(){N.value=!0,p.value.length===0&&Y()}async function Y(){try{if(m.value=!0,i.socket&&i.socket.connected)i.socket.emit("request_full_history");else{const j=await(await fetch("/api/command-history")).json();j.success?p.value=j.history:o.error(`加载命令历史失败: ${j.error}`)}}catch(B){o.error(`加载命令历史失败: ${B.message}`)}finally{m.value=!1}}async function ie(){if(p.value.length===0){o.warning("没有可复制的命令历史");return}try{G.value=!0;const B=p.value.map(j=>{let J=`# ${ue(j.timestamp)} (耗时: ${re(j.executionTime)}) - ${j.success?"成功":"失败"}
`;if(J+=`${j.command}
`,j.stdout&&(J+=`
# 输出:
${j.stdout}
`),j.stderr){const X=z(j.command)?"输出信息":"错误输出";J+=`
# ${X}:
${j.stderr}
`}return j.error&&(J+=`
# 错误信息:
${j.error}
`),J}).join(`
---

`);await navigator.clipboard.writeText(B),o.success("命令历史已复制到剪贴板")}catch(B){o.error(`复制失败: ${B.message}`)}finally{G.value=!1}}async function O(){if(p.value.length===0){o.warning("没有可复制的命令");return}try{I.value=!0;const B=p.value.map(j=>j.command).join(`
`);await navigator.clipboard.writeText(B),o.success("命令列表已复制到剪贴板")}catch(B){o.error(`复制失败: ${B.message}`)}finally{I.value=!1}}async function ne(){try{if(await Ne.confirm("确定要清空所有命令历史记录吗？此操作不可恢复。","清空命令历史",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),h.value=!0,i.socket&&i.socket.connected)i.socket.emit("clear_command_history");else{const j=await(await fetch("/api/clear-command-history",{method:"POST",headers:{"Content-Type":"application/json"}})).json();j.success?(p.value=[],o.success("命令历史已清空")):o.error(`清空命令历史失败: ${j.error}`)}}catch(B){B!=="cancel"&&B.toString()!=="Error: cancel"&&o.error(`清空命令历史失败: ${B.message}`)}finally{h.value=!1}}function ue(B){return new Date(B).toLocaleString()}function re(B){return B<1e3?`${B}ms`:`${(B/1e3).toFixed(2)}s`}function F(B){M.value.has(B)?M.value.delete(B):M.value.add(B)}function R(B){return M.value.has(B)}async function L(B){try{await navigator.clipboard.writeText(B),o.success("命令已复制到剪贴板")}catch(j){o.error(`复制失败: ${j.message}`)}}function se(B){return B.includes("git push")||B.includes("git-push")}function z(B){return!!se(B)}async function Z(B){try{let j="";if(B.stdout&&(j+=`标准输出:
${B.stdout}

`),B.stderr){const J=z(B.command)?"输出信息":"错误输出";j+=`${J}:
${B.stderr}

`}B.error&&(j+=`错误信息:
${B.error}`),await navigator.clipboard.writeText(j.trim()),o.success("输出已复制到剪贴板")}catch(j){o.error(`复制失败: ${j.message}`)}}function ve(){if(!i.socket){console.error("Socket实例不可用");return}i.socket.on("initial_command_history",B=>{p.value=B.history,D.value=!0}),i.socket.on("command_history_update",B=>{p.value.unshift(B.newCommand),p.value.length>100&&p.value.pop(),D.value=!0}),i.socket.on("full_command_history",B=>{p.value=B.history,m.value=!1,D.value=!0}),i.socket.on("command_history_cleared",B=>{B.success&&(p.value=[],o.success("命令历史已清空")),h.value=!1}),i.socket.on("connect",()=>{D.value=!0,o.success("已连接到实时命令历史")}),i.socket.on("disconnect",()=>{D.value=!1,o.warning("实时命令历史连接已断开")})}function ye(){i.socket&&(i.socket.off("initial_command_history"),i.socket.off("command_history_update"),i.socket.off("full_command_history"),i.socket.off("command_history_cleared"))}return St(()=>{ve(),i.socket||(console.log("尝试初始化Socket连接"),i.initSocketConnection())}),xs(()=>{ye()}),(B,j)=>{const J=Oe,X=jt,le=Tt,H=Mt,ce=ds,be=Jt;return f(),b(ke,null,[s(J,{type:"primary",icon:l(Ma),onClick:P,class:"command-history-button",title:"查看Git命令历史"},null,8,["icon"]),(f(),ee(Ia,{to:"body"},[s(be,{modelValue:N.value,"onUpdate:modelValue":j[0]||(j[0]=w=>N.value=w),title:"Git 命令历史",width:"80%",top:"5vh","destroy-on-close":"",class:"command-history-dialog","z-index":99999,"append-to-body":"",modal:""},{default:a(()=>[e("div",Yi,[e("div",Xi,[s(X,{type:D.value?"success":"danger",size:"small",effect:"dark",class:"socket-status"},{default:a(()=>[y(x(D.value?"实时更新":"未连接"),1)]),_:1},8,["type"]),s(J,{type:"success",icon:l(gt),circle:"",size:"small",onClick:O,loading:I.value,class:"copy-commands-button",title:"只复制命令列表（不含输出）",disabled:p.value.length===0},null,8,["icon","loading","disabled"]),s(J,{type:"primary",icon:l(gt),circle:"",size:"small",onClick:ie,loading:G.value,class:"copy-all-button",title:"复制完整命令历史（含输出）",disabled:p.value.length===0},null,8,["icon","loading","disabled"]),s(J,{type:"danger",icon:l(Rs),circle:"",size:"small",onClick:ne,loading:h.value,class:"clear-button",title:"清空命令历史",disabled:p.value.length===0},null,8,["icon","loading","disabled"])]),e("div",Ki,[m.value&&p.value.length===0?(f(),b("div",Zi,[s(le,{class:"loading-icon is-loading"},{default:a(()=>j[1]||(j[1]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1}),j[2]||(j[2]=e("div",{class:"loading-text"},"加载命令历史...",-1))])):p.value.length===0?(f(),ee(H,{key:1,description:"暂无命令历史"})):(f(),b("div",Qi,[(f(!0),b(ke,null,ze(p.value,(w,g)=>(f(),b("div",{key:g,class:me(["history-item",{"is-error":!w.success}])},[e("div",{class:"item-header",onClick:A=>F(g)},[e("div",tr,[e("div",sr,[s(X,{size:"small",type:w.success?"success":"danger",effect:"dark",class:"status-tag"},{default:a(()=>[y(x(w.success?"成功":"失败"),1)]),_:2},1032,["type"]),e("code",null,x(w.command),1)]),e("div",ar,[e("span",lr,x(ue(w.timestamp)),1),e("span",or,"耗时: "+x(re(w.executionTime)),1)])]),e("div",nr,[s(J,{type:"primary",icon:l(gt),circle:"",size:"small",onClick:Xe(A=>L(w.command),["stop"]),title:"复制命令"},null,8,["icon","onClick"]),s(J,{type:R(g)?"primary":"default",icon:R(g)?l(js):l($t),circle:"",size:"small",onClick:Xe(A=>F(g),["stop"]),title:"展开/收起"},null,8,["type","icon","onClick"])])],8,er),R(g)?(f(),b("div",ir,[w.stdout?(f(),b("div",rr,[e("div",cr,[j[3]||(j[3]=e("h4",null,"标准输出",-1)),s(J,{type:"primary",icon:l(gt),circle:"",size:"small",onClick:A=>Z(w),title:"复制输出"},null,8,["icon","onClick"])]),e("pre",ur,x(w.stdout),1),w.isStdoutTruncated?(f(),b("div",dr,[s(ce,{type:"info",closable:!1,"show-icon":""},{default:a(()=>j[4]||(j[4]=[y(" 输出内容过长已被截断，请直接执行命令查看完整输出 ")])),_:1})])):U("",!0)])):U("",!0),w.stderr?(f(),b("div",{key:1,class:me(["output-section",z(w.command)?"":"error"])},[e("div",fr,[e("h4",null,x(z(w.command)?"输出信息":"错误输出"),1)]),e("pre",pr,x(w.stderr),1),w.isStderrTruncated?(f(),b("div",mr,[s(ce,{type:"info",closable:!1,"show-icon":""},{default:a(()=>[y(x(z(w.command)?"输出信息":"错误输出")+"内容过长已被截断，请直接执行命令查看完整输出 ",1)]),_:2},1024)])):U("",!0)],2)):U("",!0),w.error?(f(),b("div",vr,[j[5]||(j[5]=e("div",{class:"output-header"},[e("h4",null,"错误信息")],-1)),e("pre",gr,x(w.error),1)])):U("",!0)])):U("",!0)],2))),128))]))])])]),_:1},8,["modelValue"])]))],64)}}}),yr=yt(hr,[["__scopeId","data-v-9824264c"]]),_r="data:image/svg+xml,%3csvg%20width='200'%20height='200'%20viewBox='0%200%20200%20200'%20xmlns='http://www.w3.org/2000/svg'%3e%3c!--%20主分支%20--%3e%3cline%20x1='40'%20y1='40'%20x2='40'%20y2='160'%20stroke='%2334495e'%20stroke-width='8'%20stroke-linecap='round'%20/%3e%3c!--%20特性分支%20--%3e%3cpath%20d='M40,70%20C60,70%2080,90%2080,110%20L80,130'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20开发分支%20--%3e%3cpath%20d='M40,100%20C60,100%20100,110%20100,130%20L100,160'%20stroke='%232ecc71'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20修复分支%20--%3e%3cpath%20d='M40,130%20C60,130%20120,140%20120,160'%20stroke='%23e74c3c'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20合并点%20--%3e%3cpath%20d='M80,130%20C80,145%2060,145%2040,145'%20stroke='%233498db'%20stroke-width='8'%20stroke-linecap='round'%20stroke-linejoin='round'%20fill='none'%20/%3e%3c!--%20节点%20--%3e%3ccircle%20cx='40'%20cy='40'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='70'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='100'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='130'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='145'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='40'%20cy='160'%20r='10'%20fill='%2334495e'%20/%3e%3ccircle%20cx='80'%20cy='130'%20r='10'%20fill='%233498db'%20/%3e%3ccircle%20cx='100'%20cy='160'%20r='10'%20fill='%232ecc71'%20/%3e%3ccircle%20cx='120'%20cy='160'%20r='10'%20fill='%23e74c3c'%20/%3e%3c/svg%3e",wr={class:"main-header"},kr={class:"header-left"},$r=["src"],br={class:"header-info"},Cr={key:0,id:"user-info"},Sr={class:"user-name"},Tr={class:"user-email"},Vr={key:1,id:"user-info"},xr={class:"directory-selector"},Lr={class:"directory-display"},zr={class:"directory-icon"},Br=["title"],Fr={class:"directory-actions"},jr={key:2,class:"command-history-section"},Rr={class:"main-container"},Dr={key:0,class:"loading-container"},Gr={class:"loading-spinner"},Or={key:1,class:"grid-layout"},Pr={class:"git-status-panel"},Ur={key:0,class:"commit-form-panel"},Ar={key:0,class:"card"},Er={class:"tips"},Mr={key:1,class:"commit-form-panel"},Ir={key:2,class:"log-list-panel"},Nr={class:"dialog-footer"},Hr={class:"main-footer"},Jr={key:0,class:"branch-info"},Wr={class:"branch-wrapper"},qr={key:1,class:"footer-right"},Yr={class:"repo-url"},Xr={class:"dialog-footer"},Kr={class:"directory-input-group"},Zr={class:"recent-directories"},Qr={class:"dialog-footer"},ec=ht({__name:"App",setup(te){const i=r(""),p=r(null),m=r(null),h=Ct(),G=ps(),D=r(!1),M=r("");function I(){G.config&&(i.value=`默认提交信息: ${G.config.defaultCommitMessage}`)}async function N(){try{const c=await(await fetch("/api/current_directory")).json();return M.value=c.directory||"未知目录",c}catch(T){return console.error("获取当前目录失败:",T),{directory:"未知目录",isGitRepo:!1}}}St(async()=>{console.log("---------- 页面初始化开始 ----------");try{const T=await N();G.isLoaded||await G.loadConfig(),I(),h.isGitRepo=T.isGitRepo===!0,h.lastCheckedTime=Date.now(),h.isGitRepo?await Promise.all([h.getCurrentBranch(!0),h.getAllBranches(),h.getUserInfo(),h.getRemoteUrl(),h.getBranchStatus(!0)]):o.warning("当前目录不是Git仓库，部分功能将不可用")}catch(T){console.error("初始化失败:",T)}finally{D.value=!0,console.log("---------- 页面初始化完成 ----------"),setTimeout(()=>{ce()},100)}});const P=r(!1),Y=r(""),ie=r("");async function O(){await h.createBranch(Y.value,ie.value)&&(P.value=!1,Y.value="",m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog())}function ne(){ie.value=h.currentBranch,P.value=!0}async function ue(T){await h.changeBranch(T)&&(m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog())}const re=r(!1),F=r(""),R=r("");function L(){F.value=h.userName,R.value=h.userEmail,re.value=!0}async function se(){if(!F.value||!R.value){o.warning("用户名和邮箱不能为空");return}await h.restoreUserConfig(F.value,R.value)&&(re.value=!1)}async function z(){await h.clearUserConfig()&&(F.value="",R.value="")}let Z=!1,ve=!1,ye=!1,B=0,j=0,J="",X="",le=null;function H(){const T=document.querySelector(".grid-layout");if(!T)return;const c=getComputedStyle(T).gridTemplateColumns.split(" "),W=getComputedStyle(T).gridTemplateRows.split(" ");if(c.length>=3&&W.length>=3){const q=parseFloat(c[0]),we=parseFloat(c[2]),Re=q+we,he=q/Re,_e=parseFloat(W[0]),De=parseFloat(W[2]),Se=_e+De,$e=_e/Se;localStorage.setItem("zen-gitsync-layout-left-ratio",he.toString()),localStorage.setItem("zen-gitsync-layout-top-ratio",$e.toString()),console.log(`布局比例已保存 - 左侧: ${(he*100).toFixed(0)}%, 上方: ${($e*100).toFixed(0)}%`),localStorage.setItem("zen-gitsync-layout-bottom-left-ratio",he.toString()),console.log(`底部布局比例已保存 - 左侧: ${(he*100).toFixed(0)}%`)}}function ce(){const T=document.querySelector(".grid-layout");if(!T)return;const c=localStorage.getItem("zen-gitsync-layout-left-ratio"),W=localStorage.getItem("zen-gitsync-layout-top-ratio");if(c){const q=parseFloat(c),we=1-q;T.style.gridTemplateColumns=`${q}fr 8px ${we}fr`,console.log(`已恢复左侧比例: ${(q*100).toFixed(0)}%`)}else T.style.gridTemplateColumns="1fr 8px 3fr";if(W){const q=parseFloat(W),we=1-q;T.style.gridTemplateRows=`${q}fr 8px ${we}fr`,console.log(`已恢复上方比例: ${(q*100).toFixed(0)}%`)}}function be(T){var q;const c=T.currentTarget;if(!c||!c.id)return;le=c.id,le==="v-resizer"?Z=!0:le==="v-resizer-bottom"&&(ve=!0),B=T.clientX;const W=document.querySelector(".grid-layout");J=getComputedStyle(W).gridTemplateColumns,(q=document.getElementById(le))==null||q.classList.add("active"),document.addEventListener("mousemove",w),document.addEventListener("mouseup",g),T.preventDefault()}function w(T){if(!Z&&!ve)return;const c=document.querySelector(".grid-layout"),W=T.clientX-B,q=J.split(" ");if(q.length>=3){const we=parseFloat(q[0]),Re=parseFloat(q[2]),he=we+Re,_e=(we+W/c.clientWidth*he)/he,De=1-_e,Se=.1,$e=.5;_e<Se?c.style.gridTemplateColumns=`${Se}fr 8px ${1-Se}fr`:_e>$e?c.style.gridTemplateColumns=`${$e}fr 8px ${1-$e}fr`:c.style.gridTemplateColumns=`${_e}fr 8px ${De}fr`}}function g(){var T,c;Z=!1,ve=!1,(T=document.getElementById("v-resizer"))==null||T.classList.remove("active"),(c=document.getElementById("v-resizer-bottom"))==null||c.classList.remove("active"),document.removeEventListener("mousemove",w),document.removeEventListener("mouseup",g),H()}function A(T){var W;ye=!0,j=T.clientY;const c=document.querySelector(".grid-layout");X=getComputedStyle(c).gridTemplateRows,(W=document.getElementById("h-resizer"))==null||W.classList.add("active"),document.addEventListener("mousemove",E),document.addEventListener("mouseup",oe),T.preventDefault()}function E(T){if(!ye)return;const c=document.querySelector(".grid-layout"),W=T.clientY-j,q=X.split(" ");if(q.length>=3){const we=parseFloat(q[0]),Re=parseFloat(q[2]),he=we+Re,_e=(we+W/c.clientHeight*he)/he,De=1-_e,Se=.2,$e=.8;_e<Se?c.style.gridTemplateRows=`${Se}fr 8px ${1-Se}fr`:_e>$e?c.style.gridTemplateRows=`${$e}fr 8px ${1-$e}fr`:c.style.gridTemplateRows=`${_e}fr 8px ${De}fr`}}function oe(){var T;ye=!1,(T=document.getElementById("h-resizer"))==null||T.classList.remove("active"),document.removeEventListener("mousemove",E),document.removeEventListener("mouseup",oe),H()}const ae=r(!1),Ce=r(""),Pe=r(!1),Be=r([]);async function _(){if(!M.value){o.warning("当前目录路径为空");return}try{await navigator.clipboard.writeText(M.value),o.success("已复制目录路径")}catch(T){console.error("复制目录路径失败:",T),o.error(`复制失败: ${T.message}`)}}function ge(){Ce.value=M.value,ae.value=!0,xe()}async function xe(){try{const c=await(await fetch("/api/recent_directories")).json();c.success&&Array.isArray(c.directories)&&(Be.value=c.directories)}catch(T){console.error("获取最近目录失败:",T)}}async function Me(){if(!Ce.value){o.warning("目录路径不能为空");return}try{Pe.value=!0;const c=await(await fetch("/api/change_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:Ce.value})})).json();c.success?(o.success("已切换工作目录"),M.value=c.directory,ae.value=!1,await Fe(c.directory),await xe(),h.isGitRepo=c.isGitRepo,await G.loadConfig(!0),c.isGitRepo?(await Promise.all([h.getCurrentBranch(),h.getAllBranches(),h.getUserInfo(),h.getRemoteUrl()]),m.value&&m.value.refreshStatus(),p.value&&p.value.refreshLog()):(o.warning("当前目录不是Git仓库，部分功能将不可用"),h.$reset())):o.error(c.error||"切换目录失败")}catch(T){o.error(`切换目录失败: ${T.message}`)}finally{Pe.value=!1}}async function Fe(T){try{await fetch("/api/save_recent_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:T})})}catch(c){console.error("保存最近目录失败:",c)}}async function Ue(){try{if(!M.value){o.warning("当前目录路径为空");return}const c=await(await fetch("/api/open_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:M.value})})).json();c.success?o.success("已在文件管理器中打开目录"):c.error&&o.error(c.error)}catch(T){console.error("打开目录失败:",T),o.error(`打开目录失败: ${T.message}`)}}async function He(){try{const c=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:Ce.value||M.value})})).json();c.success?je(c):c.error&&o.error(c.error)}catch(T){console.error("浏览目录失败:",T),o.error(`浏览目录失败: ${T.message}`)}}function je(T){!T||!T.items||Ne.alert(Ee("div",{class:"directory-browser"},[Ee("div",{class:"current-path"},[Ee("span",{class:"path-label"},"当前路径: "),Ee("span",{class:"path-value"},T.path)]),Ee("div",{class:"directory-list"},[T.parentPath?Ee("div",{class:"directory-item parent-dir",onClick:()=>{tt(T.parentPath)}},[Ee("span",{class:"dir-icon"},Ee("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#E6A23C"}},[Ee("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ee("span",{class:"dir-name"},"返回上级目录")]):null,...T.items.map(c=>Ee("div",{class:"directory-item",onClick:()=>{tt(c.path)}},[Ee("span",{class:"dir-icon"},Ee("svg",{class:"folder-icon",viewBox:"0 0 24 24",width:"20",height:"20",style:{fill:"#409EFF"}},[Ee("path",{d:"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"})])),Ee("span",{class:"dir-name"},c.name)]))])]),"浏览并选择目录",{confirmButtonText:"使用当前目录",customClass:"directory-browser-dialog",callback:c=>{c==="confirm"&&(Ce.value=T.path)}})}async function tt(T){try{Ne.close(),setTimeout(async()=>{try{const W=await(await fetch("/api/browse_directory",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentPath:T})})).json();W.success?je(W):W.error&&o.error(W.error)}catch(c){console.error("浏览目录失败:",c),o.error(`浏览目录失败: ${c.message}`)}},100)}catch(c){console.error("处理目录选择时出错:",c),o.error(`处理目录选择时出错: ${c.message}`)}}return(T,c)=>{const W=Tt,q=Oe,we=Ds,Re=fs,he=Os,_e=It,De=Nt,Se=Gs,$e=Jt,st=ds,Le=jt;return f(),b(ke,null,[e("header",wr,[e("div",kr,[e("img",{src:l(_r),alt:"Zen GitSync Logo",class:"logo"},null,8,$r),c[14]||(c[14]=e("h1",null,"Zen GitSync UI",-1))]),e("div",br,[l(h).userName&&l(h).userEmail?(f(),b("div",Cr,[e("span",Sr,x(l(h).userName),1),e("span",Tr,"<"+x(l(h).userEmail)+">",1),s(q,{type:"primary",size:"small",onClick:L,class:"user-settings-btn",circle:""},{default:a(()=>[s(W,null,{default:a(()=>[s(l(Ss))]),_:1})]),_:1})])):(f(),b("div",Vr,[c[15]||(c[15]=e("span",{class:"user-label"},"用户: ",-1)),c[16]||(c[16]=e("span",{class:"user-warning"},"未配置",-1)),s(q,{type:"primary",size:"small",onClick:L,class:"user-settings-btn",circle:""},{default:a(()=>[s(W,null,{default:a(()=>[s(l(Ss))]),_:1})]),_:1})])),e("div",xr,[e("div",Lr,[e("div",zr,[s(W,null,{default:a(()=>[s(l(Ts))]),_:1})]),e("div",{class:"directory-path",title:M.value},x(M.value),9,Br)]),e("div",Fr,[s(q,{type:"primary",size:"small",onClick:ge,class:"dir-button",circle:"",title:"切换目录"},{default:a(()=>[s(W,null,{default:a(()=>c[17]||(c[17]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M128 192v640h768V320H485.76L357.504 192H128zm-32-64h287.872l128.384 128H928a32 32 0 0 1 32 32v576a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32z"})],-1)])),_:1})]),_:1}),s(q,{type:"success",size:"small",onClick:Ue,class:"dir-button",circle:"",title:"在资源管理器中打开"},{default:a(()=>[s(W,null,{default:a(()=>c[18]||(c[18]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"})],-1)])),_:1})]),_:1}),s(q,{type:"info",size:"small",onClick:_,class:"dir-button",circle:"",title:"复制路径"},{default:a(()=>[s(W,null,{default:a(()=>c[19]||(c[19]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])]),l(h).isGitRepo?(f(),b("div",jr,[s(yr)])):U("",!0)])]),e("main",Rr,[D.value?(f(),b("div",Or,[e("div",Pr,[s(fo,{ref_key:"gitStatusRef",ref:m,"initial-directory":M.value},null,8,["initial-directory"])]),e("div",{class:"vertical-resizer",id:"v-resizer",onMousedown:be},null,32),l(h).isGitRepo?(f(),b("div",Ur,[!l(h).userName||!l(h).userEmail?(f(),b("div",Ar,[c[25]||(c[25]=e("h2",null,"Git用户未配置",-1)),c[26]||(c[26]=e("p",null,"请先配置Git用户信息才能进行提交操作。",-1)),e("div",Er,[c[23]||(c[23]=e("h3",null,"您可以通过以下方式配置：",-1)),c[24]||(c[24]=e("ol",null,[e("li",null,"点击右上角的设置按钮，配置用户名和邮箱"),e("li",null,"或者使用命令行配置："),e("div",{class:"code-block"},[y(' git config --global user.name "您的用户名"'),e("br"),y(' git config --global user.email "您的邮箱" ')])],-1)),s(q,{type:"primary",onClick:L},{default:a(()=>c[22]||(c[22]=[y(" 立即配置 ")])),_:1})])])):(f(),ee(fi,{key:1}))])):(f(),b("div",Mr,c[27]||(c[27]=[e("div",{class:"card",style:{padding:"20px"}},[e("h2",null,"Git仓库初始化"),e("p",null,"当前目录不是Git仓库，请先初始化Git仓库或切换到Git仓库目录。"),e("div",{class:"tips"},[e("h3",null,"可以使用以下命令初始化仓库："),e("div",{class:"code-block"},"git init")])],-1)]))),e("div",{class:"horizontal-resizer",id:"h-resizer",onMousedown:A},null,32),l(h).isGitRepo?(f(),b("div",Ir,[s(qi,{ref_key:"logListRef",ref:p},null,512)])):U("",!0),s($e,{modelValue:P.value,"onUpdate:modelValue":c[3]||(c[3]=Q=>P.value=Q),title:"创建新分支",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Nr,[s(q,{onClick:c[2]||(c[2]=Q=>P.value=!1)},{default:a(()=>c[28]||(c[28]=[y("取消")])),_:1}),s(q,{type:"primary",onClick:O,loading:l(h).isCreatingBranch},{default:a(()=>c[29]||(c[29]=[y(" 创建 ")])),_:1},8,["loading"])])]),default:a(()=>[s(Se,{model:{newBranchName:Y.value,selectedBaseBranch:ie.value}},{default:a(()=>[s(he,{label:"新分支名称"},{default:a(()=>[s(Re,{modelValue:Y.value,"onUpdate:modelValue":c[0]||(c[0]=Q=>Y.value=Q),placeholder:"请输入新分支名称"},null,8,["modelValue"])]),_:1}),s(he,{label:"基于分支"},{default:a(()=>[s(De,{modelValue:ie.value,"onUpdate:modelValue":c[1]||(c[1]=Q=>ie.value=Q),placeholder:"选择基础分支",style:{width:"100%"}},{default:a(()=>[(f(!0),b(ke,null,ze(l(h).allBranches,Q=>(f(),ee(_e,{key:Q,label:Q,value:Q},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue"])])):(f(),b("div",Dr,[s(we,{class:"loading-card"},{default:a(()=>[e("div",Gr,[s(W,{class:"is-loading"},{default:a(()=>c[20]||(c[20]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"})],-1)])),_:1})]),c[21]||(c[21]=e("div",{class:"loading-text"},"加载中...",-1))]),_:1})]))]),e("footer",Hr,[l(h).currentBranch?(f(),b("div",Jr,[e("div",Wr,[c[31]||(c[31]=e("span",{class:"branch-label"},"当前分支:",-1)),s(De,{modelValue:l(h).currentBranch,"onUpdate:modelValue":c[4]||(c[4]=Q=>l(h).currentBranch=Q),size:"small",onChange:ue,loading:l(h).isChangingBranch,class:"branch-select"},{default:a(()=>[(f(!0),b(ke,null,ze(l(h).allBranches,Q=>(f(),ee(_e,{key:Q,label:Q,value:Q},null,8,["label","value"]))),128))]),_:1},8,["modelValue","loading"]),s(q,{type:"primary",size:"small",onClick:ne,class:"create-branch-btn"},{default:a(()=>[s(W,null,{default:a(()=>[s(l(Na))]),_:1}),c[30]||(c[30]=y(" 新建分支 "))]),_:1})])])):U("",!0),l(h).remoteUrl?(f(),b("div",qr,[c[33]||(c[33]=e("span",{class:"repo-url-label"},"远程仓库:",-1)),e("span",Yr,x(l(h).remoteUrl),1),s(q,{type:"primary",circle:"",size:"small",onClick:c[5]||(c[5]=Q=>l(h).copyRemoteUrl()),class:"copy-url-btn",title:"复制仓库地址"},{default:a(()=>[s(W,null,{default:a(()=>c[32]||(c[32]=[e("svg",{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},[e("path",{fill:"currentColor",d:"M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64h64z"}),e("path",{fill:"currentColor",d:"M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64H384zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64z"})],-1)])),_:1})]),_:1})])):U("",!0)]),s($e,{modelValue:re.value,"onUpdate:modelValue":c[9]||(c[9]=Q=>re.value=Q),title:"Git用户设置",width:"30%","destroy-on-close":""},{footer:a(()=>[e("span",Xr,[s(q,{type:"danger",onClick:z},{default:a(()=>c[35]||(c[35]=[y(" 清除配置 ")])),_:1}),s(q,{onClick:c[8]||(c[8]=Q=>re.value=!1)},{default:a(()=>c[36]||(c[36]=[y("取消")])),_:1}),s(q,{type:"primary",onClick:se},{default:a(()=>c[37]||(c[37]=[y(" 保存 ")])),_:1})])]),default:a(()=>[s(Se,null,{default:a(()=>[s(he,{label:"用户名"},{default:a(()=>[s(Re,{modelValue:F.value,"onUpdate:modelValue":c[6]||(c[6]=Q=>F.value=Q),placeholder:"请输入Git用户名"},null,8,["modelValue"])]),_:1}),s(he,{label:"邮箱"},{default:a(()=>[s(Re,{modelValue:R.value,"onUpdate:modelValue":c[7]||(c[7]=Q=>R.value=Q),placeholder:"请输入Git邮箱"},null,8,["modelValue"])]),_:1}),s(he,null,{default:a(()=>[s(st,{type:"info",closable:!1,"show-icon":""},{default:a(()=>c[34]||(c[34]=[y(" 这些设置将影响全局Git配置，对所有Git仓库生效。 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),s($e,{modelValue:ae.value,"onUpdate:modelValue":c[13]||(c[13]=Q=>ae.value=Q),title:"切换工作目录",width:"50%","destroy-on-close":""},{footer:a(()=>[e("span",Qr,[s(q,{onClick:c[11]||(c[11]=Q=>ae.value=!1)},{default:a(()=>c[39]||(c[39]=[y("取消")])),_:1}),s(q,{type:"primary",onClick:c[12]||(c[12]=Q=>Me()),loading:Pe.value},{default:a(()=>c[40]||(c[40]=[y(" 切换 ")])),_:1},8,["loading"])])]),default:a(()=>[s(Se,null,{default:a(()=>[s(he,{label:"目录路径"},{default:a(()=>[e("div",Kr,[s(Re,{modelValue:Ce.value,"onUpdate:modelValue":c[10]||(c[10]=Q=>Ce.value=Q),placeholder:"请输入目录路径"},null,8,["modelValue"]),s(q,{type:"primary",onClick:He},{default:a(()=>[s(W,null,{default:a(()=>[s(l(Ts))]),_:1}),c[38]||(c[38]=y(" 浏览 "))]),_:1})])]),_:1}),Be.value.length>0?(f(),ee(he,{key:0,label:"常用目录"},{default:a(()=>[e("div",Zr,[(f(!0),b(ke,null,ze(Be.value,(Q,Qe)=>(f(),ee(Le,{key:Qe,class:"recent-dir-tag",onClick:et=>Ce.value=Q,effect:"plain"},{default:a(()=>[y(x(Q),1)]),_:2},1032,["onClick"]))),128))])]),_:1})):U("",!0)]),_:1})]),_:1},8,["modelValue"])],64)}}}),tc=yt(ec,[["__scopeId","data-v-e0bdaa89"]]),Us=Ha(tc);Us.use(Ja());Us.mount("#app");
